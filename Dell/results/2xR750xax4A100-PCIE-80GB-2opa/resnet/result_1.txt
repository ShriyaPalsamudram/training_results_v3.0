+ echo 'Beginning trial 2 of 5'
Beginning trial 2 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node044 node045 '
+ echo 'hosts=node044 node045 '
hosts=node044 node045 
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679450404424, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679450404459, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679450404461, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679450404462, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679450404463, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679450417538, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679450422615, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679450422650, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679450422652, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679450422653, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679450422655, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node045 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node045
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679450434303, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=15014
+ SEED=15014
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node045: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export LR=12.5
++ LR=12.5
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ WD=5.0e-05
++ MOM=0.9
++ export LARSETA=0.001
++ export LARSETA=0.001
++ LARSETA=0.001
++ export MOM=0.9
++ MOM=0.9
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_ROI_DECODE=1
++ DALI_CACHE_SIZE=0
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DGXNNODES=2
++ export DGXNNODES=2
++ DGXNNODES=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ DGXNNODES=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date +%s
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+ start=1679450435
+ start=1679450435
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start=1679450435
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 09:00:35 PM'
+ start_fmt='2023-03-21 09:00:35 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:00:35 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:00:35 PM'
STARTING TIMING RUN AT 2023-03-21 09:00:35 PM
STARTING TIMING RUN AT 2023-03-21 09:00:35 PM
+ readonly global_rank=0
+ readonly global_rank=0
+ global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ OPTIMIZER=sgdwfastlars
+ INPUT_BATCH_MULTIPLIER=1
+ BATCHSIZE=408
+ KVSTORE=horovod
+ INPUT_BATCH_MULTIPLIER=1
+ LR=12.5
+ MOM=0.9
+ KVSTORE=horovod
+ LRSCHED=pow2
+ LR=12.5
+ WARMUP_EPOCHS=2
+ MOM=0.9
+ LARSETA=0.001
+ LRSCHED=pow2
+ DALI_HW_DECODER_LOAD=0
+ WARMUP_EPOCHS=2
+ WD=5.0e-05
+ LARSETA=0.001
+ LABELSMOOTHING=0.1
+ DALI_HW_DECODER_LOAD=0
+ SEED=15014
+ WD=5.0e-05
+ EVAL_OFFSET=2
+ LABELSMOOTHING=0.1
+ EVAL_PERIOD=4
+ SEED=15014
+ DALI_PREFETCH_QUEUE=5
+ EVAL_OFFSET=2
+ DALI_NVJPEG_MEMPADDING=256
+ EVAL_PERIOD=4
+ DALI_THREADS=6
+ DALI_PREFETCH_QUEUE=5
+ DALI_CACHE_SIZE=0
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_ROI_DECODE=1
+ DALI_THREADS=6
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NETWORK=resnet-v1b-stats-fl
+ NUMEPOCHS=37
+ BN_GROUP=1
+ NETWORK=resnet-v1b-stats-fl
+ PROFILE=0
+ PROFILE_EXCEL=0
+ BN_GROUP=1
+ PROFILE=0
+ NODALI=0
+ PROFILE_EXCEL=0
+ NUMEXAMPLES=
+ NODALI=0
+ PROFILE_ALL_LOCAL_RANKS=0
+ NUMEXAMPLES=
+ THR=0.759
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ DATAROOT=/data
running benchmark
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ echo 'running benchmark'
+ NGPUS=4
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 -ge 1 ]]
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ start_fmt='2023-03-21 09:00:35 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:00:35 PM'
STARTING TIMING RUN AT 2023-03-21 09:00:35 PM
+ readonly global_rank=0
+ global_rank=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ readonly local_rank=0
+ local_rank=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+ INPUT_BATCH_MULTIPLIER=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+ KVSTORE=horovod
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+ LR=12.5
+++ export DGXHT=1
+++ DGXHT=1
+ MOM=0.9
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+ LRSCHED=pow2
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+ LABELSMOOTHING=0.1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+ SEED=15014
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+ EVAL_OFFSET=2
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+ EVAL_PERIOD=4
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+ DALI_PREFETCH_QUEUE=5
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+ DALI_CACHE_SIZE=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+ DALI_ROI_DECODE=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+ DALI_PREALLOCATE_WIDTH=5980
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+ DALI_PREALLOCATE_HEIGHT=6430
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
++ export BATCHSIZE=408
++ BATCHSIZE=408
+ DALI_CROP_BUFFER_HINT=165581
++ export KVSTORE=horovod
++ KVSTORE=horovod
+ DALI_NORMALIZE_BUFFER_HINT=441549
++ export LR=12.5
++ LR=12.5
++ seq 0 3
+ DALI_DONT_USE_MMAP=0
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+ NUMEPOCHS=37
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
+ NETWORK=resnet-v1b-stats-fl
++ seq 0 3
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
+ BN_GROUP=1
+ PROFILE=0
++ export WD=5.0e-05
++ WD=5.0e-05
+ PROFILE_EXCEL=0
++ export MOM=0.9
++ MOM=0.9
+ NODALI=0
+ NUMEXAMPLES=
++ export LARSETA=0.001
++ LARSETA=0.001
+ PROFILE_ALL_LOCAL_RANKS=0
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+ THR=0.759
++ export LRSCHED=pow2
++ LRSCHED=pow2
+ [[ 0 == 1 ]]
+ DATAROOT=/data
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
+ echo 'running benchmark'
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ tr '\n' ,
running benchmark
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
+ export NGPUS=4
+ NGPUS=4
++ export DALI_THREADS=6
++ DALI_THREADS=6
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ tr '\n' ,
+ [[ 0 -ge 1 ]]
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ sed 's/,$//'
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ sed 's/,$//'
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ seq 0 3
++ tr '\n' ,
+++ sed 's/^config_//'
++ sed 's/,$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ start=1679450435
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 09:00:35 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:00:35 PM'
STARTING TIMING RUN AT 2023-03-21 09:00:35 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=15014
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ date +%s
++ date +%s
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+ start=1679450435
+ start=1679450435
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 09:00:35 PM'
+ start_fmt='2023-03-21 09:00:35 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:00:35 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:00:35 PM'
STARTING TIMING RUN AT 2023-03-21 09:00:35 PM
+ readonly global_rank=0
+ global_rank=0
STARTING TIMING RUN AT 2023-03-21 09:00:35 PM
+ readonly global_rank=0
+ global_rank=0
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=15014
+ LABELSMOOTHING=0.1
+ SEED=15014
+ EVAL_OFFSET=2
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ THR=0.759
+ [[ 0 == 1 ]]
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
running benchmark
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679450435
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 09:00:35 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:00:35 PM'
STARTING TIMING RUN AT 2023-03-21 09:00:35 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=15014
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ source ./config_2xR750xax4A100.sh
++ seq 0 3
++ tr '\n' ,
+++ dirname ./config_2xR750xax4A100.sh
++ sed 's/,$//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+ [[ 0 -lt 1 ]]
++++ readlink -f ./config_2xR750xax4A100.sh
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ start=1679450435
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 09:00:35 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:00:35 PM'
STARTING TIMING RUN AT 2023-03-21 09:00:35 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=15014
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 15014 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node044:119695] MCW rank 2 is not bound (or bound to all available processors)
[node044:119703] MCW rank 3 is not bound (or bound to all available processors)
[node044:119696] MCW rank 0 is not bound (or bound to all available processors)
[node044:119694] MCW rank 1 is not bound (or bound to all available processors)
[node045:111098] MCW rank 6 is not bound (or bound to all available processors)
[node045:111105] MCW rank 4 is not bound (or bound to all available processors)
[node045:111086] MCW rank 5 is not bound (or bound to all available processors)
[node045:111084] MCW rank 7 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679450440179, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[21:00:47] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:00:47] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:00:47] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:00:47] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:00:47] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:00:47] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:00:47] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679450447516, "event_type": "POINT_IN_TIME", "key": "seed", "value": 15014, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[21:00:47] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679450449032, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 408, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[21:00:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:00:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:00:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:00:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679450453891, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453892, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453893, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453893, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453893, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453893, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453894, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453894, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453894, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453895, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453895, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453895, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453895, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453896, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453896, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453896, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453896, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453897, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453897, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453897, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453897, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453898, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453898, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453898, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453898, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453899, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453899, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453899, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453899, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453900, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453900, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453900, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453900, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453901, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453901, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453901, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453901, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453901, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453902, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453902, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453902, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453902, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453903, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453903, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453903, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453903, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453904, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453904, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453904, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453904, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453905, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453905, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453905, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453905, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453906, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453906, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453906, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453906, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453907, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453907, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453907, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453907, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453908, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453908, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453908, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453908, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453909, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453909, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453909, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453909, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453910, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453910, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453910, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453910, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453911, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453911, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453911, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453911, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453912, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453912, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453912, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453912, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453913, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453913, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453913, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453913, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453914, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453914, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453914, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453914, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453915, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453915, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453915, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453915, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453916, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453916, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453916, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453916, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453917, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453917, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453917, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453917, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453917, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453918, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453918, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453918, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453918, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453919, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453919, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453919, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453920, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453920, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453920, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453920, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453921, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453921, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453921, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453921, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453922, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453922, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453922, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453922, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453923, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453923, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453923, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453924, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453924, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453924, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453924, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453925, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453925, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453925, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453925, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453926, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453926, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453926, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453926, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453927, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453927, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453927, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453927, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453928, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453928, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453928, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453928, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453929, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453929, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453929, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453929, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453930, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453930, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453930, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453930, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453931, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453931, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453931, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453931, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453932, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453932, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453932, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679450453932, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[21:00:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:00:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:00:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:00:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 21:00:55,592 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=14710, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 21:00:55,592 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=65430, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 21:00:55,592 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=32891, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 21:00:55,592 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=31831, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 21:00:55,592 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=39236, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 21:00:55,593 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=27735, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 21:00:55,593 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=18222, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 21:00:55,594 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=40213, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679450455594, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679450455596, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679450455596, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679450455596, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679450455596, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 408, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679450455596, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679450455596, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679450455596, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679450455597, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679450455597, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679450455597, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679450455597, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679450455597, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679450455597, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679450455597, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679450455597, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679450455597, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679450455597, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 12.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679450455597, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679450455597, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679450543458, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679450543459, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679450543459, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679450544083, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679450544241, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679450544242, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-21 21:02:27,276 Node[0] Epoch[0] Batch [0-20]	Speed: 21655.87 samples/sec	accuracy=nan
2023-03-21 21:02:30,257 Node[0] Epoch[0] Batch [20-40]	Speed: 21894.81 samples/sec	accuracy=nan
2023-03-21 21:02:33,249 Node[0] Epoch[0] Batch [40-60]	Speed: 21816.12 samples/sec	accuracy=nan
2023-03-21 21:02:36,256 Node[0] Epoch[0] Batch [60-80]	Speed: 21709.84 samples/sec	accuracy=nan
2023-03-21 21:02:39,262 Node[0] Epoch[0] Batch [80-100]	Speed: 21718.40 samples/sec	accuracy=nan
2023-03-21 21:02:42,267 Node[0] Epoch[0] Batch [100-120]	Speed: 21728.18 samples/sec	accuracy=nan
2023-03-21 21:02:45,270 Node[0] Epoch[0] Batch [120-140]	Speed: 21735.02 samples/sec	accuracy=nan
2023-03-21 21:02:48,280 Node[0] Epoch[0] Batch [140-160]	Speed: 21685.11 samples/sec	accuracy=nan
2023-03-21 21:02:51,290 Node[0] Epoch[0] Batch [160-180]	Speed: 21686.67 samples/sec	accuracy=nan
2023-03-21 21:02:54,308 Node[0] Epoch[0] Batch [180-200]	Speed: 21634.10 samples/sec	accuracy=nan
2023-03-21 21:02:57,327 Node[0] Epoch[0] Batch [200-220]	Speed: 21623.60 samples/sec	accuracy=nan
2023-03-21 21:03:09,296 Node[0] Epoch[0] Batch [220-240]	Speed: 5454.21 samples/sec	accuracy=nan
2023-03-21 21:03:19,015 Node[0] Epoch[0] Batch [240-260]	Speed: 6716.46 samples/sec	accuracy=nan
2023-03-21 21:03:24,324 Node[0] Epoch[0] Batch [260-280]	Speed: 12295.24 samples/sec	accuracy=nan
2023-03-21 21:03:27,325 Node[0] Epoch[0] Batch [280-300]	Speed: 21757.51 samples/sec	accuracy=nan
2023-03-21 21:03:30,332 Node[0] Epoch[0] Batch [300-320]	Speed: 21710.14 samples/sec	accuracy=nan
2023-03-21 21:03:33,343 Node[0] Epoch[0] Batch [320-340]	Speed: 21678.78 samples/sec	accuracy=nan
2023-03-21 21:03:36,358 Node[0] Epoch[0] Batch [340-360]	Speed: 21651.66 samples/sec	accuracy=nan
2023-03-21 21:03:39,377 Node[0] Epoch[0] Batch [360-380]	Speed: 21619.67 samples/sec	accuracy=nan
2023-03-21 21:03:41,188 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450621188, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-21 21:03:41,189 Node[0] Epoch[0] Time cost=76.947
2023-03-21 21:03:41,188 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:03:41,188 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:03:41,189 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450621189, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 16650.01208940097}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-21 21:03:41,189 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:03:41,189 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:03:41,189 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450621190, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-21 21:03:41,190 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:03:44,365 Node[0] Epoch[1] Batch [0-20]	Speed: 21582.93 samples/sec	accuracy=nan
2023-03-21 21:03:47,392 Node[0] Epoch[1] Batch [20-40]	Speed: 21571.28 samples/sec	accuracy=nan
2023-03-21 21:03:50,418 Node[0] Epoch[1] Batch [40-60]	Speed: 21571.23 samples/sec	accuracy=nan
2023-03-21 21:03:53,444 Node[0] Epoch[1] Batch [60-80]	Speed: 21569.43 samples/sec	accuracy=nan
2023-03-21 21:03:56,473 Node[0] Epoch[1] Batch [80-100]	Speed: 21552.29 samples/sec	accuracy=nan
2023-03-21 21:03:59,504 Node[0] Epoch[1] Batch [100-120]	Speed: 21539.44 samples/sec	accuracy=nan
2023-03-21 21:04:02,536 Node[0] Epoch[1] Batch [120-140]	Speed: 21530.99 samples/sec	accuracy=nan
2023-03-21 21:04:05,566 Node[0] Epoch[1] Batch [140-160]	Speed: 21546.06 samples/sec	accuracy=nan
2023-03-21 21:04:08,594 Node[0] Epoch[1] Batch [160-180]	Speed: 21560.42 samples/sec	accuracy=nan
2023-03-21 21:04:11,626 Node[0] Epoch[1] Batch [180-200]	Speed: 21527.25 samples/sec	accuracy=nan
2023-03-21 21:04:14,665 Node[0] Epoch[1] Batch [200-220]	Speed: 21479.86 samples/sec	accuracy=nan
2023-03-21 21:04:17,706 Node[0] Epoch[1] Batch [220-240]	Speed: 21468.19 samples/sec	accuracy=nan
2023-03-21 21:04:20,743 Node[0] Epoch[1] Batch [240-260]	Speed: 21493.90 samples/sec	accuracy=nan
2023-03-21 21:04:23,785 Node[0] Epoch[1] Batch [260-280]	Speed: 21462.87 samples/sec	accuracy=nan
2023-03-21 21:04:26,819 Node[0] Epoch[1] Batch [280-300]	Speed: 21514.19 samples/sec	accuracy=nan
2023-03-21 21:04:29,856 Node[0] Epoch[1] Batch [300-320]	Speed: 21492.23 samples/sec	accuracy=nan
2023-03-21 21:04:32,893 Node[0] Epoch[1] Batch [320-340]	Speed: 21494.76 samples/sec	accuracy=nan
2023-03-21 21:04:35,938 Node[0] Epoch[1] Batch [340-360]	Speed: 21441.34 samples/sec	accuracy=nan
2023-03-21 21:04:38,983 Node[0] Epoch[1] Batch [360-380]	Speed: 21436.07 samples/sec	accuracy=nan
2023-03-21 21:04:40,809 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:04:40,808 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:04:40,808 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:04:40,809 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:04:40,809 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450680809, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-21 21:04:40,809 Node[0] Epoch[1] Time cost=59.620
:::MLLOG {"namespace": "", "time_ms": 1679450680810, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21489.05775323673}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
2023-03-21 21:04:40,809 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450680810, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-21 21:04:40,810 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:04:40,810 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:04:44,010 Node[0] Epoch[2] Batch [0-20]	Speed: 21412.46 samples/sec	accuracy=nan
2023-03-21 21:04:47,050 Node[0] Epoch[2] Batch [20-40]	Speed: 21473.75 samples/sec	accuracy=nan
2023-03-21 21:04:50,084 Node[0] Epoch[2] Batch [40-60]	Speed: 21520.82 samples/sec	accuracy=nan
2023-03-21 21:04:53,121 Node[0] Epoch[2] Batch [60-80]	Speed: 21497.08 samples/sec	accuracy=nan
2023-03-21 21:04:56,152 Node[0] Epoch[2] Batch [80-100]	Speed: 21536.89 samples/sec	accuracy=nan
2023-03-21 21:04:59,183 Node[0] Epoch[2] Batch [100-120]	Speed: 21532.39 samples/sec	accuracy=nan
2023-03-21 21:05:02,218 Node[0] Epoch[2] Batch [120-140]	Speed: 21514.26 samples/sec	accuracy=nan
2023-03-21 21:05:05,255 Node[0] Epoch[2] Batch [140-160]	Speed: 21494.79 samples/sec	accuracy=nan
2023-03-21 21:05:08,297 Node[0] Epoch[2] Batch [160-180]	Speed: 21455.90 samples/sec	accuracy=nan
2023-03-21 21:05:11,330 Node[0] Epoch[2] Batch [180-200]	Speed: 21524.74 samples/sec	accuracy=nan
2023-03-21 21:05:14,365 Node[0] Epoch[2] Batch [200-220]	Speed: 21505.04 samples/sec	accuracy=nan
2023-03-21 21:05:17,400 Node[0] Epoch[2] Batch [220-240]	Speed: 21514.98 samples/sec	accuracy=nan
2023-03-21 21:05:20,432 Node[0] Epoch[2] Batch [240-260]	Speed: 21524.27 samples/sec	accuracy=nan
2023-03-21 21:05:23,475 Node[0] Epoch[2] Batch [260-280]	Speed: 21454.96 samples/sec	accuracy=nan
2023-03-21 21:05:26,513 Node[0] Epoch[2] Batch [280-300]	Speed: 21486.55 samples/sec	accuracy=nan
2023-03-21 21:05:29,548 Node[0] Epoch[2] Batch [300-320]	Speed: 21508.49 samples/sec	accuracy=nan
2023-03-21 21:05:32,588 Node[0] Epoch[2] Batch [320-340]	Speed: 21477.32 samples/sec	accuracy=nan
2023-03-21 21:05:35,624 Node[0] Epoch[2] Batch [340-360]	Speed: 21498.42 samples/sec	accuracy=nan
2023-03-21 21:05:38,661 Node[0] Epoch[2] Batch [360-380]	Speed: 21494.85 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679450740333, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-21 21:05:40,334 Node[0] Epoch[2] Time cost=59.524
:::MLLOG {"namespace": "", "time_ms": 1679450740334, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21523.67468834864}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679450740479, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-21 21:05:40,479 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:05:40,479 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:05:40,479 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:05:40,479 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:05:40,480 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:05:40,479 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:05:40,479 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:05:40,480 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:05:41,853 Node[0] Epoch[2] Validation-accuracy=0.276000
2023-03-21 21:05:41,853 Node[0] Epoch[2] Validation-correct-count=1725.000000
2023-03-21 21:05:41,853 Node[0] Epoch[2] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679450742031, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-21 21:05:42,031 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:05:42,031 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450742031, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.27678, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-21 21:05:42,031 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:05:42,031 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:05:42,031 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:05:42,031 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450742032, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1679450742032, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-21 21:05:42,031 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450742032, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-21 21:05:42,032 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:05:45,101 Node[0] Epoch[3] Batch [0-20]	Speed: 21331.17 samples/sec	accuracy=nan
2023-03-21 21:05:48,146 Node[0] Epoch[3] Batch [20-40]	Speed: 21442.68 samples/sec	accuracy=nan
2023-03-21 21:05:51,189 Node[0] Epoch[3] Batch [40-60]	Speed: 21449.71 samples/sec	accuracy=nan
2023-03-21 21:05:54,234 Node[0] Epoch[3] Batch [60-80]	Speed: 21435.75 samples/sec	accuracy=nan
2023-03-21 21:05:57,277 Node[0] Epoch[3] Batch [80-100]	Speed: 21456.36 samples/sec	accuracy=nan
2023-03-21 21:06:00,318 Node[0] Epoch[3] Batch [100-120]	Speed: 21466.85 samples/sec	accuracy=nan
2023-03-21 21:06:03,359 Node[0] Epoch[3] Batch [120-140]	Speed: 21466.07 samples/sec	accuracy=nan
2023-03-21 21:06:06,400 Node[0] Epoch[3] Batch [140-160]	Speed: 21468.10 samples/sec	accuracy=nan
2023-03-21 21:06:09,440 Node[0] Epoch[3] Batch [160-180]	Speed: 21473.50 samples/sec	accuracy=nan
2023-03-21 21:06:12,486 Node[0] Epoch[3] Batch [180-200]	Speed: 21427.96 samples/sec	accuracy=nan
2023-03-21 21:06:15,529 Node[0] Epoch[3] Batch [200-220]	Speed: 21454.45 samples/sec	accuracy=nan
2023-03-21 21:06:18,574 Node[0] Epoch[3] Batch [220-240]	Speed: 21434.40 samples/sec	accuracy=nan
2023-03-21 21:06:21,619 Node[0] Epoch[3] Batch [240-260]	Speed: 21438.16 samples/sec	accuracy=nan
2023-03-21 21:06:24,675 Node[0] Epoch[3] Batch [260-280]	Speed: 21363.81 samples/sec	accuracy=nan
2023-03-21 21:06:27,722 Node[0] Epoch[3] Batch [280-300]	Speed: 21424.62 samples/sec	accuracy=nan
2023-03-21 21:06:30,766 Node[0] Epoch[3] Batch [300-320]	Speed: 21447.18 samples/sec	accuracy=nan
2023-03-21 21:06:33,809 Node[0] Epoch[3] Batch [320-340]	Speed: 21449.72 samples/sec	accuracy=nan
2023-03-21 21:06:36,856 Node[0] Epoch[3] Batch [340-360]	Speed: 21426.04 samples/sec	accuracy=nan
2023-03-21 21:06:39,899 Node[0] Epoch[3] Batch [360-380]	Speed: 21452.79 samples/sec	accuracy=nan
2023-03-21 21:06:41,727 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:06:41,727 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:06:41,727 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:06:41,727 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:06:41,727 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:06:41,727 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:06:41,728 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450801727, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-21 21:06:41,728 Node[0] Epoch[3] Time cost=59.696
:::MLLOG {"namespace": "", "time_ms": 1679450801728, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21461.52587436175}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679450801729, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-21 21:06:41,729 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:06:44,927 Node[0] Epoch[4] Batch [0-20]	Speed: 21440.37 samples/sec	accuracy=nan
2023-03-21 21:06:47,968 Node[0] Epoch[4] Batch [20-40]	Speed: 21461.71 samples/sec	accuracy=nan
2023-03-21 21:06:51,012 Node[0] Epoch[4] Batch [40-60]	Speed: 21446.21 samples/sec	accuracy=nan
2023-03-21 21:06:54,052 Node[0] Epoch[4] Batch [60-80]	Speed: 21477.24 samples/sec	accuracy=nan
2023-03-21 21:06:57,098 Node[0] Epoch[4] Batch [80-100]	Speed: 21425.68 samples/sec	accuracy=nan
2023-03-21 21:07:00,140 Node[0] Epoch[4] Batch [100-120]	Speed: 21462.73 samples/sec	accuracy=nan
2023-03-21 21:07:03,186 Node[0] Epoch[4] Batch [120-140]	Speed: 21427.79 samples/sec	accuracy=nan
2023-03-21 21:07:06,228 Node[0] Epoch[4] Batch [140-160]	Speed: 21465.02 samples/sec	accuracy=nan
2023-03-21 21:07:09,270 Node[0] Epoch[4] Batch [160-180]	Speed: 21457.68 samples/sec	accuracy=nan
2023-03-21 21:07:12,311 Node[0] Epoch[4] Batch [180-200]	Speed: 21466.96 samples/sec	accuracy=nan
2023-03-21 21:07:15,357 Node[0] Epoch[4] Batch [200-220]	Speed: 21432.01 samples/sec	accuracy=nan
2023-03-21 21:07:18,401 Node[0] Epoch[4] Batch [220-240]	Speed: 21447.49 samples/sec	accuracy=nan
2023-03-21 21:07:21,442 Node[0] Epoch[4] Batch [240-260]	Speed: 21460.40 samples/sec	accuracy=nan
2023-03-21 21:07:24,484 Node[0] Epoch[4] Batch [260-280]	Speed: 21459.91 samples/sec	accuracy=nan
2023-03-21 21:07:27,527 Node[0] Epoch[4] Batch [280-300]	Speed: 21451.94 samples/sec	accuracy=nan
2023-03-21 21:07:30,570 Node[0] Epoch[4] Batch [300-320]	Speed: 21454.19 samples/sec	accuracy=nan
2023-03-21 21:07:33,616 Node[0] Epoch[4] Batch [320-340]	Speed: 21434.11 samples/sec	accuracy=nan
2023-03-21 21:07:36,656 Node[0] Epoch[4] Batch [340-360]	Speed: 21474.19 samples/sec	accuracy=nan
2023-03-21 21:07:39,704 Node[0] Epoch[4] Batch [360-380]	Speed: 21412.45 samples/sec	accuracy=nan
2023-03-21 21:07:41,373 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:07:41,373 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:07:41,373 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450861373, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-21 21:07:41,374 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:07:41,374 Node[0] Epoch[4] Time cost=59.645
:::MLLOG {"namespace": "", "time_ms": 1679450861374, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21479.78784147111}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
2023-03-21 21:07:41,374 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450861374, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-21 21:07:41,374 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:07:41,374 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:07:41,374 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:07:44,568 Node[0] Epoch[5] Batch [0-20]	Speed: 21494.94 samples/sec	accuracy=nan
2023-03-21 21:07:47,611 Node[0] Epoch[5] Batch [20-40]	Speed: 21452.67 samples/sec	accuracy=nan
2023-03-21 21:07:50,653 Node[0] Epoch[5] Batch [40-60]	Speed: 21463.65 samples/sec	accuracy=nan
2023-03-21 21:07:53,694 Node[0] Epoch[5] Batch [60-80]	Speed: 21467.63 samples/sec	accuracy=nan
2023-03-21 21:07:56,738 Node[0] Epoch[5] Batch [80-100]	Speed: 21440.50 samples/sec	accuracy=nan
2023-03-21 21:07:59,782 Node[0] Epoch[5] Batch [100-120]	Speed: 21445.41 samples/sec	accuracy=nan
2023-03-21 21:08:02,829 Node[0] Epoch[5] Batch [120-140]	Speed: 21428.58 samples/sec	accuracy=nan
2023-03-21 21:08:05,874 Node[0] Epoch[5] Batch [140-160]	Speed: 21438.27 samples/sec	accuracy=nan
2023-03-21 21:08:08,918 Node[0] Epoch[5] Batch [160-180]	Speed: 21446.20 samples/sec	accuracy=nan
2023-03-21 21:08:11,958 Node[0] Epoch[5] Batch [180-200]	Speed: 21468.72 samples/sec	accuracy=nan
2023-03-21 21:08:15,003 Node[0] Epoch[5] Batch [200-220]	Speed: 21440.49 samples/sec	accuracy=nan
2023-03-21 21:08:18,042 Node[0] Epoch[5] Batch [220-240]	Speed: 21483.52 samples/sec	accuracy=nan
2023-03-21 21:08:21,084 Node[0] Epoch[5] Batch [240-260]	Speed: 21457.96 samples/sec	accuracy=nan
2023-03-21 21:08:24,125 Node[0] Epoch[5] Batch [260-280]	Speed: 21464.32 samples/sec	accuracy=nan
2023-03-21 21:08:27,170 Node[0] Epoch[5] Batch [280-300]	Speed: 21437.27 samples/sec	accuracy=nan
2023-03-21 21:08:30,229 Node[0] Epoch[5] Batch [300-320]	Speed: 21339.94 samples/sec	accuracy=nan
2023-03-21 21:08:33,271 Node[0] Epoch[5] Batch [320-340]	Speed: 21461.18 samples/sec	accuracy=nan
2023-03-21 21:08:36,313 Node[0] Epoch[5] Batch [340-360]	Speed: 21459.67 samples/sec	accuracy=nan
2023-03-21 21:08:39,360 Node[0] Epoch[5] Batch [360-380]	Speed: 21426.91 samples/sec	accuracy=nan
2023-03-21 21:08:41,181 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:08:41,181 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:08:41,181 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:08:41,181 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:08:41,182 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:08:41,182 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:08:41,182 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450921182, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-21 21:08:41,184 Node[0] Epoch[5] Time cost=59.809
:::MLLOG {"namespace": "", "time_ms": 1679450921184, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21420.905540894557}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679450921184, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-21 21:08:41,184 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:08:44,378 Node[0] Epoch[6] Batch [0-20]	Speed: 21457.79 samples/sec	accuracy=nan
2023-03-21 21:08:47,421 Node[0] Epoch[6] Batch [20-40]	Speed: 21451.72 samples/sec	accuracy=nan
2023-03-21 21:08:50,463 Node[0] Epoch[6] Batch [40-60]	Speed: 21463.96 samples/sec	accuracy=nan
2023-03-21 21:08:53,509 Node[0] Epoch[6] Batch [60-80]	Speed: 21427.79 samples/sec	accuracy=nan
2023-03-21 21:08:56,564 Node[0] Epoch[6] Batch [80-100]	Speed: 21370.11 samples/sec	accuracy=nan
2023-03-21 21:08:59,611 Node[0] Epoch[6] Batch [100-120]	Speed: 21425.25 samples/sec	accuracy=nan
2023-03-21 21:09:02,652 Node[0] Epoch[6] Batch [120-140]	Speed: 21464.34 samples/sec	accuracy=nan
2023-03-21 21:09:05,692 Node[0] Epoch[6] Batch [140-160]	Speed: 21470.54 samples/sec	accuracy=nan
2023-03-21 21:09:08,741 Node[0] Epoch[6] Batch [160-180]	Speed: 21416.40 samples/sec	accuracy=nan
2023-03-21 21:09:11,786 Node[0] Epoch[6] Batch [180-200]	Speed: 21436.90 samples/sec	accuracy=nan
2023-03-21 21:09:14,831 Node[0] Epoch[6] Batch [200-220]	Speed: 21436.53 samples/sec	accuracy=nan
2023-03-21 21:09:17,871 Node[0] Epoch[6] Batch [220-240]	Speed: 21476.93 samples/sec	accuracy=nan
2023-03-21 21:09:20,915 Node[0] Epoch[6] Batch [240-260]	Speed: 21444.91 samples/sec	accuracy=nan
2023-03-21 21:09:23,957 Node[0] Epoch[6] Batch [260-280]	Speed: 21458.29 samples/sec	accuracy=nan
2023-03-21 21:09:27,003 Node[0] Epoch[6] Batch [280-300]	Speed: 21433.03 samples/sec	accuracy=nan
2023-03-21 21:09:30,052 Node[0] Epoch[6] Batch [300-320]	Speed: 21406.20 samples/sec	accuracy=nan
2023-03-21 21:09:33,094 Node[0] Epoch[6] Batch [320-340]	Speed: 21459.00 samples/sec	accuracy=nan
2023-03-21 21:09:36,139 Node[0] Epoch[6] Batch [340-360]	Speed: 21439.82 samples/sec	accuracy=nan
2023-03-21 21:09:39,185 Node[0] Epoch[6] Batch [360-380]	Speed: 21431.73 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679450980854, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-21 21:09:40,854 Node[0] Epoch[6] Time cost=59.670
:::MLLOG {"namespace": "", "time_ms": 1679450980854, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21470.848400800132}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679450981002, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-21 21:09:42,421 Node[0] Epoch[6] Validation-accuracy=0.433600
2023-03-21 21:09:42,421 Node[0] Epoch[6] Validation-correct-count=2710.000000
2023-03-21 21:09:42,421 Node[0] Epoch[6] Validation-total-count=6250.000000
2023-03-21 21:09:42,642 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:09:42,642 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:09:42,642 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:09:42,642 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:09:42,642 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:09:42,642 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:09:42,642 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450982642, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679450982643, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.43418, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679450982643, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679450982643, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679450982643, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-21 21:09:42,644 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:09:45,682 Node[0] Epoch[7] Batch [0-20]	Speed: 21550.77 samples/sec	accuracy=nan
2023-03-21 21:09:48,712 Node[0] Epoch[7] Batch [20-40]	Speed: 21546.76 samples/sec	accuracy=nan
2023-03-21 21:09:51,740 Node[0] Epoch[7] Batch [40-60]	Speed: 21555.62 samples/sec	accuracy=nan
2023-03-21 21:09:54,766 Node[0] Epoch[7] Batch [60-80]	Speed: 21574.09 samples/sec	accuracy=nan
2023-03-21 21:09:57,795 Node[0] Epoch[7] Batch [80-100]	Speed: 21549.55 samples/sec	accuracy=nan
2023-03-21 21:10:00,828 Node[0] Epoch[7] Batch [100-120]	Speed: 21526.52 samples/sec	accuracy=nan
2023-03-21 21:10:03,860 Node[0] Epoch[7] Batch [120-140]	Speed: 21528.06 samples/sec	accuracy=nan
2023-03-21 21:10:06,889 Node[0] Epoch[7] Batch [140-160]	Speed: 21550.47 samples/sec	accuracy=nan
2023-03-21 21:10:09,921 Node[0] Epoch[7] Batch [160-180]	Speed: 21529.97 samples/sec	accuracy=nan
2023-03-21 21:10:12,952 Node[0] Epoch[7] Batch [180-200]	Speed: 21541.44 samples/sec	accuracy=nan
2023-03-21 21:10:15,983 Node[0] Epoch[7] Batch [200-220]	Speed: 21533.84 samples/sec	accuracy=nan
2023-03-21 21:10:19,012 Node[0] Epoch[7] Batch [220-240]	Speed: 21552.13 samples/sec	accuracy=nan
2023-03-21 21:10:22,045 Node[0] Epoch[7] Batch [240-260]	Speed: 21528.93 samples/sec	accuracy=nan
2023-03-21 21:10:25,076 Node[0] Epoch[7] Batch [260-280]	Speed: 21532.64 samples/sec	accuracy=nan
2023-03-21 21:10:28,104 Node[0] Epoch[7] Batch [280-300]	Speed: 21560.93 samples/sec	accuracy=nan
2023-03-21 21:10:31,139 Node[0] Epoch[7] Batch [300-320]	Speed: 21510.11 samples/sec	accuracy=nan
2023-03-21 21:10:34,185 Node[0] Epoch[7] Batch [320-340]	Speed: 21432.70 samples/sec	accuracy=nan
2023-03-21 21:10:37,226 Node[0] Epoch[7] Batch [340-360]	Speed: 21465.98 samples/sec	accuracy=nan
2023-03-21 21:10:40,258 Node[0] Epoch[7] Batch [360-380]	Speed: 21528.75 samples/sec	accuracy=nan
2023-03-21 21:10:42,074 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:10:42,074 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:10:42,074 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:10:42,074 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451042074, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-21 21:10:42,074 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:10:42,074 Node[0] Epoch[7] Time cost=59.431
2023-03-21 21:10:42,074 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451042074, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21557.277806592694}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679451042075, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-21 21:10:42,075 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:10:42,075 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:10:45,261 Node[0] Epoch[8] Batch [0-20]	Speed: 21514.30 samples/sec	accuracy=nan
2023-03-21 21:10:48,295 Node[0] Epoch[8] Batch [20-40]	Speed: 21522.15 samples/sec	accuracy=nan
2023-03-21 21:10:51,324 Node[0] Epoch[8] Batch [40-60]	Speed: 21549.42 samples/sec	accuracy=nan
2023-03-21 21:10:54,356 Node[0] Epoch[8] Batch [60-80]	Speed: 21529.09 samples/sec	accuracy=nan
2023-03-21 21:10:57,386 Node[0] Epoch[8] Batch [80-100]	Speed: 21542.57 samples/sec	accuracy=nan
2023-03-21 21:11:00,421 Node[0] Epoch[8] Batch [100-120]	Speed: 21511.81 samples/sec	accuracy=nan
2023-03-21 21:11:03,454 Node[0] Epoch[8] Batch [120-140]	Speed: 21519.78 samples/sec	accuracy=nan
2023-03-21 21:11:06,493 Node[0] Epoch[8] Batch [140-160]	Speed: 21480.93 samples/sec	accuracy=nan
2023-03-21 21:11:09,532 Node[0] Epoch[8] Batch [160-180]	Speed: 21487.27 samples/sec	accuracy=nan
2023-03-21 21:11:12,567 Node[0] Epoch[8] Batch [180-200]	Speed: 21504.52 samples/sec	accuracy=nan
2023-03-21 21:11:15,611 Node[0] Epoch[8] Batch [200-220]	Speed: 21447.87 samples/sec	accuracy=nan
2023-03-21 21:11:18,642 Node[0] Epoch[8] Batch [220-240]	Speed: 21533.40 samples/sec	accuracy=nan
2023-03-21 21:11:21,676 Node[0] Epoch[8] Batch [240-260]	Speed: 21520.27 samples/sec	accuracy=nan
2023-03-21 21:11:24,706 Node[0] Epoch[8] Batch [260-280]	Speed: 21542.64 samples/sec	accuracy=nan
2023-03-21 21:11:27,742 Node[0] Epoch[8] Batch [280-300]	Speed: 21501.61 samples/sec	accuracy=nan
2023-03-21 21:11:30,777 Node[0] Epoch[8] Batch [300-320]	Speed: 21511.70 samples/sec	accuracy=nan
2023-03-21 21:11:33,810 Node[0] Epoch[8] Batch [320-340]	Speed: 21520.05 samples/sec	accuracy=nan
2023-03-21 21:11:36,843 Node[0] Epoch[8] Batch [340-360]	Speed: 21523.68 samples/sec	accuracy=nan
2023-03-21 21:11:39,880 Node[0] Epoch[8] Batch [360-380]	Speed: 21498.46 samples/sec	accuracy=nan
2023-03-21 21:11:41,542 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:11:41,542 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:11:41,542 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:11:41,542 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:11:41,542 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:11:41,542 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:11:41,543 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451101542, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-21 21:11:41,543 Node[0] Epoch[8] Time cost=59.468
:::MLLOG {"namespace": "", "time_ms": 1679451101543, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21543.661457400303}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679451101544, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-21 21:11:41,544 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:11:44,729 Node[0] Epoch[9] Batch [0-20]	Speed: 21538.83 samples/sec	accuracy=nan
2023-03-21 21:11:47,760 Node[0] Epoch[9] Batch [20-40]	Speed: 21536.26 samples/sec	accuracy=nan
2023-03-21 21:11:50,789 Node[0] Epoch[9] Batch [40-60]	Speed: 21551.26 samples/sec	accuracy=nan
2023-03-21 21:11:53,820 Node[0] Epoch[9] Batch [60-80]	Speed: 21539.19 samples/sec	accuracy=nan
2023-03-21 21:11:56,848 Node[0] Epoch[9] Batch [80-100]	Speed: 21553.25 samples/sec	accuracy=nan
2023-03-21 21:11:59,878 Node[0] Epoch[9] Batch [100-120]	Speed: 21544.68 samples/sec	accuracy=nan
2023-03-21 21:12:02,911 Node[0] Epoch[9] Batch [120-140]	Speed: 21527.58 samples/sec	accuracy=nan
2023-03-21 21:12:05,943 Node[0] Epoch[9] Batch [140-160]	Speed: 21525.76 samples/sec	accuracy=nan
2023-03-21 21:12:08,974 Node[0] Epoch[9] Batch [160-180]	Speed: 21540.24 samples/sec	accuracy=nan
2023-03-21 21:12:12,008 Node[0] Epoch[9] Batch [180-200]	Speed: 21516.10 samples/sec	accuracy=nan
2023-03-21 21:12:15,043 Node[0] Epoch[9] Batch [200-220]	Speed: 21505.86 samples/sec	accuracy=nan
2023-03-21 21:12:18,077 Node[0] Epoch[9] Batch [220-240]	Speed: 21521.17 samples/sec	accuracy=nan
2023-03-21 21:12:21,108 Node[0] Epoch[9] Batch [240-260]	Speed: 21532.04 samples/sec	accuracy=nan
2023-03-21 21:12:24,142 Node[0] Epoch[9] Batch [260-280]	Speed: 21519.64 samples/sec	accuracy=nan
2023-03-21 21:12:27,178 Node[0] Epoch[9] Batch [280-300]	Speed: 21503.52 samples/sec	accuracy=nan
2023-03-21 21:12:30,216 Node[0] Epoch[9] Batch [300-320]	Speed: 21484.09 samples/sec	accuracy=nan
2023-03-21 21:12:33,253 Node[0] Epoch[9] Batch [320-340]	Speed: 21499.38 samples/sec	accuracy=nan
2023-03-21 21:12:36,288 Node[0] Epoch[9] Batch [340-360]	Speed: 21504.11 samples/sec	accuracy=nan
2023-03-21 21:12:39,323 Node[0] Epoch[9] Batch [360-380]	Speed: 21513.46 samples/sec	accuracy=nan
2023-03-21 21:12:41,137 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:12:41,137 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:12:41,137 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451161137, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-21 21:12:41,138 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:12:41,138 Node[0] Epoch[9] Time cost=59.594
2023-03-21 21:12:41,138 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451161138, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21498.232459248673}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
2023-03-21 21:12:41,138 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:12:41,138 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451161138, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-21 21:12:41,138 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:12:44,327 Node[0] Epoch[10] Batch [0-20]	Speed: 21498.62 samples/sec	accuracy=nan
2023-03-21 21:12:47,358 Node[0] Epoch[10] Batch [20-40]	Speed: 21533.90 samples/sec	accuracy=nan
2023-03-21 21:12:50,389 Node[0] Epoch[10] Batch [40-60]	Speed: 21539.73 samples/sec	accuracy=nan
2023-03-21 21:12:53,419 Node[0] Epoch[10] Batch [60-80]	Speed: 21547.24 samples/sec	accuracy=nan
2023-03-21 21:12:56,449 Node[0] Epoch[10] Batch [80-100]	Speed: 21544.27 samples/sec	accuracy=nan
2023-03-21 21:12:59,477 Node[0] Epoch[10] Batch [100-120]	Speed: 21559.02 samples/sec	accuracy=nan
2023-03-21 21:13:02,507 Node[0] Epoch[10] Batch [120-140]	Speed: 21538.59 samples/sec	accuracy=nan
2023-03-21 21:13:05,537 Node[0] Epoch[10] Batch [140-160]	Speed: 21550.95 samples/sec	accuracy=nan
2023-03-21 21:13:08,572 Node[0] Epoch[10] Batch [160-180]	Speed: 21507.62 samples/sec	accuracy=nan
2023-03-21 21:13:11,605 Node[0] Epoch[10] Batch [180-200]	Speed: 21523.12 samples/sec	accuracy=nan
2023-03-21 21:13:14,638 Node[0] Epoch[10] Batch [200-220]	Speed: 21522.34 samples/sec	accuracy=nan
2023-03-21 21:13:17,671 Node[0] Epoch[10] Batch [220-240]	Speed: 21522.44 samples/sec	accuracy=nan
2023-03-21 21:13:20,704 Node[0] Epoch[10] Batch [240-260]	Speed: 21521.22 samples/sec	accuracy=nan
2023-03-21 21:13:23,737 Node[0] Epoch[10] Batch [260-280]	Speed: 21524.21 samples/sec	accuracy=nan
2023-03-21 21:13:26,773 Node[0] Epoch[10] Batch [280-300]	Speed: 21503.07 samples/sec	accuracy=nan
2023-03-21 21:13:29,805 Node[0] Epoch[10] Batch [300-320]	Speed: 21530.07 samples/sec	accuracy=nan
2023-03-21 21:13:32,839 Node[0] Epoch[10] Batch [320-340]	Speed: 21516.02 samples/sec	accuracy=nan
2023-03-21 21:13:35,875 Node[0] Epoch[10] Batch [340-360]	Speed: 21500.43 samples/sec	accuracy=nan
2023-03-21 21:13:38,910 Node[0] Epoch[10] Batch [360-380]	Speed: 21511.16 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679451220576, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-21 21:13:40,577 Node[0] Epoch[10] Time cost=59.438
:::MLLOG {"namespace": "", "time_ms": 1679451220577, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21554.552866004575}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679451220722, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-21 21:13:42,252 Node[0] Epoch[10] Validation-accuracy=0.446080
2023-03-21 21:13:42,252 Node[0] Epoch[10] Validation-correct-count=2788.000000
2023-03-21 21:13:42,252 Node[0] Epoch[10] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679451222362, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679451222362, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.44384, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
2023-03-21 21:13:42,362 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:13:42,362 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:13:42,362 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451222362, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679451222362, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-21 21:13:42,362 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:13:42,362 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:13:42,362 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:13:42,362 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451222363, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-21 21:13:42,363 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:13:45,430 Node[0] Epoch[11] Batch [0-20]	Speed: 21363.32 samples/sec	accuracy=nan
2023-03-21 21:13:48,475 Node[0] Epoch[11] Batch [20-40]	Speed: 21438.65 samples/sec	accuracy=nan
2023-03-21 21:13:51,524 Node[0] Epoch[11] Batch [40-60]	Speed: 21414.01 samples/sec	accuracy=nan
2023-03-21 21:13:54,570 Node[0] Epoch[11] Batch [60-80]	Speed: 21426.71 samples/sec	accuracy=nan
2023-03-21 21:13:57,614 Node[0] Epoch[11] Batch [80-100]	Speed: 21452.05 samples/sec	accuracy=nan
2023-03-21 21:14:00,657 Node[0] Epoch[11] Batch [100-120]	Speed: 21448.55 samples/sec	accuracy=nan
2023-03-21 21:14:03,697 Node[0] Epoch[11] Batch [120-140]	Speed: 21475.29 samples/sec	accuracy=nan
2023-03-21 21:14:06,737 Node[0] Epoch[11] Batch [140-160]	Speed: 21472.80 samples/sec	accuracy=nan
2023-03-21 21:14:09,782 Node[0] Epoch[11] Batch [160-180]	Speed: 21438.38 samples/sec	accuracy=nan
2023-03-21 21:14:12,825 Node[0] Epoch[11] Batch [180-200]	Speed: 21450.68 samples/sec	accuracy=nan
2023-03-21 21:14:15,871 Node[0] Epoch[11] Batch [200-220]	Speed: 21436.75 samples/sec	accuracy=nan
2023-03-21 21:14:18,916 Node[0] Epoch[11] Batch [220-240]	Speed: 21436.40 samples/sec	accuracy=nan
2023-03-21 21:14:21,959 Node[0] Epoch[11] Batch [240-260]	Speed: 21454.62 samples/sec	accuracy=nan
2023-03-21 21:14:25,002 Node[0] Epoch[11] Batch [260-280]	Speed: 21451.59 samples/sec	accuracy=nan
2023-03-21 21:14:28,045 Node[0] Epoch[11] Batch [280-300]	Speed: 21446.65 samples/sec	accuracy=nan
2023-03-21 21:14:31,088 Node[0] Epoch[11] Batch [300-320]	Speed: 21455.79 samples/sec	accuracy=nan
2023-03-21 21:14:34,135 Node[0] Epoch[11] Batch [320-340]	Speed: 21427.44 samples/sec	accuracy=nan
2023-03-21 21:14:37,177 Node[0] Epoch[11] Batch [340-360]	Speed: 21453.65 samples/sec	accuracy=nan
2023-03-21 21:14:40,218 Node[0] Epoch[11] Batch [360-380]	Speed: 21466.12 samples/sec	accuracy=nan
2023-03-21 21:14:42,044 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:14:42,044 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:14:42,044 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:14:42,044 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:14:42,044 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:14:42,044 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:14:42,045 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451282044, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-21 21:14:42,045 Node[0] Epoch[11] Time cost=59.682
:::MLLOG {"namespace": "", "time_ms": 1679451282045, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21466.39763474472}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679451282046, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-21 21:14:42,046 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:14:45,246 Node[0] Epoch[12] Batch [0-20]	Speed: 21423.80 samples/sec	accuracy=nan
2023-03-21 21:14:48,288 Node[0] Epoch[12] Batch [20-40]	Speed: 21457.87 samples/sec	accuracy=nan
2023-03-21 21:14:51,333 Node[0] Epoch[12] Batch [40-60]	Speed: 21438.64 samples/sec	accuracy=nan
2023-03-21 21:14:54,375 Node[0] Epoch[12] Batch [60-80]	Speed: 21458.10 samples/sec	accuracy=nan
2023-03-21 21:14:57,420 Node[0] Epoch[12] Batch [80-100]	Speed: 21440.73 samples/sec	accuracy=nan
2023-03-21 21:15:00,467 Node[0] Epoch[12] Batch [100-120]	Speed: 21422.27 samples/sec	accuracy=nan
2023-03-21 21:15:03,514 Node[0] Epoch[12] Batch [120-140]	Speed: 21422.49 samples/sec	accuracy=nan
2023-03-21 21:15:06,555 Node[0] Epoch[12] Batch [140-160]	Speed: 21471.21 samples/sec	accuracy=nan
2023-03-21 21:15:09,595 Node[0] Epoch[12] Batch [160-180]	Speed: 21473.12 samples/sec	accuracy=nan
2023-03-21 21:15:12,641 Node[0] Epoch[12] Batch [180-200]	Speed: 21431.68 samples/sec	accuracy=nan
2023-03-21 21:15:15,681 Node[0] Epoch[12] Batch [200-220]	Speed: 21472.25 samples/sec	accuracy=nan
2023-03-21 21:15:18,722 Node[0] Epoch[12] Batch [220-240]	Speed: 21465.26 samples/sec	accuracy=nan
2023-03-21 21:15:21,762 Node[0] Epoch[12] Batch [240-260]	Speed: 21474.96 samples/sec	accuracy=nan
2023-03-21 21:15:24,806 Node[0] Epoch[12] Batch [260-280]	Speed: 21448.67 samples/sec	accuracy=nan
2023-03-21 21:15:27,851 Node[0] Epoch[12] Batch [280-300]	Speed: 21438.93 samples/sec	accuracy=nan
2023-03-21 21:15:30,894 Node[0] Epoch[12] Batch [300-320]	Speed: 21449.10 samples/sec	accuracy=nan
2023-03-21 21:15:33,936 Node[0] Epoch[12] Batch [320-340]	Speed: 21456.54 samples/sec	accuracy=nan
2023-03-21 21:15:36,981 Node[0] Epoch[12] Batch [340-360]	Speed: 21439.48 samples/sec	accuracy=nan
2023-03-21 21:15:40,025 Node[0] Epoch[12] Batch [360-380]	Speed: 21444.94 samples/sec	accuracy=nan
2023-03-21 21:15:41,695 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:15:41,695 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:15:41,695 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:15:41,695 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:15:41,695 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:15:41,695 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:15:41,695 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451341695, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-21 21:15:41,696 Node[0] Epoch[12] Time cost=59.650
:::MLLOG {"namespace": "", "time_ms": 1679451341696, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21478.063811531007}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1679451341696, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-21 21:15:41,696 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:15:44,898 Node[0] Epoch[13] Batch [0-20]	Speed: 21439.11 samples/sec	accuracy=nan
2023-03-21 21:15:47,947 Node[0] Epoch[13] Batch [20-40]	Speed: 21406.96 samples/sec	accuracy=nan
2023-03-21 21:15:50,987 Node[0] Epoch[13] Batch [40-60]	Speed: 21473.44 samples/sec	accuracy=nan
2023-03-21 21:15:54,034 Node[0] Epoch[13] Batch [60-80]	Speed: 21424.50 samples/sec	accuracy=nan
2023-03-21 21:15:57,077 Node[0] Epoch[13] Batch [80-100]	Speed: 21448.97 samples/sec	accuracy=nan
2023-03-21 21:16:00,121 Node[0] Epoch[13] Batch [100-120]	Speed: 21450.55 samples/sec	accuracy=nan
2023-03-21 21:16:03,161 Node[0] Epoch[13] Batch [120-140]	Speed: 21474.25 samples/sec	accuracy=nan
2023-03-21 21:16:06,206 Node[0] Epoch[13] Batch [140-160]	Speed: 21435.22 samples/sec	accuracy=nan
2023-03-21 21:16:09,254 Node[0] Epoch[13] Batch [160-180]	Speed: 21417.86 samples/sec	accuracy=nan
2023-03-21 21:16:12,304 Node[0] Epoch[13] Batch [180-200]	Speed: 21402.58 samples/sec	accuracy=nan
2023-03-21 21:16:15,349 Node[0] Epoch[13] Batch [200-220]	Speed: 21438.28 samples/sec	accuracy=nan
2023-03-21 21:16:18,397 Node[0] Epoch[13] Batch [220-240]	Speed: 21421.06 samples/sec	accuracy=nan
2023-03-21 21:16:21,446 Node[0] Epoch[13] Batch [240-260]	Speed: 21411.15 samples/sec	accuracy=nan
2023-03-21 21:16:24,489 Node[0] Epoch[13] Batch [260-280]	Speed: 21447.05 samples/sec	accuracy=nan
2023-03-21 21:16:27,534 Node[0] Epoch[13] Batch [280-300]	Speed: 21439.62 samples/sec	accuracy=nan
2023-03-21 21:16:30,576 Node[0] Epoch[13] Batch [300-320]	Speed: 21461.25 samples/sec	accuracy=nan
2023-03-21 21:16:33,620 Node[0] Epoch[13] Batch [320-340]	Speed: 21441.63 samples/sec	accuracy=nan
2023-03-21 21:16:36,667 Node[0] Epoch[13] Batch [340-360]	Speed: 21427.60 samples/sec	accuracy=nan
2023-03-21 21:16:39,708 Node[0] Epoch[13] Batch [360-380]	Speed: 21463.77 samples/sec	accuracy=nan
2023-03-21 21:16:41,531 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:16:41,531 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:16:41,531 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:16:41,531 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:16:41,531 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:16:41,531 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:16:41,531 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451401531, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-21 21:16:41,532 Node[0] Epoch[13] Time cost=59.836
:::MLLOG {"namespace": "", "time_ms": 1679451401532, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21411.271242582803}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679451401533, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-21 21:16:41,533 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:16:44,729 Node[0] Epoch[14] Batch [0-20]	Speed: 21436.72 samples/sec	accuracy=nan
2023-03-21 21:16:47,773 Node[0] Epoch[14] Batch [20-40]	Speed: 21447.38 samples/sec	accuracy=nan
2023-03-21 21:16:50,816 Node[0] Epoch[14] Batch [40-60]	Speed: 21454.62 samples/sec	accuracy=nan
2023-03-21 21:16:53,861 Node[0] Epoch[14] Batch [60-80]	Speed: 21435.25 samples/sec	accuracy=nan
2023-03-21 21:16:56,906 Node[0] Epoch[14] Batch [80-100]	Speed: 21438.19 samples/sec	accuracy=nan
2023-03-21 21:16:59,954 Node[0] Epoch[14] Batch [100-120]	Speed: 21417.31 samples/sec	accuracy=nan
2023-03-21 21:17:03,000 Node[0] Epoch[14] Batch [120-140]	Speed: 21431.31 samples/sec	accuracy=nan
2023-03-21 21:17:06,045 Node[0] Epoch[14] Batch [140-160]	Speed: 21436.70 samples/sec	accuracy=nan
2023-03-21 21:17:09,088 Node[0] Epoch[14] Batch [160-180]	Speed: 21453.82 samples/sec	accuracy=nan
2023-03-21 21:17:12,131 Node[0] Epoch[14] Batch [180-200]	Speed: 21452.09 samples/sec	accuracy=nan
2023-03-21 21:17:15,179 Node[0] Epoch[14] Batch [200-220]	Speed: 21419.44 samples/sec	accuracy=nan
2023-03-21 21:17:18,223 Node[0] Epoch[14] Batch [220-240]	Speed: 21445.14 samples/sec	accuracy=nan
2023-03-21 21:17:21,267 Node[0] Epoch[14] Batch [240-260]	Speed: 21442.17 samples/sec	accuracy=nan
2023-03-21 21:17:24,311 Node[0] Epoch[14] Batch [260-280]	Speed: 21450.07 samples/sec	accuracy=nan
2023-03-21 21:17:27,355 Node[0] Epoch[14] Batch [280-300]	Speed: 21445.23 samples/sec	accuracy=nan
2023-03-21 21:17:30,403 Node[0] Epoch[14] Batch [300-320]	Speed: 21415.38 samples/sec	accuracy=nan
2023-03-21 21:17:33,449 Node[0] Epoch[14] Batch [320-340]	Speed: 21431.65 samples/sec	accuracy=nan
2023-03-21 21:17:36,490 Node[0] Epoch[14] Batch [340-360]	Speed: 21465.09 samples/sec	accuracy=nan
2023-03-21 21:17:39,540 Node[0] Epoch[14] Batch [360-380]	Speed: 21405.20 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679451461210, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-21 21:17:41,210 Node[0] Epoch[14] Time cost=59.677
:::MLLOG {"namespace": "", "time_ms": 1679451461210, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21468.218339469586}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679451461358, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-21 21:17:42,811 Node[0] Epoch[14] Validation-accuracy=0.543840
2023-03-21 21:17:42,811 Node[0] Epoch[14] Validation-correct-count=3399.000000
2023-03-21 21:17:42,811 Node[0] Epoch[14] Validation-total-count=6250.000000
2023-03-21 21:17:42,994 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:17:42,994 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:17:42,994 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:17:42,994 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:17:42,994 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:17:42,994 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:17:42,994 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451462993, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679451462995, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.5466, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679451462995, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679451462995, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679451462995, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-21 21:17:42,996 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:17:46,045 Node[0] Epoch[15] Batch [0-20]	Speed: 21495.54 samples/sec	accuracy=nan
2023-03-21 21:17:49,073 Node[0] Epoch[15] Batch [20-40]	Speed: 21558.60 samples/sec	accuracy=nan
2023-03-21 21:17:52,106 Node[0] Epoch[15] Batch [40-60]	Speed: 21526.22 samples/sec	accuracy=nan
2023-03-21 21:17:55,139 Node[0] Epoch[15] Batch [60-80]	Speed: 21525.61 samples/sec	accuracy=nan
2023-03-21 21:17:58,171 Node[0] Epoch[15] Batch [80-100]	Speed: 21530.77 samples/sec	accuracy=nan
2023-03-21 21:18:01,201 Node[0] Epoch[15] Batch [100-120]	Speed: 21540.74 samples/sec	accuracy=nan
2023-03-21 21:18:04,230 Node[0] Epoch[15] Batch [120-140]	Speed: 21551.34 samples/sec	accuracy=nan
2023-03-21 21:18:07,267 Node[0] Epoch[15] Batch [140-160]	Speed: 21498.64 samples/sec	accuracy=nan
2023-03-21 21:18:10,302 Node[0] Epoch[15] Batch [160-180]	Speed: 21505.75 samples/sec	accuracy=nan
2023-03-21 21:18:13,333 Node[0] Epoch[15] Batch [180-200]	Speed: 21540.56 samples/sec	accuracy=nan
2023-03-21 21:18:16,364 Node[0] Epoch[15] Batch [200-220]	Speed: 21537.70 samples/sec	accuracy=nan
2023-03-21 21:18:19,393 Node[0] Epoch[15] Batch [220-240]	Speed: 21551.19 samples/sec	accuracy=nan
2023-03-21 21:18:22,428 Node[0] Epoch[15] Batch [240-260]	Speed: 21504.28 samples/sec	accuracy=nan
2023-03-21 21:18:25,461 Node[0] Epoch[15] Batch [260-280]	Speed: 21526.23 samples/sec	accuracy=nan
2023-03-21 21:18:28,496 Node[0] Epoch[15] Batch [280-300]	Speed: 21505.44 samples/sec	accuracy=nan
2023-03-21 21:18:31,530 Node[0] Epoch[15] Batch [300-320]	Speed: 21519.08 samples/sec	accuracy=nan
2023-03-21 21:18:34,565 Node[0] Epoch[15] Batch [320-340]	Speed: 21506.75 samples/sec	accuracy=nan
2023-03-21 21:18:37,599 Node[0] Epoch[15] Batch [340-360]	Speed: 21516.85 samples/sec	accuracy=nan
2023-03-21 21:18:40,631 Node[0] Epoch[15] Batch [360-380]	Speed: 21528.54 samples/sec	accuracy=nan
2023-03-21 21:18:42,450 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:18:42,450 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:18:42,450 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:18:42,450 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451522450, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-21 21:18:42,450 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:18:42,450 Node[0] Epoch[15] Time cost=59.455
2023-03-21 21:18:42,450 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451522451, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21548.548461604336}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
2023-03-21 21:18:42,450 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451522451, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-21 21:18:42,451 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:18:45,642 Node[0] Epoch[16] Batch [0-20]	Speed: 21484.82 samples/sec	accuracy=nan
2023-03-21 21:18:48,681 Node[0] Epoch[16] Batch [20-40]	Speed: 21477.02 samples/sec	accuracy=nan
2023-03-21 21:18:51,720 Node[0] Epoch[16] Batch [40-60]	Speed: 21481.24 samples/sec	accuracy=nan
2023-03-21 21:18:54,759 Node[0] Epoch[16] Batch [60-80]	Speed: 21479.38 samples/sec	accuracy=nan
2023-03-21 21:18:57,794 Node[0] Epoch[16] Batch [80-100]	Speed: 21513.21 samples/sec	accuracy=nan
2023-03-21 21:19:00,827 Node[0] Epoch[16] Batch [100-120]	Speed: 21517.38 samples/sec	accuracy=nan
2023-03-21 21:19:03,860 Node[0] Epoch[16] Batch [120-140]	Speed: 21524.56 samples/sec	accuracy=nan
2023-03-21 21:19:06,891 Node[0] Epoch[16] Batch [140-160]	Speed: 21537.02 samples/sec	accuracy=nan
2023-03-21 21:19:09,922 Node[0] Epoch[16] Batch [160-180]	Speed: 21539.95 samples/sec	accuracy=nan
2023-03-21 21:19:12,961 Node[0] Epoch[16] Batch [180-200]	Speed: 21477.74 samples/sec	accuracy=nan
2023-03-21 21:19:16,000 Node[0] Epoch[16] Batch [200-220]	Speed: 21480.01 samples/sec	accuracy=nan
2023-03-21 21:19:19,034 Node[0] Epoch[16] Batch [220-240]	Speed: 21518.71 samples/sec	accuracy=nan
2023-03-21 21:19:22,067 Node[0] Epoch[16] Batch [240-260]	Speed: 21520.75 samples/sec	accuracy=nan
2023-03-21 21:19:25,106 Node[0] Epoch[16] Batch [260-280]	Speed: 21484.30 samples/sec	accuracy=nan
2023-03-21 21:19:28,138 Node[0] Epoch[16] Batch [280-300]	Speed: 21531.33 samples/sec	accuracy=nan
2023-03-21 21:19:31,166 Node[0] Epoch[16] Batch [300-320]	Speed: 21554.22 samples/sec	accuracy=nan
2023-03-21 21:19:34,202 Node[0] Epoch[16] Batch [320-340]	Speed: 21507.70 samples/sec	accuracy=nan
2023-03-21 21:19:37,238 Node[0] Epoch[16] Batch [340-360]	Speed: 21496.19 samples/sec	accuracy=nan
2023-03-21 21:19:40,272 Node[0] Epoch[16] Batch [360-380]	Speed: 21522.32 samples/sec	accuracy=nan
2023-03-21 21:19:41,939 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:19:41,939 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:19:41,939 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:19:41,939 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:19:41,939 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:19:41,939 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:19:41,939 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451581939, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-21 21:19:41,940 Node[0] Epoch[16] Time cost=59.489
:::MLLOG {"namespace": "", "time_ms": 1679451581940, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21536.155144079843}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1679451581941, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-21 21:19:41,941 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:19:45,126 Node[0] Epoch[17] Batch [0-20]	Speed: 21547.07 samples/sec	accuracy=nan
2023-03-21 21:19:48,160 Node[0] Epoch[17] Batch [20-40]	Speed: 21519.53 samples/sec	accuracy=nan
2023-03-21 21:19:51,195 Node[0] Epoch[17] Batch [40-60]	Speed: 21504.22 samples/sec	accuracy=nan
2023-03-21 21:19:54,226 Node[0] Epoch[17] Batch [60-80]	Speed: 21537.69 samples/sec	accuracy=nan
2023-03-21 21:19:57,260 Node[0] Epoch[17] Batch [80-100]	Speed: 21514.16 samples/sec	accuracy=nan
2023-03-21 21:20:00,293 Node[0] Epoch[17] Batch [100-120]	Speed: 21528.33 samples/sec	accuracy=nan
2023-03-21 21:20:03,334 Node[0] Epoch[17] Batch [120-140]	Speed: 21463.04 samples/sec	accuracy=nan
2023-03-21 21:20:06,371 Node[0] Epoch[17] Batch [140-160]	Speed: 21498.26 samples/sec	accuracy=nan
2023-03-21 21:20:09,402 Node[0] Epoch[17] Batch [160-180]	Speed: 21536.32 samples/sec	accuracy=nan
2023-03-21 21:20:12,436 Node[0] Epoch[17] Batch [180-200]	Speed: 21513.48 samples/sec	accuracy=nan
2023-03-21 21:20:15,468 Node[0] Epoch[17] Batch [200-220]	Speed: 21529.70 samples/sec	accuracy=nan
2023-03-21 21:20:18,504 Node[0] Epoch[17] Batch [220-240]	Speed: 21501.93 samples/sec	accuracy=nan
2023-03-21 21:20:21,542 Node[0] Epoch[17] Batch [240-260]	Speed: 21492.73 samples/sec	accuracy=nan
2023-03-21 21:20:24,574 Node[0] Epoch[17] Batch [260-280]	Speed: 21531.80 samples/sec	accuracy=nan
2023-03-21 21:20:27,609 Node[0] Epoch[17] Batch [280-300]	Speed: 21509.01 samples/sec	accuracy=nan
2023-03-21 21:20:30,654 Node[0] Epoch[17] Batch [300-320]	Speed: 21435.87 samples/sec	accuracy=nan
2023-03-21 21:20:33,691 Node[0] Epoch[17] Batch [320-340]	Speed: 21493.89 samples/sec	accuracy=nan
2023-03-21 21:20:36,725 Node[0] Epoch[17] Batch [340-360]	Speed: 21519.02 samples/sec	accuracy=nan
2023-03-21 21:20:39,758 Node[0] Epoch[17] Batch [360-380]	Speed: 21521.02 samples/sec	accuracy=nan
2023-03-21 21:20:41,575 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:20:41,575 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451641575, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-21 21:20:41,575 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:20:41,575 Node[0] Epoch[17] Time cost=59.635
2023-03-21 21:20:41,575 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451641575, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21483.61791064458}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
2023-03-21 21:20:41,575 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:20:41,575 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:20:41,575 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451641576, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-21 21:20:41,576 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:20:44,764 Node[0] Epoch[18] Batch [0-20]	Speed: 21498.14 samples/sec	accuracy=nan
2023-03-21 21:20:47,799 Node[0] Epoch[18] Batch [20-40]	Speed: 21503.62 samples/sec	accuracy=nan
2023-03-21 21:20:50,836 Node[0] Epoch[18] Batch [40-60]	Speed: 21496.90 samples/sec	accuracy=nan
2023-03-21 21:20:53,868 Node[0] Epoch[18] Batch [60-80]	Speed: 21529.35 samples/sec	accuracy=nan
2023-03-21 21:20:56,898 Node[0] Epoch[18] Batch [80-100]	Speed: 21543.43 samples/sec	accuracy=nan
2023-03-21 21:20:59,934 Node[0] Epoch[18] Batch [100-120]	Speed: 21504.90 samples/sec	accuracy=nan
2023-03-21 21:21:02,965 Node[0] Epoch[18] Batch [120-140]	Speed: 21539.40 samples/sec	accuracy=nan
2023-03-21 21:21:05,997 Node[0] Epoch[18] Batch [140-160]	Speed: 21530.49 samples/sec	accuracy=nan
2023-03-21 21:21:09,032 Node[0] Epoch[18] Batch [160-180]	Speed: 21505.52 samples/sec	accuracy=nan
2023-03-21 21:21:12,070 Node[0] Epoch[18] Batch [180-200]	Speed: 21485.16 samples/sec	accuracy=nan
2023-03-21 21:21:15,106 Node[0] Epoch[18] Batch [200-220]	Speed: 21506.79 samples/sec	accuracy=nan
2023-03-21 21:21:18,142 Node[0] Epoch[18] Batch [220-240]	Speed: 21498.19 samples/sec	accuracy=nan
2023-03-21 21:21:21,177 Node[0] Epoch[18] Batch [240-260]	Speed: 21509.75 samples/sec	accuracy=nan
2023-03-21 21:21:24,216 Node[0] Epoch[18] Batch [260-280]	Speed: 21484.52 samples/sec	accuracy=nan
2023-03-21 21:21:27,248 Node[0] Epoch[18] Batch [280-300]	Speed: 21528.85 samples/sec	accuracy=nan
2023-03-21 21:21:30,280 Node[0] Epoch[18] Batch [300-320]	Speed: 21529.48 samples/sec	accuracy=nan
2023-03-21 21:21:33,310 Node[0] Epoch[18] Batch [320-340]	Speed: 21542.15 samples/sec	accuracy=nan
2023-03-21 21:21:36,343 Node[0] Epoch[18] Batch [340-360]	Speed: 21527.19 samples/sec	accuracy=nan
2023-03-21 21:21:39,379 Node[0] Epoch[18] Batch [360-380]	Speed: 21502.07 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679451701046, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-21 21:21:41,047 Node[0] Epoch[18] Time cost=59.471
:::MLLOG {"namespace": "", "time_ms": 1679451701047, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21542.745347694832}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679451701192, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-21 21:21:42,740 Node[0] Epoch[18] Validation-accuracy=0.601280
2023-03-21 21:21:42,740 Node[0] Epoch[18] Validation-correct-count=3758.000000
2023-03-21 21:21:42,740 Node[0] Epoch[18] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679451702825, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679451702825, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.60302, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-21 21:21:42,825 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:21:42,825 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451702825, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-21 21:21:42,825 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451702825, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-21 21:21:42,825 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:21:42,825 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:21:42,825 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:21:42,825 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451702826, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-21 21:21:42,826 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:21:45,889 Node[0] Epoch[19] Batch [0-20]	Speed: 21370.20 samples/sec	accuracy=nan
2023-03-21 21:21:48,934 Node[0] Epoch[19] Batch [20-40]	Speed: 21439.23 samples/sec	accuracy=nan
2023-03-21 21:21:51,974 Node[0] Epoch[19] Batch [40-60]	Speed: 21475.18 samples/sec	accuracy=nan
2023-03-21 21:21:55,014 Node[0] Epoch[19] Batch [60-80]	Speed: 21474.90 samples/sec	accuracy=nan
2023-03-21 21:21:58,060 Node[0] Epoch[19] Batch [80-100]	Speed: 21430.45 samples/sec	accuracy=nan
2023-03-21 21:22:01,107 Node[0] Epoch[19] Batch [100-120]	Speed: 21425.65 samples/sec	accuracy=nan
2023-03-21 21:22:04,153 Node[0] Epoch[19] Batch [120-140]	Speed: 21426.96 samples/sec	accuracy=nan
2023-03-21 21:22:07,200 Node[0] Epoch[19] Batch [140-160]	Speed: 21425.36 samples/sec	accuracy=nan
2023-03-21 21:22:10,252 Node[0] Epoch[19] Batch [160-180]	Speed: 21389.26 samples/sec	accuracy=nan
2023-03-21 21:22:13,307 Node[0] Epoch[19] Batch [180-200]	Speed: 21371.34 samples/sec	accuracy=nan
2023-03-21 21:22:16,352 Node[0] Epoch[19] Batch [200-220]	Speed: 21433.14 samples/sec	accuracy=nan
2023-03-21 21:22:19,399 Node[0] Epoch[19] Batch [220-240]	Speed: 21427.43 samples/sec	accuracy=nan
2023-03-21 21:22:22,446 Node[0] Epoch[19] Batch [240-260]	Speed: 21422.26 samples/sec	accuracy=nan
2023-03-21 21:22:25,488 Node[0] Epoch[19] Batch [260-280]	Speed: 21459.74 samples/sec	accuracy=nan
2023-03-21 21:22:28,535 Node[0] Epoch[19] Batch [280-300]	Speed: 21423.82 samples/sec	accuracy=nan
2023-03-21 21:22:31,583 Node[0] Epoch[19] Batch [300-320]	Speed: 21420.67 samples/sec	accuracy=nan
2023-03-21 21:22:34,630 Node[0] Epoch[19] Batch [320-340]	Speed: 21425.38 samples/sec	accuracy=nan
2023-03-21 21:22:37,679 Node[0] Epoch[19] Batch [340-360]	Speed: 21411.75 samples/sec	accuracy=nan
2023-03-21 21:22:40,724 Node[0] Epoch[19] Batch [360-380]	Speed: 21433.09 samples/sec	accuracy=nan
2023-03-21 21:22:42,549 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:22:42,549 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:22:42,549 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:22:42,549 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:22:42,549 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:22:42,549 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:22:42,549 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451762549, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-21 21:22:42,550 Node[0] Epoch[19] Time cost=59.724
:::MLLOG {"namespace": "", "time_ms": 1679451762550, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21451.340255979023}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679451762551, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-21 21:22:42,551 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:22:45,747 Node[0] Epoch[20] Batch [0-20]	Speed: 21436.38 samples/sec	accuracy=nan
2023-03-21 21:22:48,792 Node[0] Epoch[20] Batch [20-40]	Speed: 21437.78 samples/sec	accuracy=nan
2023-03-21 21:22:51,840 Node[0] Epoch[20] Batch [40-60]	Speed: 21417.43 samples/sec	accuracy=nan
2023-03-21 21:22:54,893 Node[0] Epoch[20] Batch [60-80]	Speed: 21380.87 samples/sec	accuracy=nan
2023-03-21 21:22:57,939 Node[0] Epoch[20] Batch [80-100]	Speed: 21433.25 samples/sec	accuracy=nan
2023-03-21 21:23:00,988 Node[0] Epoch[20] Batch [100-120]	Speed: 21413.00 samples/sec	accuracy=nan
2023-03-21 21:23:04,035 Node[0] Epoch[20] Batch [120-140]	Speed: 21422.55 samples/sec	accuracy=nan
2023-03-21 21:23:07,078 Node[0] Epoch[20] Batch [140-160]	Speed: 21453.64 samples/sec	accuracy=nan
2023-03-21 21:23:10,129 Node[0] Epoch[20] Batch [160-180]	Speed: 21396.63 samples/sec	accuracy=nan
2023-03-21 21:23:13,176 Node[0] Epoch[20] Batch [180-200]	Speed: 21419.65 samples/sec	accuracy=nan
2023-03-21 21:23:16,223 Node[0] Epoch[20] Batch [200-220]	Speed: 21430.50 samples/sec	accuracy=nan
2023-03-21 21:23:19,268 Node[0] Epoch[20] Batch [220-240]	Speed: 21437.58 samples/sec	accuracy=nan
2023-03-21 21:23:22,313 Node[0] Epoch[20] Batch [240-260]	Speed: 21433.76 samples/sec	accuracy=nan
2023-03-21 21:23:25,362 Node[0] Epoch[20] Batch [260-280]	Speed: 21411.15 samples/sec	accuracy=nan
2023-03-21 21:23:28,406 Node[0] Epoch[20] Batch [280-300]	Speed: 21444.16 samples/sec	accuracy=nan
2023-03-21 21:23:31,453 Node[0] Epoch[20] Batch [300-320]	Speed: 21428.15 samples/sec	accuracy=nan
2023-03-21 21:23:34,502 Node[0] Epoch[20] Batch [320-340]	Speed: 21405.94 samples/sec	accuracy=nan
2023-03-21 21:23:37,551 Node[0] Epoch[20] Batch [340-360]	Speed: 21416.18 samples/sec	accuracy=nan
2023-03-21 21:23:40,605 Node[0] Epoch[20] Batch [360-380]	Speed: 21374.06 samples/sec	accuracy=nan
2023-03-21 21:23:42,274 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:23:42,274 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:23:42,274 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:23:42,274 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451822274, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-21 21:23:42,275 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:23:42,275 Node[0] Epoch[20] Time cost=59.724
:::MLLOG {"namespace": "", "time_ms": 1679451822275, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21451.393006286453}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
2023-03-21 21:23:42,275 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451822275, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-21 21:23:42,275 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:23:42,275 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:23:45,484 Node[0] Epoch[21] Batch [0-20]	Speed: 21387.27 samples/sec	accuracy=nan
2023-03-21 21:23:48,533 Node[0] Epoch[21] Batch [20-40]	Speed: 21411.12 samples/sec	accuracy=nan
2023-03-21 21:23:51,581 Node[0] Epoch[21] Batch [40-60]	Speed: 21415.17 samples/sec	accuracy=nan
2023-03-21 21:23:54,628 Node[0] Epoch[21] Batch [60-80]	Speed: 21426.64 samples/sec	accuracy=nan
2023-03-21 21:23:57,672 Node[0] Epoch[21] Batch [80-100]	Speed: 21446.94 samples/sec	accuracy=nan
2023-03-21 21:24:00,719 Node[0] Epoch[21] Batch [100-120]	Speed: 21422.66 samples/sec	accuracy=nan
2023-03-21 21:24:03,766 Node[0] Epoch[21] Batch [120-140]	Speed: 21424.67 samples/sec	accuracy=nan
2023-03-21 21:24:06,824 Node[0] Epoch[21] Batch [140-160]	Speed: 21350.01 samples/sec	accuracy=nan
2023-03-21 21:24:09,877 Node[0] Epoch[21] Batch [160-180]	Speed: 21379.23 samples/sec	accuracy=nan
2023-03-21 21:24:12,926 Node[0] Epoch[21] Batch [180-200]	Speed: 21413.34 samples/sec	accuracy=nan
2023-03-21 21:24:15,974 Node[0] Epoch[21] Batch [200-220]	Speed: 21414.03 samples/sec	accuracy=nan
2023-03-21 21:24:19,021 Node[0] Epoch[21] Batch [220-240]	Speed: 21425.37 samples/sec	accuracy=nan
2023-03-21 21:24:22,064 Node[0] Epoch[21] Batch [240-260]	Speed: 21451.56 samples/sec	accuracy=nan
2023-03-21 21:24:25,104 Node[0] Epoch[21] Batch [260-280]	Speed: 21476.22 samples/sec	accuracy=nan
2023-03-21 21:24:28,147 Node[0] Epoch[21] Batch [280-300]	Speed: 21453.42 samples/sec	accuracy=nan
2023-03-21 21:24:31,192 Node[0] Epoch[21] Batch [300-320]	Speed: 21436.10 samples/sec	accuracy=nan
2023-03-21 21:24:34,242 Node[0] Epoch[21] Batch [320-340]	Speed: 21400.62 samples/sec	accuracy=nan
2023-03-21 21:24:37,293 Node[0] Epoch[21] Batch [340-360]	Speed: 21397.43 samples/sec	accuracy=nan
2023-03-21 21:24:40,342 Node[0] Epoch[21] Batch [360-380]	Speed: 21413.09 samples/sec	accuracy=nan
2023-03-21 21:24:42,167 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:24:42,167 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:24:42,167 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:24:42,167 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:24:42,167 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:24:42,167 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:24:42,167 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451882167, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-21 21:24:42,168 Node[0] Epoch[21] Time cost=59.893
:::MLLOG {"namespace": "", "time_ms": 1679451882168, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21390.986562918493}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679451882169, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-21 21:24:42,169 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:24:45,369 Node[0] Epoch[22] Batch [0-20]	Speed: 21424.78 samples/sec	accuracy=nan
2023-03-21 21:24:48,413 Node[0] Epoch[22] Batch [20-40]	Speed: 21443.83 samples/sec	accuracy=nan
2023-03-21 21:24:51,460 Node[0] Epoch[22] Batch [40-60]	Speed: 21423.76 samples/sec	accuracy=nan
2023-03-21 21:24:54,510 Node[0] Epoch[22] Batch [60-80]	Speed: 21406.72 samples/sec	accuracy=nan
2023-03-21 21:24:57,558 Node[0] Epoch[22] Batch [80-100]	Speed: 21414.52 samples/sec	accuracy=nan
2023-03-21 21:25:00,601 Node[0] Epoch[22] Batch [100-120]	Speed: 21455.30 samples/sec	accuracy=nan
2023-03-21 21:25:03,647 Node[0] Epoch[22] Batch [120-140]	Speed: 21431.47 samples/sec	accuracy=nan
2023-03-21 21:25:06,693 Node[0] Epoch[22] Batch [140-160]	Speed: 21431.25 samples/sec	accuracy=nan
2023-03-21 21:25:09,742 Node[0] Epoch[22] Batch [160-180]	Speed: 21409.68 samples/sec	accuracy=nan
2023-03-21 21:25:12,791 Node[0] Epoch[22] Batch [180-200]	Speed: 21411.32 samples/sec	accuracy=nan
2023-03-21 21:25:15,843 Node[0] Epoch[22] Batch [200-220]	Speed: 21387.83 samples/sec	accuracy=nan
2023-03-21 21:25:18,892 Node[0] Epoch[22] Batch [220-240]	Speed: 21410.07 samples/sec	accuracy=nan
2023-03-21 21:25:21,941 Node[0] Epoch[22] Batch [240-260]	Speed: 21408.85 samples/sec	accuracy=nan
2023-03-21 21:25:24,985 Node[0] Epoch[22] Batch [260-280]	Speed: 21443.74 samples/sec	accuracy=nan
2023-03-21 21:25:28,034 Node[0] Epoch[22] Batch [280-300]	Speed: 21412.54 samples/sec	accuracy=nan
2023-03-21 21:25:31,085 Node[0] Epoch[22] Batch [300-320]	Speed: 21394.81 samples/sec	accuracy=nan
2023-03-21 21:25:34,129 Node[0] Epoch[22] Batch [320-340]	Speed: 21449.62 samples/sec	accuracy=nan
2023-03-21 21:25:37,178 Node[0] Epoch[22] Batch [340-360]	Speed: 21405.97 samples/sec	accuracy=nan
2023-03-21 21:25:40,228 Node[0] Epoch[22] Batch [360-380]	Speed: 21405.44 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679451941901, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-21 21:25:41,902 Node[0] Epoch[22] Time cost=59.733
:::MLLOG {"namespace": "", "time_ms": 1679451941902, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21448.285804860054}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679451942049, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-21 21:25:43,562 Node[0] Epoch[22] Validation-accuracy=0.660960
2023-03-21 21:25:43,562 Node[0] Epoch[22] Validation-correct-count=4131.000000
2023-03-21 21:25:43,562 Node[0] Epoch[22] Validation-total-count=6250.000000
2023-03-21 21:25:43,691 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:25:43,691 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:25:43,691 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:25:43,691 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:25:43,691 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:25:43,691 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451943691, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
2023-03-21 21:25:43,691 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679451943691, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.6577, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679451943692, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679451943692, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679451943692, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-21 21:25:43,692 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:25:46,747 Node[0] Epoch[23] Batch [0-20]	Speed: 21443.07 samples/sec	accuracy=nan
2023-03-21 21:25:49,777 Node[0] Epoch[23] Batch [20-40]	Speed: 21543.26 samples/sec	accuracy=nan
2023-03-21 21:25:52,811 Node[0] Epoch[23] Batch [40-60]	Speed: 21513.39 samples/sec	accuracy=nan
2023-03-21 21:25:55,848 Node[0] Epoch[23] Batch [60-80]	Speed: 21493.11 samples/sec	accuracy=nan
2023-03-21 21:25:58,883 Node[0] Epoch[23] Batch [80-100]	Speed: 21509.09 samples/sec	accuracy=nan
2023-03-21 21:26:01,915 Node[0] Epoch[23] Batch [100-120]	Speed: 21529.18 samples/sec	accuracy=nan
2023-03-21 21:26:04,950 Node[0] Epoch[23] Batch [120-140]	Speed: 21516.07 samples/sec	accuracy=nan
2023-03-21 21:26:07,984 Node[0] Epoch[23] Batch [140-160]	Speed: 21511.36 samples/sec	accuracy=nan
2023-03-21 21:26:11,022 Node[0] Epoch[23] Batch [160-180]	Speed: 21491.46 samples/sec	accuracy=nan
2023-03-21 21:26:14,060 Node[0] Epoch[23] Batch [180-200]	Speed: 21485.38 samples/sec	accuracy=nan
2023-03-21 21:26:17,094 Node[0] Epoch[23] Batch [200-220]	Speed: 21517.07 samples/sec	accuracy=nan
2023-03-21 21:26:20,128 Node[0] Epoch[23] Batch [220-240]	Speed: 21514.11 samples/sec	accuracy=nan
2023-03-21 21:26:23,155 Node[0] Epoch[23] Batch [240-260]	Speed: 21564.47 samples/sec	accuracy=nan
2023-03-21 21:26:26,190 Node[0] Epoch[23] Batch [260-280]	Speed: 21511.89 samples/sec	accuracy=nan
2023-03-21 21:26:29,224 Node[0] Epoch[23] Batch [280-300]	Speed: 21515.95 samples/sec	accuracy=nan
2023-03-21 21:26:32,258 Node[0] Epoch[23] Batch [300-320]	Speed: 21518.43 samples/sec	accuracy=nan
2023-03-21 21:26:35,290 Node[0] Epoch[23] Batch [320-340]	Speed: 21525.74 samples/sec	accuracy=nan
2023-03-21 21:26:38,328 Node[0] Epoch[23] Batch [340-360]	Speed: 21491.44 samples/sec	accuracy=nan
2023-03-21 21:26:41,363 Node[0] Epoch[23] Batch [360-380]	Speed: 21510.50 samples/sec	accuracy=nan
2023-03-21 21:26:43,180 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:26:43,180 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:26:43,181 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:26:43,181 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:26:43,181 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679452003181, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-21 21:26:43,181 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:26:43,181 Node[0] Epoch[23] Time cost=59.489
:::MLLOG {"namespace": "", "time_ms": 1679452003181, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21536.17982931251}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
2023-03-21 21:26:43,181 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679452003181, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-21 21:26:43,182 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:26:46,372 Node[0] Epoch[24] Batch [0-20]	Speed: 21493.05 samples/sec	accuracy=nan
2023-03-21 21:26:49,407 Node[0] Epoch[24] Batch [20-40]	Speed: 21513.14 samples/sec	accuracy=nan
2023-03-21 21:26:52,439 Node[0] Epoch[24] Batch [40-60]	Speed: 21530.36 samples/sec	accuracy=nan
2023-03-21 21:26:55,473 Node[0] Epoch[24] Batch [60-80]	Speed: 21515.62 samples/sec	accuracy=nan
2023-03-21 21:26:58,507 Node[0] Epoch[24] Batch [80-100]	Speed: 21518.58 samples/sec	accuracy=nan
2023-03-21 21:27:01,544 Node[0] Epoch[24] Batch [100-120]	Speed: 21493.59 samples/sec	accuracy=nan
2023-03-21 21:27:04,581 Node[0] Epoch[24] Batch [120-140]	Speed: 21496.38 samples/sec	accuracy=nan
2023-03-21 21:27:07,616 Node[0] Epoch[24] Batch [140-160]	Speed: 21508.20 samples/sec	accuracy=nan
2023-03-21 21:27:10,655 Node[0] Epoch[24] Batch [160-180]	Speed: 21481.02 samples/sec	accuracy=nan
2023-03-21 21:27:13,689 Node[0] Epoch[24] Batch [180-200]	Speed: 21510.78 samples/sec	accuracy=nan
2023-03-21 21:27:16,728 Node[0] Epoch[24] Batch [200-220]	Speed: 21484.75 samples/sec	accuracy=nan
2023-03-21 21:27:19,764 Node[0] Epoch[24] Batch [220-240]	Speed: 21503.99 samples/sec	accuracy=nan
2023-03-21 21:27:22,802 Node[0] Epoch[24] Batch [240-260]	Speed: 21488.40 samples/sec	accuracy=nan
2023-03-21 21:27:25,839 Node[0] Epoch[24] Batch [260-280]	Speed: 21490.30 samples/sec	accuracy=nan
2023-03-21 21:27:28,878 Node[0] Epoch[24] Batch [280-300]	Speed: 21483.01 samples/sec	accuracy=nan
2023-03-21 21:27:31,918 Node[0] Epoch[24] Batch [300-320]	Speed: 21473.07 samples/sec	accuracy=nan
2023-03-21 21:27:34,954 Node[0] Epoch[24] Batch [320-340]	Speed: 21502.14 samples/sec	accuracy=nan
2023-03-21 21:27:37,993 Node[0] Epoch[24] Batch [340-360]	Speed: 21480.25 samples/sec	accuracy=nan
2023-03-21 21:27:41,036 Node[0] Epoch[24] Batch [360-380]	Speed: 21450.05 samples/sec	accuracy=nan
2023-03-21 21:27:42,704 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:27:42,704 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:27:42,704 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:27:42,704 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:27:42,704 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:27:42,704 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:27:42,704 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679452062704, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-21 21:27:42,705 Node[0] Epoch[24] Time cost=59.524
:::MLLOG {"namespace": "", "time_ms": 1679452062705, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21523.688223624646}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679452062706, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-21 21:27:42,706 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:27:45,890 Node[0] Epoch[25] Batch [0-20]	Speed: 21543.81 samples/sec	accuracy=nan
2023-03-21 21:27:48,927 Node[0] Epoch[25] Batch [20-40]	Speed: 21492.87 samples/sec	accuracy=nan
2023-03-21 21:27:51,962 Node[0] Epoch[25] Batch [40-60]	Speed: 21511.96 samples/sec	accuracy=nan
2023-03-21 21:27:54,996 Node[0] Epoch[25] Batch [60-80]	Speed: 21516.13 samples/sec	accuracy=nan
2023-03-21 21:27:58,034 Node[0] Epoch[25] Batch [80-100]	Speed: 21485.50 samples/sec	accuracy=nan
2023-03-21 21:28:01,068 Node[0] Epoch[25] Batch [100-120]	Speed: 21514.11 samples/sec	accuracy=nan
2023-03-21 21:28:04,107 Node[0] Epoch[25] Batch [120-140]	Speed: 21486.19 samples/sec	accuracy=nan
2023-03-21 21:28:07,143 Node[0] Epoch[25] Batch [140-160]	Speed: 21500.20 samples/sec	accuracy=nan
2023-03-21 21:28:10,178 Node[0] Epoch[25] Batch [160-180]	Speed: 21504.65 samples/sec	accuracy=nan
2023-03-21 21:28:13,215 Node[0] Epoch[25] Batch [180-200]	Speed: 21498.65 samples/sec	accuracy=nan
2023-03-21 21:28:16,253 Node[0] Epoch[25] Batch [200-220]	Speed: 21486.55 samples/sec	accuracy=nan
2023-03-21 21:28:19,289 Node[0] Epoch[25] Batch [220-240]	Speed: 21504.33 samples/sec	accuracy=nan
2023-03-21 21:28:22,324 Node[0] Epoch[25] Batch [240-260]	Speed: 21509.22 samples/sec	accuracy=nan
2023-03-21 21:28:25,361 Node[0] Epoch[25] Batch [260-280]	Speed: 21491.71 samples/sec	accuracy=nan
2023-03-21 21:28:28,396 Node[0] Epoch[25] Batch [280-300]	Speed: 21513.04 samples/sec	accuracy=nan
2023-03-21 21:28:31,436 Node[0] Epoch[25] Batch [300-320]	Speed: 21474.45 samples/sec	accuracy=nan
2023-03-21 21:28:34,473 Node[0] Epoch[25] Batch [320-340]	Speed: 21491.40 samples/sec	accuracy=nan
2023-03-21 21:28:37,510 Node[0] Epoch[25] Batch [340-360]	Speed: 21494.19 samples/sec	accuracy=nan
2023-03-21 21:28:40,545 Node[0] Epoch[25] Batch [360-380]	Speed: 21510.49 samples/sec	accuracy=nan
2023-03-21 21:28:42,362 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:28:42,362 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:28:42,362 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:28:42,363 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:28:42,362 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:28:42,362 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679452122362, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-21 21:28:42,363 Node[0] Epoch[25] Time cost=59.657
:::MLLOG {"namespace": "", "time_ms": 1679452122363, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21475.480044904885}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679452122363, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-21 21:28:42,363 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:28:42,363 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:28:45,553 Node[0] Epoch[26] Batch [0-20]	Speed: 21501.85 samples/sec	accuracy=nan
2023-03-21 21:28:48,587 Node[0] Epoch[26] Batch [20-40]	Speed: 21515.63 samples/sec	accuracy=nan
2023-03-21 21:28:51,623 Node[0] Epoch[26] Batch [40-60]	Speed: 21500.74 samples/sec	accuracy=nan
2023-03-21 21:28:54,657 Node[0] Epoch[26] Batch [60-80]	Speed: 21516.15 samples/sec	accuracy=nan
2023-03-21 21:28:57,692 Node[0] Epoch[26] Batch [80-100]	Speed: 21510.11 samples/sec	accuracy=nan
2023-03-21 21:29:00,726 Node[0] Epoch[26] Batch [100-120]	Speed: 21517.18 samples/sec	accuracy=nan
2023-03-21 21:29:03,762 Node[0] Epoch[26] Batch [120-140]	Speed: 21498.60 samples/sec	accuracy=nan
2023-03-21 21:29:06,799 Node[0] Epoch[26] Batch [140-160]	Speed: 21495.04 samples/sec	accuracy=nan
2023-03-21 21:29:09,837 Node[0] Epoch[26] Batch [160-180]	Speed: 21490.94 samples/sec	accuracy=nan
2023-03-21 21:29:12,873 Node[0] Epoch[26] Batch [180-200]	Speed: 21497.10 samples/sec	accuracy=nan
2023-03-21 21:29:15,910 Node[0] Epoch[26] Batch [200-220]	Speed: 21496.89 samples/sec	accuracy=nan
2023-03-21 21:29:18,945 Node[0] Epoch[26] Batch [220-240]	Speed: 21512.07 samples/sec	accuracy=nan
2023-03-21 21:29:21,980 Node[0] Epoch[26] Batch [240-260]	Speed: 21502.68 samples/sec	accuracy=nan
2023-03-21 21:29:25,017 Node[0] Epoch[26] Batch [260-280]	Speed: 21500.12 samples/sec	accuracy=nan
2023-03-21 21:29:28,056 Node[0] Epoch[26] Batch [280-300]	Speed: 21478.63 samples/sec	accuracy=nan
2023-03-21 21:29:31,086 Node[0] Epoch[26] Batch [300-320]	Speed: 21545.41 samples/sec	accuracy=nan
2023-03-21 21:29:34,121 Node[0] Epoch[26] Batch [320-340]	Speed: 21511.33 samples/sec	accuracy=nan
2023-03-21 21:29:37,154 Node[0] Epoch[26] Batch [340-360]	Speed: 21516.98 samples/sec	accuracy=nan
2023-03-21 21:29:40,190 Node[0] Epoch[26] Batch [360-380]	Speed: 21507.54 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679452181855, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-21 21:29:41,856 Node[0] Epoch[26] Time cost=59.492
:::MLLOG {"namespace": "", "time_ms": 1679452181856, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21534.947363041665}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679452182003, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-21 21:29:43,465 Node[0] Epoch[26] Validation-accuracy=0.712800
2023-03-21 21:29:43,465 Node[0] Epoch[26] Validation-correct-count=4455.000000
2023-03-21 21:29:43,465 Node[0] Epoch[26] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679452183654, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
2023-03-21 21:29:43,654 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:29:43,654 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:29:43,654 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679452183654, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72504, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679452183654, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679452183654, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-21 21:29:43,654 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:29:43,654 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:29:43,654 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:29:43,654 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679452183655, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-21 21:29:43,655 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:29:46,712 Node[0] Epoch[27] Batch [0-20]	Speed: 21424.34 samples/sec	accuracy=nan
2023-03-21 21:29:49,759 Node[0] Epoch[27] Batch [20-40]	Speed: 21424.67 samples/sec	accuracy=nan
2023-03-21 21:29:52,803 Node[0] Epoch[27] Batch [40-60]	Speed: 21441.08 samples/sec	accuracy=nan
2023-03-21 21:29:55,851 Node[0] Epoch[27] Batch [60-80]	Speed: 21417.75 samples/sec	accuracy=nan
2023-03-21 21:29:58,896 Node[0] Epoch[27] Batch [80-100]	Speed: 21437.93 samples/sec	accuracy=nan
2023-03-21 21:30:01,944 Node[0] Epoch[27] Batch [100-120]	Speed: 21420.98 samples/sec	accuracy=nan
2023-03-21 21:30:04,999 Node[0] Epoch[27] Batch [120-140]	Speed: 21369.01 samples/sec	accuracy=nan
2023-03-21 21:30:08,058 Node[0] Epoch[27] Batch [140-160]	Speed: 21336.10 samples/sec	accuracy=nan
2023-03-21 21:30:11,127 Node[0] Epoch[27] Batch [160-180]	Speed: 21273.35 samples/sec	accuracy=nan
2023-03-21 21:30:14,185 Node[0] Epoch[27] Batch [180-200]	Speed: 21345.18 samples/sec	accuracy=nan
2023-03-21 21:30:17,233 Node[0] Epoch[27] Batch [200-220]	Speed: 21421.94 samples/sec	accuracy=nan
2023-03-21 21:30:20,280 Node[0] Epoch[27] Batch [220-240]	Speed: 21420.67 samples/sec	accuracy=nan
2023-03-21 21:30:23,327 Node[0] Epoch[27] Batch [240-260]	Speed: 21423.09 samples/sec	accuracy=nan
2023-03-21 21:30:26,377 Node[0] Epoch[27] Batch [260-280]	Speed: 21404.52 samples/sec	accuracy=nan
2023-03-21 21:30:29,422 Node[0] Epoch[27] Batch [280-300]	Speed: 21435.60 samples/sec	accuracy=nan
2023-03-21 21:30:34,708 Node[0] Epoch[27] Batch [300-320]	Speed: 12349.59 samples/sec	accuracy=nan
2023-03-21 21:30:37,741 Node[0] Epoch[27] Batch [320-340]	Speed: 21523.31 samples/sec	accuracy=nan
2023-03-21 21:30:40,783 Node[0] Epoch[27] Batch [340-360]	Speed: 21462.34 samples/sec	accuracy=nan
2023-03-21 21:30:43,820 Node[0] Epoch[27] Batch [360-380]	Speed: 21494.80 samples/sec	accuracy=nan
2023-03-21 21:30:45,641 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:30:45,641 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:30:45,641 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:30:45,641 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:30:45,641 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:30:45,642 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:30:45,642 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679452245642, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-21 21:30:45,643 Node[0] Epoch[27] Time cost=61.988
:::MLLOG {"namespace": "", "time_ms": 1679452245643, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20667.941148149228}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679452245643, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-21 21:30:45,643 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:30:48,838 Node[0] Epoch[28] Batch [0-20]	Speed: 21442.34 samples/sec	accuracy=nan
2023-03-21 21:30:51,883 Node[0] Epoch[28] Batch [20-40]	Speed: 21437.03 samples/sec	accuracy=nan
2023-03-21 21:30:54,927 Node[0] Epoch[28] Batch [40-60]	Speed: 21451.60 samples/sec	accuracy=nan
2023-03-21 21:30:57,970 Node[0] Epoch[28] Batch [60-80]	Speed: 21448.24 samples/sec	accuracy=nan
2023-03-21 21:31:01,016 Node[0] Epoch[28] Batch [80-100]	Speed: 21434.79 samples/sec	accuracy=nan
2023-03-21 21:31:04,065 Node[0] Epoch[28] Batch [100-120]	Speed: 21407.20 samples/sec	accuracy=nan
2023-03-21 21:31:07,114 Node[0] Epoch[28] Batch [120-140]	Speed: 21410.58 samples/sec	accuracy=nan
2023-03-21 21:31:10,172 Node[0] Epoch[28] Batch [140-160]	Speed: 21346.67 samples/sec	accuracy=nan
2023-03-21 21:31:13,230 Node[0] Epoch[28] Batch [160-180]	Speed: 21348.93 samples/sec	accuracy=nan
2023-03-21 21:31:16,278 Node[0] Epoch[28] Batch [180-200]	Speed: 21416.96 samples/sec	accuracy=nan
2023-03-21 21:31:19,329 Node[0] Epoch[28] Batch [200-220]	Speed: 21393.84 samples/sec	accuracy=nan
2023-03-21 21:31:22,377 Node[0] Epoch[28] Batch [220-240]	Speed: 21417.68 samples/sec	accuracy=nan
2023-03-21 21:31:25,423 Node[0] Epoch[28] Batch [240-260]	Speed: 21432.91 samples/sec	accuracy=nan
2023-03-21 21:31:28,471 Node[0] Epoch[28] Batch [260-280]	Speed: 21416.24 samples/sec	accuracy=nan
2023-03-21 21:31:31,516 Node[0] Epoch[28] Batch [280-300]	Speed: 21440.38 samples/sec	accuracy=nan
2023-03-21 21:31:34,563 Node[0] Epoch[28] Batch [300-320]	Speed: 21426.34 samples/sec	accuracy=nan
2023-03-21 21:31:37,608 Node[0] Epoch[28] Batch [320-340]	Speed: 21432.59 samples/sec	accuracy=nan
2023-03-21 21:31:40,656 Node[0] Epoch[28] Batch [340-360]	Speed: 21417.39 samples/sec	accuracy=nan
2023-03-21 21:31:43,705 Node[0] Epoch[28] Batch [360-380]	Speed: 21414.22 samples/sec	accuracy=nan
2023-03-21 21:31:45,378 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:31:45,378 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:31:45,378 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679452305378, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-21 21:31:45,379 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:31:45,379 Node[0] Epoch[28] Time cost=59.735
2023-03-21 21:31:45,379 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:31:45,379 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679452305379, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21447.34517419695}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
2023-03-21 21:31:45,379 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679452305379, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-21 21:31:45,379 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:31:48,579 Node[0] Epoch[29] Batch [0-20]	Speed: 21457.10 samples/sec	accuracy=nan
2023-03-21 21:31:51,625 Node[0] Epoch[29] Batch [20-40]	Speed: 21432.66 samples/sec	accuracy=nan
2023-03-21 21:31:54,674 Node[0] Epoch[29] Batch [40-60]	Speed: 21409.21 samples/sec	accuracy=nan
2023-03-21 21:31:57,723 Node[0] Epoch[29] Batch [60-80]	Speed: 21406.17 samples/sec	accuracy=nan
2023-03-21 21:32:00,774 Node[0] Epoch[29] Batch [80-100]	Speed: 21398.76 samples/sec	accuracy=nan
2023-03-21 21:32:03,827 Node[0] Epoch[29] Batch [100-120]	Speed: 21378.71 samples/sec	accuracy=nan
2023-03-21 21:32:06,876 Node[0] Epoch[29] Batch [120-140]	Speed: 21413.22 samples/sec	accuracy=nan
2023-03-21 21:32:09,928 Node[0] Epoch[29] Batch [140-160]	Speed: 21389.81 samples/sec	accuracy=nan
2023-03-21 21:32:12,977 Node[0] Epoch[29] Batch [160-180]	Speed: 21408.98 samples/sec	accuracy=nan
2023-03-21 21:32:16,025 Node[0] Epoch[29] Batch [180-200]	Speed: 21414.99 samples/sec	accuracy=nan
2023-03-21 21:32:19,075 Node[0] Epoch[29] Batch [200-220]	Speed: 21404.44 samples/sec	accuracy=nan
2023-03-21 21:32:22,126 Node[0] Epoch[29] Batch [220-240]	Speed: 21400.87 samples/sec	accuracy=nan
2023-03-21 21:32:25,176 Node[0] Epoch[29] Batch [240-260]	Speed: 21402.88 samples/sec	accuracy=nan
2023-03-21 21:32:28,223 Node[0] Epoch[29] Batch [260-280]	Speed: 21423.82 samples/sec	accuracy=nan
2023-03-21 21:32:31,271 Node[0] Epoch[29] Batch [280-300]	Speed: 21419.10 samples/sec	accuracy=nan
2023-03-21 21:32:36,538 Node[0] Epoch[29] Batch [300-320]	Speed: 12393.71 samples/sec	accuracy=nan
2023-03-21 21:32:39,567 Node[0] Epoch[29] Batch [320-340]	Speed: 21548.41 samples/sec	accuracy=nan
2023-03-21 21:32:42,607 Node[0] Epoch[29] Batch [340-360]	Speed: 21474.01 samples/sec	accuracy=nan
2023-03-21 21:32:45,647 Node[0] Epoch[29] Batch [360-380]	Speed: 21471.68 samples/sec	accuracy=nan
2023-03-21 21:32:47,474 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:32:47,474 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:32:47,474 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:32:47,474 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:32:47,474 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:32:47,474 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:32:47,474 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679452367474, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-21 21:32:47,475 Node[0] Epoch[29] Time cost=62.096
:::MLLOG {"namespace": "", "time_ms": 1679452367475, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20632.061824572203}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679452367476, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-21 21:32:47,476 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:32:50,677 Node[0] Epoch[30] Batch [0-20]	Speed: 21403.82 samples/sec	accuracy=nan
2023-03-21 21:32:53,722 Node[0] Epoch[30] Batch [20-40]	Speed: 21441.67 samples/sec	accuracy=nan
2023-03-21 21:32:56,766 Node[0] Epoch[30] Batch [40-60]	Speed: 21441.95 samples/sec	accuracy=nan
2023-03-21 21:32:59,813 Node[0] Epoch[30] Batch [60-80]	Speed: 21429.47 samples/sec	accuracy=nan
2023-03-21 21:33:02,867 Node[0] Epoch[30] Batch [80-100]	Speed: 21376.08 samples/sec	accuracy=nan
2023-03-21 21:33:05,923 Node[0] Epoch[30] Batch [100-120]	Speed: 21355.26 samples/sec	accuracy=nan
2023-03-21 21:33:08,981 Node[0] Epoch[30] Batch [120-140]	Speed: 21350.56 samples/sec	accuracy=nan
2023-03-21 21:33:12,029 Node[0] Epoch[30] Batch [140-160]	Speed: 21418.10 samples/sec	accuracy=nan
2023-03-21 21:33:15,073 Node[0] Epoch[30] Batch [160-180]	Speed: 21441.31 samples/sec	accuracy=nan
2023-03-21 21:33:18,119 Node[0] Epoch[30] Batch [180-200]	Speed: 21431.37 samples/sec	accuracy=nan
2023-03-21 21:33:21,162 Node[0] Epoch[30] Batch [200-220]	Speed: 21453.54 samples/sec	accuracy=nan
2023-03-21 21:33:24,208 Node[0] Epoch[30] Batch [220-240]	Speed: 21431.46 samples/sec	accuracy=nan
2023-03-21 21:33:27,256 Node[0] Epoch[30] Batch [240-260]	Speed: 21417.65 samples/sec	accuracy=nan
2023-03-21 21:33:30,302 Node[0] Epoch[30] Batch [260-280]	Speed: 21434.25 samples/sec	accuracy=nan
2023-03-21 21:33:33,348 Node[0] Epoch[30] Batch [280-300]	Speed: 21431.80 samples/sec	accuracy=nan
2023-03-21 21:33:40,882 Node[0] Epoch[30] Batch [300-320]	Speed: 8664.26 samples/sec	accuracy=nan
2023-03-21 21:33:43,908 Node[0] Epoch[30] Batch [320-340]	Speed: 21575.13 samples/sec	accuracy=nan
2023-03-21 21:33:46,950 Node[0] Epoch[30] Batch [340-360]	Speed: 21459.52 samples/sec	accuracy=nan
2023-03-21 21:33:49,997 Node[0] Epoch[30] Batch [360-380]	Speed: 21423.31 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679452431671, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-21 21:33:51,672 Node[0] Epoch[30] Time cost=64.196
:::MLLOG {"namespace": "", "time_ms": 1679452431672, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 19957.14035898768}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679452431817, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-21 21:33:53,470 Node[0] Epoch[30] Validation-accuracy=0.757760
2023-03-21 21:33:53,470 Node[0] Epoch[30] Validation-correct-count=4736.000000
2023-03-21 21:33:53,470 Node[0] Epoch[30] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679452433471, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679452433471, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.749, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679452433471, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679452433471, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-21 21:33:53,471 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:33:53,471 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:33:53,471 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679452433471, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-21 21:33:53,471 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:33:53,471 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:33:53,471 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:33:53,471 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:33:53,471 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:33:56,524 Node[0] Epoch[31] Batch [0-20]	Speed: 21467.81 samples/sec	accuracy=nan
2023-03-21 21:33:59,543 Node[0] Epoch[31] Batch [20-40]	Speed: 21620.38 samples/sec	accuracy=nan
2023-03-21 21:34:02,570 Node[0] Epoch[31] Batch [40-60]	Speed: 21570.10 samples/sec	accuracy=nan
2023-03-21 21:34:05,602 Node[0] Epoch[31] Batch [60-80]	Speed: 21527.99 samples/sec	accuracy=nan
2023-03-21 21:34:08,632 Node[0] Epoch[31] Batch [80-100]	Speed: 21546.75 samples/sec	accuracy=nan
2023-03-21 21:34:11,661 Node[0] Epoch[31] Batch [100-120]	Speed: 21549.92 samples/sec	accuracy=nan
2023-03-21 21:34:14,693 Node[0] Epoch[31] Batch [120-140]	Speed: 21532.18 samples/sec	accuracy=nan
2023-03-21 21:34:17,728 Node[0] Epoch[31] Batch [140-160]	Speed: 21508.62 samples/sec	accuracy=nan
2023-03-21 21:34:20,759 Node[0] Epoch[31] Batch [160-180]	Speed: 21537.72 samples/sec	accuracy=nan
2023-03-21 21:34:23,792 Node[0] Epoch[31] Batch [180-200]	Speed: 21522.86 samples/sec	accuracy=nan
2023-03-21 21:34:26,822 Node[0] Epoch[31] Batch [200-220]	Speed: 21540.63 samples/sec	accuracy=nan
2023-03-21 21:34:29,857 Node[0] Epoch[31] Batch [220-240]	Speed: 21510.17 samples/sec	accuracy=nan
2023-03-21 21:34:32,889 Node[0] Epoch[31] Batch [240-260]	Speed: 21533.34 samples/sec	accuracy=nan
2023-03-21 21:34:35,925 Node[0] Epoch[31] Batch [260-280]	Speed: 21500.75 samples/sec	accuracy=nan
2023-03-21 21:34:38,959 Node[0] Epoch[31] Batch [280-300]	Speed: 21516.73 samples/sec	accuracy=nan
2023-03-21 21:34:41,992 Node[0] Epoch[31] Batch [300-320]	Speed: 21521.90 samples/sec	accuracy=nan
2023-03-21 21:34:49,569 Node[0] Epoch[31] Batch [320-340]	Speed: 8616.01 samples/sec	accuracy=nan
2023-03-21 21:34:52,580 Node[0] Epoch[31] Batch [340-360]	Speed: 21677.81 samples/sec	accuracy=nan
2023-03-21 21:34:55,601 Node[0] Epoch[31] Batch [360-380]	Speed: 21608.15 samples/sec	accuracy=nan
2023-03-21 21:34:57,412 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:34:57,412 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:34:57,412 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:34:57,412 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:34:57,412 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:34:57,412 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:34:57,413 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679452497412, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-21 21:34:57,413 Node[0] Epoch[31] Time cost=63.942
:::MLLOG {"namespace": "", "time_ms": 1679452497413, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20036.37079216335}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679452497414, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-21 21:34:57,414 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:35:00,590 Node[0] Epoch[32] Batch [0-20]	Speed: 21582.56 samples/sec	accuracy=nan
2023-03-21 21:35:03,615 Node[0] Epoch[32] Batch [20-40]	Speed: 21580.01 samples/sec	accuracy=nan
2023-03-21 21:35:06,648 Node[0] Epoch[32] Batch [40-60]	Speed: 21520.96 samples/sec	accuracy=nan
2023-03-21 21:35:09,676 Node[0] Epoch[32] Batch [60-80]	Speed: 21555.72 samples/sec	accuracy=nan
2023-03-21 21:35:12,709 Node[0] Epoch[32] Batch [80-100]	Speed: 21523.23 samples/sec	accuracy=nan
2023-03-21 21:35:15,740 Node[0] Epoch[32] Batch [100-120]	Speed: 21539.14 samples/sec	accuracy=nan
2023-03-21 21:35:18,772 Node[0] Epoch[32] Batch [120-140]	Speed: 21528.28 samples/sec	accuracy=nan
2023-03-21 21:35:21,800 Node[0] Epoch[32] Batch [140-160]	Speed: 21559.69 samples/sec	accuracy=nan
2023-03-21 21:35:24,829 Node[0] Epoch[32] Batch [160-180]	Speed: 21554.16 samples/sec	accuracy=nan
2023-03-21 21:35:27,861 Node[0] Epoch[32] Batch [180-200]	Speed: 21532.65 samples/sec	accuracy=nan
2023-03-21 21:35:30,892 Node[0] Epoch[32] Batch [200-220]	Speed: 21533.03 samples/sec	accuracy=nan
2023-03-21 21:35:33,923 Node[0] Epoch[32] Batch [220-240]	Speed: 21539.45 samples/sec	accuracy=nan
2023-03-21 21:35:36,955 Node[0] Epoch[32] Batch [240-260]	Speed: 21529.74 samples/sec	accuracy=nan
2023-03-21 21:35:39,990 Node[0] Epoch[32] Batch [260-280]	Speed: 21509.41 samples/sec	accuracy=nan
2023-03-21 21:35:43,025 Node[0] Epoch[32] Batch [280-300]	Speed: 21507.20 samples/sec	accuracy=nan
2023-03-21 21:35:48,287 Node[0] Epoch[32] Batch [300-320]	Speed: 12406.39 samples/sec	accuracy=nan
2023-03-21 21:35:51,306 Node[0] Epoch[32] Batch [320-340]	Speed: 21621.24 samples/sec	accuracy=nan
2023-03-21 21:35:54,333 Node[0] Epoch[32] Batch [340-360]	Speed: 21570.83 samples/sec	accuracy=nan
2023-03-21 21:35:57,362 Node[0] Epoch[32] Batch [360-380]	Speed: 21545.28 samples/sec	accuracy=nan
2023-03-21 21:35:59,026 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:35:59,026 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:35:59,026 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:35:59,026 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:35:59,026 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679452559026, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-21 21:35:59,027 Node[0] Epoch[32] Time cost=61.613
2023-03-21 21:35:59,027 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679452559027, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20793.74513007017}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679452559028, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-21 21:35:59,028 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:35:59,028 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:36:02,213 Node[0] Epoch[33] Batch [0-20]	Speed: 21530.94 samples/sec	accuracy=nan
2023-03-21 21:36:05,245 Node[0] Epoch[33] Batch [20-40]	Speed: 21529.61 samples/sec	accuracy=nan
2023-03-21 21:36:08,278 Node[0] Epoch[33] Batch [40-60]	Speed: 21526.96 samples/sec	accuracy=nan
2023-03-21 21:36:11,308 Node[0] Epoch[33] Batch [60-80]	Speed: 21543.56 samples/sec	accuracy=nan
2023-03-21 21:36:14,341 Node[0] Epoch[33] Batch [80-100]	Speed: 21521.98 samples/sec	accuracy=nan
2023-03-21 21:36:17,377 Node[0] Epoch[33] Batch [100-120]	Speed: 21504.49 samples/sec	accuracy=nan
2023-03-21 21:36:20,406 Node[0] Epoch[33] Batch [120-140]	Speed: 21553.87 samples/sec	accuracy=nan
2023-03-21 21:36:23,443 Node[0] Epoch[33] Batch [140-160]	Speed: 21492.30 samples/sec	accuracy=nan
2023-03-21 21:36:26,482 Node[0] Epoch[33] Batch [160-180]	Speed: 21479.88 samples/sec	accuracy=nan
2023-03-21 21:36:29,519 Node[0] Epoch[33] Batch [180-200]	Speed: 21497.80 samples/sec	accuracy=nan
2023-03-21 21:36:32,547 Node[0] Epoch[33] Batch [200-220]	Speed: 21557.28 samples/sec	accuracy=nan
2023-03-21 21:36:35,587 Node[0] Epoch[33] Batch [220-240]	Speed: 21471.85 samples/sec	accuracy=nan
2023-03-21 21:36:38,625 Node[0] Epoch[33] Batch [240-260]	Speed: 21487.23 samples/sec	accuracy=nan
2023-03-21 21:36:41,659 Node[0] Epoch[33] Batch [260-280]	Speed: 21520.22 samples/sec	accuracy=nan
2023-03-21 21:36:44,693 Node[0] Epoch[33] Batch [280-300]	Speed: 21511.06 samples/sec	accuracy=nan
2023-03-21 21:36:49,983 Node[0] Epoch[33] Batch [300-320]	Speed: 12340.89 samples/sec	accuracy=nan
2023-03-21 21:36:53,006 Node[0] Epoch[33] Batch [320-340]	Speed: 21597.47 samples/sec	accuracy=nan
2023-03-21 21:36:56,029 Node[0] Epoch[33] Batch [340-360]	Speed: 21589.77 samples/sec	accuracy=nan
2023-03-21 21:36:59,061 Node[0] Epoch[33] Batch [360-380]	Speed: 21532.53 samples/sec	accuracy=nan
2023-03-21 21:37:00,875 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:37:00,875 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:37:00,875 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:37:00,875 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:37:00,875 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:37:00,875 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679452620875, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-21 21:37:00,876 Node[0] Epoch[33] Time cost=61.848
2023-03-21 21:37:00,876 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679452620876, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20714.71678286093}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679452620876, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-21 21:37:00,877 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:37:04,064 Node[0] Epoch[34] Batch [0-20]	Speed: 21501.33 samples/sec	accuracy=nan
2023-03-21 21:37:07,100 Node[0] Epoch[34] Batch [20-40]	Speed: 21500.47 samples/sec	accuracy=nan
2023-03-21 21:37:10,134 Node[0] Epoch[34] Batch [40-60]	Speed: 21520.31 samples/sec	accuracy=nan
2023-03-21 21:37:13,165 Node[0] Epoch[34] Batch [60-80]	Speed: 21535.18 samples/sec	accuracy=nan
2023-03-21 21:37:16,197 Node[0] Epoch[34] Batch [80-100]	Speed: 21528.60 samples/sec	accuracy=nan
2023-03-21 21:37:19,234 Node[0] Epoch[34] Batch [100-120]	Speed: 21497.06 samples/sec	accuracy=nan
2023-03-21 21:37:22,265 Node[0] Epoch[34] Batch [120-140]	Speed: 21538.02 samples/sec	accuracy=nan
2023-03-21 21:37:25,298 Node[0] Epoch[34] Batch [140-160]	Speed: 21522.55 samples/sec	accuracy=nan
2023-03-21 21:37:28,338 Node[0] Epoch[34] Batch [160-180]	Speed: 21471.27 samples/sec	accuracy=nan
2023-03-21 21:37:31,373 Node[0] Epoch[34] Batch [180-200]	Speed: 21510.45 samples/sec	accuracy=nan
2023-03-21 21:37:34,410 Node[0] Epoch[34] Batch [200-220]	Speed: 21494.35 samples/sec	accuracy=nan
2023-03-21 21:37:37,443 Node[0] Epoch[34] Batch [220-240]	Speed: 21523.97 samples/sec	accuracy=nan
2023-03-21 21:37:40,480 Node[0] Epoch[34] Batch [240-260]	Speed: 21493.45 samples/sec	accuracy=nan
2023-03-21 21:37:43,512 Node[0] Epoch[34] Batch [260-280]	Speed: 21534.70 samples/sec	accuracy=nan
2023-03-21 21:37:46,549 Node[0] Epoch[34] Batch [280-300]	Speed: 21492.53 samples/sec	accuracy=nan
2023-03-21 21:37:49,583 Node[0] Epoch[34] Batch [300-320]	Speed: 21520.85 samples/sec	accuracy=nan
2023-03-21 21:37:52,617 Node[0] Epoch[34] Batch [320-340]	Speed: 21509.51 samples/sec	accuracy=nan
2023-03-21 21:37:55,653 Node[0] Epoch[34] Batch [340-360]	Speed: 21504.80 samples/sec	accuracy=nan
2023-03-21 21:37:58,688 Node[0] Epoch[34] Batch [360-380]	Speed: 21510.61 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679452680512, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-21 21:38:00,512 Node[0] Epoch[34] Time cost=59.636
:::MLLOG {"namespace": "", "time_ms": 1679452680513, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21483.127138950586}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679452680659, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-21 21:38:02,108 Node[0] Epoch[34] Validation-accuracy=0.764160
2023-03-21 21:38:02,109 Node[0] Epoch[34] Validation-correct-count=4776.000000
2023-03-21 21:38:02,109 Node[0] Epoch[34] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679452682283, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679452682284, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76088, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679452682284, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679452682284, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679452699
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 09:38:19 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 09:38:19 PM'
ENDING TIMING RUN AT 2023-03-21 09:38:19 PM
+ result=2264
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2264,root,2023-03-21 09:00:35 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2264,root,2023-03-21 09:00:35 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679452699
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 09:38:19 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 09:38:19 PM'
ENDING TIMING RUN AT 2023-03-21 09:38:19 PM
+ result=2264
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2264,root,2023-03-21 09:00:35 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2264,root,2023-03-21 09:00:35 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679452699
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 09:38:19 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 09:38:19 PM'
ENDING TIMING RUN AT 2023-03-21 09:38:19 PM
+ result=2264
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2264,root,2023-03-21 09:00:35 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2264,root,2023-03-21 09:00:35 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679452699
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 09:38:19 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 09:38:19 PM'
ENDING TIMING RUN AT 2023-03-21 09:38:19 PM
+ result=2264
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2264,root,2023-03-21 09:00:35 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2264,root,2023-03-21 09:00:35 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679452700
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 09:38:20 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 09:38:20 PM'
ENDING TIMING RUN AT 2023-03-21 09:38:20 PM
+ result=2265
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 09:00:35 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 09:00:35 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679452700
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 09:38:20 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 09:38:20 PM'
ENDING TIMING RUN AT 2023-03-21 09:38:20 PM
+ result=2265
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 09:00:35 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 09:00:35 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679452700
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 09:38:20 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 09:38:20 PM'
ENDING TIMING RUN AT 2023-03-21 09:38:20 PM
+ result=2265
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 09:00:35 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 09:00:35 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679452700
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 09:38:20 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 09:38:20 PM'
ENDING TIMING RUN AT 2023-03-21 09:38:20 PM
+ result=2265
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 09:00:35 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 09:00:35 PM'
+ export PROFILE=0
+ PROFILE=0
