+ echo 'Beginning trial 1 of 5'
Beginning trial 1 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node044 node045 '
+ echo 'hosts=node044 node045 '
hosts=node044 node045 
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679448102278, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679448102313, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679448102315, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679448102316, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679448102317, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679448115406, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679448120472, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679448120507, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679448120509, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679448120510, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679448120512, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node045 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node045
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679448133330, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=9011
+ SEED=9011
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node045: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export LR=12.5
++ LR=12.5
++ export LR=12.5
++ LR=12.5
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export LR=12.5
++ LR=12.5
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export MOM=0.9
++ MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export WD=5.0e-05
++ WD=5.0e-05
++ export LARSETA=0.001
++ LARSETA=0.001
++ export MOM=0.9
++ MOM=0.9
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DGXNNODES=2
++ DGXNNODES=2
++ export DGXNNODES=2
++ DGXNNODES=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export WALLTIME=00:40:00
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ WALLTIME=00:40:00
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date +%s
++ date +%s
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+ start=1679448134
+ start=1679448134
+ start=1679448134
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 08:22:14 PM'
+ start_fmt='2023-03-21 08:22:14 PM'
+ start_fmt='2023-03-21 08:22:14 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 08:22:14 PM'
STARTING TIMING RUN AT 2023-03-21 08:22:14 PM
+ readonly global_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-21 08:22:14 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 08:22:14 PM'
+ global_rank=0
STARTING TIMING RUN AT 2023-03-21 08:22:14 PM
STARTING TIMING RUN AT 2023-03-21 08:22:14 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ SLURM_NTASKS_PER_NODE=4
+ readonly local_rank=0
+ local_rank=0
+ INPUT_BATCH_MULTIPLIER=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ SLURM_NTASKS_PER_NODE=4
+ KVSTORE=horovod
+ INPUT_BATCH_MULTIPLIER=1
+ LR=12.5
+ OPTIMIZER=sgdwfastlars
+ KVSTORE=horovod
+ MOM=0.9
+ BATCHSIZE=408
+ LRSCHED=pow2
+ LR=12.5
+ INPUT_BATCH_MULTIPLIER=1
+ WARMUP_EPOCHS=2
+ MOM=0.9
+ LARSETA=0.001
+ KVSTORE=horovod
+ LRSCHED=pow2
+ DALI_HW_DECODER_LOAD=0
+ LR=12.5
+ WD=5.0e-05
+ WARMUP_EPOCHS=2
+ MOM=0.9
+ LARSETA=0.001
+ LABELSMOOTHING=0.1
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ SEED=9011
+ EVAL_OFFSET=2
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LARSETA=0.001
+ EVAL_PERIOD=4
+ LABELSMOOTHING=0.1
+ DALI_HW_DECODER_LOAD=0
+ DALI_PREFETCH_QUEUE=5
+ SEED=9011
+ EVAL_OFFSET=2
+ WD=5.0e-05
+ DALI_NVJPEG_MEMPADDING=256
+ LABELSMOOTHING=0.1
+ EVAL_PERIOD=4
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ SEED=9011
+ EVAL_OFFSET=2
+ DALI_ROI_DECODE=1
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ EVAL_PERIOD=4
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_THREADS=6
+ DALI_PREFETCH_QUEUE=5
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_CACHE_SIZE=0
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_ROI_DECODE=1
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_THREADS=6
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_CACHE_SIZE=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_ROI_DECODE=1
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_DONT_USE_MMAP=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_DECODER_BUFFER_HINT=1315942
+ NUMEPOCHS=37
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_CROP_BUFFER_HINT=165581
+ NETWORK=resnet-v1b-stats-fl
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DECODER_BUFFER_HINT=1315942
+ BN_GROUP=1
+ PROFILE=0
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_DONT_USE_MMAP=0
+ PROFILE_EXCEL=0
+ NUMEPOCHS=37
+ NODALI=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ NETWORK=resnet-v1b-stats-fl
+ NUMEXAMPLES=
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ PROFILE_ALL_LOCAL_RANKS=0
+ BN_GROUP=1
+ THR=0.759
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NETWORK=resnet-v1b-stats-fl
+ NODALI=0
+ BN_GROUP=1
+ PROFILE=0
+ NUMEXAMPLES=
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ PROFILE_EXCEL=0
+ PROFILE_ALL_LOCAL_RANKS=0
+ NODALI=0
+ echo 'running benchmark'
+ export NGPUS=4
+ THR=0.759
running benchmark
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ NGPUS=4
+ [[ 0 == 1 ]]
+ THR=0.759
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DATAROOT=/data
+ echo 'running benchmark'
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ [[ 0 -ge 1 ]]
running benchmark
+ export NGPUS=4
+ NGPUS=4
running benchmark
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 -ge 1 ]]
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ seq 0 3
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ seq 0 3
++ seq 0 3
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ tr '\n' ,
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ sed 's/,$//'
++ date +%s
+ start=1679448134
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ start_fmt='2023-03-21 08:22:14 PM'
+ [[ '' -ge 1 ]]
+ echo 'STARTING TIMING RUN AT 2023-03-21 08:22:14 PM'
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
STARTING TIMING RUN AT 2023-03-21 08:22:14 PM
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ readonly global_rank=0
+ global_rank=0
+ [[ '' -ge 1 ]]
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=9011
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
++ date +%s
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
++ date +%s
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ date +%s
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+ start=1679448134
+ start=1679448134
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start=1679448134
++ date '+%Y-%m-%d %r'
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+ start_fmt='2023-03-21 08:22:14 PM'
+ start_fmt='2023-03-21 08:22:14 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 08:22:14 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 08:22:14 PM'
STARTING TIMING RUN AT 2023-03-21 08:22:14 PM
STARTING TIMING RUN AT 2023-03-21 08:22:14 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ LABELSMOOTHING=0.1
+ SEED=9011
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ SEED=9011
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ start_fmt='2023-03-21 08:22:14 PM'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ echo 'STARTING TIMING RUN AT 2023-03-21 08:22:14 PM'
STARTING TIMING RUN AT 2023-03-21 08:22:14 PM
+ [[ 0 -ge 1 ]]
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=9011
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679448134
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 08:22:14 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 08:22:14 PM'
STARTING TIMING RUN AT 2023-03-21 08:22:14 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=9011
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 9011 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node044:117250] MCW rank 3 is not bound (or bound to all available processors)
[node044:117249] MCW rank 2 is not bound (or bound to all available processors)
[node044:117248] MCW rank 0 is not bound (or bound to all available processors)
[node044:117247] MCW rank 1 is not bound (or bound to all available processors)
[node045:108900] MCW rank 6 is not bound (or bound to all available processors)
[node045:108898] MCW rank 4 is not bound (or bound to all available processors)
[node045:108899] MCW rank 5 is not bound (or bound to all available processors)
[node045:108905] MCW rank 7 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679448139249, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[20:22:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[20:22:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[20:22:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[20:22:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[20:22:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[20:22:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[20:22:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[20:22:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679448146651, "event_type": "POINT_IN_TIME", "key": "seed", "value": 9011, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679448148257, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 408, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[20:22:32] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[20:22:33] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[20:22:33] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[20:22:33] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679448153321, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153322, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153322, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153322, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153323, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153323, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153323, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153323, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153324, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153324, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153324, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153324, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153325, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153325, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153325, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153325, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153325, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153326, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153326, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153326, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153326, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153327, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153327, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153327, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153327, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153328, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153328, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153328, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153328, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153329, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153329, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153329, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153329, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153330, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153330, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153330, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153330, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153330, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153331, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153331, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153331, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153331, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153332, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153332, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153332, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153332, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153333, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153333, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153333, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153333, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153334, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153334, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153334, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153334, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153334, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153335, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153335, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153335, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153335, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153336, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153336, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153336, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153336, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153337, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153337, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153337, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153337, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153338, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153338, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153338, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153338, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153338, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153339, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153339, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153339, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153339, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153340, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153340, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153340, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153341, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153341, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153341, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153341, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153342, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153342, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153342, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153342, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153342, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153343, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153343, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153343, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153343, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153344, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153344, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153344, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153344, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153345, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153345, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153345, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153345, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153346, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153346, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153346, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153346, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153347, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153347, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153347, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153347, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153348, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153348, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153348, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153348, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153349, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153349, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153349, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153349, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153350, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153350, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153350, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153350, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153351, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153351, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153351, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153351, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153351, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153352, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153352, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153352, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153352, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153353, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153353, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153353, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153353, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153354, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153354, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153354, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153354, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153355, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153355, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153355, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153355, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153355, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153356, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153356, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153356, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153356, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153357, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153357, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153357, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153357, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153357, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153358, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153358, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153358, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153358, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153359, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153359, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153359, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153359, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153360, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679448153360, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[20:22:33] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[20:22:33] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[20:22:33] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[20:22:33] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 20:22:35,053 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=6448, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 20:22:35,053 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=45683, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 20:22:35,053 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=51580, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 20:22:35,053 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=58535, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 20:22:35,053 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=20801, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 20:22:35,053 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=21176, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 20:22:35,053 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=24944, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 20:22:35,055 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=15118, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679448155053, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679448155055, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679448155055, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679448155056, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679448155056, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 408, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679448155056, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679448155056, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679448155056, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679448155056, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679448155056, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679448155056, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679448155056, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679448155056, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679448155056, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679448155056, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679448155056, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679448155056, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679448155057, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 12.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679448155057, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679448155057, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679448242699, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679448242700, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679448242700, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679448243320, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679448243463, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679448243464, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-21 20:24:06,521 Node[0] Epoch[0] Batch [0-20]	Speed: 21433.24 samples/sec	accuracy=nan
2023-03-21 20:24:09,541 Node[0] Epoch[0] Batch [20-40]	Speed: 21615.45 samples/sec	accuracy=nan
2023-03-21 20:24:12,575 Node[0] Epoch[0] Batch [40-60]	Speed: 21517.85 samples/sec	accuracy=nan
2023-03-21 20:24:15,615 Node[0] Epoch[0] Batch [60-80]	Speed: 21472.57 samples/sec	accuracy=nan
2023-03-21 20:24:18,661 Node[0] Epoch[0] Batch [80-100]	Speed: 21428.81 samples/sec	accuracy=nan
2023-03-21 20:24:21,710 Node[0] Epoch[0] Batch [100-120]	Speed: 21413.67 samples/sec	accuracy=nan
2023-03-21 20:24:24,765 Node[0] Epoch[0] Batch [120-140]	Speed: 21364.09 samples/sec	accuracy=nan
2023-03-21 20:24:27,820 Node[0] Epoch[0] Batch [140-160]	Speed: 21374.11 samples/sec	accuracy=nan
2023-03-21 20:24:30,886 Node[0] Epoch[0] Batch [160-180]	Speed: 21290.91 samples/sec	accuracy=nan
2023-03-21 20:24:33,965 Node[0] Epoch[0] Batch [180-200]	Speed: 21202.39 samples/sec	accuracy=nan
2023-03-21 20:24:37,044 Node[0] Epoch[0] Batch [200-220]	Speed: 21200.32 samples/sec	accuracy=nan
2023-03-21 20:24:46,982 Node[0] Epoch[0] Batch [220-240]	Speed: 6568.69 samples/sec	accuracy=nan
2023-03-21 20:24:54,861 Node[0] Epoch[0] Batch [240-260]	Speed: 8284.83 samples/sec	accuracy=nan
2023-03-21 20:24:57,899 Node[0] Epoch[0] Batch [260-280]	Speed: 21487.29 samples/sec	accuracy=nan
2023-03-21 20:25:00,963 Node[0] Epoch[0] Batch [280-300]	Speed: 21312.03 samples/sec	accuracy=nan
2023-03-21 20:25:04,027 Node[0] Epoch[0] Batch [300-320]	Speed: 21302.76 samples/sec	accuracy=nan
2023-03-21 20:25:07,095 Node[0] Epoch[0] Batch [320-340]	Speed: 21275.99 samples/sec	accuracy=nan
2023-03-21 20:25:10,232 Node[0] Epoch[0] Batch [340-360]	Speed: 20809.89 samples/sec	accuracy=nan
2023-03-21 20:25:13,364 Node[0] Epoch[0] Batch [360-380]	Speed: 20846.81 samples/sec	accuracy=nan
2023-03-21 20:25:15,280 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:25:15,281 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:25:15,280 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:25:15,281 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448315280, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-21 20:25:15,281 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:25:15,281 Node[0] Epoch[0] Time cost=71.817
2023-03-21 20:25:15,281 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448315281, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 17839.361751705612}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-21 20:25:15,281 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448315282, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-21 20:25:15,282 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:25:18,568 Node[0] Epoch[1] Batch [0-20]	Speed: 20855.88 samples/sec	accuracy=nan
2023-03-21 20:25:21,711 Node[0] Epoch[1] Batch [20-40]	Speed: 20772.82 samples/sec	accuracy=nan
2023-03-21 20:25:24,878 Node[0] Epoch[1] Batch [40-60]	Speed: 20613.70 samples/sec	accuracy=nan
2023-03-21 20:25:28,019 Node[0] Epoch[1] Batch [60-80]	Speed: 20779.99 samples/sec	accuracy=nan
2023-03-21 20:25:31,147 Node[0] Epoch[1] Batch [80-100]	Speed: 20868.71 samples/sec	accuracy=nan
2023-03-21 20:25:34,320 Node[0] Epoch[1] Batch [100-120]	Speed: 20575.94 samples/sec	accuracy=nan
2023-03-21 20:25:37,472 Node[0] Epoch[1] Batch [120-140]	Speed: 20710.97 samples/sec	accuracy=nan
2023-03-21 20:25:40,616 Node[0] Epoch[1] Batch [140-160]	Speed: 20764.87 samples/sec	accuracy=nan
2023-03-21 20:25:43,721 Node[0] Epoch[1] Batch [160-180]	Speed: 21021.26 samples/sec	accuracy=nan
2023-03-21 20:25:46,892 Node[0] Epoch[1] Batch [180-200]	Speed: 20587.67 samples/sec	accuracy=nan
2023-03-21 20:25:50,021 Node[0] Epoch[1] Batch [200-220]	Speed: 20860.74 samples/sec	accuracy=nan
2023-03-21 20:25:53,130 Node[0] Epoch[1] Batch [220-240]	Speed: 20999.97 samples/sec	accuracy=nan
2023-03-21 20:25:56,220 Node[0] Epoch[1] Batch [240-260]	Speed: 21122.71 samples/sec	accuracy=nan
2023-03-21 20:25:59,352 Node[0] Epoch[1] Batch [260-280]	Speed: 20845.41 samples/sec	accuracy=nan
2023-03-21 20:26:02,472 Node[0] Epoch[1] Batch [280-300]	Speed: 20920.17 samples/sec	accuracy=nan
2023-03-21 20:26:05,597 Node[0] Epoch[1] Batch [300-320]	Speed: 20894.88 samples/sec	accuracy=nan
2023-03-21 20:26:08,670 Node[0] Epoch[1] Batch [320-340]	Speed: 21241.89 samples/sec	accuracy=nan
2023-03-21 20:26:11,792 Node[0] Epoch[1] Batch [340-360]	Speed: 20911.19 samples/sec	accuracy=nan
2023-03-21 20:26:14,874 Node[0] Epoch[1] Batch [360-380]	Speed: 21178.28 samples/sec	accuracy=nan
2023-03-21 20:26:16,725 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:26:16,726 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:26:16,726 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:26:16,726 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:26:16,726 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:26:16,726 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:26:16,726 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448376726, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-21 20:26:16,727 Node[0] Epoch[1] Time cost=61.445
:::MLLOG {"namespace": "", "time_ms": 1679448376727, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20850.689728406887}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679448376728, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-21 20:26:16,728 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:26:19,963 Node[0] Epoch[2] Batch [0-20]	Speed: 21187.36 samples/sec	accuracy=nan
2023-03-21 20:26:23,035 Node[0] Epoch[2] Batch [20-40]	Speed: 21248.76 samples/sec	accuracy=nan
2023-03-21 20:26:26,113 Node[0] Epoch[2] Batch [40-60]	Speed: 21215.44 samples/sec	accuracy=nan
2023-03-21 20:26:29,186 Node[0] Epoch[2] Batch [60-80]	Speed: 21243.32 samples/sec	accuracy=nan
2023-03-21 20:26:32,258 Node[0] Epoch[2] Batch [80-100]	Speed: 21247.67 samples/sec	accuracy=nan
2023-03-21 20:26:35,325 Node[0] Epoch[2] Batch [100-120]	Speed: 21283.05 samples/sec	accuracy=nan
2023-03-21 20:26:38,399 Node[0] Epoch[2] Batch [120-140]	Speed: 21238.14 samples/sec	accuracy=nan
2023-03-21 20:26:41,461 Node[0] Epoch[2] Batch [140-160]	Speed: 21318.97 samples/sec	accuracy=nan
2023-03-21 20:26:44,523 Node[0] Epoch[2] Batch [160-180]	Speed: 21318.24 samples/sec	accuracy=nan
2023-03-21 20:26:47,588 Node[0] Epoch[2] Batch [180-200]	Speed: 21299.62 samples/sec	accuracy=nan
2023-03-21 20:26:50,653 Node[0] Epoch[2] Batch [200-220]	Speed: 21295.62 samples/sec	accuracy=nan
2023-03-21 20:26:53,713 Node[0] Epoch[2] Batch [220-240]	Speed: 21336.66 samples/sec	accuracy=nan
2023-03-21 20:26:56,772 Node[0] Epoch[2] Batch [240-260]	Speed: 21334.90 samples/sec	accuracy=nan
2023-03-21 20:26:59,825 Node[0] Epoch[2] Batch [260-280]	Speed: 21383.75 samples/sec	accuracy=nan
2023-03-21 20:27:02,880 Node[0] Epoch[2] Batch [280-300]	Speed: 21373.89 samples/sec	accuracy=nan
2023-03-21 20:27:05,934 Node[0] Epoch[2] Batch [300-320]	Speed: 21368.13 samples/sec	accuracy=nan
2023-03-21 20:27:08,989 Node[0] Epoch[2] Batch [320-340]	Speed: 21370.04 samples/sec	accuracy=nan
2023-03-21 20:27:12,052 Node[0] Epoch[2] Batch [340-360]	Speed: 21315.15 samples/sec	accuracy=nan
2023-03-21 20:27:15,111 Node[0] Epoch[2] Batch [360-380]	Speed: 21339.66 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679448436787, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-21 20:27:16,788 Node[0] Epoch[2] Time cost=60.060
:::MLLOG {"namespace": "", "time_ms": 1679448436788, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21331.35469084591}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
2023-03-21 20:27:16,934 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448436934, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-21 20:27:16,934 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:27:16,933 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:27:16,934 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:27:16,934 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:27:16,934 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:27:16,934 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:27:16,934 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:27:18,289 Node[0] Epoch[2] Validation-accuracy=0.333280
2023-03-21 20:27:18,289 Node[0] Epoch[2] Validation-correct-count=2083.000000
2023-03-21 20:27:18,289 Node[0] Epoch[2] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679448438504, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-21 20:27:18,505 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:27:18,505 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448438505, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.32638, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679448438505, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1679448438505, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-21 20:27:18,505 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:27:18,505 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448438505, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-21 20:27:18,505 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:27:18,505 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:27:18,505 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:27:18,505 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:27:21,574 Node[0] Epoch[3] Batch [0-20]	Speed: 21329.87 samples/sec	accuracy=nan
2023-03-21 20:27:24,620 Node[0] Epoch[3] Batch [20-40]	Speed: 21428.97 samples/sec	accuracy=nan
2023-03-21 20:27:27,669 Node[0] Epoch[3] Batch [40-60]	Speed: 21413.53 samples/sec	accuracy=nan
2023-03-21 20:27:30,725 Node[0] Epoch[3] Batch [60-80]	Speed: 21357.48 samples/sec	accuracy=nan
2023-03-21 20:27:33,783 Node[0] Epoch[3] Batch [80-100]	Speed: 21354.30 samples/sec	accuracy=nan
2023-03-21 20:27:36,831 Node[0] Epoch[3] Batch [100-120]	Speed: 21413.75 samples/sec	accuracy=nan
2023-03-21 20:27:39,873 Node[0] Epoch[3] Batch [120-140]	Speed: 21457.72 samples/sec	accuracy=nan
2023-03-21 20:27:42,919 Node[0] Epoch[3] Batch [140-160]	Speed: 21430.85 samples/sec	accuracy=nan
2023-03-21 20:27:45,965 Node[0] Epoch[3] Batch [160-180]	Speed: 21436.31 samples/sec	accuracy=nan
2023-03-21 20:27:49,005 Node[0] Epoch[3] Batch [180-200]	Speed: 21470.51 samples/sec	accuracy=nan
2023-03-21 20:27:52,053 Node[0] Epoch[3] Batch [200-220]	Speed: 21418.65 samples/sec	accuracy=nan
2023-03-21 20:27:55,093 Node[0] Epoch[3] Batch [220-240]	Speed: 21472.11 samples/sec	accuracy=nan
2023-03-21 20:27:58,137 Node[0] Epoch[3] Batch [240-260]	Speed: 21449.44 samples/sec	accuracy=nan
2023-03-21 20:28:01,179 Node[0] Epoch[3] Batch [260-280]	Speed: 21453.60 samples/sec	accuracy=nan
2023-03-21 20:28:04,225 Node[0] Epoch[3] Batch [280-300]	Speed: 21433.85 samples/sec	accuracy=nan
2023-03-21 20:28:07,270 Node[0] Epoch[3] Batch [300-320]	Speed: 21441.34 samples/sec	accuracy=nan
2023-03-21 20:28:10,315 Node[0] Epoch[3] Batch [320-340]	Speed: 21435.05 samples/sec	accuracy=nan
2023-03-21 20:28:13,357 Node[0] Epoch[3] Batch [340-360]	Speed: 21461.23 samples/sec	accuracy=nan
2023-03-21 20:28:16,399 Node[0] Epoch[3] Batch [360-380]	Speed: 21457.56 samples/sec	accuracy=nan
2023-03-21 20:28:18,220 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:28:18,221 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:28:18,221 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:28:18,221 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:28:18,221 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:28:18,221 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:28:18,221 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448498221, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-21 20:28:18,222 Node[0] Epoch[3] Time cost=59.717
:::MLLOG {"namespace": "", "time_ms": 1679448498222, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21454.04875436252}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679448498223, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-21 20:28:18,223 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:28:21,417 Node[0] Epoch[4] Batch [0-20]	Speed: 21450.90 samples/sec	accuracy=nan
2023-03-21 20:28:24,462 Node[0] Epoch[4] Batch [20-40]	Speed: 21436.69 samples/sec	accuracy=nan
2023-03-21 20:28:27,505 Node[0] Epoch[4] Batch [40-60]	Speed: 21453.84 samples/sec	accuracy=nan
2023-03-21 20:28:30,553 Node[0] Epoch[4] Batch [60-80]	Speed: 21414.32 samples/sec	accuracy=nan
2023-03-21 20:28:33,594 Node[0] Epoch[4] Batch [80-100]	Speed: 21467.44 samples/sec	accuracy=nan
2023-03-21 20:28:36,637 Node[0] Epoch[4] Batch [100-120]	Speed: 21457.43 samples/sec	accuracy=nan
2023-03-21 20:28:39,682 Node[0] Epoch[4] Batch [120-140]	Speed: 21433.83 samples/sec	accuracy=nan
2023-03-21 20:28:42,728 Node[0] Epoch[4] Batch [140-160]	Speed: 21433.51 samples/sec	accuracy=nan
2023-03-21 20:28:45,775 Node[0] Epoch[4] Batch [160-180]	Speed: 21426.35 samples/sec	accuracy=nan
2023-03-21 20:28:48,820 Node[0] Epoch[4] Batch [180-200]	Speed: 21435.39 samples/sec	accuracy=nan
2023-03-21 20:28:51,865 Node[0] Epoch[4] Batch [200-220]	Speed: 21437.01 samples/sec	accuracy=nan
2023-03-21 20:28:54,909 Node[0] Epoch[4] Batch [220-240]	Speed: 21449.47 samples/sec	accuracy=nan
2023-03-21 20:28:57,952 Node[0] Epoch[4] Batch [240-260]	Speed: 21448.14 samples/sec	accuracy=nan
2023-03-21 20:29:01,000 Node[0] Epoch[4] Batch [260-280]	Speed: 21419.92 samples/sec	accuracy=nan
2023-03-21 20:29:04,042 Node[0] Epoch[4] Batch [280-300]	Speed: 21461.72 samples/sec	accuracy=nan
2023-03-21 20:29:07,082 Node[0] Epoch[4] Batch [300-320]	Speed: 21470.73 samples/sec	accuracy=nan
2023-03-21 20:29:10,128 Node[0] Epoch[4] Batch [320-340]	Speed: 21429.91 samples/sec	accuracy=nan
2023-03-21 20:29:13,171 Node[0] Epoch[4] Batch [340-360]	Speed: 21451.96 samples/sec	accuracy=nan
2023-03-21 20:29:16,212 Node[0] Epoch[4] Batch [360-380]	Speed: 21468.64 samples/sec	accuracy=nan
2023-03-21 20:29:17,880 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:29:17,880 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:29:17,880 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:29:17,880 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:29:17,881 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448557880, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-21 20:29:17,881 Node[0] Epoch[4] Time cost=59.658
:::MLLOG {"namespace": "", "time_ms": 1679448557881, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21475.129707887572}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
2023-03-21 20:29:17,880 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448557881, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-21 20:29:17,881 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:29:17,881 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:29:21,074 Node[0] Epoch[5] Batch [0-20]	Speed: 21497.59 samples/sec	accuracy=nan
2023-03-21 20:29:24,115 Node[0] Epoch[5] Batch [20-40]	Speed: 21464.00 samples/sec	accuracy=nan
2023-03-21 20:29:27,155 Node[0] Epoch[5] Batch [40-60]	Speed: 21475.47 samples/sec	accuracy=nan
2023-03-21 20:29:30,201 Node[0] Epoch[5] Batch [60-80]	Speed: 21427.35 samples/sec	accuracy=nan
2023-03-21 20:29:33,241 Node[0] Epoch[5] Batch [80-100]	Speed: 21476.32 samples/sec	accuracy=nan
2023-03-21 20:29:36,285 Node[0] Epoch[5] Batch [100-120]	Speed: 21445.85 samples/sec	accuracy=nan
2023-03-21 20:29:39,329 Node[0] Epoch[5] Batch [120-140]	Speed: 21445.48 samples/sec	accuracy=nan
2023-03-21 20:29:42,371 Node[0] Epoch[5] Batch [140-160]	Speed: 21456.22 samples/sec	accuracy=nan
2023-03-21 20:29:45,414 Node[0] Epoch[5] Batch [160-180]	Speed: 21456.54 samples/sec	accuracy=nan
2023-03-21 20:29:48,453 Node[0] Epoch[5] Batch [180-200]	Speed: 21477.27 samples/sec	accuracy=nan
2023-03-21 20:29:51,494 Node[0] Epoch[5] Batch [200-220]	Speed: 21467.40 samples/sec	accuracy=nan
2023-03-21 20:29:54,538 Node[0] Epoch[5] Batch [220-240]	Speed: 21447.68 samples/sec	accuracy=nan
2023-03-21 20:29:57,583 Node[0] Epoch[5] Batch [240-260]	Speed: 21440.71 samples/sec	accuracy=nan
2023-03-21 20:30:00,625 Node[0] Epoch[5] Batch [260-280]	Speed: 21458.95 samples/sec	accuracy=nan
2023-03-21 20:30:03,664 Node[0] Epoch[5] Batch [280-300]	Speed: 21475.24 samples/sec	accuracy=nan
2023-03-21 20:30:06,704 Node[0] Epoch[5] Batch [300-320]	Speed: 21474.73 samples/sec	accuracy=nan
2023-03-21 20:30:09,746 Node[0] Epoch[5] Batch [320-340]	Speed: 21461.35 samples/sec	accuracy=nan
2023-03-21 20:30:12,787 Node[0] Epoch[5] Batch [340-360]	Speed: 21466.63 samples/sec	accuracy=nan
2023-03-21 20:30:15,830 Node[0] Epoch[5] Batch [360-380]	Speed: 21450.76 samples/sec	accuracy=nan
2023-03-21 20:30:17,650 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:30:17,650 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:30:17,650 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:30:17,650 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:30:17,650 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:30:17,650 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:30:17,650 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448617650, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-21 20:30:17,651 Node[0] Epoch[5] Time cost=59.770
:::MLLOG {"namespace": "", "time_ms": 1679448617651, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21435.017172206306}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679448617652, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-21 20:30:17,652 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:30:20,848 Node[0] Epoch[6] Batch [0-20]	Speed: 21439.38 samples/sec	accuracy=nan
2023-03-21 20:30:23,888 Node[0] Epoch[6] Batch [20-40]	Speed: 21470.12 samples/sec	accuracy=nan
2023-03-21 20:30:26,927 Node[0] Epoch[6] Batch [40-60]	Speed: 21480.90 samples/sec	accuracy=nan
2023-03-21 20:30:29,973 Node[0] Epoch[6] Batch [60-80]	Speed: 21433.89 samples/sec	accuracy=nan
2023-03-21 20:30:33,014 Node[0] Epoch[6] Batch [80-100]	Speed: 21464.40 samples/sec	accuracy=nan
2023-03-21 20:30:36,053 Node[0] Epoch[6] Batch [100-120]	Speed: 21481.32 samples/sec	accuracy=nan
2023-03-21 20:30:39,092 Node[0] Epoch[6] Batch [120-140]	Speed: 21482.32 samples/sec	accuracy=nan
2023-03-21 20:30:42,132 Node[0] Epoch[6] Batch [140-160]	Speed: 21472.67 samples/sec	accuracy=nan
2023-03-21 20:30:45,177 Node[0] Epoch[6] Batch [160-180]	Speed: 21439.37 samples/sec	accuracy=nan
2023-03-21 20:30:48,218 Node[0] Epoch[6] Batch [180-200]	Speed: 21464.16 samples/sec	accuracy=nan
2023-03-21 20:30:51,261 Node[0] Epoch[6] Batch [200-220]	Speed: 21451.98 samples/sec	accuracy=nan
2023-03-21 20:30:54,303 Node[0] Epoch[6] Batch [220-240]	Speed: 21463.63 samples/sec	accuracy=nan
2023-03-21 20:30:57,345 Node[0] Epoch[6] Batch [240-260]	Speed: 21456.60 samples/sec	accuracy=nan
2023-03-21 20:31:00,385 Node[0] Epoch[6] Batch [260-280]	Speed: 21475.38 samples/sec	accuracy=nan
2023-03-21 20:31:03,426 Node[0] Epoch[6] Batch [280-300]	Speed: 21466.26 samples/sec	accuracy=nan
2023-03-21 20:31:06,466 Node[0] Epoch[6] Batch [300-320]	Speed: 21470.08 samples/sec	accuracy=nan
2023-03-21 20:31:09,509 Node[0] Epoch[6] Batch [320-340]	Speed: 21452.97 samples/sec	accuracy=nan
2023-03-21 20:31:12,555 Node[0] Epoch[6] Batch [340-360]	Speed: 21433.29 samples/sec	accuracy=nan
2023-03-21 20:31:15,594 Node[0] Epoch[6] Batch [360-380]	Speed: 21481.38 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679448677264, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-21 20:31:17,264 Node[0] Epoch[6] Time cost=59.613
:::MLLOG {"namespace": "", "time_ms": 1679448677264, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21491.562872948747}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679448677410, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-21 20:31:18,814 Node[0] Epoch[6] Validation-accuracy=0.402880
2023-03-21 20:31:18,814 Node[0] Epoch[6] Validation-correct-count=2518.000000
2023-03-21 20:31:18,814 Node[0] Epoch[6] Validation-total-count=6250.000000
2023-03-21 20:31:19,082 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:31:19,082 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:31:19,082 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:31:19,081 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:31:19,081 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:31:19,082 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448679081, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679448679082, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.40698, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
2023-03-21 20:31:19,082 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448679083, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679448679083, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679448679083, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-21 20:31:19,083 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:31:22,133 Node[0] Epoch[7] Batch [0-20]	Speed: 21473.43 samples/sec	accuracy=nan
2023-03-21 20:31:25,166 Node[0] Epoch[7] Batch [20-40]	Speed: 21521.72 samples/sec	accuracy=nan
2023-03-21 20:31:28,200 Node[0] Epoch[7] Batch [40-60]	Speed: 21515.99 samples/sec	accuracy=nan
2023-03-21 20:31:31,242 Node[0] Epoch[7] Batch [60-80]	Speed: 21457.75 samples/sec	accuracy=nan
2023-03-21 20:31:34,300 Node[0] Epoch[7] Batch [80-100]	Speed: 21349.15 samples/sec	accuracy=nan
2023-03-21 20:31:37,343 Node[0] Epoch[7] Batch [100-120]	Speed: 21456.02 samples/sec	accuracy=nan
2023-03-21 20:31:40,379 Node[0] Epoch[7] Batch [120-140]	Speed: 21497.86 samples/sec	accuracy=nan
2023-03-21 20:31:43,417 Node[0] Epoch[7] Batch [140-160]	Speed: 21489.26 samples/sec	accuracy=nan
2023-03-21 20:31:46,453 Node[0] Epoch[7] Batch [160-180]	Speed: 21501.28 samples/sec	accuracy=nan
2023-03-21 20:31:49,494 Node[0] Epoch[7] Batch [180-200]	Speed: 21465.07 samples/sec	accuracy=nan
2023-03-21 20:31:52,532 Node[0] Epoch[7] Batch [200-220]	Speed: 21487.64 samples/sec	accuracy=nan
2023-03-21 20:31:55,570 Node[0] Epoch[7] Batch [220-240]	Speed: 21488.74 samples/sec	accuracy=nan
2023-03-21 20:31:58,609 Node[0] Epoch[7] Batch [240-260]	Speed: 21485.14 samples/sec	accuracy=nan
2023-03-21 20:32:01,648 Node[0] Epoch[7] Batch [260-280]	Speed: 21478.58 samples/sec	accuracy=nan
2023-03-21 20:32:04,688 Node[0] Epoch[7] Batch [280-300]	Speed: 21468.74 samples/sec	accuracy=nan
2023-03-21 20:32:07,727 Node[0] Epoch[7] Batch [300-320]	Speed: 21485.98 samples/sec	accuracy=nan
2023-03-21 20:32:10,772 Node[0] Epoch[7] Batch [320-340]	Speed: 21436.04 samples/sec	accuracy=nan
2023-03-21 20:32:13,823 Node[0] Epoch[7] Batch [340-360]	Speed: 21398.93 samples/sec	accuracy=nan
2023-03-21 20:32:16,873 Node[0] Epoch[7] Batch [360-380]	Speed: 21397.76 samples/sec	accuracy=nan
2023-03-21 20:32:18,699 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:32:18,699 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:32:18,699 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:32:18,699 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448738699, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-21 20:32:18,699 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:32:18,700 Node[0] Epoch[7] Time cost=59.617
2023-03-21 20:32:18,699 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:32:18,699 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448738700, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21490.102427514797}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679448738700, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-21 20:32:18,700 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:32:21,892 Node[0] Epoch[8] Batch [0-20]	Speed: 20502.89 samples/sec	accuracy=nan
2023-03-21 20:32:24,932 Node[0] Epoch[8] Batch [20-40]	Speed: 21469.93 samples/sec	accuracy=nan
2023-03-21 20:32:27,972 Node[0] Epoch[8] Batch [40-60]	Speed: 21474.61 samples/sec	accuracy=nan
2023-03-21 20:32:31,011 Node[0] Epoch[8] Batch [60-80]	Speed: 21481.45 samples/sec	accuracy=nan
2023-03-21 20:32:34,055 Node[0] Epoch[8] Batch [80-100]	Speed: 21450.34 samples/sec	accuracy=nan
2023-03-21 20:32:37,098 Node[0] Epoch[8] Batch [100-120]	Speed: 21450.71 samples/sec	accuracy=nan
2023-03-21 20:32:40,142 Node[0] Epoch[8] Batch [120-140]	Speed: 21446.95 samples/sec	accuracy=nan
2023-03-21 20:32:43,195 Node[0] Epoch[8] Batch [140-160]	Speed: 21379.32 samples/sec	accuracy=nan
2023-03-21 20:32:46,247 Node[0] Epoch[8] Batch [160-180]	Speed: 21386.97 samples/sec	accuracy=nan
2023-03-21 20:32:49,290 Node[0] Epoch[8] Batch [180-200]	Speed: 21455.88 samples/sec	accuracy=nan
2023-03-21 20:32:52,333 Node[0] Epoch[8] Batch [200-220]	Speed: 21450.35 samples/sec	accuracy=nan
2023-03-21 20:32:55,370 Node[0] Epoch[8] Batch [220-240]	Speed: 21497.26 samples/sec	accuracy=nan
2023-03-21 20:32:58,411 Node[0] Epoch[8] Batch [240-260]	Speed: 21463.84 samples/sec	accuracy=nan
2023-03-21 20:33:01,458 Node[0] Epoch[8] Batch [260-280]	Speed: 21423.21 samples/sec	accuracy=nan
2023-03-21 20:33:04,501 Node[0] Epoch[8] Batch [280-300]	Speed: 21455.74 samples/sec	accuracy=nan
2023-03-21 20:33:07,541 Node[0] Epoch[8] Batch [300-320]	Speed: 21473.83 samples/sec	accuracy=nan
2023-03-21 20:33:10,579 Node[0] Epoch[8] Batch [320-340]	Speed: 21487.45 samples/sec	accuracy=nan
2023-03-21 20:33:13,615 Node[0] Epoch[8] Batch [340-360]	Speed: 21501.35 samples/sec	accuracy=nan
2023-03-21 20:33:16,652 Node[0] Epoch[8] Batch [360-380]	Speed: 21496.52 samples/sec	accuracy=nan
2023-03-21 20:33:18,319 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:33:18,319 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:33:18,320 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:33:18,320 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:33:18,320 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:33:18,321 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448798320, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-21 20:33:18,321 Node[0] Epoch[8] Time cost=59.621
:::MLLOG {"namespace": "", "time_ms": 1679448798321, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21488.605316012236}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
2023-03-21 20:33:18,320 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448798321, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-21 20:33:18,321 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:33:21,518 Node[0] Epoch[9] Batch [0-20]	Speed: 21490.46 samples/sec	accuracy=nan
2023-03-21 20:33:24,556 Node[0] Epoch[9] Batch [20-40]	Speed: 21494.38 samples/sec	accuracy=nan
2023-03-21 20:33:27,594 Node[0] Epoch[9] Batch [40-60]	Speed: 21485.87 samples/sec	accuracy=nan
2023-03-21 20:33:30,630 Node[0] Epoch[9] Batch [60-80]	Speed: 21501.55 samples/sec	accuracy=nan
2023-03-21 20:33:33,665 Node[0] Epoch[9] Batch [80-100]	Speed: 21505.63 samples/sec	accuracy=nan
2023-03-21 20:33:36,706 Node[0] Epoch[9] Batch [100-120]	Speed: 21471.39 samples/sec	accuracy=nan
2023-03-21 20:33:39,746 Node[0] Epoch[9] Batch [120-140]	Speed: 21469.28 samples/sec	accuracy=nan
2023-03-21 20:33:42,784 Node[0] Epoch[9] Batch [140-160]	Speed: 21488.60 samples/sec	accuracy=nan
2023-03-21 20:33:45,824 Node[0] Epoch[9] Batch [160-180]	Speed: 21473.67 samples/sec	accuracy=nan
2023-03-21 20:33:48,862 Node[0] Epoch[9] Batch [180-200]	Speed: 21490.39 samples/sec	accuracy=nan
2023-03-21 20:33:51,901 Node[0] Epoch[9] Batch [200-220]	Speed: 21477.77 samples/sec	accuracy=nan
2023-03-21 20:33:54,944 Node[0] Epoch[9] Batch [220-240]	Speed: 21456.51 samples/sec	accuracy=nan
2023-03-21 20:33:57,981 Node[0] Epoch[9] Batch [240-260]	Speed: 21491.61 samples/sec	accuracy=nan
2023-03-21 20:34:01,026 Node[0] Epoch[9] Batch [260-280]	Speed: 21436.23 samples/sec	accuracy=nan
2023-03-21 20:34:04,064 Node[0] Epoch[9] Batch [280-300]	Speed: 21494.32 samples/sec	accuracy=nan
2023-03-21 20:34:07,106 Node[0] Epoch[9] Batch [300-320]	Speed: 21457.35 samples/sec	accuracy=nan
2023-03-21 20:34:10,146 Node[0] Epoch[9] Batch [320-340]	Speed: 21469.05 samples/sec	accuracy=nan
2023-03-21 20:34:13,185 Node[0] Epoch[9] Batch [340-360]	Speed: 21483.35 samples/sec	accuracy=nan
2023-03-21 20:34:16,227 Node[0] Epoch[9] Batch [360-380]	Speed: 21457.25 samples/sec	accuracy=nan
2023-03-21 20:34:18,048 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:34:18,048 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:34:18,048 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:34:18,048 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448858048, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-21 20:34:18,048 Node[0] Epoch[9] Time cost=59.727
2023-03-21 20:34:18,048 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448858048, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21450.452017445972}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
2023-03-21 20:34:18,048 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448858049, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-21 20:34:18,049 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:34:18,049 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:34:21,245 Node[0] Epoch[10] Batch [0-20]	Speed: 21445.74 samples/sec	accuracy=nan
2023-03-21 20:34:24,287 Node[0] Epoch[10] Batch [20-40]	Speed: 21458.04 samples/sec	accuracy=nan
2023-03-21 20:34:27,329 Node[0] Epoch[10] Batch [40-60]	Speed: 21460.43 samples/sec	accuracy=nan
2023-03-21 20:34:30,378 Node[0] Epoch[10] Batch [60-80]	Speed: 21412.85 samples/sec	accuracy=nan
2023-03-21 20:34:33,416 Node[0] Epoch[10] Batch [80-100]	Speed: 21482.94 samples/sec	accuracy=nan
2023-03-21 20:34:36,455 Node[0] Epoch[10] Batch [100-120]	Speed: 21486.32 samples/sec	accuracy=nan
2023-03-21 20:34:39,495 Node[0] Epoch[10] Batch [120-140]	Speed: 21472.74 samples/sec	accuracy=nan
2023-03-21 20:34:42,533 Node[0] Epoch[10] Batch [140-160]	Speed: 21485.51 samples/sec	accuracy=nan
2023-03-21 20:34:45,573 Node[0] Epoch[10] Batch [160-180]	Speed: 21472.54 samples/sec	accuracy=nan
2023-03-21 20:34:48,615 Node[0] Epoch[10] Batch [180-200]	Speed: 21462.30 samples/sec	accuracy=nan
2023-03-21 20:34:51,655 Node[0] Epoch[10] Batch [200-220]	Speed: 21472.93 samples/sec	accuracy=nan
2023-03-21 20:34:54,697 Node[0] Epoch[10] Batch [220-240]	Speed: 21460.96 samples/sec	accuracy=nan
2023-03-21 20:34:57,740 Node[0] Epoch[10] Batch [240-260]	Speed: 21448.99 samples/sec	accuracy=nan
2023-03-21 20:35:00,781 Node[0] Epoch[10] Batch [260-280]	Speed: 21470.35 samples/sec	accuracy=nan
2023-03-21 20:35:03,821 Node[0] Epoch[10] Batch [280-300]	Speed: 21468.57 samples/sec	accuracy=nan
2023-03-21 20:35:06,863 Node[0] Epoch[10] Batch [300-320]	Speed: 21462.69 samples/sec	accuracy=nan
2023-03-21 20:35:09,904 Node[0] Epoch[10] Batch [320-340]	Speed: 21469.86 samples/sec	accuracy=nan
2023-03-21 20:35:12,944 Node[0] Epoch[10] Batch [340-360]	Speed: 21467.07 samples/sec	accuracy=nan
2023-03-21 20:35:15,993 Node[0] Epoch[10] Batch [360-380]	Speed: 21415.72 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679448917665, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-21 20:35:17,666 Node[0] Epoch[10] Time cost=59.617
:::MLLOG {"namespace": "", "time_ms": 1679448917666, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21489.847351240853}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679448917811, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-21 20:35:19,313 Node[0] Epoch[10] Validation-accuracy=0.492800
2023-03-21 20:35:19,314 Node[0] Epoch[10] Validation-correct-count=3080.000000
2023-03-21 20:35:19,314 Node[0] Epoch[10] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679448919452, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679448919452, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.4953, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
2023-03-21 20:35:19,452 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448919452, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-21 20:35:19,452 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:35:19,452 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:35:19,452 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:35:19,452 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448919452, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-21 20:35:19,452 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448919452, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-21 20:35:19,453 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:35:19,453 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:35:22,523 Node[0] Epoch[11] Batch [0-20]	Speed: 21349.15 samples/sec	accuracy=nan
2023-03-21 20:35:25,563 Node[0] Epoch[11] Batch [20-40]	Speed: 21476.36 samples/sec	accuracy=nan
2023-03-21 20:35:28,604 Node[0] Epoch[11] Batch [40-60]	Speed: 21464.39 samples/sec	accuracy=nan
2023-03-21 20:35:31,644 Node[0] Epoch[11] Batch [60-80]	Speed: 21476.86 samples/sec	accuracy=nan
2023-03-21 20:35:34,682 Node[0] Epoch[11] Batch [80-100]	Speed: 21485.74 samples/sec	accuracy=nan
2023-03-21 20:35:37,726 Node[0] Epoch[11] Batch [100-120]	Speed: 21442.19 samples/sec	accuracy=nan
2023-03-21 20:35:40,766 Node[0] Epoch[11] Batch [120-140]	Speed: 21477.92 samples/sec	accuracy=nan
2023-03-21 20:35:43,809 Node[0] Epoch[11] Batch [140-160]	Speed: 21447.73 samples/sec	accuracy=nan
2023-03-21 20:35:46,857 Node[0] Epoch[11] Batch [160-180]	Speed: 21419.58 samples/sec	accuracy=nan
2023-03-21 20:35:49,912 Node[0] Epoch[11] Batch [180-200]	Speed: 21365.60 samples/sec	accuracy=nan
2023-03-21 20:35:52,970 Node[0] Epoch[11] Batch [200-220]	Speed: 21347.56 samples/sec	accuracy=nan
2023-03-21 20:35:56,009 Node[0] Epoch[11] Batch [220-240]	Speed: 21481.21 samples/sec	accuracy=nan
2023-03-21 20:35:59,059 Node[0] Epoch[11] Batch [240-260]	Speed: 21403.96 samples/sec	accuracy=nan
2023-03-21 20:36:02,101 Node[0] Epoch[11] Batch [260-280]	Speed: 21461.42 samples/sec	accuracy=nan
2023-03-21 20:36:05,142 Node[0] Epoch[11] Batch [280-300]	Speed: 21468.97 samples/sec	accuracy=nan
2023-03-21 20:36:08,180 Node[0] Epoch[11] Batch [300-320]	Speed: 21487.21 samples/sec	accuracy=nan
2023-03-21 20:36:11,220 Node[0] Epoch[11] Batch [320-340]	Speed: 21468.44 samples/sec	accuracy=nan
2023-03-21 20:36:14,263 Node[0] Epoch[11] Batch [340-360]	Speed: 21457.84 samples/sec	accuracy=nan
2023-03-21 20:36:17,308 Node[0] Epoch[11] Batch [360-380]	Speed: 21436.51 samples/sec	accuracy=nan
2023-03-21 20:36:19,129 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:36:19,129 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:36:19,129 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:36:19,130 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:36:19,130 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:36:19,130 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448979129, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-21 20:36:19,131 Node[0] Epoch[11] Time cost=59.678
2023-03-21 20:36:19,131 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679448979131, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21467.890538366853}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679448979131, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-21 20:36:19,132 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:36:22,326 Node[0] Epoch[12] Batch [0-20]	Speed: 21442.17 samples/sec	accuracy=nan
2023-03-21 20:36:25,367 Node[0] Epoch[12] Batch [20-40]	Speed: 21466.36 samples/sec	accuracy=nan
2023-03-21 20:36:28,410 Node[0] Epoch[12] Batch [40-60]	Speed: 21450.42 samples/sec	accuracy=nan
2023-03-21 20:36:31,454 Node[0] Epoch[12] Batch [60-80]	Speed: 21445.17 samples/sec	accuracy=nan
2023-03-21 20:36:34,496 Node[0] Epoch[12] Batch [80-100]	Speed: 21464.63 samples/sec	accuracy=nan
2023-03-21 20:36:37,540 Node[0] Epoch[12] Batch [100-120]	Speed: 21444.61 samples/sec	accuracy=nan
2023-03-21 20:36:40,582 Node[0] Epoch[12] Batch [120-140]	Speed: 21456.63 samples/sec	accuracy=nan
2023-03-21 20:36:43,621 Node[0] Epoch[12] Batch [140-160]	Speed: 21483.41 samples/sec	accuracy=nan
2023-03-21 20:36:46,662 Node[0] Epoch[12] Batch [160-180]	Speed: 21463.88 samples/sec	accuracy=nan
2023-03-21 20:36:49,703 Node[0] Epoch[12] Batch [180-200]	Speed: 21465.36 samples/sec	accuracy=nan
2023-03-21 20:36:52,747 Node[0] Epoch[12] Batch [200-220]	Speed: 21445.08 samples/sec	accuracy=nan
2023-03-21 20:36:55,792 Node[0] Epoch[12] Batch [220-240]	Speed: 21441.98 samples/sec	accuracy=nan
2023-03-21 20:36:58,837 Node[0] Epoch[12] Batch [240-260]	Speed: 21435.29 samples/sec	accuracy=nan
2023-03-21 20:37:01,887 Node[0] Epoch[12] Batch [260-280]	Speed: 21408.40 samples/sec	accuracy=nan
2023-03-21 20:37:04,929 Node[0] Epoch[12] Batch [280-300]	Speed: 21458.73 samples/sec	accuracy=nan
2023-03-21 20:37:07,976 Node[0] Epoch[12] Batch [300-320]	Speed: 21421.07 samples/sec	accuracy=nan
2023-03-21 20:37:11,017 Node[0] Epoch[12] Batch [320-340]	Speed: 21466.34 samples/sec	accuracy=nan
2023-03-21 20:37:14,056 Node[0] Epoch[12] Batch [340-360]	Speed: 21483.09 samples/sec	accuracy=nan
2023-03-21 20:37:17,103 Node[0] Epoch[12] Batch [360-380]	Speed: 21422.45 samples/sec	accuracy=nan
2023-03-21 20:37:18,773 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:37:18,773 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:37:18,774 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449038773, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-21 20:37:18,774 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:37:18,774 Node[0] Epoch[12] Time cost=59.642
:::MLLOG {"namespace": "", "time_ms": 1679449038774, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21480.789281276157}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-21 20:37:18,774 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449038774, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-21 20:37:18,775 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:37:18,774 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:37:18,774 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:37:21,977 Node[0] Epoch[13] Batch [0-20]	Speed: 21441.83 samples/sec	accuracy=nan
2023-03-21 20:37:25,021 Node[0] Epoch[13] Batch [20-40]	Speed: 21440.73 samples/sec	accuracy=nan
2023-03-21 20:37:28,067 Node[0] Epoch[13] Batch [40-60]	Speed: 21431.69 samples/sec	accuracy=nan
2023-03-21 20:37:31,120 Node[0] Epoch[13] Batch [60-80]	Speed: 21380.80 samples/sec	accuracy=nan
2023-03-21 20:37:34,170 Node[0] Epoch[13] Batch [80-100]	Speed: 21405.48 samples/sec	accuracy=nan
2023-03-21 20:37:37,217 Node[0] Epoch[13] Batch [100-120]	Speed: 21424.60 samples/sec	accuracy=nan
2023-03-21 20:37:40,257 Node[0] Epoch[13] Batch [120-140]	Speed: 21477.47 samples/sec	accuracy=nan
2023-03-21 20:37:43,299 Node[0] Epoch[13] Batch [140-160]	Speed: 21456.90 samples/sec	accuracy=nan
2023-03-21 20:37:46,340 Node[0] Epoch[13] Batch [160-180]	Speed: 21463.38 samples/sec	accuracy=nan
2023-03-21 20:37:49,382 Node[0] Epoch[13] Batch [180-200]	Speed: 21458.90 samples/sec	accuracy=nan
2023-03-21 20:37:52,426 Node[0] Epoch[13] Batch [200-220]	Speed: 21447.08 samples/sec	accuracy=nan
2023-03-21 20:37:55,467 Node[0] Epoch[13] Batch [220-240]	Speed: 21466.01 samples/sec	accuracy=nan
2023-03-21 20:37:58,510 Node[0] Epoch[13] Batch [240-260]	Speed: 21453.37 samples/sec	accuracy=nan
2023-03-21 20:38:01,555 Node[0] Epoch[13] Batch [260-280]	Speed: 21439.17 samples/sec	accuracy=nan
2023-03-21 20:38:04,595 Node[0] Epoch[13] Batch [280-300]	Speed: 21470.65 samples/sec	accuracy=nan
2023-03-21 20:38:07,641 Node[0] Epoch[13] Batch [300-320]	Speed: 21435.07 samples/sec	accuracy=nan
2023-03-21 20:38:10,684 Node[0] Epoch[13] Batch [320-340]	Speed: 21450.54 samples/sec	accuracy=nan
2023-03-21 20:38:13,728 Node[0] Epoch[13] Batch [340-360]	Speed: 21447.04 samples/sec	accuracy=nan
2023-03-21 20:38:16,784 Node[0] Epoch[13] Batch [360-380]	Speed: 21362.11 samples/sec	accuracy=nan
2023-03-21 20:38:18,607 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:38:18,607 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:38:18,607 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:38:18,607 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:38:18,607 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:38:18,607 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:38:18,608 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449098607, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-21 20:38:18,609 Node[0] Epoch[13] Time cost=59.834
:::MLLOG {"namespace": "", "time_ms": 1679449098609, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21411.98013837056}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679449098609, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-21 20:38:18,609 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:38:21,806 Node[0] Epoch[14] Batch [0-20]	Speed: 21442.06 samples/sec	accuracy=nan
2023-03-21 20:38:24,847 Node[0] Epoch[14] Batch [20-40]	Speed: 21462.59 samples/sec	accuracy=nan
2023-03-21 20:38:27,891 Node[0] Epoch[14] Batch [40-60]	Speed: 21444.59 samples/sec	accuracy=nan
2023-03-21 20:38:30,937 Node[0] Epoch[14] Batch [60-80]	Speed: 21432.52 samples/sec	accuracy=nan
2023-03-21 20:38:33,984 Node[0] Epoch[14] Batch [80-100]	Speed: 21427.11 samples/sec	accuracy=nan
2023-03-21 20:38:37,027 Node[0] Epoch[14] Batch [100-120]	Speed: 21448.55 samples/sec	accuracy=nan
2023-03-21 20:38:40,070 Node[0] Epoch[14] Batch [120-140]	Speed: 21453.83 samples/sec	accuracy=nan
2023-03-21 20:38:43,115 Node[0] Epoch[14] Batch [140-160]	Speed: 21442.67 samples/sec	accuracy=nan
2023-03-21 20:38:46,155 Node[0] Epoch[14] Batch [160-180]	Speed: 21471.92 samples/sec	accuracy=nan
2023-03-21 20:38:49,200 Node[0] Epoch[14] Batch [180-200]	Speed: 21440.53 samples/sec	accuracy=nan
2023-03-21 20:38:52,243 Node[0] Epoch[14] Batch [200-220]	Speed: 21448.72 samples/sec	accuracy=nan
2023-03-21 20:38:55,290 Node[0] Epoch[14] Batch [220-240]	Speed: 21424.90 samples/sec	accuracy=nan
2023-03-21 20:38:58,347 Node[0] Epoch[14] Batch [240-260]	Speed: 21357.61 samples/sec	accuracy=nan
2023-03-21 20:39:01,392 Node[0] Epoch[14] Batch [260-280]	Speed: 21434.00 samples/sec	accuracy=nan
2023-03-21 20:39:04,433 Node[0] Epoch[14] Batch [280-300]	Speed: 21466.74 samples/sec	accuracy=nan
2023-03-21 20:39:07,475 Node[0] Epoch[14] Batch [300-320]	Speed: 21458.66 samples/sec	accuracy=nan
2023-03-21 20:39:10,517 Node[0] Epoch[14] Batch [320-340]	Speed: 21463.23 samples/sec	accuracy=nan
2023-03-21 20:39:13,558 Node[0] Epoch[14] Batch [340-360]	Speed: 21465.85 samples/sec	accuracy=nan
2023-03-21 20:39:16,600 Node[0] Epoch[14] Batch [360-380]	Speed: 21461.04 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679449158272, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-21 20:39:18,272 Node[0] Epoch[14] Time cost=59.663
:::MLLOG {"namespace": "", "time_ms": 1679449158273, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21473.369784919716}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679449158418, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-21 20:39:19,877 Node[0] Epoch[14] Validation-accuracy=0.565280
2023-03-21 20:39:19,877 Node[0] Epoch[14] Validation-correct-count=3533.000000
2023-03-21 20:39:19,877 Node[0] Epoch[14] Validation-total-count=6250.000000
2023-03-21 20:39:20,072 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:39:20,072 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:39:20,072 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:39:20,073 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:39:20,072 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:39:20,072 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:39:20,072 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449160072, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679449160073, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.56888, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679449160073, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679449160073, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679449160074, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-21 20:39:20,074 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:39:23,132 Node[0] Epoch[15] Batch [0-20]	Speed: 21429.63 samples/sec	accuracy=nan
2023-03-21 20:39:26,174 Node[0] Epoch[15] Batch [20-40]	Speed: 21463.34 samples/sec	accuracy=nan
2023-03-21 20:39:29,220 Node[0] Epoch[15] Batch [40-60]	Speed: 21428.70 samples/sec	accuracy=nan
2023-03-21 20:39:32,258 Node[0] Epoch[15] Batch [60-80]	Speed: 21486.77 samples/sec	accuracy=nan
2023-03-21 20:39:35,297 Node[0] Epoch[15] Batch [80-100]	Speed: 21479.42 samples/sec	accuracy=nan
2023-03-21 20:39:38,341 Node[0] Epoch[15] Batch [100-120]	Speed: 21447.19 samples/sec	accuracy=nan
2023-03-21 20:39:41,383 Node[0] Epoch[15] Batch [120-140]	Speed: 21462.85 samples/sec	accuracy=nan
2023-03-21 20:39:44,423 Node[0] Epoch[15] Batch [140-160]	Speed: 21472.35 samples/sec	accuracy=nan
2023-03-21 20:39:47,465 Node[0] Epoch[15] Batch [160-180]	Speed: 21455.86 samples/sec	accuracy=nan
2023-03-21 20:39:50,507 Node[0] Epoch[15] Batch [180-200]	Speed: 21460.42 samples/sec	accuracy=nan
2023-03-21 20:39:53,548 Node[0] Epoch[15] Batch [200-220]	Speed: 21467.03 samples/sec	accuracy=nan
2023-03-21 20:39:56,596 Node[0] Epoch[15] Batch [220-240]	Speed: 21421.77 samples/sec	accuracy=nan
2023-03-21 20:39:59,645 Node[0] Epoch[15] Batch [240-260]	Speed: 21407.21 samples/sec	accuracy=nan
2023-03-21 20:40:02,690 Node[0] Epoch[15] Batch [260-280]	Speed: 21442.51 samples/sec	accuracy=nan
2023-03-21 20:40:05,732 Node[0] Epoch[15] Batch [280-300]	Speed: 21456.04 samples/sec	accuracy=nan
2023-03-21 20:40:08,776 Node[0] Epoch[15] Batch [300-320]	Speed: 21445.31 samples/sec	accuracy=nan
2023-03-21 20:40:11,819 Node[0] Epoch[15] Batch [320-340]	Speed: 21451.22 samples/sec	accuracy=nan
2023-03-21 20:40:14,860 Node[0] Epoch[15] Batch [340-360]	Speed: 21468.50 samples/sec	accuracy=nan
2023-03-21 20:40:17,903 Node[0] Epoch[15] Batch [360-380]	Speed: 21454.47 samples/sec	accuracy=nan
2023-03-21 20:40:19,724 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:40:19,724 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:40:19,724 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449219724, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-21 20:40:19,725 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:40:19,724 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:40:19,725 Node[0] Epoch[15] Time cost=59.651
2023-03-21 20:40:19,724 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449219725, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21477.685233382603}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679449219725, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-21 20:40:19,725 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:40:19,725 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:40:22,918 Node[0] Epoch[16] Batch [0-20]	Speed: 21473.58 samples/sec	accuracy=nan
2023-03-21 20:40:25,957 Node[0] Epoch[16] Batch [20-40]	Speed: 21483.66 samples/sec	accuracy=nan
2023-03-21 20:40:28,995 Node[0] Epoch[16] Batch [40-60]	Speed: 21486.40 samples/sec	accuracy=nan
2023-03-21 20:40:32,036 Node[0] Epoch[16] Batch [60-80]	Speed: 21467.42 samples/sec	accuracy=nan
2023-03-21 20:40:35,080 Node[0] Epoch[16] Batch [80-100]	Speed: 21445.29 samples/sec	accuracy=nan
2023-03-21 20:40:38,123 Node[0] Epoch[16] Batch [100-120]	Speed: 21453.49 samples/sec	accuracy=nan
2023-03-21 20:40:41,165 Node[0] Epoch[16] Batch [120-140]	Speed: 21459.88 samples/sec	accuracy=nan
2023-03-21 20:40:44,206 Node[0] Epoch[16] Batch [140-160]	Speed: 21462.50 samples/sec	accuracy=nan
2023-03-21 20:40:47,244 Node[0] Epoch[16] Batch [160-180]	Speed: 21492.23 samples/sec	accuracy=nan
2023-03-21 20:40:50,286 Node[0] Epoch[16] Batch [180-200]	Speed: 21456.47 samples/sec	accuracy=nan
2023-03-21 20:40:53,327 Node[0] Epoch[16] Batch [200-220]	Speed: 21465.73 samples/sec	accuracy=nan
2023-03-21 20:40:56,369 Node[0] Epoch[16] Batch [220-240]	Speed: 21459.15 samples/sec	accuracy=nan
2023-03-21 20:40:59,405 Node[0] Epoch[16] Batch [240-260]	Speed: 21501.94 samples/sec	accuracy=nan
2023-03-21 20:41:02,448 Node[0] Epoch[16] Batch [260-280]	Speed: 21457.25 samples/sec	accuracy=nan
2023-03-21 20:41:05,491 Node[0] Epoch[16] Batch [280-300]	Speed: 21445.90 samples/sec	accuracy=nan
2023-03-21 20:41:08,533 Node[0] Epoch[16] Batch [300-320]	Speed: 21461.77 samples/sec	accuracy=nan
2023-03-21 20:41:11,573 Node[0] Epoch[16] Batch [320-340]	Speed: 21472.83 samples/sec	accuracy=nan
2023-03-21 20:41:14,614 Node[0] Epoch[16] Batch [340-360]	Speed: 21468.54 samples/sec	accuracy=nan
2023-03-21 20:41:17,657 Node[0] Epoch[16] Batch [360-380]	Speed: 21453.34 samples/sec	accuracy=nan
2023-03-21 20:41:19,326 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:41:19,326 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:41:19,326 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:41:19,326 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:41:19,326 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:41:19,327 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449279326, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-21 20:41:19,327 Node[0] Epoch[16] Time cost=59.602
:::MLLOG {"namespace": "", "time_ms": 1679449279327, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21495.426549955202}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1679449279328, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-21 20:41:19,328 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:41:19,328 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:41:22,522 Node[0] Epoch[17] Batch [0-20]	Speed: 21474.68 samples/sec	accuracy=nan
2023-03-21 20:41:25,571 Node[0] Epoch[17] Batch [20-40]	Speed: 21412.83 samples/sec	accuracy=nan
2023-03-21 20:41:28,619 Node[0] Epoch[17] Batch [40-60]	Speed: 21414.86 samples/sec	accuracy=nan
2023-03-21 20:41:31,656 Node[0] Epoch[17] Batch [60-80]	Speed: 21492.56 samples/sec	accuracy=nan
2023-03-21 20:41:34,695 Node[0] Epoch[17] Batch [80-100]	Speed: 21482.61 samples/sec	accuracy=nan
2023-03-21 20:41:37,737 Node[0] Epoch[17] Batch [100-120]	Speed: 21461.65 samples/sec	accuracy=nan
2023-03-21 20:41:40,777 Node[0] Epoch[17] Batch [120-140]	Speed: 21471.28 samples/sec	accuracy=nan
2023-03-21 20:41:43,817 Node[0] Epoch[17] Batch [140-160]	Speed: 21478.00 samples/sec	accuracy=nan
2023-03-21 20:41:46,855 Node[0] Epoch[17] Batch [160-180]	Speed: 21484.32 samples/sec	accuracy=nan
2023-03-21 20:41:49,896 Node[0] Epoch[17] Batch [180-200]	Speed: 21468.41 samples/sec	accuracy=nan
2023-03-21 20:41:52,936 Node[0] Epoch[17] Batch [200-220]	Speed: 21470.54 samples/sec	accuracy=nan
2023-03-21 20:41:55,975 Node[0] Epoch[17] Batch [220-240]	Speed: 21484.63 samples/sec	accuracy=nan
2023-03-21 20:41:59,016 Node[0] Epoch[17] Batch [240-260]	Speed: 21463.31 samples/sec	accuracy=nan
2023-03-21 20:42:02,056 Node[0] Epoch[17] Batch [260-280]	Speed: 21475.13 samples/sec	accuracy=nan
2023-03-21 20:42:05,107 Node[0] Epoch[17] Batch [280-300]	Speed: 21397.06 samples/sec	accuracy=nan
2023-03-21 20:42:08,157 Node[0] Epoch[17] Batch [300-320]	Speed: 21399.87 samples/sec	accuracy=nan
2023-03-21 20:42:11,202 Node[0] Epoch[17] Batch [320-340]	Speed: 21440.36 samples/sec	accuracy=nan
2023-03-21 20:42:14,240 Node[0] Epoch[17] Batch [340-360]	Speed: 21488.21 samples/sec	accuracy=nan
2023-03-21 20:42:17,276 Node[0] Epoch[17] Batch [360-380]	Speed: 21505.94 samples/sec	accuracy=nan
2023-03-21 20:42:19,095 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449339095, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-21 20:42:19,095 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:42:19,096 Node[0] Epoch[17] Time cost=59.768
2023-03-21 20:42:19,095 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449339096, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21435.793568765534}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
2023-03-21 20:42:19,095 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449339096, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-21 20:42:19,096 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:42:19,096 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:42:19,096 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:42:19,096 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:42:22,290 Node[0] Epoch[18] Batch [0-20]	Speed: 21454.48 samples/sec	accuracy=nan
2023-03-21 20:42:25,340 Node[0] Epoch[18] Batch [20-40]	Speed: 21406.77 samples/sec	accuracy=nan
2023-03-21 20:42:28,385 Node[0] Epoch[18] Batch [40-60]	Speed: 21434.96 samples/sec	accuracy=nan
2023-03-21 20:42:31,424 Node[0] Epoch[18] Batch [60-80]	Speed: 21479.19 samples/sec	accuracy=nan
2023-03-21 20:42:34,461 Node[0] Epoch[18] Batch [80-100]	Speed: 21498.29 samples/sec	accuracy=nan
2023-03-21 20:42:37,501 Node[0] Epoch[18] Batch [100-120]	Speed: 21473.97 samples/sec	accuracy=nan
2023-03-21 20:42:40,545 Node[0] Epoch[18] Batch [120-140]	Speed: 21446.17 samples/sec	accuracy=nan
2023-03-21 20:42:43,584 Node[0] Epoch[18] Batch [140-160]	Speed: 21476.71 samples/sec	accuracy=nan
2023-03-21 20:42:46,625 Node[0] Epoch[18] Batch [160-180]	Speed: 21467.28 samples/sec	accuracy=nan
2023-03-21 20:42:49,665 Node[0] Epoch[18] Batch [180-200]	Speed: 21479.19 samples/sec	accuracy=nan
2023-03-21 20:42:52,704 Node[0] Epoch[18] Batch [200-220]	Speed: 21477.48 samples/sec	accuracy=nan
2023-03-21 20:42:55,745 Node[0] Epoch[18] Batch [220-240]	Speed: 21467.94 samples/sec	accuracy=nan
2023-03-21 20:42:58,787 Node[0] Epoch[18] Batch [240-260]	Speed: 21458.15 samples/sec	accuracy=nan
2023-03-21 20:43:01,825 Node[0] Epoch[18] Batch [260-280]	Speed: 21485.39 samples/sec	accuracy=nan
2023-03-21 20:43:04,872 Node[0] Epoch[18] Batch [280-300]	Speed: 21429.24 samples/sec	accuracy=nan
2023-03-21 20:43:07,919 Node[0] Epoch[18] Batch [300-320]	Speed: 21422.73 samples/sec	accuracy=nan
2023-03-21 20:43:10,958 Node[0] Epoch[18] Batch [320-340]	Speed: 21476.87 samples/sec	accuracy=nan
2023-03-21 20:43:14,001 Node[0] Epoch[18] Batch [340-360]	Speed: 21458.65 samples/sec	accuracy=nan
2023-03-21 20:43:17,041 Node[0] Epoch[18] Batch [360-380]	Speed: 21470.64 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679449398713, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-21 20:43:18,714 Node[0] Epoch[18] Time cost=59.618
:::MLLOG {"namespace": "", "time_ms": 1679449398714, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21489.456154380692}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679449398861, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-21 20:43:20,411 Node[0] Epoch[18] Validation-accuracy=0.600480
2023-03-21 20:43:20,412 Node[0] Epoch[18] Validation-correct-count=3753.000000
2023-03-21 20:43:20,412 Node[0] Epoch[18] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679449400497, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
2023-03-21 20:43:20,498 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449400498, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.60562, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-21 20:43:20,498 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:43:20,498 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449400498, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679449400498, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-21 20:43:20,498 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:43:20,498 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:43:20,498 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:43:20,498 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449400498, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-21 20:43:20,498 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:43:23,565 Node[0] Epoch[19] Batch [0-20]	Speed: 21366.57 samples/sec	accuracy=nan
2023-03-21 20:43:26,613 Node[0] Epoch[19] Batch [20-40]	Speed: 21416.63 samples/sec	accuracy=nan
2023-03-21 20:43:29,666 Node[0] Epoch[19] Batch [40-60]	Speed: 21381.20 samples/sec	accuracy=nan
2023-03-21 20:43:32,722 Node[0] Epoch[19] Batch [60-80]	Speed: 21362.39 samples/sec	accuracy=nan
2023-03-21 20:43:35,778 Node[0] Epoch[19] Batch [80-100]	Speed: 21358.18 samples/sec	accuracy=nan
2023-03-21 20:43:38,822 Node[0] Epoch[19] Batch [100-120]	Speed: 21446.03 samples/sec	accuracy=nan
2023-03-21 20:43:41,865 Node[0] Epoch[19] Batch [120-140]	Speed: 21453.54 samples/sec	accuracy=nan
2023-03-21 20:43:44,909 Node[0] Epoch[19] Batch [140-160]	Speed: 21444.82 samples/sec	accuracy=nan
2023-03-21 20:43:47,957 Node[0] Epoch[19] Batch [160-180]	Speed: 21415.00 samples/sec	accuracy=nan
2023-03-21 20:43:51,007 Node[0] Epoch[19] Batch [180-200]	Speed: 21402.76 samples/sec	accuracy=nan
2023-03-21 20:43:54,057 Node[0] Epoch[19] Batch [200-220]	Speed: 21405.53 samples/sec	accuracy=nan
2023-03-21 20:43:57,108 Node[0] Epoch[19] Batch [220-240]	Speed: 21398.03 samples/sec	accuracy=nan
2023-03-21 20:44:00,170 Node[0] Epoch[19] Batch [240-260]	Speed: 21315.59 samples/sec	accuracy=nan
2023-03-21 20:44:03,230 Node[0] Epoch[19] Batch [260-280]	Speed: 21335.89 samples/sec	accuracy=nan
2023-03-21 20:44:06,273 Node[0] Epoch[19] Batch [280-300]	Speed: 21455.71 samples/sec	accuracy=nan
2023-03-21 20:44:09,315 Node[0] Epoch[19] Batch [300-320]	Speed: 21456.91 samples/sec	accuracy=nan
2023-03-21 20:44:12,360 Node[0] Epoch[19] Batch [320-340]	Speed: 21441.63 samples/sec	accuracy=nan
2023-03-21 20:44:15,406 Node[0] Epoch[19] Batch [340-360]	Speed: 21429.47 samples/sec	accuracy=nan
2023-03-21 20:44:18,448 Node[0] Epoch[19] Batch [360-380]	Speed: 21459.26 samples/sec	accuracy=nan
2023-03-21 20:44:20,270 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:44:20,270 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:44:20,270 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:44:20,270 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:44:20,270 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:44:20,270 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:44:20,270 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449460270, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-21 20:44:20,271 Node[0] Epoch[19] Time cost=59.773
:::MLLOG {"namespace": "", "time_ms": 1679449460271, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21433.859949793765}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679449460272, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-21 20:44:20,272 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:44:23,471 Node[0] Epoch[20] Batch [0-20]	Speed: 21423.32 samples/sec	accuracy=nan
2023-03-21 20:44:26,513 Node[0] Epoch[20] Batch [20-40]	Speed: 21461.67 samples/sec	accuracy=nan
2023-03-21 20:44:29,557 Node[0] Epoch[20] Batch [40-60]	Speed: 21444.61 samples/sec	accuracy=nan
2023-03-21 20:44:32,601 Node[0] Epoch[20] Batch [60-80]	Speed: 21446.01 samples/sec	accuracy=nan
2023-03-21 20:44:35,643 Node[0] Epoch[20] Batch [80-100]	Speed: 21460.92 samples/sec	accuracy=nan
2023-03-21 20:44:38,681 Node[0] Epoch[20] Batch [100-120]	Speed: 21482.58 samples/sec	accuracy=nan
2023-03-21 20:44:41,726 Node[0] Epoch[20] Batch [120-140]	Speed: 21439.30 samples/sec	accuracy=nan
2023-03-21 20:44:44,772 Node[0] Epoch[20] Batch [140-160]	Speed: 21433.14 samples/sec	accuracy=nan
2023-03-21 20:44:47,820 Node[0] Epoch[20] Batch [160-180]	Speed: 21417.61 samples/sec	accuracy=nan
2023-03-21 20:44:50,874 Node[0] Epoch[20] Batch [180-200]	Speed: 21375.42 samples/sec	accuracy=nan
2023-03-21 20:44:53,919 Node[0] Epoch[20] Batch [200-220]	Speed: 21437.36 samples/sec	accuracy=nan
2023-03-21 20:44:56,962 Node[0] Epoch[20] Batch [220-240]	Speed: 21450.37 samples/sec	accuracy=nan
2023-03-21 20:45:00,002 Node[0] Epoch[20] Batch [240-260]	Speed: 21474.68 samples/sec	accuracy=nan
2023-03-21 20:45:03,048 Node[0] Epoch[20] Batch [260-280]	Speed: 21429.74 samples/sec	accuracy=nan
2023-03-21 20:45:06,089 Node[0] Epoch[20] Batch [280-300]	Speed: 21468.86 samples/sec	accuracy=nan
2023-03-21 20:45:09,137 Node[0] Epoch[20] Batch [300-320]	Speed: 21417.78 samples/sec	accuracy=nan
2023-03-21 20:45:12,185 Node[0] Epoch[20] Batch [320-340]	Speed: 21419.29 samples/sec	accuracy=nan
2023-03-21 20:45:15,231 Node[0] Epoch[20] Batch [340-360]	Speed: 21432.88 samples/sec	accuracy=nan
2023-03-21 20:45:18,276 Node[0] Epoch[20] Batch [360-380]	Speed: 21437.92 samples/sec	accuracy=nan
2023-03-21 20:45:19,946 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:45:19,946 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:45:19,947 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449519946, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-21 20:45:19,947 Node[0] Epoch[20] Time cost=59.675
2023-03-21 20:45:19,947 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:45:19,947 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449519947, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21469.135155044234}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
2023-03-21 20:45:19,947 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449519947, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-21 20:45:19,947 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:45:19,947 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:45:23,150 Node[0] Epoch[21] Batch [0-20]	Speed: 21432.17 samples/sec	accuracy=nan
2023-03-21 20:45:26,197 Node[0] Epoch[21] Batch [20-40]	Speed: 21427.35 samples/sec	accuracy=nan
2023-03-21 20:45:29,257 Node[0] Epoch[21] Batch [40-60]	Speed: 21335.96 samples/sec	accuracy=nan
2023-03-21 20:45:32,315 Node[0] Epoch[21] Batch [60-80]	Speed: 21345.69 samples/sec	accuracy=nan
2023-03-21 20:45:35,357 Node[0] Epoch[21] Batch [80-100]	Speed: 21457.49 samples/sec	accuracy=nan
2023-03-21 20:45:38,403 Node[0] Epoch[21] Batch [100-120]	Speed: 21428.82 samples/sec	accuracy=nan
2023-03-21 20:45:41,449 Node[0] Epoch[21] Batch [120-140]	Speed: 21436.67 samples/sec	accuracy=nan
2023-03-21 20:45:44,496 Node[0] Epoch[21] Batch [140-160]	Speed: 21419.72 samples/sec	accuracy=nan
2023-03-21 20:45:47,542 Node[0] Epoch[21] Batch [160-180]	Speed: 21431.59 samples/sec	accuracy=nan
2023-03-21 20:45:50,592 Node[0] Epoch[21] Batch [180-200]	Speed: 21402.67 samples/sec	accuracy=nan
2023-03-21 20:45:53,639 Node[0] Epoch[21] Batch [200-220]	Speed: 21424.14 samples/sec	accuracy=nan
2023-03-21 20:45:56,682 Node[0] Epoch[21] Batch [220-240]	Speed: 21452.06 samples/sec	accuracy=nan
2023-03-21 20:45:59,734 Node[0] Epoch[21] Batch [240-260]	Speed: 21389.38 samples/sec	accuracy=nan
2023-03-21 20:46:02,778 Node[0] Epoch[21] Batch [260-280]	Speed: 21451.28 samples/sec	accuracy=nan
2023-03-21 20:46:05,822 Node[0] Epoch[21] Batch [280-300]	Speed: 21444.73 samples/sec	accuracy=nan
2023-03-21 20:46:08,874 Node[0] Epoch[21] Batch [300-320]	Speed: 21389.35 samples/sec	accuracy=nan
2023-03-21 20:46:11,919 Node[0] Epoch[21] Batch [320-340]	Speed: 21437.13 samples/sec	accuracy=nan
2023-03-21 20:46:14,961 Node[0] Epoch[21] Batch [340-360]	Speed: 21455.47 samples/sec	accuracy=nan
2023-03-21 20:46:18,008 Node[0] Epoch[21] Batch [360-380]	Speed: 21425.55 samples/sec	accuracy=nan
2023-03-21 20:46:19,833 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:46:19,833 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:46:19,834 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:46:19,834 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:46:19,834 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:46:19,834 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:46:19,834 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449579834, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-21 20:46:19,835 Node[0] Epoch[21] Time cost=59.888
:::MLLOG {"namespace": "", "time_ms": 1679449579835, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21392.83060807369}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679449579836, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-21 20:46:19,836 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:46:23,030 Node[0] Epoch[22] Batch [0-20]	Speed: 21443.28 samples/sec	accuracy=nan
2023-03-21 20:46:26,075 Node[0] Epoch[22] Batch [20-40]	Speed: 21441.53 samples/sec	accuracy=nan
2023-03-21 20:46:29,118 Node[0] Epoch[22] Batch [40-60]	Speed: 21450.20 samples/sec	accuracy=nan
2023-03-21 20:46:32,165 Node[0] Epoch[22] Batch [60-80]	Speed: 21423.03 samples/sec	accuracy=nan
2023-03-21 20:46:35,207 Node[0] Epoch[22] Batch [80-100]	Speed: 21456.74 samples/sec	accuracy=nan
2023-03-21 20:46:38,253 Node[0] Epoch[22] Batch [100-120]	Speed: 21431.22 samples/sec	accuracy=nan
2023-03-21 20:46:41,299 Node[0] Epoch[22] Batch [120-140]	Speed: 21436.61 samples/sec	accuracy=nan
2023-03-21 20:46:44,346 Node[0] Epoch[22] Batch [140-160]	Speed: 21419.51 samples/sec	accuracy=nan
2023-03-21 20:46:47,400 Node[0] Epoch[22] Batch [160-180]	Speed: 21381.81 samples/sec	accuracy=nan
2023-03-21 20:46:50,446 Node[0] Epoch[22] Batch [180-200]	Speed: 21427.76 samples/sec	accuracy=nan
2023-03-21 20:46:53,496 Node[0] Epoch[22] Batch [200-220]	Speed: 21405.01 samples/sec	accuracy=nan
2023-03-21 20:46:56,543 Node[0] Epoch[22] Batch [220-240]	Speed: 21425.18 samples/sec	accuracy=nan
2023-03-21 20:46:59,594 Node[0] Epoch[22] Batch [240-260]	Speed: 21393.68 samples/sec	accuracy=nan
2023-03-21 20:47:02,655 Node[0] Epoch[22] Batch [260-280]	Speed: 21326.38 samples/sec	accuracy=nan
2023-03-21 20:47:05,708 Node[0] Epoch[22] Batch [280-300]	Speed: 21382.23 samples/sec	accuracy=nan
2023-03-21 20:47:08,755 Node[0] Epoch[22] Batch [300-320]	Speed: 21421.21 samples/sec	accuracy=nan
2023-03-21 20:47:11,810 Node[0] Epoch[22] Batch [320-340]	Speed: 21371.15 samples/sec	accuracy=nan
2023-03-21 20:47:14,868 Node[0] Epoch[22] Batch [340-360]	Speed: 21344.38 samples/sec	accuracy=nan
2023-03-21 20:47:17,918 Node[0] Epoch[22] Batch [360-380]	Speed: 21405.64 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679449639586, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-21 20:47:19,587 Node[0] Epoch[22] Time cost=59.751
:::MLLOG {"namespace": "", "time_ms": 1679449639587, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21441.834110120435}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679449639733, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-21 20:47:21,233 Node[0] Epoch[22] Validation-accuracy=0.685920
2023-03-21 20:47:21,234 Node[0] Epoch[22] Validation-correct-count=4287.000000
2023-03-21 20:47:21,234 Node[0] Epoch[22] Validation-total-count=6250.000000
2023-03-21 20:47:21,379 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:47:21,379 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:47:21,379 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:47:21,379 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:47:21,379 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:47:21,379 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:47:21,379 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449641379, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679449641380, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.68344, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679449641380, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679449641380, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679449641380, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-21 20:47:21,380 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:47:24,435 Node[0] Epoch[23] Batch [0-20]	Speed: 21492.86 samples/sec	accuracy=nan
2023-03-21 20:47:27,475 Node[0] Epoch[23] Batch [20-40]	Speed: 21475.59 samples/sec	accuracy=nan
2023-03-21 20:47:30,522 Node[0] Epoch[23] Batch [40-60]	Speed: 21427.69 samples/sec	accuracy=nan
2023-03-21 20:47:33,568 Node[0] Epoch[23] Batch [60-80]	Speed: 21429.86 samples/sec	accuracy=nan
2023-03-21 20:47:36,609 Node[0] Epoch[23] Batch [80-100]	Speed: 21465.86 samples/sec	accuracy=nan
2023-03-21 20:47:39,660 Node[0] Epoch[23] Batch [100-120]	Speed: 21396.61 samples/sec	accuracy=nan
2023-03-21 20:47:42,708 Node[0] Epoch[23] Batch [120-140]	Speed: 21417.15 samples/sec	accuracy=nan
2023-03-21 20:47:45,756 Node[0] Epoch[23] Batch [140-160]	Speed: 21415.34 samples/sec	accuracy=nan
2023-03-21 20:47:48,802 Node[0] Epoch[23] Batch [160-180]	Speed: 21433.98 samples/sec	accuracy=nan
2023-03-21 20:47:51,847 Node[0] Epoch[23] Batch [180-200]	Speed: 21438.70 samples/sec	accuracy=nan
2023-03-21 20:47:54,888 Node[0] Epoch[23] Batch [200-220]	Speed: 21465.20 samples/sec	accuracy=nan
2023-03-21 20:47:57,930 Node[0] Epoch[23] Batch [220-240]	Speed: 21461.44 samples/sec	accuracy=nan
2023-03-21 20:48:00,974 Node[0] Epoch[23] Batch [240-260]	Speed: 21442.67 samples/sec	accuracy=nan
2023-03-21 20:48:04,021 Node[0] Epoch[23] Batch [260-280]	Speed: 21429.42 samples/sec	accuracy=nan
2023-03-21 20:48:07,062 Node[0] Epoch[23] Batch [280-300]	Speed: 21460.74 samples/sec	accuracy=nan
2023-03-21 20:48:10,103 Node[0] Epoch[23] Batch [300-320]	Speed: 21469.18 samples/sec	accuracy=nan
2023-03-21 20:48:13,143 Node[0] Epoch[23] Batch [320-340]	Speed: 21472.90 samples/sec	accuracy=nan
2023-03-21 20:48:16,195 Node[0] Epoch[23] Batch [340-360]	Speed: 21391.18 samples/sec	accuracy=nan
2023-03-21 20:48:19,245 Node[0] Epoch[23] Batch [360-380]	Speed: 21398.68 samples/sec	accuracy=nan
2023-03-21 20:48:21,078 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:48:21,078 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:48:21,078 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:48:21,078 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:48:21,078 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:48:21,078 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:48:21,079 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449701079, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-21 20:48:21,079 Node[0] Epoch[23] Time cost=59.699
:::MLLOG {"namespace": "", "time_ms": 1679449701079, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21460.450122504913}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679449701080, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-21 20:48:21,080 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:48:24,286 Node[0] Epoch[24] Batch [0-20]	Speed: 21371.96 samples/sec	accuracy=nan
2023-03-21 20:48:27,326 Node[0] Epoch[24] Batch [20-40]	Speed: 21471.98 samples/sec	accuracy=nan
2023-03-21 20:48:30,370 Node[0] Epoch[24] Batch [40-60]	Speed: 21445.60 samples/sec	accuracy=nan
2023-03-21 20:48:33,411 Node[0] Epoch[24] Batch [60-80]	Speed: 21467.49 samples/sec	accuracy=nan
2023-03-21 20:48:36,457 Node[0] Epoch[24] Batch [80-100]	Speed: 21432.62 samples/sec	accuracy=nan
2023-03-21 20:48:39,499 Node[0] Epoch[24] Batch [100-120]	Speed: 21456.48 samples/sec	accuracy=nan
2023-03-21 20:48:42,542 Node[0] Epoch[24] Batch [120-140]	Speed: 21457.14 samples/sec	accuracy=nan
2023-03-21 20:48:45,589 Node[0] Epoch[24] Batch [140-160]	Speed: 21418.75 samples/sec	accuracy=nan
2023-03-21 20:48:48,629 Node[0] Epoch[24] Batch [160-180]	Speed: 21479.47 samples/sec	accuracy=nan
2023-03-21 20:48:51,675 Node[0] Epoch[24] Batch [180-200]	Speed: 21430.73 samples/sec	accuracy=nan
2023-03-21 20:48:54,712 Node[0] Epoch[24] Batch [200-220]	Speed: 21492.06 samples/sec	accuracy=nan
2023-03-21 20:48:57,756 Node[0] Epoch[24] Batch [220-240]	Speed: 21445.38 samples/sec	accuracy=nan
2023-03-21 20:49:00,796 Node[0] Epoch[24] Batch [240-260]	Speed: 21471.06 samples/sec	accuracy=nan
2023-03-21 20:49:03,839 Node[0] Epoch[24] Batch [260-280]	Speed: 21456.23 samples/sec	accuracy=nan
2023-03-21 20:49:06,880 Node[0] Epoch[24] Batch [280-300]	Speed: 21468.23 samples/sec	accuracy=nan
2023-03-21 20:49:12,258 Node[0] Epoch[24] Batch [300-320]	Speed: 12138.05 samples/sec	accuracy=nan
2023-03-21 20:49:15,288 Node[0] Epoch[24] Batch [320-340]	Speed: 21541.07 samples/sec	accuracy=nan
2023-03-21 20:49:18,328 Node[0] Epoch[24] Batch [340-360]	Speed: 21478.22 samples/sec	accuracy=nan
2023-03-21 20:49:21,369 Node[0] Epoch[24] Batch [360-380]	Speed: 21461.05 samples/sec	accuracy=nan
2023-03-21 20:49:23,042 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:49:23,042 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:49:23,042 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:49:23,042 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:49:23,043 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:49:23,043 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449763042, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-21 20:49:23,043 Node[0] Epoch[24] Time cost=61.964
:::MLLOG {"namespace": "", "time_ms": 1679449763043, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20676.155877863923}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
2023-03-21 20:49:23,043 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449763044, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-21 20:49:23,044 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:49:26,232 Node[0] Epoch[25] Batch [0-20]	Speed: 21519.14 samples/sec	accuracy=nan
2023-03-21 20:49:29,270 Node[0] Epoch[25] Batch [20-40]	Speed: 21492.39 samples/sec	accuracy=nan
2023-03-21 20:49:32,312 Node[0] Epoch[25] Batch [40-60]	Speed: 21456.53 samples/sec	accuracy=nan
2023-03-21 20:49:35,350 Node[0] Epoch[25] Batch [60-80]	Speed: 21488.61 samples/sec	accuracy=nan
2023-03-21 20:49:38,391 Node[0] Epoch[25] Batch [80-100]	Speed: 21466.44 samples/sec	accuracy=nan
2023-03-21 20:49:41,436 Node[0] Epoch[25] Batch [100-120]	Speed: 21440.01 samples/sec	accuracy=nan
2023-03-21 20:49:44,479 Node[0] Epoch[25] Batch [120-140]	Speed: 21450.35 samples/sec	accuracy=nan
2023-03-21 20:49:47,522 Node[0] Epoch[25] Batch [140-160]	Speed: 21451.44 samples/sec	accuracy=nan
2023-03-21 20:49:50,564 Node[0] Epoch[25] Batch [160-180]	Speed: 21466.07 samples/sec	accuracy=nan
2023-03-21 20:49:53,604 Node[0] Epoch[25] Batch [180-200]	Speed: 21470.86 samples/sec	accuracy=nan
2023-03-21 20:49:56,647 Node[0] Epoch[25] Batch [200-220]	Speed: 21454.18 samples/sec	accuracy=nan
2023-03-21 20:49:59,690 Node[0] Epoch[25] Batch [220-240]	Speed: 21451.65 samples/sec	accuracy=nan
2023-03-21 20:50:02,737 Node[0] Epoch[25] Batch [240-260]	Speed: 21425.57 samples/sec	accuracy=nan
2023-03-21 20:50:05,781 Node[0] Epoch[25] Batch [260-280]	Speed: 21442.22 samples/sec	accuracy=nan
2023-03-21 20:50:08,829 Node[0] Epoch[25] Batch [280-300]	Speed: 21420.92 samples/sec	accuracy=nan
2023-03-21 20:50:11,869 Node[0] Epoch[25] Batch [300-320]	Speed: 21467.21 samples/sec	accuracy=nan
2023-03-21 20:50:14,911 Node[0] Epoch[25] Batch [320-340]	Speed: 21459.28 samples/sec	accuracy=nan
2023-03-21 20:50:17,959 Node[0] Epoch[25] Batch [340-360]	Speed: 21418.43 samples/sec	accuracy=nan
2023-03-21 20:50:21,005 Node[0] Epoch[25] Batch [360-380]	Speed: 21430.97 samples/sec	accuracy=nan
2023-03-21 20:50:22,827 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:50:22,827 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:50:22,827 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:50:22,827 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449822827, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-21 20:50:22,827 Node[0] Epoch[25] Time cost=59.784
2023-03-21 20:50:22,827 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449822828, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21430.095545184213}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679449822828, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-21 20:50:22,828 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:50:22,828 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:50:22,828 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:50:26,026 Node[0] Epoch[26] Batch [0-20]	Speed: 21435.27 samples/sec	accuracy=nan
2023-03-21 20:50:29,067 Node[0] Epoch[26] Batch [20-40]	Speed: 21465.42 samples/sec	accuracy=nan
2023-03-21 20:50:32,108 Node[0] Epoch[26] Batch [40-60]	Speed: 21467.81 samples/sec	accuracy=nan
2023-03-21 20:50:35,152 Node[0] Epoch[26] Batch [60-80]	Speed: 21439.72 samples/sec	accuracy=nan
2023-03-21 20:50:38,192 Node[0] Epoch[26] Batch [80-100]	Speed: 21476.44 samples/sec	accuracy=nan
2023-03-21 20:50:41,233 Node[0] Epoch[26] Batch [100-120]	Speed: 21467.87 samples/sec	accuracy=nan
2023-03-21 20:50:44,275 Node[0] Epoch[26] Batch [120-140]	Speed: 21459.98 samples/sec	accuracy=nan
2023-03-21 20:50:47,321 Node[0] Epoch[26] Batch [140-160]	Speed: 21426.72 samples/sec	accuracy=nan
2023-03-21 20:50:50,370 Node[0] Epoch[26] Batch [160-180]	Speed: 21414.29 samples/sec	accuracy=nan
2023-03-21 20:50:53,419 Node[0] Epoch[26] Batch [180-200]	Speed: 21406.94 samples/sec	accuracy=nan
2023-03-21 20:50:56,465 Node[0] Epoch[26] Batch [200-220]	Speed: 21431.58 samples/sec	accuracy=nan
2023-03-21 20:50:59,509 Node[0] Epoch[26] Batch [220-240]	Speed: 21447.34 samples/sec	accuracy=nan
2023-03-21 20:51:02,558 Node[0] Epoch[26] Batch [240-260]	Speed: 21409.20 samples/sec	accuracy=nan
2023-03-21 20:51:05,602 Node[0] Epoch[26] Batch [260-280]	Speed: 21444.54 samples/sec	accuracy=nan
2023-03-21 20:51:08,646 Node[0] Epoch[26] Batch [280-300]	Speed: 21447.77 samples/sec	accuracy=nan
2023-03-21 20:51:11,685 Node[0] Epoch[26] Batch [300-320]	Speed: 21481.95 samples/sec	accuracy=nan
2023-03-21 20:51:14,727 Node[0] Epoch[26] Batch [320-340]	Speed: 21455.55 samples/sec	accuracy=nan
2023-03-21 20:51:17,771 Node[0] Epoch[26] Batch [340-360]	Speed: 21445.20 samples/sec	accuracy=nan
2023-03-21 20:51:20,818 Node[0] Epoch[26] Batch [360-380]	Speed: 21425.34 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679449882487, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-21 20:51:22,488 Node[0] Epoch[26] Time cost=59.660
:::MLLOG {"namespace": "", "time_ms": 1679449882488, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21474.629540500046}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679449882634, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-21 20:51:24,090 Node[0] Epoch[26] Validation-accuracy=0.718880
2023-03-21 20:51:24,090 Node[0] Epoch[26] Validation-correct-count=4493.000000
2023-03-21 20:51:24,090 Node[0] Epoch[26] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679449884272, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679449884272, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72418, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
2023-03-21 20:51:24,272 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:51:24,272 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449884272, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679449884272, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-21 20:51:24,272 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:51:24,272 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:51:24,272 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:51:24,272 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:51:24,272 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449884272, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-21 20:51:24,273 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:51:27,338 Node[0] Epoch[27] Batch [0-20]	Speed: 21380.13 samples/sec	accuracy=nan
2023-03-21 20:51:30,383 Node[0] Epoch[27] Batch [20-40]	Speed: 21435.27 samples/sec	accuracy=nan
2023-03-21 20:51:33,428 Node[0] Epoch[27] Batch [40-60]	Speed: 21441.17 samples/sec	accuracy=nan
2023-03-21 20:51:36,469 Node[0] Epoch[27] Batch [60-80]	Speed: 21466.42 samples/sec	accuracy=nan
2023-03-21 20:51:39,515 Node[0] Epoch[27] Batch [80-100]	Speed: 21432.29 samples/sec	accuracy=nan
2023-03-21 20:51:42,560 Node[0] Epoch[27] Batch [100-120]	Speed: 21439.34 samples/sec	accuracy=nan
2023-03-21 20:51:45,601 Node[0] Epoch[27] Batch [120-140]	Speed: 21462.90 samples/sec	accuracy=nan
2023-03-21 20:51:48,642 Node[0] Epoch[27] Batch [140-160]	Speed: 21467.76 samples/sec	accuracy=nan
2023-03-21 20:51:51,699 Node[0] Epoch[27] Batch [160-180]	Speed: 21354.41 samples/sec	accuracy=nan
2023-03-21 20:51:54,744 Node[0] Epoch[27] Batch [180-200]	Speed: 21443.69 samples/sec	accuracy=nan
2023-03-21 20:51:57,801 Node[0] Epoch[27] Batch [200-220]	Speed: 21348.29 samples/sec	accuracy=nan
2023-03-21 20:52:00,858 Node[0] Epoch[27] Batch [220-240]	Speed: 21353.95 samples/sec	accuracy=nan
2023-03-21 20:52:03,904 Node[0] Epoch[27] Batch [240-260]	Speed: 21436.07 samples/sec	accuracy=nan
2023-03-21 20:52:06,957 Node[0] Epoch[27] Batch [260-280]	Speed: 21382.71 samples/sec	accuracy=nan
2023-03-21 20:52:10,001 Node[0] Epoch[27] Batch [280-300]	Speed: 21439.98 samples/sec	accuracy=nan
2023-03-21 20:52:15,349 Node[0] Epoch[27] Batch [300-320]	Speed: 12207.67 samples/sec	accuracy=nan
2023-03-21 20:52:18,385 Node[0] Epoch[27] Batch [320-340]	Speed: 21502.54 samples/sec	accuracy=nan
2023-03-21 20:52:21,423 Node[0] Epoch[27] Batch [340-360]	Speed: 21483.09 samples/sec	accuracy=nan
2023-03-21 20:52:24,461 Node[0] Epoch[27] Batch [360-380]	Speed: 21488.50 samples/sec	accuracy=nan
2023-03-21 20:52:26,280 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:52:26,280 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:52:26,280 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:52:26,280 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:52:26,280 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:52:26,280 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:52:26,281 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679449946280, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-21 20:52:26,281 Node[0] Epoch[27] Time cost=62.009
:::MLLOG {"namespace": "", "time_ms": 1679449946281, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20661.06896042816}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679449946282, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-21 20:52:26,282 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:52:29,476 Node[0] Epoch[28] Batch [0-20]	Speed: 21459.58 samples/sec	accuracy=nan
2023-03-21 20:52:32,521 Node[0] Epoch[28] Batch [20-40]	Speed: 21435.97 samples/sec	accuracy=nan
2023-03-21 20:52:35,565 Node[0] Epoch[28] Batch [40-60]	Speed: 21445.60 samples/sec	accuracy=nan
2023-03-21 20:52:38,612 Node[0] Epoch[28] Batch [60-80]	Speed: 21424.40 samples/sec	accuracy=nan
2023-03-21 20:52:41,667 Node[0] Epoch[28] Batch [80-100]	Speed: 21367.65 samples/sec	accuracy=nan
2023-03-21 20:52:44,727 Node[0] Epoch[28] Batch [100-120]	Speed: 21335.36 samples/sec	accuracy=nan
2023-03-21 20:52:47,776 Node[0] Epoch[28] Batch [120-140]	Speed: 21409.26 samples/sec	accuracy=nan
2023-03-21 20:52:50,823 Node[0] Epoch[28] Batch [140-160]	Speed: 21423.11 samples/sec	accuracy=nan
2023-03-21 20:52:53,878 Node[0] Epoch[28] Batch [160-180]	Speed: 21366.80 samples/sec	accuracy=nan
2023-03-21 20:52:56,930 Node[0] Epoch[28] Batch [180-200]	Speed: 21391.98 samples/sec	accuracy=nan
2023-03-21 20:52:59,976 Node[0] Epoch[28] Batch [200-220]	Speed: 21429.79 samples/sec	accuracy=nan
2023-03-21 20:53:03,023 Node[0] Epoch[28] Batch [220-240]	Speed: 21424.20 samples/sec	accuracy=nan
2023-03-21 20:53:06,069 Node[0] Epoch[28] Batch [240-260]	Speed: 21434.68 samples/sec	accuracy=nan
2023-03-21 20:53:09,115 Node[0] Epoch[28] Batch [260-280]	Speed: 21432.68 samples/sec	accuracy=nan
2023-03-21 20:53:12,162 Node[0] Epoch[28] Batch [280-300]	Speed: 21425.14 samples/sec	accuracy=nan
2023-03-21 20:53:15,207 Node[0] Epoch[28] Batch [300-320]	Speed: 21437.00 samples/sec	accuracy=nan
2023-03-21 20:53:18,250 Node[0] Epoch[28] Batch [320-340]	Speed: 21448.60 samples/sec	accuracy=nan
2023-03-21 20:53:21,297 Node[0] Epoch[28] Batch [340-360]	Speed: 21423.34 samples/sec	accuracy=nan
2023-03-21 20:53:24,359 Node[0] Epoch[28] Batch [360-380]	Speed: 21324.99 samples/sec	accuracy=nan
2023-03-21 20:53:26,037 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:53:26,037 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:53:26,037 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450006037, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-21 20:53:26,037 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:53:26,038 Node[0] Epoch[28] Time cost=59.756
:::MLLOG {"namespace": "", "time_ms": 1679450006038, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21440.059708336797}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
2023-03-21 20:53:26,037 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:53:26,038 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450006038, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-21 20:53:26,038 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:53:26,038 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:53:29,241 Node[0] Epoch[29] Batch [0-20]	Speed: 21444.97 samples/sec	accuracy=nan
2023-03-21 20:53:32,289 Node[0] Epoch[29] Batch [20-40]	Speed: 21416.12 samples/sec	accuracy=nan
2023-03-21 20:53:35,332 Node[0] Epoch[29] Batch [40-60]	Speed: 21450.42 samples/sec	accuracy=nan
2023-03-21 20:53:38,378 Node[0] Epoch[29] Batch [60-80]	Speed: 21433.45 samples/sec	accuracy=nan
2023-03-21 20:53:41,427 Node[0] Epoch[29] Batch [80-100]	Speed: 21410.57 samples/sec	accuracy=nan
2023-03-21 20:53:44,476 Node[0] Epoch[29] Batch [100-120]	Speed: 21412.96 samples/sec	accuracy=nan
2023-03-21 20:53:47,535 Node[0] Epoch[29] Batch [120-140]	Speed: 21340.98 samples/sec	accuracy=nan
2023-03-21 20:53:50,595 Node[0] Epoch[29] Batch [140-160]	Speed: 21328.65 samples/sec	accuracy=nan
2023-03-21 20:53:53,637 Node[0] Epoch[29] Batch [160-180]	Speed: 21457.03 samples/sec	accuracy=nan
2023-03-21 20:53:56,681 Node[0] Epoch[29] Batch [180-200]	Speed: 21448.69 samples/sec	accuracy=nan
2023-03-21 20:53:59,736 Node[0] Epoch[29] Batch [200-220]	Speed: 21366.63 samples/sec	accuracy=nan
2023-03-21 20:54:02,792 Node[0] Epoch[29] Batch [220-240]	Speed: 21365.64 samples/sec	accuracy=nan
2023-03-21 20:54:08,108 Node[0] Epoch[29] Batch [240-260]	Speed: 12279.95 samples/sec	accuracy=nan
2023-03-21 20:54:11,134 Node[0] Epoch[29] Batch [260-280]	Speed: 21571.44 samples/sec	accuracy=nan
2023-03-21 20:54:14,171 Node[0] Epoch[29] Batch [280-300]	Speed: 21497.26 samples/sec	accuracy=nan
2023-03-21 20:54:19,436 Node[0] Epoch[29] Batch [300-320]	Speed: 12398.66 samples/sec	accuracy=nan
2023-03-21 20:54:22,463 Node[0] Epoch[29] Batch [320-340]	Speed: 21563.56 samples/sec	accuracy=nan
2023-03-21 20:54:25,495 Node[0] Epoch[29] Batch [340-360]	Speed: 21527.37 samples/sec	accuracy=nan
2023-03-21 20:54:28,530 Node[0] Epoch[29] Batch [360-380]	Speed: 21510.36 samples/sec	accuracy=nan
2023-03-21 20:54:30,351 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:54:30,351 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:54:30,351 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:54:30,351 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:54:30,351 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:54:30,351 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450070351, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-21 20:54:30,352 Node[0] Epoch[29] Time cost=64.314
:::MLLOG {"namespace": "", "time_ms": 1679450070352, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 19920.51895408617}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
2023-03-21 20:54:30,352 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450070353, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-21 20:54:30,353 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:54:33,542 Node[0] Epoch[30] Batch [0-20]	Speed: 21491.50 samples/sec	accuracy=nan
2023-03-21 20:54:36,583 Node[0] Epoch[30] Batch [20-40]	Speed: 21468.68 samples/sec	accuracy=nan
2023-03-21 20:54:39,622 Node[0] Epoch[30] Batch [40-60]	Speed: 21482.74 samples/sec	accuracy=nan
2023-03-21 20:54:42,666 Node[0] Epoch[30] Batch [60-80]	Speed: 21440.70 samples/sec	accuracy=nan
2023-03-21 20:54:45,706 Node[0] Epoch[30] Batch [80-100]	Speed: 21475.04 samples/sec	accuracy=nan
2023-03-21 20:54:48,750 Node[0] Epoch[30] Batch [100-120]	Speed: 21448.30 samples/sec	accuracy=nan
2023-03-21 20:54:51,795 Node[0] Epoch[30] Batch [120-140]	Speed: 21435.02 samples/sec	accuracy=nan
2023-03-21 20:54:54,838 Node[0] Epoch[30] Batch [140-160]	Speed: 21455.28 samples/sec	accuracy=nan
2023-03-21 20:54:57,878 Node[0] Epoch[30] Batch [160-180]	Speed: 21470.74 samples/sec	accuracy=nan
2023-03-21 20:55:00,920 Node[0] Epoch[30] Batch [180-200]	Speed: 21461.81 samples/sec	accuracy=nan
2023-03-21 20:55:03,966 Node[0] Epoch[30] Batch [200-220]	Speed: 21431.69 samples/sec	accuracy=nan
2023-03-21 20:55:07,008 Node[0] Epoch[30] Batch [220-240]	Speed: 21457.12 samples/sec	accuracy=nan
2023-03-21 20:55:10,054 Node[0] Epoch[30] Batch [240-260]	Speed: 21432.42 samples/sec	accuracy=nan
2023-03-21 20:55:13,101 Node[0] Epoch[30] Batch [260-280]	Speed: 21428.18 samples/sec	accuracy=nan
2023-03-21 20:55:16,142 Node[0] Epoch[30] Batch [280-300]	Speed: 21460.47 samples/sec	accuracy=nan
2023-03-21 20:55:21,390 Node[0] Epoch[30] Batch [300-320]	Speed: 12439.45 samples/sec	accuracy=nan
2023-03-21 20:55:24,429 Node[0] Epoch[30] Batch [320-340]	Speed: 21479.87 samples/sec	accuracy=nan
2023-03-21 20:55:27,472 Node[0] Epoch[30] Batch [340-360]	Speed: 21456.60 samples/sec	accuracy=nan
2023-03-21 20:55:30,510 Node[0] Epoch[30] Batch [360-380]	Speed: 21488.94 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679450132175, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-21 20:55:32,176 Node[0] Epoch[30] Time cost=61.824
:::MLLOG {"namespace": "", "time_ms": 1679450132177, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20722.901615261013}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679450132322, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-21 20:55:33,961 Node[0] Epoch[30] Validation-accuracy=0.755520
2023-03-21 20:55:33,961 Node[0] Epoch[30] Validation-correct-count=4722.000000
2023-03-21 20:55:33,961 Node[0] Epoch[30] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679450133961, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679450133961, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.74884, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679450133961, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
2023-03-21 20:55:33,961 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:55:33,961 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:55:33,961 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450133962, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-21 20:55:33,961 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:55:33,961 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:55:33,961 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450133962, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-21 20:55:33,961 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:55:33,962 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:55:37,026 Node[0] Epoch[31] Batch [0-20]	Speed: 21408.81 samples/sec	accuracy=nan
2023-03-21 20:55:40,073 Node[0] Epoch[31] Batch [20-40]	Speed: 21427.13 samples/sec	accuracy=nan
2023-03-21 20:55:43,124 Node[0] Epoch[31] Batch [40-60]	Speed: 21394.40 samples/sec	accuracy=nan
2023-03-21 20:55:46,172 Node[0] Epoch[31] Batch [60-80]	Speed: 21416.70 samples/sec	accuracy=nan
2023-03-21 20:55:49,225 Node[0] Epoch[31] Batch [80-100]	Speed: 21388.35 samples/sec	accuracy=nan
2023-03-21 20:55:52,276 Node[0] Epoch[31] Batch [100-120]	Speed: 21392.12 samples/sec	accuracy=nan
2023-03-21 20:55:55,321 Node[0] Epoch[31] Batch [120-140]	Speed: 21438.18 samples/sec	accuracy=nan
2023-03-21 20:55:58,366 Node[0] Epoch[31] Batch [140-160]	Speed: 21440.41 samples/sec	accuracy=nan
2023-03-21 20:56:01,410 Node[0] Epoch[31] Batch [160-180]	Speed: 21446.07 samples/sec	accuracy=nan
2023-03-21 20:56:04,456 Node[0] Epoch[31] Batch [180-200]	Speed: 21429.92 samples/sec	accuracy=nan
2023-03-21 20:56:07,495 Node[0] Epoch[31] Batch [200-220]	Speed: 21481.36 samples/sec	accuracy=nan
2023-03-21 20:56:10,539 Node[0] Epoch[31] Batch [220-240]	Speed: 21448.21 samples/sec	accuracy=nan
2023-03-21 20:56:13,581 Node[0] Epoch[31] Batch [240-260]	Speed: 21459.13 samples/sec	accuracy=nan
2023-03-21 20:56:18,840 Node[0] Epoch[31] Batch [260-280]	Speed: 12412.88 samples/sec	accuracy=nan
2023-03-21 20:56:21,869 Node[0] Epoch[31] Batch [280-300]	Speed: 21549.68 samples/sec	accuracy=nan
2023-03-21 20:56:27,316 Node[0] Epoch[31] Batch [300-320]	Speed: 11984.28 samples/sec	accuracy=nan
2023-03-21 20:56:30,352 Node[0] Epoch[31] Batch [320-340]	Speed: 21503.08 samples/sec	accuracy=nan
2023-03-21 20:56:33,392 Node[0] Epoch[31] Batch [340-360]	Speed: 21472.19 samples/sec	accuracy=nan
2023-03-21 20:56:36,428 Node[0] Epoch[31] Batch [360-380]	Speed: 21502.07 samples/sec	accuracy=nan
2023-03-21 20:56:38,247 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:56:38,247 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:56:38,247 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:56:38,247 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:56:38,247 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:56:38,247 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450198247, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-21 20:56:38,248 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:56:38,248 Node[0] Epoch[31] Time cost=64.286
:::MLLOG {"namespace": "", "time_ms": 1679450198248, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 19929.222578477053}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679450198248, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-21 20:56:38,248 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:56:41,439 Node[0] Epoch[32] Batch [0-20]	Speed: 21475.72 samples/sec	accuracy=nan
2023-03-21 20:56:44,476 Node[0] Epoch[32] Batch [20-40]	Speed: 21496.45 samples/sec	accuracy=nan
2023-03-21 20:56:47,518 Node[0] Epoch[32] Batch [40-60]	Speed: 21456.08 samples/sec	accuracy=nan
2023-03-21 20:56:50,556 Node[0] Epoch[32] Batch [60-80]	Speed: 21490.39 samples/sec	accuracy=nan
2023-03-21 20:56:53,593 Node[0] Epoch[32] Batch [80-100]	Speed: 21489.72 samples/sec	accuracy=nan
2023-03-21 20:56:56,636 Node[0] Epoch[32] Batch [100-120]	Speed: 21452.87 samples/sec	accuracy=nan
2023-03-21 20:56:59,676 Node[0] Epoch[32] Batch [120-140]	Speed: 21478.20 samples/sec	accuracy=nan
2023-03-21 20:57:02,722 Node[0] Epoch[32] Batch [140-160]	Speed: 21429.11 samples/sec	accuracy=nan
2023-03-21 20:57:05,769 Node[0] Epoch[32] Batch [160-180]	Speed: 21424.21 samples/sec	accuracy=nan
2023-03-21 20:57:08,819 Node[0] Epoch[32] Batch [180-200]	Speed: 21400.73 samples/sec	accuracy=nan
2023-03-21 20:57:11,865 Node[0] Epoch[32] Batch [200-220]	Speed: 21431.84 samples/sec	accuracy=nan
2023-03-21 20:57:14,922 Node[0] Epoch[32] Batch [220-240]	Speed: 21356.35 samples/sec	accuracy=nan
2023-03-21 20:57:17,980 Node[0] Epoch[32] Batch [240-260]	Speed: 21349.24 samples/sec	accuracy=nan
2023-03-21 20:57:21,034 Node[0] Epoch[32] Batch [260-280]	Speed: 21375.72 samples/sec	accuracy=nan
2023-03-21 20:57:24,087 Node[0] Epoch[32] Batch [280-300]	Speed: 21379.44 samples/sec	accuracy=nan
2023-03-21 20:57:27,145 Node[0] Epoch[32] Batch [300-320]	Speed: 21350.72 samples/sec	accuracy=nan
2023-03-21 20:57:30,201 Node[0] Epoch[32] Batch [320-340]	Speed: 21361.34 samples/sec	accuracy=nan
2023-03-21 20:57:35,631 Node[0] Epoch[32] Batch [340-360]	Speed: 12020.43 samples/sec	accuracy=nan
2023-03-21 20:57:38,664 Node[0] Epoch[32] Batch [360-380]	Speed: 21525.14 samples/sec	accuracy=nan
2023-03-21 20:57:40,331 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:57:40,331 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:57:40,331 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:57:40,331 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:57:40,331 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:57:40,331 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:57:40,331 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450260331, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-21 20:57:40,332 Node[0] Epoch[32] Time cost=62.084
:::MLLOG {"namespace": "", "time_ms": 1679450260332, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20636.153175461626}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679450260332, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-21 20:57:40,333 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:57:43,521 Node[0] Epoch[33] Batch [0-20]	Speed: 21514.01 samples/sec	accuracy=nan
2023-03-21 20:57:46,559 Node[0] Epoch[33] Batch [20-40]	Speed: 21485.36 samples/sec	accuracy=nan
2023-03-21 20:57:49,600 Node[0] Epoch[33] Batch [40-60]	Speed: 21463.56 samples/sec	accuracy=nan
2023-03-21 20:57:52,640 Node[0] Epoch[33] Batch [60-80]	Speed: 21475.65 samples/sec	accuracy=nan
2023-03-21 20:57:55,679 Node[0] Epoch[33] Batch [80-100]	Speed: 21484.88 samples/sec	accuracy=nan
2023-03-21 20:57:58,720 Node[0] Epoch[33] Batch [100-120]	Speed: 21465.84 samples/sec	accuracy=nan
2023-03-21 20:58:01,765 Node[0] Epoch[33] Batch [120-140]	Speed: 21432.11 samples/sec	accuracy=nan
2023-03-21 20:58:04,809 Node[0] Epoch[33] Batch [140-160]	Speed: 21446.23 samples/sec	accuracy=nan
2023-03-21 20:58:07,850 Node[0] Epoch[33] Batch [160-180]	Speed: 21466.65 samples/sec	accuracy=nan
2023-03-21 20:58:10,888 Node[0] Epoch[33] Batch [180-200]	Speed: 21487.24 samples/sec	accuracy=nan
2023-03-21 20:58:13,931 Node[0] Epoch[33] Batch [200-220]	Speed: 21453.48 samples/sec	accuracy=nan
2023-03-21 20:58:16,973 Node[0] Epoch[33] Batch [220-240]	Speed: 21460.47 samples/sec	accuracy=nan
2023-03-21 20:58:20,019 Node[0] Epoch[33] Batch [240-260]	Speed: 21429.61 samples/sec	accuracy=nan
2023-03-21 20:58:23,061 Node[0] Epoch[33] Batch [260-280]	Speed: 21463.65 samples/sec	accuracy=nan
2023-03-21 20:58:26,104 Node[0] Epoch[33] Batch [280-300]	Speed: 21450.47 samples/sec	accuracy=nan
2023-03-21 20:58:29,146 Node[0] Epoch[33] Batch [300-320]	Speed: 21461.13 samples/sec	accuracy=nan
2023-03-21 20:58:32,188 Node[0] Epoch[33] Batch [320-340]	Speed: 21455.47 samples/sec	accuracy=nan
2023-03-21 20:58:35,233 Node[0] Epoch[33] Batch [340-360]	Speed: 21442.32 samples/sec	accuracy=nan
2023-03-21 20:58:38,279 Node[0] Epoch[33] Batch [360-380]	Speed: 21433.43 samples/sec	accuracy=nan
2023-03-21 20:58:40,099 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:58:40,099 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:58:40,099 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450320099, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-21 20:58:40,100 Node[0] Epoch[33] Time cost=59.767
2023-03-21 20:58:40,100 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450320100, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21435.93628478098}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
2023-03-21 20:58:40,100 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:58:40,100 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:58:40,100 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679450320100, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-21 20:58:40,100 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 20:58:43,301 Node[0] Epoch[34] Batch [0-20]	Speed: 21452.44 samples/sec	accuracy=nan
2023-03-21 20:58:46,343 Node[0] Epoch[34] Batch [20-40]	Speed: 21457.78 samples/sec	accuracy=nan
2023-03-21 20:58:49,391 Node[0] Epoch[34] Batch [40-60]	Speed: 21420.78 samples/sec	accuracy=nan
2023-03-21 20:58:52,435 Node[0] Epoch[34] Batch [60-80]	Speed: 21441.86 samples/sec	accuracy=nan
2023-03-21 20:58:55,477 Node[0] Epoch[34] Batch [80-100]	Speed: 21463.40 samples/sec	accuracy=nan
2023-03-21 20:58:58,521 Node[0] Epoch[34] Batch [100-120]	Speed: 21443.41 samples/sec	accuracy=nan
2023-03-21 20:59:01,565 Node[0] Epoch[34] Batch [120-140]	Speed: 21443.57 samples/sec	accuracy=nan
2023-03-21 20:59:04,616 Node[0] Epoch[34] Batch [140-160]	Speed: 21396.28 samples/sec	accuracy=nan
2023-03-21 20:59:07,661 Node[0] Epoch[34] Batch [160-180]	Speed: 21441.52 samples/sec	accuracy=nan
2023-03-21 20:59:10,708 Node[0] Epoch[34] Batch [180-200]	Speed: 21421.47 samples/sec	accuracy=nan
2023-03-21 20:59:13,757 Node[0] Epoch[34] Batch [200-220]	Speed: 21411.01 samples/sec	accuracy=nan
2023-03-21 20:59:16,798 Node[0] Epoch[34] Batch [220-240]	Speed: 21464.21 samples/sec	accuracy=nan
2023-03-21 20:59:19,842 Node[0] Epoch[34] Batch [240-260]	Speed: 21448.12 samples/sec	accuracy=nan
2023-03-21 20:59:22,899 Node[0] Epoch[34] Batch [260-280]	Speed: 21350.63 samples/sec	accuracy=nan
2023-03-21 20:59:25,954 Node[0] Epoch[34] Batch [280-300]	Speed: 21370.07 samples/sec	accuracy=nan
2023-03-21 20:59:29,007 Node[0] Epoch[34] Batch [300-320]	Speed: 21384.13 samples/sec	accuracy=nan
2023-03-21 20:59:32,054 Node[0] Epoch[34] Batch [320-340]	Speed: 21424.61 samples/sec	accuracy=nan
2023-03-21 20:59:35,101 Node[0] Epoch[34] Batch [340-360]	Speed: 21426.25 samples/sec	accuracy=nan
2023-03-21 20:59:38,160 Node[0] Epoch[34] Batch [360-380]	Speed: 21337.78 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679450379992, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-21 20:59:39,993 Node[0] Epoch[34] Time cost=59.893
:::MLLOG {"namespace": "", "time_ms": 1679450379993, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21391.004785509373}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679450380140, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-21 20:59:41,583 Node[0] Epoch[34] Validation-accuracy=0.766240
2023-03-21 20:59:41,584 Node[0] Epoch[34] Validation-correct-count=4789.000000
2023-03-21 20:59:41,584 Node[0] Epoch[34] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679450381782, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679450381782, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76106, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679450381782, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679450381782, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679450398
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 08:59:58 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 08:59:58 PM'
ENDING TIMING RUN AT 2023-03-21 08:59:58 PM
+ result=2264
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2264,root,2023-03-21 08:22:14 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2264,root,2023-03-21 08:22:14 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679450398
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 08:59:58 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 08:59:58 PM'
ENDING TIMING RUN AT 2023-03-21 08:59:58 PM
+ result=2264
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2264,root,2023-03-21 08:22:14 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2264,root,2023-03-21 08:22:14 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679450399
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 08:59:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 08:59:59 PM'
ENDING TIMING RUN AT 2023-03-21 08:59:59 PM
+ result=2265
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 08:22:14 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 08:22:14 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679450399
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 08:59:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 08:59:59 PM'
ENDING TIMING RUN AT 2023-03-21 08:59:59 PM
+ result=2265
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 08:22:14 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 08:22:14 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679450399
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 08:59:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 08:59:59 PM'
ENDING TIMING RUN AT 2023-03-21 08:59:59 PM
+ result=2265
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 08:22:14 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 08:22:14 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679450399
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 08:59:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 08:59:59 PM'
ENDING TIMING RUN AT 2023-03-21 08:59:59 PM
+ result=2265
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 08:22:14 PM'
RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 08:22:14 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679450399
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 08:59:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 08:59:59 PM'
ENDING TIMING RUN AT 2023-03-21 08:59:59 PM
+ result=2265
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 08:22:14 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 08:22:14 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679450399
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 08:59:59 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 08:59:59 PM'
ENDING TIMING RUN AT 2023-03-21 08:59:59 PM
+ result=2265
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 08:22:14 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 08:22:14 PM'
+ export PROFILE=0
+ PROFILE=0
