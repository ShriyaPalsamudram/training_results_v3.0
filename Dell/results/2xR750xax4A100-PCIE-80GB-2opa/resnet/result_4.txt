+ echo 'Beginning trial 5 of 5'
Beginning trial 5 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node044 node045 '
+ echo 'hosts=node044 node045 '
hosts=node044 node045 
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679457305569, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679457305604, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679457305606, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679457305607, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679457305608, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679457318664, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679457324749, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679457324785, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679457324786, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679457324788, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679457324789, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node045 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node045
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679457336391, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=32003
+ SEED=32003
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node045: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export DGXNNODES=2
++ DGXNNODES=2
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
+++ sed 's/^config_//'
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
+++ sed 's/\.sh$//'
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
+++ sed 's/\.sh$//'
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
+++ sed 's/^config_//'
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++++ readlink -f ./config_2xR750xax4A100.sh
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++++ readlink -f ./config_2xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date +%s
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+ start=1679457337
+ start=1679457337
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start=1679457337
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 10:55:37 PM'
+ start_fmt='2023-03-21 10:55:37 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:55:37 PM'
STARTING TIMING RUN AT 2023-03-21 10:55:37 PM
STARTING TIMING RUN AT 2023-03-21 10:55:37 PM
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:55:37 PM'
+ readonly global_rank=0
+ global_rank=0
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ SLURM_NTASKS_PER_NODE=4
+ INPUT_BATCH_MULTIPLIER=1
+ OPTIMIZER=sgdwfastlars
+ KVSTORE=horovod
+ BATCHSIZE=408
+ LR=12.5
+ INPUT_BATCH_MULTIPLIER=1
+ MOM=0.9
+ KVSTORE=horovod
+ LRSCHED=pow2
+ LR=12.5
+ WARMUP_EPOCHS=2
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ MOM=0.9
+ LARSETA=0.001
+ LRSCHED=pow2
+ DALI_HW_DECODER_LOAD=0
+ WARMUP_EPOCHS=2
+ WD=5.0e-05
+ LARSETA=0.001
+ LABELSMOOTHING=0.1
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ SEED=32003
+ EVAL_OFFSET=2
+ LABELSMOOTHING=0.1
+ EVAL_PERIOD=4
+ SEED=32003
+ DALI_PREFETCH_QUEUE=5
+ EVAL_OFFSET=2
+ DALI_NVJPEG_MEMPADDING=256
+ EVAL_PERIOD=4
+ DALI_THREADS=6
+ DALI_PREFETCH_QUEUE=5
+ DALI_CACHE_SIZE=0
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_ROI_DECODE=1
+ DALI_THREADS=6
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_CACHE_SIZE=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_ROI_DECODE=1
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_DONT_USE_MMAP=0
+ DALI_CROP_BUFFER_HINT=165581
+ NUMEPOCHS=37
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ NETWORK=resnet-v1b-stats-fl
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ BN_GROUP=1
+ PROFILE=0
+ NETWORK=resnet-v1b-stats-fl
+ PROFILE_EXCEL=0
+ BN_GROUP=1
+ NODALI=0
+ PROFILE=0
+ NUMEXAMPLES=
+ PROFILE_EXCEL=0
+ PROFILE_ALL_LOCAL_RANKS=0
+ NODALI=0
+ THR=0.759
+ NUMEXAMPLES=
+ [[ 0 == 1 ]]
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DATAROOT=/data
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
running benchmark
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+ start_fmt='2023-03-21 10:55:37 PM'
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:55:37 PM'
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
STARTING TIMING RUN AT 2023-03-21 10:55:37 PM
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+ readonly global_rank=0
+ global_rank=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+ readonly local_rank=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+ local_rank=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+ SLURM_NTASKS_PER_NODE=4
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+ INPUT_BATCH_MULTIPLIER=1
++ export OPTIMIZER=sgdwfastlars
+ KVSTORE=horovod
++ OPTIMIZER=sgdwfastlars
+ LR=12.5
++ export BATCHSIZE=408
++ BATCHSIZE=408
+ MOM=0.9
++ export KVSTORE=horovod
++ KVSTORE=horovod
+ LRSCHED=pow2
++ export LR=12.5
++ LR=12.5
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+ DALI_HW_DECODER_LOAD=0
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
+ WD=5.0e-05
++ export EVAL_PERIOD=4
+ LABELSMOOTHING=0.1
++ EVAL_PERIOD=4
+ SEED=32003
++ export WD=5.0e-05
++ WD=5.0e-05
+ EVAL_OFFSET=2
++ export MOM=0.9
++ MOM=0.9
+ EVAL_PERIOD=4
++ export LARSETA=0.001
++ LARSETA=0.001
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+ DALI_THREADS=6
++ export LRSCHED=pow2
++ LRSCHED=pow2
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
+ DALI_PREALLOCATE_WIDTH=5980
++ export NETWORK=resnet-v1b-stats-fl
+ DALI_PREALLOCATE_HEIGHT=6430
++ NETWORK=resnet-v1b-stats-fl
+ DALI_TMP_BUFFER_HINT=355568328
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
+ DALI_DECODER_BUFFER_HINT=1315942
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
+ DALI_CROP_BUFFER_HINT=165581
++ export DALI_THREADS=6
++ DALI_THREADS=6
+ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
+ DALI_DONT_USE_MMAP=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
+ NUMEPOCHS=37
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
+ NETWORK=resnet-v1b-stats-fl
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
+ BN_GROUP=1
+ PROFILE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
+ PROFILE_EXCEL=0
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
+ NODALI=0
+ NUMEXAMPLES=
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
+ PROFILE_ALL_LOCAL_RANKS=0
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
+ THR=0.759
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
+ [[ 0 == 1 ]]
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
+ DATAROOT=/data
running benchmark
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
+ [[ 0 -ge 1 ]]
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
+++ sed 's/^config_//'
++ sed 's/,$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ start=1679457337
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 10:55:37 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:55:37 PM'
STARTING TIMING RUN AT 2023-03-21 10:55:37 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=32003
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date +%s
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ start=1679457337
+ start=1679457337
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 10:55:37 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:55:37 PM'
+ start=1679457337
STARTING TIMING RUN AT 2023-03-21 10:55:37 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ start_fmt='2023-03-21 10:55:37 PM'
+ SEED=32003
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:55:37 PM'
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
STARTING TIMING RUN AT 2023-03-21 10:55:37 PM
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ readonly global_rank=0
+ global_rank=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ MOM=0.9
+ LRSCHED=pow2
++ date '+%Y-%m-%d %r'
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ LABELSMOOTHING=0.1
+ SEED=32003
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
+ start_fmt='2023-03-21 10:55:37 PM'
++ sed 's/,$//'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:55:37 PM'
STARTING TIMING RUN AT 2023-03-21 10:55:37 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=32003
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ start=1679457337
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 10:55:37 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 10:55:37 PM'
STARTING TIMING RUN AT 2023-03-21 10:55:37 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=32003
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 32003 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node044:127107] MCW rank 3 is not bound (or bound to all available processors)
[node044:127098] MCW rank 1 is not bound (or bound to all available processors)
[node044:127100] MCW rank 0 is not bound (or bound to all available processors)
[node044:127099] MCW rank 2 is not bound (or bound to all available processors)
[node045:117681] MCW rank 7 is not bound (or bound to all available processors)
[node045:117696] MCW rank 4 is not bound (or bound to all available processors)
[node045:117679] MCW rank 6 is not bound (or bound to all available processors)
[node045:117680] MCW rank 5 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679457342236, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[22:55:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:55:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:55:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:55:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:55:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:55:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:55:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:55:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679457349478, "event_type": "POINT_IN_TIME", "key": "seed", "value": 32003, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679457350993, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 408, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[22:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679457355836, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355836, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355837, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355837, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355837, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355838, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355838, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355838, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355838, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355839, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355839, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355839, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355839, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355840, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355840, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355840, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355840, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355841, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355841, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355841, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355841, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355842, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355842, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355842, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355842, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355843, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355843, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355843, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355843, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355844, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355844, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355844, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355844, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355845, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355845, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355845, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355845, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355846, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355846, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355846, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355846, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355847, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355847, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355847, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355847, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355847, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355848, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355848, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355848, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355848, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355849, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355849, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355849, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355849, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355850, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355850, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355850, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355850, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355851, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355851, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355851, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355851, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355852, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355852, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355852, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355852, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355853, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355853, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355853, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355853, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355854, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355854, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355854, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355854, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355855, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355855, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355855, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355855, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355856, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355856, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355856, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355856, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355857, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355857, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355857, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355857, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355858, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355858, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355858, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355858, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355859, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355859, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355859, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355859, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355859, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355860, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355860, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355860, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355860, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355861, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355861, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355861, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355861, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355862, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355862, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355862, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355862, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355863, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355863, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355863, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355863, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355864, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355864, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355864, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355864, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355865, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355865, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355865, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355865, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355866, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355866, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355866, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355866, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355867, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355867, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355867, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355868, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355868, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355868, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355868, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355869, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355869, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355869, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355869, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355870, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355870, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355870, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355870, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355871, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355871, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355871, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355871, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355871, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355872, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355872, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355872, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355873, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355873, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355873, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355873, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355874, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355874, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355874, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355874, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355875, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355875, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355875, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355875, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355876, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355876, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679457355876, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[22:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:55:55] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 22:55:57,539 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=32321, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 22:55:57,539 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=36401, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 22:55:57,539 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=27420, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 22:55:57,539 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=18722, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 22:55:57,539 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=13885, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 22:55:57,539 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=39352, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 22:55:57,539 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=17552, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 22:55:57,540 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=55509, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679457357539, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679457357541, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679457357541, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679457357541, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679457357541, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 408, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679457357541, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679457357541, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679457357541, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679457357542, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679457357542, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679457357542, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679457357542, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679457357542, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679457357542, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679457357542, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679457357542, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679457357542, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679457357542, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 12.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679457357542, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679457357542, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679457448052, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679457448054, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679457448054, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679457448679, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679457448841, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679457448842, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-21 22:57:31,907 Node[0] Epoch[0] Batch [0-20]	Speed: 21400.95 samples/sec	accuracy=nan
2023-03-21 22:57:34,896 Node[0] Epoch[0] Batch [20-40]	Speed: 21836.42 samples/sec	accuracy=nan
2023-03-21 22:57:37,897 Node[0] Epoch[0] Batch [40-60]	Speed: 21754.97 samples/sec	accuracy=nan
2023-03-21 22:57:40,906 Node[0] Epoch[0] Batch [60-80]	Speed: 21693.67 samples/sec	accuracy=nan
2023-03-21 22:57:43,913 Node[0] Epoch[0] Batch [80-100]	Speed: 21709.50 samples/sec	accuracy=nan
2023-03-21 22:57:46,926 Node[0] Epoch[0] Batch [100-120]	Speed: 21669.89 samples/sec	accuracy=nan
2023-03-21 22:57:49,944 Node[0] Epoch[0] Batch [120-140]	Speed: 21627.19 samples/sec	accuracy=nan
2023-03-21 22:57:52,962 Node[0] Epoch[0] Batch [140-160]	Speed: 21629.78 samples/sec	accuracy=nan
2023-03-21 22:57:55,986 Node[0] Epoch[0] Batch [160-180]	Speed: 21587.54 samples/sec	accuracy=nan
2023-03-21 22:57:59,019 Node[0] Epoch[0] Batch [180-200]	Speed: 21526.49 samples/sec	accuracy=nan
2023-03-21 22:58:02,049 Node[0] Epoch[0] Batch [200-220]	Speed: 21543.75 samples/sec	accuracy=nan
2023-03-21 22:58:14,157 Node[0] Epoch[0] Batch [220-240]	Speed: 5391.52 samples/sec	accuracy=nan
2023-03-21 22:58:21,648 Node[0] Epoch[0] Batch [240-260]	Speed: 8714.57 samples/sec	accuracy=nan
2023-03-21 22:58:26,914 Node[0] Epoch[0] Batch [260-280]	Speed: 12394.86 samples/sec	accuracy=nan
2023-03-21 22:58:29,931 Node[0] Epoch[0] Batch [280-300]	Speed: 21640.85 samples/sec	accuracy=nan
2023-03-21 22:58:32,947 Node[0] Epoch[0] Batch [300-320]	Speed: 21643.11 samples/sec	accuracy=nan
2023-03-21 22:58:35,972 Node[0] Epoch[0] Batch [320-340]	Speed: 21579.93 samples/sec	accuracy=nan
2023-03-21 22:58:38,995 Node[0] Epoch[0] Batch [340-360]	Speed: 21598.61 samples/sec	accuracy=nan
2023-03-21 22:58:42,023 Node[0] Epoch[0] Batch [360-380]	Speed: 21557.72 samples/sec	accuracy=nan
2023-03-21 22:58:43,835 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:58:43,835 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:58:43,835 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:58:43,835 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:58:43,835 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:58:43,835 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679457523834, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-21 22:58:43,835 Node[0] Epoch[0] Time cost=74.994
:::MLLOG {"namespace": "", "time_ms": 1679457523835, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 17083.697371090275}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-21 22:58:43,836 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679457523837, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-21 22:58:43,837 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:58:47,025 Node[0] Epoch[1] Batch [0-20]	Speed: 21493.12 samples/sec	accuracy=nan
2023-03-21 22:58:50,053 Node[0] Epoch[1] Batch [20-40]	Speed: 21550.54 samples/sec	accuracy=nan
2023-03-21 22:58:53,087 Node[0] Epoch[1] Batch [40-60]	Speed: 21520.76 samples/sec	accuracy=nan
2023-03-21 22:58:56,120 Node[0] Epoch[1] Batch [60-80]	Speed: 21518.08 samples/sec	accuracy=nan
2023-03-21 22:58:59,155 Node[0] Epoch[1] Batch [80-100]	Speed: 21509.36 samples/sec	accuracy=nan
2023-03-21 22:59:02,201 Node[0] Epoch[1] Batch [100-120]	Speed: 21436.48 samples/sec	accuracy=nan
2023-03-21 22:59:05,238 Node[0] Epoch[1] Batch [120-140]	Speed: 21494.54 samples/sec	accuracy=nan
2023-03-21 22:59:08,272 Node[0] Epoch[1] Batch [140-160]	Speed: 21516.42 samples/sec	accuracy=nan
2023-03-21 22:59:11,314 Node[0] Epoch[1] Batch [160-180]	Speed: 21454.91 samples/sec	accuracy=nan
2023-03-21 22:59:14,358 Node[0] Epoch[1] Batch [180-200]	Speed: 21447.19 samples/sec	accuracy=nan
2023-03-21 22:59:17,395 Node[0] Epoch[1] Batch [200-220]	Speed: 21497.28 samples/sec	accuracy=nan
2023-03-21 22:59:20,432 Node[0] Epoch[1] Batch [220-240]	Speed: 21489.58 samples/sec	accuracy=nan
2023-03-21 22:59:23,477 Node[0] Epoch[1] Batch [240-260]	Speed: 21441.58 samples/sec	accuracy=nan
2023-03-21 22:59:26,514 Node[0] Epoch[1] Batch [260-280]	Speed: 21494.72 samples/sec	accuracy=nan
2023-03-21 22:59:29,558 Node[0] Epoch[1] Batch [280-300]	Speed: 21446.16 samples/sec	accuracy=nan
2023-03-21 22:59:32,604 Node[0] Epoch[1] Batch [300-320]	Speed: 21427.79 samples/sec	accuracy=nan
2023-03-21 22:59:35,646 Node[0] Epoch[1] Batch [320-340]	Speed: 21463.16 samples/sec	accuracy=nan
2023-03-21 22:59:38,690 Node[0] Epoch[1] Batch [340-360]	Speed: 21445.62 samples/sec	accuracy=nan
2023-03-21 22:59:41,727 Node[0] Epoch[1] Batch [360-380]	Speed: 21495.47 samples/sec	accuracy=nan
2023-03-21 22:59:43,550 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:59:43,550 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:59:43,551 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:59:43,550 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:59:43,550 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:59:43,551 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:59:43,551 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679457583551, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-21 22:59:43,553 Node[0] Epoch[1] Time cost=59.716
:::MLLOG {"namespace": "", "time_ms": 1679457583553, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21454.382300239984}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679457583553, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-21 22:59:43,553 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:59:46,749 Node[0] Epoch[2] Batch [0-20]	Speed: 21433.66 samples/sec	accuracy=nan
2023-03-21 22:59:49,787 Node[0] Epoch[2] Batch [20-40]	Speed: 21485.36 samples/sec	accuracy=nan
2023-03-21 22:59:52,828 Node[0] Epoch[2] Batch [40-60]	Speed: 21470.06 samples/sec	accuracy=nan
2023-03-21 22:59:55,872 Node[0] Epoch[2] Batch [60-80]	Speed: 21446.11 samples/sec	accuracy=nan
2023-03-21 22:59:58,916 Node[0] Epoch[2] Batch [80-100]	Speed: 21442.08 samples/sec	accuracy=nan
2023-03-21 23:00:01,954 Node[0] Epoch[2] Batch [100-120]	Speed: 21491.44 samples/sec	accuracy=nan
2023-03-21 23:00:04,996 Node[0] Epoch[2] Batch [120-140]	Speed: 21458.00 samples/sec	accuracy=nan
2023-03-21 23:00:08,039 Node[0] Epoch[2] Batch [140-160]	Speed: 21451.18 samples/sec	accuracy=nan
2023-03-21 23:00:11,086 Node[0] Epoch[2] Batch [160-180]	Speed: 21424.71 samples/sec	accuracy=nan
2023-03-21 23:00:14,127 Node[0] Epoch[2] Batch [180-200]	Speed: 21465.57 samples/sec	accuracy=nan
2023-03-21 23:00:17,166 Node[0] Epoch[2] Batch [200-220]	Speed: 21483.02 samples/sec	accuracy=nan
2023-03-21 23:00:20,204 Node[0] Epoch[2] Batch [220-240]	Speed: 21487.95 samples/sec	accuracy=nan
2023-03-21 23:00:23,244 Node[0] Epoch[2] Batch [240-260]	Speed: 21469.70 samples/sec	accuracy=nan
2023-03-21 23:00:26,282 Node[0] Epoch[2] Batch [260-280]	Speed: 21489.81 samples/sec	accuracy=nan
2023-03-21 23:00:29,324 Node[0] Epoch[2] Batch [280-300]	Speed: 21457.75 samples/sec	accuracy=nan
2023-03-21 23:00:32,368 Node[0] Epoch[2] Batch [300-320]	Speed: 21447.86 samples/sec	accuracy=nan
2023-03-21 23:00:35,411 Node[0] Epoch[2] Batch [320-340]	Speed: 21449.17 samples/sec	accuracy=nan
2023-03-21 23:00:38,450 Node[0] Epoch[2] Batch [340-360]	Speed: 21483.15 samples/sec	accuracy=nan
2023-03-21 23:00:41,495 Node[0] Epoch[2] Batch [360-380]	Speed: 21442.05 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679457643166, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-21 23:00:43,167 Node[0] Epoch[2] Time cost=59.614
:::MLLOG {"namespace": "", "time_ms": 1679457643167, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21491.07981759135}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679457643314, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-21 23:00:43,314 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:00:43,314 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:00:43,314 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:00:43,314 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:00:43,314 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:00:43,314 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:00:43,314 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:00:43,314 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:00:44,679 Node[0] Epoch[2] Validation-accuracy=0.228960
2023-03-21 23:00:44,679 Node[0] Epoch[2] Validation-correct-count=1431.000000
2023-03-21 23:00:44,679 Node[0] Epoch[2] Validation-total-count=6250.000000
2023-03-21 23:00:44,897 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679457644896, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679457644897, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.23848, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-21 23:00:44,897 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:00:44,897 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:00:44,897 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:00:44,897 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:00:44,897 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679457644897, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-21 23:00:44,897 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679457644897, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679457644897, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-21 23:00:44,898 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:00:47,951 Node[0] Epoch[3] Batch [0-20]	Speed: 21443.24 samples/sec	accuracy=nan
2023-03-21 23:00:50,989 Node[0] Epoch[3] Batch [20-40]	Speed: 21487.73 samples/sec	accuracy=nan
2023-03-21 23:00:54,029 Node[0] Epoch[3] Batch [40-60]	Speed: 21471.10 samples/sec	accuracy=nan
2023-03-21 23:00:57,068 Node[0] Epoch[3] Batch [60-80]	Speed: 21482.33 samples/sec	accuracy=nan
2023-03-21 23:01:00,110 Node[0] Epoch[3] Batch [80-100]	Speed: 21461.75 samples/sec	accuracy=nan
2023-03-21 23:01:03,147 Node[0] Epoch[3] Batch [100-120]	Speed: 21494.83 samples/sec	accuracy=nan
2023-03-21 23:01:06,186 Node[0] Epoch[3] Batch [120-140]	Speed: 21479.44 samples/sec	accuracy=nan
2023-03-21 23:01:09,227 Node[0] Epoch[3] Batch [140-160]	Speed: 21468.15 samples/sec	accuracy=nan
2023-03-21 23:01:12,266 Node[0] Epoch[3] Batch [160-180]	Speed: 21479.57 samples/sec	accuracy=nan
2023-03-21 23:01:15,308 Node[0] Epoch[3] Batch [180-200]	Speed: 21456.99 samples/sec	accuracy=nan
2023-03-21 23:01:18,350 Node[0] Epoch[3] Batch [200-220]	Speed: 21463.19 samples/sec	accuracy=nan
2023-03-21 23:01:21,391 Node[0] Epoch[3] Batch [220-240]	Speed: 21463.35 samples/sec	accuracy=nan
2023-03-21 23:01:24,431 Node[0] Epoch[3] Batch [240-260]	Speed: 21473.79 samples/sec	accuracy=nan
2023-03-21 23:01:27,473 Node[0] Epoch[3] Batch [260-280]	Speed: 21461.40 samples/sec	accuracy=nan
2023-03-21 23:01:30,512 Node[0] Epoch[3] Batch [280-300]	Speed: 21480.14 samples/sec	accuracy=nan
2023-03-21 23:01:33,550 Node[0] Epoch[3] Batch [300-320]	Speed: 21484.93 samples/sec	accuracy=nan
2023-03-21 23:01:36,589 Node[0] Epoch[3] Batch [320-340]	Speed: 21482.28 samples/sec	accuracy=nan
2023-03-21 23:01:39,629 Node[0] Epoch[3] Batch [340-360]	Speed: 21476.02 samples/sec	accuracy=nan
2023-03-21 23:01:42,672 Node[0] Epoch[3] Batch [360-380]	Speed: 21449.28 samples/sec	accuracy=nan
2023-03-21 23:01:44,494 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:01:44,494 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:01:44,494 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:01:44,494 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:01:44,494 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:01:44,495 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:01:44,495 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679457704494, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-21 23:01:44,495 Node[0] Epoch[3] Time cost=59.598
:::MLLOG {"namespace": "", "time_ms": 1679457704495, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21496.87344358154}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679457704496, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-21 23:01:44,496 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:01:47,688 Node[0] Epoch[4] Batch [0-20]	Speed: 21467.43 samples/sec	accuracy=nan
2023-03-21 23:01:50,730 Node[0] Epoch[4] Batch [20-40]	Speed: 21466.62 samples/sec	accuracy=nan
2023-03-21 23:01:53,769 Node[0] Epoch[4] Batch [40-60]	Speed: 21475.49 samples/sec	accuracy=nan
2023-03-21 23:01:56,808 Node[0] Epoch[4] Batch [60-80]	Speed: 21481.50 samples/sec	accuracy=nan
2023-03-21 23:01:59,852 Node[0] Epoch[4] Batch [80-100]	Speed: 21448.53 samples/sec	accuracy=nan
2023-03-21 23:02:02,904 Node[0] Epoch[4] Batch [100-120]	Speed: 21387.72 samples/sec	accuracy=nan
2023-03-21 23:02:05,956 Node[0] Epoch[4] Batch [120-140]	Speed: 21387.28 samples/sec	accuracy=nan
2023-03-21 23:02:09,005 Node[0] Epoch[4] Batch [140-160]	Speed: 21413.78 samples/sec	accuracy=nan
2023-03-21 23:02:12,043 Node[0] Epoch[4] Batch [160-180]	Speed: 21482.85 samples/sec	accuracy=nan
2023-03-21 23:02:15,082 Node[0] Epoch[4] Batch [180-200]	Speed: 21486.23 samples/sec	accuracy=nan
2023-03-21 23:02:18,120 Node[0] Epoch[4] Batch [200-220]	Speed: 21484.29 samples/sec	accuracy=nan
2023-03-21 23:02:21,162 Node[0] Epoch[4] Batch [220-240]	Speed: 21463.54 samples/sec	accuracy=nan
2023-03-21 23:02:24,201 Node[0] Epoch[4] Batch [240-260]	Speed: 21480.89 samples/sec	accuracy=nan
2023-03-21 23:02:27,247 Node[0] Epoch[4] Batch [260-280]	Speed: 21428.04 samples/sec	accuracy=nan
2023-03-21 23:02:30,297 Node[0] Epoch[4] Batch [280-300]	Speed: 21401.78 samples/sec	accuracy=nan
2023-03-21 23:02:33,342 Node[0] Epoch[4] Batch [300-320]	Speed: 21437.20 samples/sec	accuracy=nan
2023-03-21 23:02:36,384 Node[0] Epoch[4] Batch [320-340]	Speed: 21466.07 samples/sec	accuracy=nan
2023-03-21 23:02:39,422 Node[0] Epoch[4] Batch [340-360]	Speed: 21482.30 samples/sec	accuracy=nan
2023-03-21 23:02:42,458 Node[0] Epoch[4] Batch [360-380]	Speed: 21503.37 samples/sec	accuracy=nan
2023-03-21 23:02:44,126 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:02:44,126 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:02:44,126 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:02:44,127 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:02:44,127 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679457764127, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-21 23:02:44,127 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:02:44,127 Node[0] Epoch[4] Time cost=59.631
:::MLLOG {"namespace": "", "time_ms": 1679457764127, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21484.88050110561}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
2023-03-21 23:02:44,127 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679457764127, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-21 23:02:44,128 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:02:47,323 Node[0] Epoch[5] Batch [0-20]	Speed: 21492.29 samples/sec	accuracy=nan
2023-03-21 23:02:50,358 Node[0] Epoch[5] Batch [20-40]	Speed: 21510.49 samples/sec	accuracy=nan
2023-03-21 23:02:53,393 Node[0] Epoch[5] Batch [40-60]	Speed: 21509.95 samples/sec	accuracy=nan
2023-03-21 23:02:56,437 Node[0] Epoch[5] Batch [60-80]	Speed: 21447.41 samples/sec	accuracy=nan
2023-03-21 23:02:59,474 Node[0] Epoch[5] Batch [80-100]	Speed: 21492.11 samples/sec	accuracy=nan
2023-03-21 23:03:02,517 Node[0] Epoch[5] Batch [100-120]	Speed: 21455.57 samples/sec	accuracy=nan
2023-03-21 23:03:05,558 Node[0] Epoch[5] Batch [120-140]	Speed: 21465.87 samples/sec	accuracy=nan
2023-03-21 23:03:08,598 Node[0] Epoch[5] Batch [140-160]	Speed: 21475.03 samples/sec	accuracy=nan
2023-03-21 23:03:11,635 Node[0] Epoch[5] Batch [160-180]	Speed: 21492.49 samples/sec	accuracy=nan
2023-03-21 23:03:14,680 Node[0] Epoch[5] Batch [180-200]	Speed: 21441.69 samples/sec	accuracy=nan
2023-03-21 23:03:17,723 Node[0] Epoch[5] Batch [200-220]	Speed: 21450.90 samples/sec	accuracy=nan
2023-03-21 23:03:20,759 Node[0] Epoch[5] Batch [220-240]	Speed: 21503.05 samples/sec	accuracy=nan
2023-03-21 23:03:23,797 Node[0] Epoch[5] Batch [240-260]	Speed: 21488.07 samples/sec	accuracy=nan
2023-03-21 23:03:26,835 Node[0] Epoch[5] Batch [260-280]	Speed: 21481.85 samples/sec	accuracy=nan
2023-03-21 23:03:29,874 Node[0] Epoch[5] Batch [280-300]	Speed: 21485.75 samples/sec	accuracy=nan
2023-03-21 23:03:32,915 Node[0] Epoch[5] Batch [300-320]	Speed: 21463.01 samples/sec	accuracy=nan
2023-03-21 23:03:35,957 Node[0] Epoch[5] Batch [320-340]	Speed: 21463.89 samples/sec	accuracy=nan
2023-03-21 23:03:38,997 Node[0] Epoch[5] Batch [340-360]	Speed: 21469.38 samples/sec	accuracy=nan
2023-03-21 23:03:42,045 Node[0] Epoch[5] Batch [360-380]	Speed: 21418.84 samples/sec	accuracy=nan
2023-03-21 23:03:43,873 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:03:43,873 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:03:43,873 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:03:43,873 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:03:43,873 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:03:43,873 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679457823873, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-21 23:03:43,874 Node[0] Epoch[5] Time cost=59.746
2023-03-21 23:03:43,874 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679457823874, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21443.385893698873}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679457823874, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-21 23:03:43,875 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:03:47,073 Node[0] Epoch[6] Batch [0-20]	Speed: 21424.91 samples/sec	accuracy=nan
2023-03-21 23:03:50,111 Node[0] Epoch[6] Batch [20-40]	Speed: 21486.70 samples/sec	accuracy=nan
2023-03-21 23:03:53,148 Node[0] Epoch[6] Batch [40-60]	Speed: 21497.37 samples/sec	accuracy=nan
2023-03-21 23:03:56,188 Node[0] Epoch[6] Batch [60-80]	Speed: 21471.36 samples/sec	accuracy=nan
2023-03-21 23:03:59,228 Node[0] Epoch[6] Batch [80-100]	Speed: 21479.24 samples/sec	accuracy=nan
2023-03-21 23:04:02,266 Node[0] Epoch[6] Batch [100-120]	Speed: 21482.13 samples/sec	accuracy=nan
2023-03-21 23:04:05,307 Node[0] Epoch[6] Batch [120-140]	Speed: 21467.26 samples/sec	accuracy=nan
2023-03-21 23:04:08,342 Node[0] Epoch[6] Batch [140-160]	Speed: 21510.82 samples/sec	accuracy=nan
2023-03-21 23:04:11,381 Node[0] Epoch[6] Batch [160-180]	Speed: 21480.74 samples/sec	accuracy=nan
2023-03-21 23:04:14,421 Node[0] Epoch[6] Batch [180-200]	Speed: 21471.68 samples/sec	accuracy=nan
2023-03-21 23:04:17,461 Node[0] Epoch[6] Batch [200-220]	Speed: 21476.06 samples/sec	accuracy=nan
2023-03-21 23:04:20,500 Node[0] Epoch[6] Batch [220-240]	Speed: 21483.75 samples/sec	accuracy=nan
2023-03-21 23:04:23,544 Node[0] Epoch[6] Batch [240-260]	Speed: 21439.86 samples/sec	accuracy=nan
2023-03-21 23:04:26,590 Node[0] Epoch[6] Batch [260-280]	Speed: 21431.18 samples/sec	accuracy=nan
2023-03-21 23:04:29,631 Node[0] Epoch[6] Batch [280-300]	Speed: 21466.48 samples/sec	accuracy=nan
2023-03-21 23:04:32,673 Node[0] Epoch[6] Batch [300-320]	Speed: 21463.68 samples/sec	accuracy=nan
2023-03-21 23:04:35,717 Node[0] Epoch[6] Batch [320-340]	Speed: 21447.42 samples/sec	accuracy=nan
2023-03-21 23:04:38,756 Node[0] Epoch[6] Batch [340-360]	Speed: 21475.62 samples/sec	accuracy=nan
2023-03-21 23:04:41,799 Node[0] Epoch[6] Batch [360-380]	Speed: 21454.50 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679457883467, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-21 23:04:43,467 Node[0] Epoch[6] Time cost=59.593
:::MLLOG {"namespace": "", "time_ms": 1679457883468, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21498.657864225665}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679457883613, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-21 23:04:45,028 Node[0] Epoch[6] Validation-accuracy=0.418720
2023-03-21 23:04:45,028 Node[0] Epoch[6] Validation-correct-count=2617.000000
2023-03-21 23:04:45,028 Node[0] Epoch[6] Validation-total-count=6250.000000
2023-03-21 23:04:45,264 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:04:45,264 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:04:45,265 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:04:45,264 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:04:45,264 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:04:45,264 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:04:45,264 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679457885264, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679457885265, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.41928, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679457885265, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679457885265, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679457885266, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-21 23:04:45,266 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:04:48,317 Node[0] Epoch[7] Batch [0-20]	Speed: 21479.50 samples/sec	accuracy=nan
2023-03-21 23:04:51,354 Node[0] Epoch[7] Batch [20-40]	Speed: 21494.32 samples/sec	accuracy=nan
2023-03-21 23:04:54,390 Node[0] Epoch[7] Batch [40-60]	Speed: 21503.95 samples/sec	accuracy=nan
2023-03-21 23:04:57,427 Node[0] Epoch[7] Batch [60-80]	Speed: 21497.64 samples/sec	accuracy=nan
2023-03-21 23:05:00,463 Node[0] Epoch[7] Batch [80-100]	Speed: 21499.56 samples/sec	accuracy=nan
2023-03-21 23:05:03,502 Node[0] Epoch[7] Batch [100-120]	Speed: 21483.66 samples/sec	accuracy=nan
2023-03-21 23:05:06,540 Node[0] Epoch[7] Batch [120-140]	Speed: 21486.43 samples/sec	accuracy=nan
2023-03-21 23:05:09,580 Node[0] Epoch[7] Batch [140-160]	Speed: 21470.48 samples/sec	accuracy=nan
2023-03-21 23:05:12,621 Node[0] Epoch[7] Batch [160-180]	Speed: 21471.32 samples/sec	accuracy=nan
2023-03-21 23:05:15,656 Node[0] Epoch[7] Batch [180-200]	Speed: 21502.98 samples/sec	accuracy=nan
2023-03-21 23:05:18,695 Node[0] Epoch[7] Batch [200-220]	Speed: 21484.85 samples/sec	accuracy=nan
2023-03-21 23:05:21,734 Node[0] Epoch[7] Batch [220-240]	Speed: 21480.06 samples/sec	accuracy=nan
2023-03-21 23:05:24,770 Node[0] Epoch[7] Batch [240-260]	Speed: 21504.79 samples/sec	accuracy=nan
2023-03-21 23:05:27,811 Node[0] Epoch[7] Batch [260-280]	Speed: 21462.64 samples/sec	accuracy=nan
2023-03-21 23:05:30,849 Node[0] Epoch[7] Batch [280-300]	Speed: 21486.75 samples/sec	accuracy=nan
2023-03-21 23:05:33,885 Node[0] Epoch[7] Batch [300-320]	Speed: 21505.99 samples/sec	accuracy=nan
2023-03-21 23:05:36,922 Node[0] Epoch[7] Batch [320-340]	Speed: 21494.20 samples/sec	accuracy=nan
2023-03-21 23:05:39,961 Node[0] Epoch[7] Batch [340-360]	Speed: 21476.52 samples/sec	accuracy=nan
2023-03-21 23:05:43,000 Node[0] Epoch[7] Batch [360-380]	Speed: 21484.35 samples/sec	accuracy=nan
2023-03-21 23:05:44,820 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:05:44,820 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:05:44,820 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:05:44,820 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:05:44,820 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:05:44,820 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:05:44,820 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679457944820, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-21 23:05:44,821 Node[0] Epoch[7] Time cost=59.555
:::MLLOG {"namespace": "", "time_ms": 1679457944821, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21512.349304094056}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679457944821, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-21 23:05:44,821 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:05:48,016 Node[0] Epoch[8] Batch [0-20]	Speed: 21468.59 samples/sec	accuracy=nan
2023-03-21 23:05:51,061 Node[0] Epoch[8] Batch [20-40]	Speed: 21434.63 samples/sec	accuracy=nan
2023-03-21 23:05:54,098 Node[0] Epoch[8] Batch [40-60]	Speed: 21492.37 samples/sec	accuracy=nan
2023-03-21 23:05:57,139 Node[0] Epoch[8] Batch [60-80]	Speed: 21473.19 samples/sec	accuracy=nan
2023-03-21 23:06:00,181 Node[0] Epoch[8] Batch [80-100]	Speed: 21459.77 samples/sec	accuracy=nan
2023-03-21 23:06:03,219 Node[0] Epoch[8] Batch [100-120]	Speed: 21486.50 samples/sec	accuracy=nan
2023-03-21 23:06:06,255 Node[0] Epoch[8] Batch [120-140]	Speed: 21498.64 samples/sec	accuracy=nan
2023-03-21 23:06:09,297 Node[0] Epoch[8] Batch [140-160]	Speed: 21458.71 samples/sec	accuracy=nan
2023-03-21 23:06:12,338 Node[0] Epoch[8] Batch [160-180]	Speed: 21470.93 samples/sec	accuracy=nan
2023-03-21 23:06:15,376 Node[0] Epoch[8] Batch [180-200]	Speed: 21488.39 samples/sec	accuracy=nan
2023-03-21 23:06:18,419 Node[0] Epoch[8] Batch [200-220]	Speed: 21446.43 samples/sec	accuracy=nan
2023-03-21 23:06:21,471 Node[0] Epoch[8] Batch [220-240]	Speed: 21395.20 samples/sec	accuracy=nan
2023-03-21 23:06:24,520 Node[0] Epoch[8] Batch [240-260]	Speed: 21404.18 samples/sec	accuracy=nan
2023-03-21 23:06:27,572 Node[0] Epoch[8] Batch [260-280]	Speed: 21391.80 samples/sec	accuracy=nan
2023-03-21 23:06:30,616 Node[0] Epoch[8] Batch [280-300]	Speed: 21448.39 samples/sec	accuracy=nan
2023-03-21 23:06:33,653 Node[0] Epoch[8] Batch [300-320]	Speed: 21489.80 samples/sec	accuracy=nan
2023-03-21 23:06:36,694 Node[0] Epoch[8] Batch [320-340]	Speed: 21468.66 samples/sec	accuracy=nan
2023-03-21 23:06:39,734 Node[0] Epoch[8] Batch [340-360]	Speed: 21476.75 samples/sec	accuracy=nan
2023-03-21 23:06:42,774 Node[0] Epoch[8] Batch [360-380]	Speed: 21468.21 samples/sec	accuracy=nan
2023-03-21 23:06:44,439 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:06:44,439 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:06:44,439 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:06:44,439 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:06:44,440 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:06:44,439 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:06:44,440 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458004440, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-21 23:06:44,441 Node[0] Epoch[8] Time cost=59.619
:::MLLOG {"namespace": "", "time_ms": 1679458004441, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21489.08336183926}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679458004441, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-21 23:06:44,441 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:06:47,633 Node[0] Epoch[9] Batch [0-20]	Speed: 21493.22 samples/sec	accuracy=nan
2023-03-21 23:06:50,675 Node[0] Epoch[9] Batch [20-40]	Speed: 21455.22 samples/sec	accuracy=nan
2023-03-21 23:06:53,712 Node[0] Epoch[9] Batch [40-60]	Speed: 21495.95 samples/sec	accuracy=nan
2023-03-21 23:06:56,754 Node[0] Epoch[9] Batch [60-80]	Speed: 21462.57 samples/sec	accuracy=nan
2023-03-21 23:06:59,790 Node[0] Epoch[9] Batch [80-100]	Speed: 21498.08 samples/sec	accuracy=nan
2023-03-21 23:07:02,839 Node[0] Epoch[9] Batch [100-120]	Speed: 21413.49 samples/sec	accuracy=nan
2023-03-21 23:07:05,894 Node[0] Epoch[9] Batch [120-140]	Speed: 21366.26 samples/sec	accuracy=nan
2023-03-21 23:07:08,941 Node[0] Epoch[9] Batch [140-160]	Speed: 21428.90 samples/sec	accuracy=nan
2023-03-21 23:07:11,983 Node[0] Epoch[9] Batch [160-180]	Speed: 21454.48 samples/sec	accuracy=nan
2023-03-21 23:07:15,022 Node[0] Epoch[9] Batch [180-200]	Speed: 21486.19 samples/sec	accuracy=nan
2023-03-21 23:07:18,064 Node[0] Epoch[9] Batch [200-220]	Speed: 21459.00 samples/sec	accuracy=nan
2023-03-21 23:07:21,103 Node[0] Epoch[9] Batch [220-240]	Speed: 21480.55 samples/sec	accuracy=nan
2023-03-21 23:07:24,143 Node[0] Epoch[9] Batch [240-260]	Speed: 21473.07 samples/sec	accuracy=nan
2023-03-21 23:07:27,182 Node[0] Epoch[9] Batch [260-280]	Speed: 21475.76 samples/sec	accuracy=nan
2023-03-21 23:07:30,229 Node[0] Epoch[9] Batch [280-300]	Speed: 21425.46 samples/sec	accuracy=nan
2023-03-21 23:07:33,271 Node[0] Epoch[9] Batch [300-320]	Speed: 21464.25 samples/sec	accuracy=nan
2023-03-21 23:07:36,311 Node[0] Epoch[9] Batch [320-340]	Speed: 21469.08 samples/sec	accuracy=nan
2023-03-21 23:07:39,353 Node[0] Epoch[9] Batch [340-360]	Speed: 21463.50 samples/sec	accuracy=nan
2023-03-21 23:07:42,394 Node[0] Epoch[9] Batch [360-380]	Speed: 21466.93 samples/sec	accuracy=nan
2023-03-21 23:07:44,212 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:07:44,212 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:07:44,212 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:07:44,212 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:07:44,212 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:07:44,212 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458064212, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-21 23:07:44,213 Node[0] Epoch[9] Time cost=59.771
:::MLLOG {"namespace": "", "time_ms": 1679458064213, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21434.543666321486}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
2023-03-21 23:07:44,213 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458064213, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-21 23:07:44,213 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:07:47,403 Node[0] Epoch[10] Batch [0-20]	Speed: 21485.21 samples/sec	accuracy=nan
2023-03-21 23:07:50,444 Node[0] Epoch[10] Batch [20-40]	Speed: 21471.07 samples/sec	accuracy=nan
2023-03-21 23:07:53,483 Node[0] Epoch[10] Batch [40-60]	Speed: 21478.24 samples/sec	accuracy=nan
2023-03-21 23:07:56,525 Node[0] Epoch[10] Batch [60-80]	Speed: 21456.14 samples/sec	accuracy=nan
2023-03-21 23:07:59,564 Node[0] Epoch[10] Batch [80-100]	Speed: 21482.44 samples/sec	accuracy=nan
2023-03-21 23:08:02,606 Node[0] Epoch[10] Batch [100-120]	Speed: 21460.19 samples/sec	accuracy=nan
2023-03-21 23:08:05,648 Node[0] Epoch[10] Batch [120-140]	Speed: 21460.78 samples/sec	accuracy=nan
2023-03-21 23:08:08,687 Node[0] Epoch[10] Batch [140-160]	Speed: 21481.60 samples/sec	accuracy=nan
2023-03-21 23:08:11,726 Node[0] Epoch[10] Batch [160-180]	Speed: 21478.52 samples/sec	accuracy=nan
2023-03-21 23:08:14,769 Node[0] Epoch[10] Batch [180-200]	Speed: 21454.17 samples/sec	accuracy=nan
2023-03-21 23:08:17,808 Node[0] Epoch[10] Batch [200-220]	Speed: 21477.94 samples/sec	accuracy=nan
2023-03-21 23:08:20,850 Node[0] Epoch[10] Batch [220-240]	Speed: 21464.44 samples/sec	accuracy=nan
2023-03-21 23:08:23,887 Node[0] Epoch[10] Batch [240-260]	Speed: 21489.02 samples/sec	accuracy=nan
2023-03-21 23:08:26,926 Node[0] Epoch[10] Batch [260-280]	Speed: 21485.36 samples/sec	accuracy=nan
2023-03-21 23:08:29,967 Node[0] Epoch[10] Batch [280-300]	Speed: 21463.17 samples/sec	accuracy=nan
2023-03-21 23:08:33,011 Node[0] Epoch[10] Batch [300-320]	Speed: 21445.49 samples/sec	accuracy=nan
2023-03-21 23:08:36,054 Node[0] Epoch[10] Batch [320-340]	Speed: 21455.74 samples/sec	accuracy=nan
2023-03-21 23:08:39,094 Node[0] Epoch[10] Batch [340-360]	Speed: 21473.46 samples/sec	accuracy=nan
2023-03-21 23:08:42,136 Node[0] Epoch[10] Batch [360-380]	Speed: 21456.86 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679458123804, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-21 23:08:43,805 Node[0] Epoch[10] Time cost=59.591
:::MLLOG {"namespace": "", "time_ms": 1679458123805, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21499.157775294076}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679458123950, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-21 23:08:45,466 Node[0] Epoch[10] Validation-accuracy=0.483520
2023-03-21 23:08:45,466 Node[0] Epoch[10] Validation-correct-count=3022.000000
2023-03-21 23:08:45,466 Node[0] Epoch[10] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679458125593, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
2023-03-21 23:08:45,593 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:08:45,593 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:08:45,593 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458125593, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.4797, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679458125593, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679458125593, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-21 23:08:45,593 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:08:45,593 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:08:45,593 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:08:45,593 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458125594, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-21 23:08:45,594 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:08:48,648 Node[0] Epoch[11] Batch [0-20]	Speed: 21459.82 samples/sec	accuracy=nan
2023-03-21 23:08:51,685 Node[0] Epoch[11] Batch [20-40]	Speed: 21493.19 samples/sec	accuracy=nan
2023-03-21 23:08:54,721 Node[0] Epoch[11] Batch [40-60]	Speed: 21504.73 samples/sec	accuracy=nan
2023-03-21 23:08:57,763 Node[0] Epoch[11] Batch [60-80]	Speed: 21460.95 samples/sec	accuracy=nan
2023-03-21 23:09:00,798 Node[0] Epoch[11] Batch [80-100]	Speed: 21504.61 samples/sec	accuracy=nan
2023-03-21 23:09:03,835 Node[0] Epoch[11] Batch [100-120]	Speed: 21497.11 samples/sec	accuracy=nan
2023-03-21 23:09:06,874 Node[0] Epoch[11] Batch [120-140]	Speed: 21480.41 samples/sec	accuracy=nan
2023-03-21 23:09:09,914 Node[0] Epoch[11] Batch [140-160]	Speed: 21472.97 samples/sec	accuracy=nan
2023-03-21 23:09:12,957 Node[0] Epoch[11] Batch [160-180]	Speed: 21455.25 samples/sec	accuracy=nan
2023-03-21 23:09:15,993 Node[0] Epoch[11] Batch [180-200]	Speed: 21498.55 samples/sec	accuracy=nan
2023-03-21 23:09:19,031 Node[0] Epoch[11] Batch [200-220]	Speed: 21490.10 samples/sec	accuracy=nan
2023-03-21 23:09:22,075 Node[0] Epoch[11] Batch [220-240]	Speed: 21445.71 samples/sec	accuracy=nan
2023-03-21 23:09:25,115 Node[0] Epoch[11] Batch [240-260]	Speed: 21470.74 samples/sec	accuracy=nan
2023-03-21 23:09:28,155 Node[0] Epoch[11] Batch [260-280]	Speed: 21473.91 samples/sec	accuracy=nan
2023-03-21 23:09:31,192 Node[0] Epoch[11] Batch [280-300]	Speed: 21495.34 samples/sec	accuracy=nan
2023-03-21 23:09:34,232 Node[0] Epoch[11] Batch [300-320]	Speed: 21473.04 samples/sec	accuracy=nan
2023-03-21 23:09:37,270 Node[0] Epoch[11] Batch [320-340]	Speed: 21488.63 samples/sec	accuracy=nan
2023-03-21 23:09:40,312 Node[0] Epoch[11] Batch [340-360]	Speed: 21462.18 samples/sec	accuracy=nan
2023-03-21 23:09:43,348 Node[0] Epoch[11] Batch [360-380]	Speed: 21501.68 samples/sec	accuracy=nan
2023-03-21 23:09:45,165 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:09:45,165 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:09:45,165 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:09:45,165 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:09:45,165 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:09:45,165 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:09:45,165 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458185165, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-21 23:09:45,167 Node[0] Epoch[11] Time cost=59.573
:::MLLOG {"namespace": "", "time_ms": 1679458185167, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21505.89576835106}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679458185167, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-21 23:09:45,167 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:09:48,358 Node[0] Epoch[12] Batch [0-20]	Speed: 21472.61 samples/sec	accuracy=nan
2023-03-21 23:09:51,396 Node[0] Epoch[12] Batch [20-40]	Speed: 21487.37 samples/sec	accuracy=nan
2023-03-21 23:09:54,430 Node[0] Epoch[12] Batch [40-60]	Speed: 21514.99 samples/sec	accuracy=nan
2023-03-21 23:09:57,470 Node[0] Epoch[12] Batch [60-80]	Speed: 21474.13 samples/sec	accuracy=nan
2023-03-21 23:10:00,508 Node[0] Epoch[12] Batch [80-100]	Speed: 21487.94 samples/sec	accuracy=nan
2023-03-21 23:10:03,548 Node[0] Epoch[12] Batch [100-120]	Speed: 21475.30 samples/sec	accuracy=nan
2023-03-21 23:10:06,585 Node[0] Epoch[12] Batch [120-140]	Speed: 21496.03 samples/sec	accuracy=nan
2023-03-21 23:10:09,624 Node[0] Epoch[12] Batch [140-160]	Speed: 21481.88 samples/sec	accuracy=nan
2023-03-21 23:10:12,660 Node[0] Epoch[12] Batch [160-180]	Speed: 21501.31 samples/sec	accuracy=nan
2023-03-21 23:10:15,699 Node[0] Epoch[12] Batch [180-200]	Speed: 21475.40 samples/sec	accuracy=nan
2023-03-21 23:10:18,737 Node[0] Epoch[12] Batch [200-220]	Speed: 21488.08 samples/sec	accuracy=nan
2023-03-21 23:10:21,774 Node[0] Epoch[12] Batch [220-240]	Speed: 21496.17 samples/sec	accuracy=nan
2023-03-21 23:10:24,812 Node[0] Epoch[12] Batch [240-260]	Speed: 21491.59 samples/sec	accuracy=nan
2023-03-21 23:10:27,850 Node[0] Epoch[12] Batch [260-280]	Speed: 21485.09 samples/sec	accuracy=nan
2023-03-21 23:10:30,883 Node[0] Epoch[12] Batch [280-300]	Speed: 21522.69 samples/sec	accuracy=nan
2023-03-21 23:10:33,920 Node[0] Epoch[12] Batch [300-320]	Speed: 21492.46 samples/sec	accuracy=nan
2023-03-21 23:10:36,958 Node[0] Epoch[12] Batch [320-340]	Speed: 21487.25 samples/sec	accuracy=nan
2023-03-21 23:10:39,997 Node[0] Epoch[12] Batch [340-360]	Speed: 21486.65 samples/sec	accuracy=nan
2023-03-21 23:10:43,033 Node[0] Epoch[12] Batch [360-380]	Speed: 21497.27 samples/sec	accuracy=nan
2023-03-21 23:10:44,698 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:10:44,698 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:10:44,698 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:10:44,698 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:10:44,698 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458244698, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-21 23:10:44,699 Node[0] Epoch[12] Time cost=59.532
:::MLLOG {"namespace": "", "time_ms": 1679458244699, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21520.749916246514}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-21 23:10:44,699 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458244699, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-21 23:10:44,699 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:10:44,699 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:10:47,896 Node[0] Epoch[13] Batch [0-20]	Speed: 21476.95 samples/sec	accuracy=nan
2023-03-21 23:10:50,936 Node[0] Epoch[13] Batch [20-40]	Speed: 21474.12 samples/sec	accuracy=nan
2023-03-21 23:10:53,979 Node[0] Epoch[13] Batch [40-60]	Speed: 21449.40 samples/sec	accuracy=nan
2023-03-21 23:10:57,022 Node[0] Epoch[13] Batch [60-80]	Speed: 21453.14 samples/sec	accuracy=nan
2023-03-21 23:11:00,065 Node[0] Epoch[13] Batch [80-100]	Speed: 21452.44 samples/sec	accuracy=nan
2023-03-21 23:11:03,108 Node[0] Epoch[13] Batch [100-120]	Speed: 21452.41 samples/sec	accuracy=nan
2023-03-21 23:11:06,144 Node[0] Epoch[13] Batch [120-140]	Speed: 21502.12 samples/sec	accuracy=nan
2023-03-21 23:11:09,182 Node[0] Epoch[13] Batch [140-160]	Speed: 21483.93 samples/sec	accuracy=nan
2023-03-21 23:11:12,222 Node[0] Epoch[13] Batch [160-180]	Speed: 21473.45 samples/sec	accuracy=nan
2023-03-21 23:11:15,261 Node[0] Epoch[13] Batch [180-200]	Speed: 21480.68 samples/sec	accuracy=nan
2023-03-21 23:11:18,304 Node[0] Epoch[13] Batch [200-220]	Speed: 21457.35 samples/sec	accuracy=nan
2023-03-21 23:11:21,338 Node[0] Epoch[13] Batch [220-240]	Speed: 21514.40 samples/sec	accuracy=nan
2023-03-21 23:11:24,376 Node[0] Epoch[13] Batch [240-260]	Speed: 21485.34 samples/sec	accuracy=nan
2023-03-21 23:11:27,411 Node[0] Epoch[13] Batch [260-280]	Speed: 21513.89 samples/sec	accuracy=nan
2023-03-21 23:11:30,452 Node[0] Epoch[13] Batch [280-300]	Speed: 21463.03 samples/sec	accuracy=nan
2023-03-21 23:11:33,504 Node[0] Epoch[13] Batch [300-320]	Speed: 21390.24 samples/sec	accuracy=nan
2023-03-21 23:11:36,546 Node[0] Epoch[13] Batch [320-340]	Speed: 21457.88 samples/sec	accuracy=nan
2023-03-21 23:11:39,590 Node[0] Epoch[13] Batch [340-360]	Speed: 21450.81 samples/sec	accuracy=nan
2023-03-21 23:11:42,630 Node[0] Epoch[13] Batch [360-380]	Speed: 21469.16 samples/sec	accuracy=nan
2023-03-21 23:11:44,452 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:11:44,452 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:11:44,452 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:11:44,452 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:11:44,452 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:11:44,453 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:11:44,453 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458304453, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-21 23:11:44,455 Node[0] Epoch[13] Time cost=59.755
:::MLLOG {"namespace": "", "time_ms": 1679458304455, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21440.273996609187}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679458304455, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-21 23:11:44,455 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:11:47,646 Node[0] Epoch[14] Batch [0-20]	Speed: 21464.24 samples/sec	accuracy=nan
2023-03-21 23:11:50,686 Node[0] Epoch[14] Batch [20-40]	Speed: 21472.75 samples/sec	accuracy=nan
2023-03-21 23:11:53,726 Node[0] Epoch[14] Batch [40-60]	Speed: 21474.06 samples/sec	accuracy=nan
2023-03-21 23:11:56,782 Node[0] Epoch[14] Batch [60-80]	Speed: 21356.44 samples/sec	accuracy=nan
2023-03-21 23:11:59,825 Node[0] Epoch[14] Batch [80-100]	Speed: 21453.90 samples/sec	accuracy=nan
2023-03-21 23:12:02,865 Node[0] Epoch[14] Batch [100-120]	Speed: 21472.85 samples/sec	accuracy=nan
2023-03-21 23:12:05,906 Node[0] Epoch[14] Batch [120-140]	Speed: 21471.87 samples/sec	accuracy=nan
2023-03-21 23:12:08,942 Node[0] Epoch[14] Batch [140-160]	Speed: 21498.09 samples/sec	accuracy=nan
2023-03-21 23:12:11,981 Node[0] Epoch[14] Batch [160-180]	Speed: 21484.73 samples/sec	accuracy=nan
2023-03-21 23:12:15,023 Node[0] Epoch[14] Batch [180-200]	Speed: 21454.91 samples/sec	accuracy=nan
2023-03-21 23:12:18,064 Node[0] Epoch[14] Batch [200-220]	Speed: 21465.52 samples/sec	accuracy=nan
2023-03-21 23:12:21,106 Node[0] Epoch[14] Batch [220-240]	Speed: 21463.33 samples/sec	accuracy=nan
2023-03-21 23:12:24,146 Node[0] Epoch[14] Batch [240-260]	Speed: 21475.49 samples/sec	accuracy=nan
2023-03-21 23:12:27,187 Node[0] Epoch[14] Batch [260-280]	Speed: 21466.70 samples/sec	accuracy=nan
2023-03-21 23:12:30,230 Node[0] Epoch[14] Batch [280-300]	Speed: 21447.13 samples/sec	accuracy=nan
2023-03-21 23:12:33,266 Node[0] Epoch[14] Batch [300-320]	Speed: 21504.42 samples/sec	accuracy=nan
2023-03-21 23:12:36,303 Node[0] Epoch[14] Batch [320-340]	Speed: 21494.57 samples/sec	accuracy=nan
2023-03-21 23:12:39,338 Node[0] Epoch[14] Batch [340-360]	Speed: 21513.20 samples/sec	accuracy=nan
2023-03-21 23:12:42,380 Node[0] Epoch[14] Batch [360-380]	Speed: 21454.08 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679458364052, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-21 23:12:44,053 Node[0] Epoch[14] Time cost=59.597
:::MLLOG {"namespace": "", "time_ms": 1679458364053, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21497.056017456736}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679458364199, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-21 23:12:45,668 Node[0] Epoch[14] Validation-accuracy=0.544000
2023-03-21 23:12:45,669 Node[0] Epoch[14] Validation-correct-count=3400.000000
2023-03-21 23:12:45,669 Node[0] Epoch[14] Validation-total-count=6250.000000
2023-03-21 23:12:45,850 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:12:45,850 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:12:45,850 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:12:45,850 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:12:45,850 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:12:45,850 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:12:45,850 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458365850, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679458365851, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.54394, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679458365851, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679458365851, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679458365852, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-21 23:12:45,852 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:12:48,903 Node[0] Epoch[15] Batch [0-20]	Speed: 21460.84 samples/sec	accuracy=nan
2023-03-21 23:12:51,938 Node[0] Epoch[15] Batch [20-40]	Speed: 21509.93 samples/sec	accuracy=nan
2023-03-21 23:12:54,979 Node[0] Epoch[15] Batch [40-60]	Speed: 21469.86 samples/sec	accuracy=nan
2023-03-21 23:12:58,018 Node[0] Epoch[15] Batch [60-80]	Speed: 21478.38 samples/sec	accuracy=nan
2023-03-21 23:13:01,061 Node[0] Epoch[15] Batch [80-100]	Speed: 21457.91 samples/sec	accuracy=nan
2023-03-21 23:13:04,095 Node[0] Epoch[15] Batch [100-120]	Speed: 21514.15 samples/sec	accuracy=nan
2023-03-21 23:13:07,129 Node[0] Epoch[15] Batch [120-140]	Speed: 21513.08 samples/sec	accuracy=nan
2023-03-21 23:13:10,168 Node[0] Epoch[15] Batch [140-160]	Speed: 21480.82 samples/sec	accuracy=nan
2023-03-21 23:13:13,209 Node[0] Epoch[15] Batch [160-180]	Speed: 21470.54 samples/sec	accuracy=nan
2023-03-21 23:13:16,251 Node[0] Epoch[15] Batch [180-200]	Speed: 21460.23 samples/sec	accuracy=nan
2023-03-21 23:13:19,287 Node[0] Epoch[15] Batch [200-220]	Speed: 21501.20 samples/sec	accuracy=nan
2023-03-21 23:13:22,325 Node[0] Epoch[15] Batch [220-240]	Speed: 21488.25 samples/sec	accuracy=nan
2023-03-21 23:13:25,362 Node[0] Epoch[15] Batch [240-260]	Speed: 21492.16 samples/sec	accuracy=nan
2023-03-21 23:13:28,402 Node[0] Epoch[15] Batch [260-280]	Speed: 21472.97 samples/sec	accuracy=nan
2023-03-21 23:13:31,444 Node[0] Epoch[15] Batch [280-300]	Speed: 21463.74 samples/sec	accuracy=nan
2023-03-21 23:13:34,483 Node[0] Epoch[15] Batch [300-320]	Speed: 21479.92 samples/sec	accuracy=nan
2023-03-21 23:13:37,524 Node[0] Epoch[15] Batch [320-340]	Speed: 21462.92 samples/sec	accuracy=nan
2023-03-21 23:13:40,563 Node[0] Epoch[15] Batch [340-360]	Speed: 21480.58 samples/sec	accuracy=nan
2023-03-21 23:13:43,603 Node[0] Epoch[15] Batch [360-380]	Speed: 21474.16 samples/sec	accuracy=nan
2023-03-21 23:13:45,423 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:13:45,423 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:13:45,423 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:13:45,423 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458425423, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-21 23:13:45,423 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:13:45,424 Node[0] Epoch[15] Time cost=59.572
:::MLLOG {"namespace": "", "time_ms": 1679458425424, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21506.211045656633}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
2023-03-21 23:13:45,424 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458425424, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-21 23:13:45,424 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:13:45,424 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:13:48,613 Node[0] Epoch[16] Batch [0-20]	Speed: 21499.41 samples/sec	accuracy=nan
2023-03-21 23:13:51,650 Node[0] Epoch[16] Batch [20-40]	Speed: 21489.33 samples/sec	accuracy=nan
2023-03-21 23:13:54,692 Node[0] Epoch[16] Batch [40-60]	Speed: 21465.71 samples/sec	accuracy=nan
2023-03-21 23:13:57,730 Node[0] Epoch[16] Batch [60-80]	Speed: 21483.55 samples/sec	accuracy=nan
2023-03-21 23:14:00,769 Node[0] Epoch[16] Batch [80-100]	Speed: 21481.98 samples/sec	accuracy=nan
2023-03-21 23:14:03,809 Node[0] Epoch[16] Batch [100-120]	Speed: 21470.56 samples/sec	accuracy=nan
2023-03-21 23:14:06,848 Node[0] Epoch[16] Batch [120-140]	Speed: 21486.67 samples/sec	accuracy=nan
2023-03-21 23:14:09,888 Node[0] Epoch[16] Batch [140-160]	Speed: 21469.41 samples/sec	accuracy=nan
2023-03-21 23:14:12,928 Node[0] Epoch[16] Batch [160-180]	Speed: 21474.29 samples/sec	accuracy=nan
2023-03-21 23:14:15,970 Node[0] Epoch[16] Batch [180-200]	Speed: 21460.45 samples/sec	accuracy=nan
2023-03-21 23:14:19,013 Node[0] Epoch[16] Batch [200-220]	Speed: 21448.72 samples/sec	accuracy=nan
2023-03-21 23:14:22,056 Node[0] Epoch[16] Batch [220-240]	Speed: 21454.51 samples/sec	accuracy=nan
2023-03-21 23:14:25,098 Node[0] Epoch[16] Batch [240-260]	Speed: 21463.86 samples/sec	accuracy=nan
2023-03-21 23:14:28,139 Node[0] Epoch[16] Batch [260-280]	Speed: 21460.15 samples/sec	accuracy=nan
2023-03-21 23:14:31,181 Node[0] Epoch[16] Batch [280-300]	Speed: 21459.87 samples/sec	accuracy=nan
2023-03-21 23:14:34,221 Node[0] Epoch[16] Batch [300-320]	Speed: 21476.64 samples/sec	accuracy=nan
2023-03-21 23:14:37,263 Node[0] Epoch[16] Batch [320-340]	Speed: 21461.29 samples/sec	accuracy=nan
2023-03-21 23:14:40,307 Node[0] Epoch[16] Batch [340-360]	Speed: 21442.43 samples/sec	accuracy=nan
2023-03-21 23:14:43,355 Node[0] Epoch[16] Batch [360-380]	Speed: 21416.03 samples/sec	accuracy=nan
2023-03-21 23:14:45,029 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:14:45,029 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:14:45,029 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:14:45,029 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:14:45,029 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:14:45,030 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:14:45,030 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458485030, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-21 23:14:45,032 Node[0] Epoch[16] Time cost=59.607
:::MLLOG {"namespace": "", "time_ms": 1679458485032, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21493.44605068133}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1679458485032, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-21 23:14:45,032 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:14:48,235 Node[0] Epoch[17] Batch [0-20]	Speed: 21407.98 samples/sec	accuracy=nan
2023-03-21 23:14:51,280 Node[0] Epoch[17] Batch [20-40]	Speed: 21436.44 samples/sec	accuracy=nan
2023-03-21 23:14:54,325 Node[0] Epoch[17] Batch [40-60]	Speed: 21440.85 samples/sec	accuracy=nan
2023-03-21 23:14:57,367 Node[0] Epoch[17] Batch [60-80]	Speed: 21461.49 samples/sec	accuracy=nan
2023-03-21 23:15:00,409 Node[0] Epoch[17] Batch [80-100]	Speed: 21457.43 samples/sec	accuracy=nan
2023-03-21 23:15:03,450 Node[0] Epoch[17] Batch [100-120]	Speed: 21464.06 samples/sec	accuracy=nan
2023-03-21 23:15:06,491 Node[0] Epoch[17] Batch [120-140]	Speed: 21470.18 samples/sec	accuracy=nan
2023-03-21 23:15:09,530 Node[0] Epoch[17] Batch [140-160]	Speed: 21477.61 samples/sec	accuracy=nan
2023-03-21 23:15:12,571 Node[0] Epoch[17] Batch [160-180]	Speed: 21466.93 samples/sec	accuracy=nan
2023-03-21 23:15:15,610 Node[0] Epoch[17] Batch [180-200]	Speed: 21483.12 samples/sec	accuracy=nan
2023-03-21 23:15:18,651 Node[0] Epoch[17] Batch [200-220]	Speed: 21469.16 samples/sec	accuracy=nan
2023-03-21 23:15:21,696 Node[0] Epoch[17] Batch [220-240]	Speed: 21435.43 samples/sec	accuracy=nan
2023-03-21 23:15:24,741 Node[0] Epoch[17] Batch [240-260]	Speed: 21439.03 samples/sec	accuracy=nan
2023-03-21 23:15:27,779 Node[0] Epoch[17] Batch [260-280]	Speed: 21484.50 samples/sec	accuracy=nan
2023-03-21 23:15:30,816 Node[0] Epoch[17] Batch [280-300]	Speed: 21496.13 samples/sec	accuracy=nan
2023-03-21 23:15:33,857 Node[0] Epoch[17] Batch [300-320]	Speed: 21470.87 samples/sec	accuracy=nan
2023-03-21 23:15:36,894 Node[0] Epoch[17] Batch [320-340]	Speed: 21495.09 samples/sec	accuracy=nan
2023-03-21 23:15:39,928 Node[0] Epoch[17] Batch [340-360]	Speed: 21512.68 samples/sec	accuracy=nan
2023-03-21 23:15:42,969 Node[0] Epoch[17] Batch [360-380]	Speed: 21463.87 samples/sec	accuracy=nan
2023-03-21 23:15:44,794 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:15:44,794 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:15:44,794 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:15:44,794 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:15:44,794 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:15:44,794 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:15:44,794 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458544794, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-21 23:15:44,795 Node[0] Epoch[17] Time cost=59.762
:::MLLOG {"namespace": "", "time_ms": 1679458544795, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21437.680754705394}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679458544795, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-21 23:15:44,795 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:15:47,992 Node[0] Epoch[18] Batch [0-20]	Speed: 21447.14 samples/sec	accuracy=nan
2023-03-21 23:15:51,033 Node[0] Epoch[18] Batch [20-40]	Speed: 21468.15 samples/sec	accuracy=nan
2023-03-21 23:15:54,073 Node[0] Epoch[18] Batch [40-60]	Speed: 21468.20 samples/sec	accuracy=nan
2023-03-21 23:15:57,117 Node[0] Epoch[18] Batch [60-80]	Speed: 21448.02 samples/sec	accuracy=nan
2023-03-21 23:16:00,153 Node[0] Epoch[18] Batch [80-100]	Speed: 21503.63 samples/sec	accuracy=nan
2023-03-21 23:16:03,191 Node[0] Epoch[18] Batch [100-120]	Speed: 21484.17 samples/sec	accuracy=nan
2023-03-21 23:16:06,229 Node[0] Epoch[18] Batch [120-140]	Speed: 21490.31 samples/sec	accuracy=nan
2023-03-21 23:16:09,266 Node[0] Epoch[18] Batch [140-160]	Speed: 21491.59 samples/sec	accuracy=nan
2023-03-21 23:16:12,309 Node[0] Epoch[18] Batch [160-180]	Speed: 21455.11 samples/sec	accuracy=nan
2023-03-21 23:16:15,354 Node[0] Epoch[18] Batch [180-200]	Speed: 21440.28 samples/sec	accuracy=nan
2023-03-21 23:16:18,396 Node[0] Epoch[18] Batch [200-220]	Speed: 21459.95 samples/sec	accuracy=nan
2023-03-21 23:16:21,435 Node[0] Epoch[18] Batch [220-240]	Speed: 21478.13 samples/sec	accuracy=nan
2023-03-21 23:16:24,477 Node[0] Epoch[18] Batch [240-260]	Speed: 21461.35 samples/sec	accuracy=nan
2023-03-21 23:16:27,519 Node[0] Epoch[18] Batch [260-280]	Speed: 21460.26 samples/sec	accuracy=nan
2023-03-21 23:16:30,563 Node[0] Epoch[18] Batch [280-300]	Speed: 21444.71 samples/sec	accuracy=nan
2023-03-21 23:16:33,602 Node[0] Epoch[18] Batch [300-320]	Speed: 21480.53 samples/sec	accuracy=nan
2023-03-21 23:16:36,641 Node[0] Epoch[18] Batch [320-340]	Speed: 21480.38 samples/sec	accuracy=nan
2023-03-21 23:16:39,687 Node[0] Epoch[18] Batch [340-360]	Speed: 21431.68 samples/sec	accuracy=nan
2023-03-21 23:16:42,729 Node[0] Epoch[18] Batch [360-380]	Speed: 21455.60 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679458604400, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-21 23:16:44,401 Node[0] Epoch[18] Time cost=59.606
:::MLLOG {"namespace": "", "time_ms": 1679458604401, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21493.89035234291}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679458604546, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-21 23:16:46,105 Node[0] Epoch[18] Validation-accuracy=0.633600
2023-03-21 23:16:46,105 Node[0] Epoch[18] Validation-correct-count=3960.000000
2023-03-21 23:16:46,105 Node[0] Epoch[18] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679458606185, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
2023-03-21 23:16:46,185 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:16:46,185 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:16:46,185 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458606186, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.63272, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679458606186, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-21 23:16:46,185 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:16:46,185 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:16:46,185 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458606186, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-21 23:16:46,186 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458606186, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-21 23:16:46,186 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:16:49,241 Node[0] Epoch[19] Batch [0-20]	Speed: 21445.45 samples/sec	accuracy=nan
2023-03-21 23:16:52,280 Node[0] Epoch[19] Batch [20-40]	Speed: 21484.16 samples/sec	accuracy=nan
2023-03-21 23:16:55,321 Node[0] Epoch[19] Batch [40-60]	Speed: 21465.00 samples/sec	accuracy=nan
2023-03-21 23:16:58,361 Node[0] Epoch[19] Batch [60-80]	Speed: 21477.41 samples/sec	accuracy=nan
2023-03-21 23:17:01,404 Node[0] Epoch[19] Batch [80-100]	Speed: 21447.42 samples/sec	accuracy=nan
2023-03-21 23:17:04,445 Node[0] Epoch[19] Batch [100-120]	Speed: 21467.30 samples/sec	accuracy=nan
2023-03-21 23:17:07,485 Node[0] Epoch[19] Batch [120-140]	Speed: 21475.48 samples/sec	accuracy=nan
2023-03-21 23:17:10,525 Node[0] Epoch[19] Batch [140-160]	Speed: 21469.61 samples/sec	accuracy=nan
2023-03-21 23:17:13,562 Node[0] Epoch[19] Batch [160-180]	Speed: 21498.13 samples/sec	accuracy=nan
2023-03-21 23:17:16,603 Node[0] Epoch[19] Batch [180-200]	Speed: 21466.02 samples/sec	accuracy=nan
2023-03-21 23:17:19,648 Node[0] Epoch[19] Batch [200-220]	Speed: 21438.33 samples/sec	accuracy=nan
2023-03-21 23:17:22,689 Node[0] Epoch[19] Batch [220-240]	Speed: 21466.34 samples/sec	accuracy=nan
2023-03-21 23:17:25,728 Node[0] Epoch[19] Batch [240-260]	Speed: 21480.82 samples/sec	accuracy=nan
2023-03-21 23:17:28,768 Node[0] Epoch[19] Batch [260-280]	Speed: 21473.54 samples/sec	accuracy=nan
2023-03-21 23:17:31,801 Node[0] Epoch[19] Batch [280-300]	Speed: 21520.81 samples/sec	accuracy=nan
2023-03-21 23:17:34,839 Node[0] Epoch[19] Batch [300-320]	Speed: 21489.21 samples/sec	accuracy=nan
2023-03-21 23:17:37,883 Node[0] Epoch[19] Batch [320-340]	Speed: 21447.00 samples/sec	accuracy=nan
2023-03-21 23:17:40,922 Node[0] Epoch[19] Batch [340-360]	Speed: 21478.49 samples/sec	accuracy=nan
2023-03-21 23:17:43,966 Node[0] Epoch[19] Batch [360-380]	Speed: 21447.12 samples/sec	accuracy=nan
2023-03-21 23:17:45,786 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:17:45,786 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:17:45,786 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:17:45,786 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:17:45,786 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:17:45,786 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:17:45,786 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458665786, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-21 23:17:45,787 Node[0] Epoch[19] Time cost=59.601
:::MLLOG {"namespace": "", "time_ms": 1679458665788, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21495.666108926216}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679458665788, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-21 23:17:45,788 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:17:48,978 Node[0] Epoch[20] Batch [0-20]	Speed: 21482.30 samples/sec	accuracy=nan
2023-03-21 23:17:52,019 Node[0] Epoch[20] Batch [20-40]	Speed: 21468.39 samples/sec	accuracy=nan
2023-03-21 23:17:55,061 Node[0] Epoch[20] Batch [40-60]	Speed: 21462.32 samples/sec	accuracy=nan
2023-03-21 23:17:58,096 Node[0] Epoch[20] Batch [60-80]	Speed: 21505.41 samples/sec	accuracy=nan
2023-03-21 23:18:01,137 Node[0] Epoch[20] Batch [80-100]	Speed: 21465.85 samples/sec	accuracy=nan
2023-03-21 23:18:04,180 Node[0] Epoch[20] Batch [100-120]	Speed: 21457.14 samples/sec	accuracy=nan
2023-03-21 23:18:07,225 Node[0] Epoch[20] Batch [120-140]	Speed: 21438.95 samples/sec	accuracy=nan
2023-03-21 23:18:10,261 Node[0] Epoch[20] Batch [140-160]	Speed: 21497.85 samples/sec	accuracy=nan
2023-03-21 23:18:13,308 Node[0] Epoch[20] Batch [160-180]	Speed: 21428.13 samples/sec	accuracy=nan
2023-03-21 23:18:16,347 Node[0] Epoch[20] Batch [180-200]	Speed: 21474.80 samples/sec	accuracy=nan
2023-03-21 23:18:19,392 Node[0] Epoch[20] Batch [200-220]	Speed: 21444.65 samples/sec	accuracy=nan
2023-03-21 23:18:22,434 Node[0] Epoch[20] Batch [220-240]	Speed: 21455.48 samples/sec	accuracy=nan
2023-03-21 23:18:25,474 Node[0] Epoch[20] Batch [240-260]	Speed: 21476.84 samples/sec	accuracy=nan
2023-03-21 23:18:28,514 Node[0] Epoch[20] Batch [260-280]	Speed: 21469.65 samples/sec	accuracy=nan
2023-03-21 23:18:31,553 Node[0] Epoch[20] Batch [280-300]	Speed: 21484.24 samples/sec	accuracy=nan
2023-03-21 23:18:34,600 Node[0] Epoch[20] Batch [300-320]	Speed: 21426.07 samples/sec	accuracy=nan
2023-03-21 23:18:37,643 Node[0] Epoch[20] Batch [320-340]	Speed: 21447.58 samples/sec	accuracy=nan
2023-03-21 23:18:40,688 Node[0] Epoch[20] Batch [340-360]	Speed: 21441.86 samples/sec	accuracy=nan
2023-03-21 23:18:43,729 Node[0] Epoch[20] Batch [360-380]	Speed: 21462.82 samples/sec	accuracy=nan
2023-03-21 23:18:45,395 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:18:45,395 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:18:45,395 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:18:45,395 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458725395, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-21 23:18:45,395 Node[0] Epoch[20] Time cost=59.607
2023-03-21 23:18:45,395 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458725396, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21493.421549285875}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
2023-03-21 23:18:45,396 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458725396, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-21 23:18:45,396 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:18:45,396 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:18:48,586 Node[0] Epoch[21] Batch [0-20]	Speed: 21514.58 samples/sec	accuracy=nan
2023-03-21 23:18:51,628 Node[0] Epoch[21] Batch [20-40]	Speed: 21464.57 samples/sec	accuracy=nan
2023-03-21 23:18:54,668 Node[0] Epoch[21] Batch [40-60]	Speed: 21471.74 samples/sec	accuracy=nan
2023-03-21 23:18:57,712 Node[0] Epoch[21] Batch [60-80]	Speed: 21443.17 samples/sec	accuracy=nan
2023-03-21 23:19:00,753 Node[0] Epoch[21] Batch [80-100]	Speed: 21470.69 samples/sec	accuracy=nan
2023-03-21 23:19:03,797 Node[0] Epoch[21] Batch [100-120]	Speed: 21443.77 samples/sec	accuracy=nan
2023-03-21 23:19:06,838 Node[0] Epoch[21] Batch [120-140]	Speed: 21462.83 samples/sec	accuracy=nan
2023-03-21 23:19:09,878 Node[0] Epoch[21] Batch [140-160]	Speed: 21479.48 samples/sec	accuracy=nan
2023-03-21 23:19:12,921 Node[0] Epoch[21] Batch [160-180]	Speed: 21453.26 samples/sec	accuracy=nan
2023-03-21 23:19:15,960 Node[0] Epoch[21] Batch [180-200]	Speed: 21480.18 samples/sec	accuracy=nan
2023-03-21 23:19:19,005 Node[0] Epoch[21] Batch [200-220]	Speed: 21437.37 samples/sec	accuracy=nan
2023-03-21 23:19:22,044 Node[0] Epoch[21] Batch [220-240]	Speed: 21477.90 samples/sec	accuracy=nan
2023-03-21 23:19:25,087 Node[0] Epoch[21] Batch [240-260]	Speed: 21452.82 samples/sec	accuracy=nan
2023-03-21 23:19:28,129 Node[0] Epoch[21] Batch [260-280]	Speed: 21456.81 samples/sec	accuracy=nan
2023-03-21 23:19:31,170 Node[0] Epoch[21] Batch [280-300]	Speed: 21469.86 samples/sec	accuracy=nan
2023-03-21 23:19:34,209 Node[0] Epoch[21] Batch [300-320]	Speed: 21480.89 samples/sec	accuracy=nan
2023-03-21 23:19:37,252 Node[0] Epoch[21] Batch [320-340]	Speed: 21450.53 samples/sec	accuracy=nan
2023-03-21 23:19:40,294 Node[0] Epoch[21] Batch [340-360]	Speed: 21463.05 samples/sec	accuracy=nan
2023-03-21 23:19:43,338 Node[0] Epoch[21] Batch [360-380]	Speed: 21445.39 samples/sec	accuracy=nan
2023-03-21 23:19:45,157 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:19:45,157 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:19:45,157 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:19:45,157 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:19:45,157 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:19:45,157 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458785157, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-21 23:19:45,158 Node[0] Epoch[21] Time cost=59.762
:::MLLOG {"namespace": "", "time_ms": 1679458785158, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21437.82050245833}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
2023-03-21 23:19:45,158 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458785158, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-21 23:19:45,159 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:19:48,351 Node[0] Epoch[22] Batch [0-20]	Speed: 21465.45 samples/sec	accuracy=nan
2023-03-21 23:19:51,390 Node[0] Epoch[22] Batch [20-40]	Speed: 21476.15 samples/sec	accuracy=nan
2023-03-21 23:19:54,429 Node[0] Epoch[22] Batch [40-60]	Speed: 21483.66 samples/sec	accuracy=nan
2023-03-21 23:19:57,471 Node[0] Epoch[22] Batch [60-80]	Speed: 21462.39 samples/sec	accuracy=nan
2023-03-21 23:20:00,515 Node[0] Epoch[22] Batch [80-100]	Speed: 21441.83 samples/sec	accuracy=nan
2023-03-21 23:20:03,553 Node[0] Epoch[22] Batch [100-120]	Speed: 21487.33 samples/sec	accuracy=nan
2023-03-21 23:20:06,595 Node[0] Epoch[22] Batch [120-140]	Speed: 21461.99 samples/sec	accuracy=nan
2023-03-21 23:20:09,640 Node[0] Epoch[22] Batch [140-160]	Speed: 21435.08 samples/sec	accuracy=nan
2023-03-21 23:20:12,685 Node[0] Epoch[22] Batch [160-180]	Speed: 21437.02 samples/sec	accuracy=nan
2023-03-21 23:20:15,728 Node[0] Epoch[22] Batch [180-200]	Speed: 21455.57 samples/sec	accuracy=nan
2023-03-21 23:20:18,767 Node[0] Epoch[22] Batch [200-220]	Speed: 21483.16 samples/sec	accuracy=nan
2023-03-21 23:20:21,808 Node[0] Epoch[22] Batch [220-240]	Speed: 21465.48 samples/sec	accuracy=nan
2023-03-21 23:20:24,855 Node[0] Epoch[22] Batch [240-260]	Speed: 21422.63 samples/sec	accuracy=nan
2023-03-21 23:20:27,909 Node[0] Epoch[22] Batch [260-280]	Speed: 21378.76 samples/sec	accuracy=nan
2023-03-21 23:20:30,955 Node[0] Epoch[22] Batch [280-300]	Speed: 21430.58 samples/sec	accuracy=nan
2023-03-21 23:20:33,992 Node[0] Epoch[22] Batch [300-320]	Speed: 21494.43 samples/sec	accuracy=nan
2023-03-21 23:20:37,027 Node[0] Epoch[22] Batch [320-340]	Speed: 21507.32 samples/sec	accuracy=nan
2023-03-21 23:20:40,072 Node[0] Epoch[22] Batch [340-360]	Speed: 21438.40 samples/sec	accuracy=nan
2023-03-21 23:20:43,116 Node[0] Epoch[22] Batch [360-380]	Speed: 21444.16 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679458844786, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-21 23:20:44,786 Node[0] Epoch[22] Time cost=59.628
:::MLLOG {"namespace": "", "time_ms": 1679458844786, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21486.159305441928}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679458844932, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-21 23:20:46,449 Node[0] Epoch[22] Validation-accuracy=0.680960
2023-03-21 23:20:46,449 Node[0] Epoch[22] Validation-correct-count=4256.000000
2023-03-21 23:20:46,449 Node[0] Epoch[22] Validation-total-count=6250.000000
2023-03-21 23:20:46,588 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:20:46,588 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:20:46,588 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:20:46,588 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:20:46,588 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:20:46,588 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458846587, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679458846588, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.68456, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679458846588, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679458846589, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-21 23:20:46,588 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458846589, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-21 23:20:46,589 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:20:49,649 Node[0] Epoch[23] Batch [0-20]	Speed: 21422.30 samples/sec	accuracy=nan
2023-03-21 23:20:52,685 Node[0] Epoch[23] Batch [20-40]	Speed: 21500.35 samples/sec	accuracy=nan
2023-03-21 23:20:55,726 Node[0] Epoch[23] Batch [40-60]	Speed: 21463.54 samples/sec	accuracy=nan
2023-03-21 23:20:58,767 Node[0] Epoch[23] Batch [60-80]	Speed: 21467.05 samples/sec	accuracy=nan
2023-03-21 23:21:01,812 Node[0] Epoch[23] Batch [80-100]	Speed: 21442.18 samples/sec	accuracy=nan
2023-03-21 23:21:04,850 Node[0] Epoch[23] Batch [100-120]	Speed: 21484.53 samples/sec	accuracy=nan
2023-03-21 23:21:07,896 Node[0] Epoch[23] Batch [120-140]	Speed: 21434.90 samples/sec	accuracy=nan
2023-03-21 23:21:10,938 Node[0] Epoch[23] Batch [140-160]	Speed: 21455.03 samples/sec	accuracy=nan
2023-03-21 23:21:13,982 Node[0] Epoch[23] Batch [160-180]	Speed: 21447.53 samples/sec	accuracy=nan
2023-03-21 23:21:17,024 Node[0] Epoch[23] Batch [180-200]	Speed: 21459.55 samples/sec	accuracy=nan
2023-03-21 23:21:20,074 Node[0] Epoch[23] Batch [200-220]	Speed: 21405.73 samples/sec	accuracy=nan
2023-03-21 23:21:23,130 Node[0] Epoch[23] Batch [220-240]	Speed: 21361.02 samples/sec	accuracy=nan
2023-03-21 23:21:26,187 Node[0] Epoch[23] Batch [240-260]	Speed: 21354.83 samples/sec	accuracy=nan
2023-03-21 23:21:29,235 Node[0] Epoch[23] Batch [260-280]	Speed: 21415.42 samples/sec	accuracy=nan
2023-03-21 23:21:32,279 Node[0] Epoch[23] Batch [280-300]	Speed: 21445.27 samples/sec	accuracy=nan
2023-03-21 23:21:35,315 Node[0] Epoch[23] Batch [300-320]	Speed: 21498.50 samples/sec	accuracy=nan
2023-03-21 23:21:38,371 Node[0] Epoch[23] Batch [320-340]	Speed: 21365.93 samples/sec	accuracy=nan
2023-03-21 23:21:41,427 Node[0] Epoch[23] Batch [340-360]	Speed: 21356.31 samples/sec	accuracy=nan
2023-03-21 23:21:44,473 Node[0] Epoch[23] Batch [360-380]	Speed: 21435.38 samples/sec	accuracy=nan
2023-03-21 23:21:46,294 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:21:46,294 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:21:46,294 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:21:46,294 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:21:46,294 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:21:46,294 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:21:46,294 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458906294, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-21 23:21:46,295 Node[0] Epoch[23] Time cost=59.706
:::MLLOG {"namespace": "", "time_ms": 1679458906295, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21458.08772105142}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679458906295, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-21 23:21:46,295 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:21:49,496 Node[0] Epoch[24] Batch [0-20]	Speed: 21418.92 samples/sec	accuracy=nan
2023-03-21 23:21:52,550 Node[0] Epoch[24] Batch [20-40]	Speed: 21375.00 samples/sec	accuracy=nan
2023-03-21 23:21:55,598 Node[0] Epoch[24] Batch [40-60]	Speed: 21412.56 samples/sec	accuracy=nan
2023-03-21 23:21:58,643 Node[0] Epoch[24] Batch [60-80]	Speed: 21439.48 samples/sec	accuracy=nan
2023-03-21 23:22:01,686 Node[0] Epoch[24] Batch [80-100]	Speed: 21456.29 samples/sec	accuracy=nan
2023-03-21 23:22:04,730 Node[0] Epoch[24] Batch [100-120]	Speed: 21446.88 samples/sec	accuracy=nan
2023-03-21 23:22:07,770 Node[0] Epoch[24] Batch [120-140]	Speed: 21474.53 samples/sec	accuracy=nan
2023-03-21 23:22:10,814 Node[0] Epoch[24] Batch [140-160]	Speed: 21445.59 samples/sec	accuracy=nan
2023-03-21 23:22:13,856 Node[0] Epoch[24] Batch [160-180]	Speed: 21455.73 samples/sec	accuracy=nan
2023-03-21 23:22:16,903 Node[0] Epoch[24] Batch [180-200]	Speed: 21422.37 samples/sec	accuracy=nan
2023-03-21 23:22:19,948 Node[0] Epoch[24] Batch [200-220]	Speed: 21437.20 samples/sec	accuracy=nan
2023-03-21 23:22:22,994 Node[0] Epoch[24] Batch [220-240]	Speed: 21436.49 samples/sec	accuracy=nan
2023-03-21 23:22:26,048 Node[0] Epoch[24] Batch [240-260]	Speed: 21376.10 samples/sec	accuracy=nan
2023-03-21 23:22:29,107 Node[0] Epoch[24] Batch [260-280]	Speed: 21338.95 samples/sec	accuracy=nan
2023-03-21 23:22:32,161 Node[0] Epoch[24] Batch [280-300]	Speed: 21375.51 samples/sec	accuracy=nan
2023-03-21 23:22:35,204 Node[0] Epoch[24] Batch [300-320]	Speed: 21449.44 samples/sec	accuracy=nan
2023-03-21 23:22:38,250 Node[0] Epoch[24] Batch [320-340]	Speed: 21434.13 samples/sec	accuracy=nan
2023-03-21 23:22:41,304 Node[0] Epoch[24] Batch [340-360]	Speed: 21372.46 samples/sec	accuracy=nan
2023-03-21 23:22:44,361 Node[0] Epoch[24] Batch [360-380]	Speed: 21357.04 samples/sec	accuracy=nan
2023-03-21 23:22:46,033 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:22:46,033 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:22:46,034 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:22:46,033 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:22:46,034 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:22:46,034 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:22:46,034 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679458966033, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-21 23:22:46,035 Node[0] Epoch[24] Time cost=59.740
:::MLLOG {"namespace": "", "time_ms": 1679458966035, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21445.791362532564}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679458966035, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-21 23:22:46,036 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:22:49,230 Node[0] Epoch[25] Batch [0-20]	Speed: 21472.01 samples/sec	accuracy=nan
2023-03-21 23:22:52,276 Node[0] Epoch[25] Batch [20-40]	Speed: 21433.32 samples/sec	accuracy=nan
2023-03-21 23:22:55,317 Node[0] Epoch[25] Batch [40-60]	Speed: 21462.69 samples/sec	accuracy=nan
2023-03-21 23:22:58,360 Node[0] Epoch[25] Batch [60-80]	Speed: 21452.27 samples/sec	accuracy=nan
2023-03-21 23:23:01,403 Node[0] Epoch[25] Batch [80-100]	Speed: 21454.55 samples/sec	accuracy=nan
2023-03-21 23:23:04,443 Node[0] Epoch[25] Batch [100-120]	Speed: 21471.94 samples/sec	accuracy=nan
2023-03-21 23:23:07,489 Node[0] Epoch[25] Batch [120-140]	Speed: 21436.80 samples/sec	accuracy=nan
2023-03-21 23:23:10,532 Node[0] Epoch[25] Batch [140-160]	Speed: 21447.80 samples/sec	accuracy=nan
2023-03-21 23:23:13,576 Node[0] Epoch[25] Batch [160-180]	Speed: 21446.32 samples/sec	accuracy=nan
2023-03-21 23:23:16,618 Node[0] Epoch[25] Batch [180-200]	Speed: 21460.22 samples/sec	accuracy=nan
2023-03-21 23:23:19,663 Node[0] Epoch[25] Batch [200-220]	Speed: 21439.03 samples/sec	accuracy=nan
2023-03-21 23:23:22,708 Node[0] Epoch[25] Batch [220-240]	Speed: 21440.28 samples/sec	accuracy=nan
2023-03-21 23:23:25,755 Node[0] Epoch[25] Batch [240-260]	Speed: 21420.24 samples/sec	accuracy=nan
2023-03-21 23:23:28,803 Node[0] Epoch[25] Batch [260-280]	Speed: 21419.61 samples/sec	accuracy=nan
2023-03-21 23:23:31,851 Node[0] Epoch[25] Batch [280-300]	Speed: 21417.80 samples/sec	accuracy=nan
2023-03-21 23:23:34,900 Node[0] Epoch[25] Batch [300-320]	Speed: 21413.32 samples/sec	accuracy=nan
2023-03-21 23:23:37,947 Node[0] Epoch[25] Batch [320-340]	Speed: 21421.31 samples/sec	accuracy=nan
2023-03-21 23:23:40,989 Node[0] Epoch[25] Batch [340-360]	Speed: 21460.65 samples/sec	accuracy=nan
2023-03-21 23:23:44,033 Node[0] Epoch[25] Batch [360-380]	Speed: 21445.02 samples/sec	accuracy=nan
2023-03-21 23:23:45,855 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:23:45,855 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:23:45,855 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:23:45,854 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:23:45,854 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:23:45,855 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:23:45,855 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679459025856, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-21 23:23:45,856 Node[0] Epoch[25] Time cost=59.821
:::MLLOG {"namespace": "", "time_ms": 1679459025856, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21416.7894809268}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679459025857, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-21 23:23:45,857 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:23:49,057 Node[0] Epoch[26] Batch [0-20]	Speed: 21406.30 samples/sec	accuracy=nan
2023-03-21 23:23:52,103 Node[0] Epoch[26] Batch [20-40]	Speed: 21430.01 samples/sec	accuracy=nan
2023-03-21 23:23:55,149 Node[0] Epoch[26] Batch [40-60]	Speed: 21432.44 samples/sec	accuracy=nan
2023-03-21 23:23:58,198 Node[0] Epoch[26] Batch [60-80]	Speed: 21410.46 samples/sec	accuracy=nan
2023-03-21 23:24:01,244 Node[0] Epoch[26] Batch [80-100]	Speed: 21428.43 samples/sec	accuracy=nan
2023-03-21 23:24:04,293 Node[0] Epoch[26] Batch [100-120]	Speed: 21412.01 samples/sec	accuracy=nan
2023-03-21 23:24:07,338 Node[0] Epoch[26] Batch [120-140]	Speed: 21433.69 samples/sec	accuracy=nan
2023-03-21 23:24:10,387 Node[0] Epoch[26] Batch [140-160]	Speed: 21410.36 samples/sec	accuracy=nan
2023-03-21 23:24:13,448 Node[0] Epoch[26] Batch [160-180]	Speed: 21327.73 samples/sec	accuracy=nan
2023-03-21 23:24:16,503 Node[0] Epoch[26] Batch [180-200]	Speed: 21366.67 samples/sec	accuracy=nan
2023-03-21 23:24:19,546 Node[0] Epoch[26] Batch [200-220]	Speed: 21454.04 samples/sec	accuracy=nan
2023-03-21 23:24:22,591 Node[0] Epoch[26] Batch [220-240]	Speed: 21436.23 samples/sec	accuracy=nan
2023-03-21 23:24:25,636 Node[0] Epoch[26] Batch [240-260]	Speed: 21445.03 samples/sec	accuracy=nan
2023-03-21 23:24:28,680 Node[0] Epoch[26] Batch [260-280]	Speed: 21444.16 samples/sec	accuracy=nan
2023-03-21 23:24:31,732 Node[0] Epoch[26] Batch [280-300]	Speed: 21384.83 samples/sec	accuracy=nan
2023-03-21 23:24:34,775 Node[0] Epoch[26] Batch [300-320]	Speed: 21451.92 samples/sec	accuracy=nan
2023-03-21 23:24:37,820 Node[0] Epoch[26] Batch [320-340]	Speed: 21440.80 samples/sec	accuracy=nan
2023-03-21 23:24:40,866 Node[0] Epoch[26] Batch [340-360]	Speed: 21432.61 samples/sec	accuracy=nan
2023-03-21 23:24:43,914 Node[0] Epoch[26] Batch [360-380]	Speed: 21417.73 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679459085585, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-21 23:24:45,586 Node[0] Epoch[26] Time cost=59.729
:::MLLOG {"namespace": "", "time_ms": 1679459085586, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21449.552636356322}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679459085732, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-21 23:24:47,199 Node[0] Epoch[26] Validation-accuracy=0.706560
2023-03-21 23:24:47,199 Node[0] Epoch[26] Validation-correct-count=4416.000000
2023-03-21 23:24:47,199 Node[0] Epoch[26] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679459087367, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
2023-03-21 23:24:47,367 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679459087367, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.71096, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679459087367, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
2023-03-21 23:24:47,367 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:24:47,367 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679459087367, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-21 23:24:47,367 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:24:47,367 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:24:47,367 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:24:47,367 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679459087368, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-21 23:24:47,368 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:24:50,435 Node[0] Epoch[27] Batch [0-20]	Speed: 21369.87 samples/sec	accuracy=nan
2023-03-21 23:24:53,487 Node[0] Epoch[27] Batch [20-40]	Speed: 21389.70 samples/sec	accuracy=nan
2023-03-21 23:24:56,543 Node[0] Epoch[27] Batch [40-60]	Speed: 21366.42 samples/sec	accuracy=nan
2023-03-21 23:24:59,592 Node[0] Epoch[27] Batch [60-80]	Speed: 21410.02 samples/sec	accuracy=nan
2023-03-21 23:25:02,636 Node[0] Epoch[27] Batch [80-100]	Speed: 21445.14 samples/sec	accuracy=nan
2023-03-21 23:25:05,685 Node[0] Epoch[27] Batch [100-120]	Speed: 21411.33 samples/sec	accuracy=nan
2023-03-21 23:25:08,742 Node[0] Epoch[27] Batch [120-140]	Speed: 21349.56 samples/sec	accuracy=nan
2023-03-21 23:25:11,791 Node[0] Epoch[27] Batch [140-160]	Speed: 21414.77 samples/sec	accuracy=nan
2023-03-21 23:25:14,831 Node[0] Epoch[27] Batch [160-180]	Speed: 21471.26 samples/sec	accuracy=nan
2023-03-21 23:25:17,868 Node[0] Epoch[27] Batch [180-200]	Speed: 21492.73 samples/sec	accuracy=nan
2023-03-21 23:25:20,913 Node[0] Epoch[27] Batch [200-220]	Speed: 21439.34 samples/sec	accuracy=nan
2023-03-21 23:25:23,959 Node[0] Epoch[27] Batch [220-240]	Speed: 21430.72 samples/sec	accuracy=nan
2023-03-21 23:25:27,002 Node[0] Epoch[27] Batch [240-260]	Speed: 21451.60 samples/sec	accuracy=nan
2023-03-21 23:25:30,049 Node[0] Epoch[27] Batch [260-280]	Speed: 21426.42 samples/sec	accuracy=nan
2023-03-21 23:25:33,091 Node[0] Epoch[27] Batch [280-300]	Speed: 21462.61 samples/sec	accuracy=nan
2023-03-21 23:25:36,135 Node[0] Epoch[27] Batch [300-320]	Speed: 21443.31 samples/sec	accuracy=nan
2023-03-21 23:25:39,178 Node[0] Epoch[27] Batch [320-340]	Speed: 21454.53 samples/sec	accuracy=nan
2023-03-21 23:25:42,223 Node[0] Epoch[27] Batch [340-360]	Speed: 21438.18 samples/sec	accuracy=nan
2023-03-21 23:25:45,264 Node[0] Epoch[27] Batch [360-380]	Speed: 21467.42 samples/sec	accuracy=nan
2023-03-21 23:25:47,085 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:25:47,085 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:25:47,085 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:25:47,085 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:25:47,085 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:25:47,086 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:25:47,086 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679459147086, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-21 23:25:47,087 Node[0] Epoch[27] Time cost=59.719
:::MLLOG {"namespace": "", "time_ms": 1679459147087, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21453.238916612056}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679459147087, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-21 23:25:47,088 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:25:50,283 Node[0] Epoch[28] Batch [0-20]	Speed: 21441.95 samples/sec	accuracy=nan
2023-03-21 23:25:53,325 Node[0] Epoch[28] Batch [20-40]	Speed: 21463.17 samples/sec	accuracy=nan
2023-03-21 23:25:56,371 Node[0] Epoch[28] Batch [40-60]	Speed: 21426.19 samples/sec	accuracy=nan
2023-03-21 23:25:59,416 Node[0] Epoch[28] Batch [60-80]	Speed: 21441.60 samples/sec	accuracy=nan
2023-03-21 23:26:02,460 Node[0] Epoch[28] Batch [80-100]	Speed: 21446.48 samples/sec	accuracy=nan
2023-03-21 23:26:05,511 Node[0] Epoch[28] Batch [100-120]	Speed: 21392.68 samples/sec	accuracy=nan
2023-03-21 23:26:08,568 Node[0] Epoch[28] Batch [120-140]	Speed: 21355.62 samples/sec	accuracy=nan
2023-03-21 23:26:11,618 Node[0] Epoch[28] Batch [140-160]	Speed: 21399.94 samples/sec	accuracy=nan
2023-03-21 23:26:14,664 Node[0] Epoch[28] Batch [160-180]	Speed: 21434.97 samples/sec	accuracy=nan
2023-03-21 23:26:17,711 Node[0] Epoch[28] Batch [180-200]	Speed: 21424.67 samples/sec	accuracy=nan
2023-03-21 23:26:20,753 Node[0] Epoch[28] Batch [200-220]	Speed: 21460.40 samples/sec	accuracy=nan
2023-03-21 23:26:23,796 Node[0] Epoch[28] Batch [220-240]	Speed: 21447.37 samples/sec	accuracy=nan
2023-03-21 23:26:26,839 Node[0] Epoch[28] Batch [240-260]	Speed: 21455.43 samples/sec	accuracy=nan
2023-03-21 23:26:29,886 Node[0] Epoch[28] Batch [260-280]	Speed: 21426.64 samples/sec	accuracy=nan
2023-03-21 23:26:32,929 Node[0] Epoch[28] Batch [280-300]	Speed: 21450.03 samples/sec	accuracy=nan
2023-03-21 23:26:38,191 Node[0] Epoch[28] Batch [300-320]	Speed: 12406.06 samples/sec	accuracy=nan
2023-03-21 23:26:41,221 Node[0] Epoch[28] Batch [320-340]	Speed: 21541.89 samples/sec	accuracy=nan
2023-03-21 23:26:44,263 Node[0] Epoch[28] Batch [340-360]	Speed: 21462.66 samples/sec	accuracy=nan
2023-03-21 23:26:47,301 Node[0] Epoch[28] Batch [360-380]	Speed: 21487.50 samples/sec	accuracy=nan
2023-03-21 23:26:48,973 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:26:48,973 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:26:48,973 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:26:48,973 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:26:48,973 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:26:48,973 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:26:48,974 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679459208973, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-21 23:26:48,975 Node[0] Epoch[28] Time cost=61.887
:::MLLOG {"namespace": "", "time_ms": 1679459208975, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20701.640854913046}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1679459208975, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-21 23:26:48,976 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:26:52,165 Node[0] Epoch[29] Batch [0-20]	Speed: 21512.32 samples/sec	accuracy=nan
2023-03-21 23:26:55,204 Node[0] Epoch[29] Batch [20-40]	Speed: 21479.76 samples/sec	accuracy=nan
2023-03-21 23:26:58,244 Node[0] Epoch[29] Batch [40-60]	Speed: 21475.90 samples/sec	accuracy=nan
2023-03-21 23:27:01,289 Node[0] Epoch[29] Batch [60-80]	Speed: 21434.41 samples/sec	accuracy=nan
2023-03-21 23:27:04,330 Node[0] Epoch[29] Batch [80-100]	Speed: 21467.11 samples/sec	accuracy=nan
2023-03-21 23:27:07,372 Node[0] Epoch[29] Batch [100-120]	Speed: 21460.86 samples/sec	accuracy=nan
2023-03-21 23:27:10,411 Node[0] Epoch[29] Batch [120-140]	Speed: 21483.25 samples/sec	accuracy=nan
2023-03-21 23:27:13,450 Node[0] Epoch[29] Batch [140-160]	Speed: 21480.15 samples/sec	accuracy=nan
2023-03-21 23:27:16,486 Node[0] Epoch[29] Batch [160-180]	Speed: 21502.38 samples/sec	accuracy=nan
2023-03-21 23:27:19,530 Node[0] Epoch[29] Batch [180-200]	Speed: 21441.38 samples/sec	accuracy=nan
2023-03-21 23:27:22,575 Node[0] Epoch[29] Batch [200-220]	Speed: 21439.01 samples/sec	accuracy=nan
2023-03-21 23:27:25,619 Node[0] Epoch[29] Batch [220-240]	Speed: 21445.38 samples/sec	accuracy=nan
2023-03-21 23:27:28,661 Node[0] Epoch[29] Batch [240-260]	Speed: 21460.50 samples/sec	accuracy=nan
2023-03-21 23:27:31,706 Node[0] Epoch[29] Batch [260-280]	Speed: 21440.81 samples/sec	accuracy=nan
2023-03-21 23:27:34,752 Node[0] Epoch[29] Batch [280-300]	Speed: 21428.03 samples/sec	accuracy=nan
2023-03-21 23:27:40,013 Node[0] Epoch[29] Batch [300-320]	Speed: 12409.33 samples/sec	accuracy=nan
2023-03-21 23:27:43,045 Node[0] Epoch[29] Batch [320-340]	Speed: 21532.33 samples/sec	accuracy=nan
2023-03-21 23:27:46,084 Node[0] Epoch[29] Batch [340-360]	Speed: 21477.88 samples/sec	accuracy=nan
2023-03-21 23:27:49,126 Node[0] Epoch[29] Batch [360-380]	Speed: 21460.39 samples/sec	accuracy=nan
2023-03-21 23:27:50,945 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:27:50,945 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:27:50,945 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:27:50,945 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:27:50,945 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:27:50,945 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:27:50,945 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679459270945, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-21 23:27:50,946 Node[0] Epoch[29] Time cost=61.971
:::MLLOG {"namespace": "", "time_ms": 1679459270947, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20673.69859983653}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679459270947, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-21 23:27:50,947 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:27:54,139 Node[0] Epoch[30] Batch [0-20]	Speed: 21465.34 samples/sec	accuracy=nan
2023-03-21 23:27:57,176 Node[0] Epoch[30] Batch [20-40]	Speed: 21494.79 samples/sec	accuracy=nan
2023-03-21 23:28:00,216 Node[0] Epoch[30] Batch [40-60]	Speed: 21477.58 samples/sec	accuracy=nan
2023-03-21 23:28:03,257 Node[0] Epoch[30] Batch [60-80]	Speed: 21463.88 samples/sec	accuracy=nan
2023-03-21 23:28:06,298 Node[0] Epoch[30] Batch [80-100]	Speed: 21468.13 samples/sec	accuracy=nan
2023-03-21 23:28:09,336 Node[0] Epoch[30] Batch [100-120]	Speed: 21483.43 samples/sec	accuracy=nan
2023-03-21 23:28:12,375 Node[0] Epoch[30] Batch [120-140]	Speed: 21485.11 samples/sec	accuracy=nan
2023-03-21 23:28:15,420 Node[0] Epoch[30] Batch [140-160]	Speed: 21439.61 samples/sec	accuracy=nan
2023-03-21 23:28:18,463 Node[0] Epoch[30] Batch [160-180]	Speed: 21447.95 samples/sec	accuracy=nan
2023-03-21 23:28:21,507 Node[0] Epoch[30] Batch [180-200]	Speed: 21444.59 samples/sec	accuracy=nan
2023-03-21 23:28:24,549 Node[0] Epoch[30] Batch [200-220]	Speed: 21463.92 samples/sec	accuracy=nan
2023-03-21 23:28:27,593 Node[0] Epoch[30] Batch [220-240]	Speed: 21440.81 samples/sec	accuracy=nan
2023-03-21 23:28:30,640 Node[0] Epoch[30] Batch [240-260]	Speed: 21428.32 samples/sec	accuracy=nan
2023-03-21 23:28:33,686 Node[0] Epoch[30] Batch [260-280]	Speed: 21432.17 samples/sec	accuracy=nan
2023-03-21 23:28:36,732 Node[0] Epoch[30] Batch [280-300]	Speed: 21428.17 samples/sec	accuracy=nan
2023-03-21 23:28:42,047 Node[0] Epoch[30] Batch [300-320]	Speed: 12282.84 samples/sec	accuracy=nan
2023-03-21 23:28:45,078 Node[0] Epoch[30] Batch [320-340]	Speed: 21536.33 samples/sec	accuracy=nan
2023-03-21 23:28:48,119 Node[0] Epoch[30] Batch [340-360]	Speed: 21464.44 samples/sec	accuracy=nan
2023-03-21 23:28:51,157 Node[0] Epoch[30] Batch [360-380]	Speed: 21488.90 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679459332829, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-21 23:28:52,830 Node[0] Epoch[30] Time cost=61.883
:::MLLOG {"namespace": "", "time_ms": 1679459332830, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20703.062619260396}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679459332975, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-21 23:28:54,635 Node[0] Epoch[30] Validation-accuracy=0.751680
2023-03-21 23:28:54,635 Node[0] Epoch[30] Validation-correct-count=4698.000000
2023-03-21 23:28:54,635 Node[0] Epoch[30] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679459334636, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679459334636, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.74556, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679459334636, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
2023-03-21 23:28:54,636 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:28:54,636 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679459334636, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-21 23:28:54,636 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:28:54,636 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679459334636, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-21 23:28:54,636 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:28:54,636 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:28:54,636 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:28:54,636 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:28:57,697 Node[0] Epoch[31] Batch [0-20]	Speed: 21415.07 samples/sec	accuracy=nan
2023-03-21 23:29:00,734 Node[0] Epoch[31] Batch [20-40]	Speed: 21495.05 samples/sec	accuracy=nan
2023-03-21 23:29:03,776 Node[0] Epoch[31] Batch [40-60]	Speed: 21461.73 samples/sec	accuracy=nan
2023-03-21 23:29:06,818 Node[0] Epoch[31] Batch [60-80]	Speed: 21456.24 samples/sec	accuracy=nan
2023-03-21 23:29:09,863 Node[0] Epoch[31] Batch [80-100]	Speed: 21437.14 samples/sec	accuracy=nan
2023-03-21 23:29:12,905 Node[0] Epoch[31] Batch [100-120]	Speed: 21460.84 samples/sec	accuracy=nan
2023-03-21 23:29:15,944 Node[0] Epoch[31] Batch [120-140]	Speed: 21478.09 samples/sec	accuracy=nan
2023-03-21 23:29:18,984 Node[0] Epoch[31] Batch [140-160]	Speed: 21476.14 samples/sec	accuracy=nan
2023-03-21 23:29:22,024 Node[0] Epoch[31] Batch [160-180]	Speed: 21472.45 samples/sec	accuracy=nan
2023-03-21 23:29:25,068 Node[0] Epoch[31] Batch [180-200]	Speed: 21448.77 samples/sec	accuracy=nan
2023-03-21 23:29:28,112 Node[0] Epoch[31] Batch [200-220]	Speed: 21446.48 samples/sec	accuracy=nan
2023-03-21 23:29:31,157 Node[0] Epoch[31] Batch [220-240]	Speed: 21433.53 samples/sec	accuracy=nan
2023-03-21 23:29:34,200 Node[0] Epoch[31] Batch [240-260]	Speed: 21455.02 samples/sec	accuracy=nan
2023-03-21 23:29:37,247 Node[0] Epoch[31] Batch [260-280]	Speed: 21424.81 samples/sec	accuracy=nan
2023-03-21 23:29:40,288 Node[0] Epoch[31] Batch [280-300]	Speed: 21466.43 samples/sec	accuracy=nan
2023-03-21 23:29:45,589 Node[0] Epoch[31] Batch [300-320]	Speed: 12314.03 samples/sec	accuracy=nan
2023-03-21 23:29:48,624 Node[0] Epoch[31] Batch [320-340]	Speed: 21511.51 samples/sec	accuracy=nan
2023-03-21 23:29:51,658 Node[0] Epoch[31] Batch [340-360]	Speed: 21512.10 samples/sec	accuracy=nan
2023-03-21 23:29:54,700 Node[0] Epoch[31] Batch [360-380]	Speed: 21463.59 samples/sec	accuracy=nan
2023-03-21 23:29:56,519 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:29:56,519 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:29:56,519 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:29:56,519 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:29:56,519 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:29:56,519 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:29:56,520 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679459396521, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-21 23:29:56,522 Node[0] Epoch[31] Time cost=61.886
:::MLLOG {"namespace": "", "time_ms": 1679459396522, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20702.18079290528}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679459396523, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-21 23:29:56,523 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:29:59,710 Node[0] Epoch[32] Batch [0-20]	Speed: 21502.17 samples/sec	accuracy=nan
2023-03-21 23:30:02,750 Node[0] Epoch[32] Batch [20-40]	Speed: 21470.08 samples/sec	accuracy=nan
2023-03-21 23:30:05,788 Node[0] Epoch[32] Batch [40-60]	Speed: 21489.29 samples/sec	accuracy=nan
2023-03-21 23:30:08,827 Node[0] Epoch[32] Batch [60-80]	Speed: 21480.77 samples/sec	accuracy=nan
2023-03-21 23:30:11,864 Node[0] Epoch[32] Batch [80-100]	Speed: 21493.73 samples/sec	accuracy=nan
2023-03-21 23:30:14,907 Node[0] Epoch[32] Batch [100-120]	Speed: 21451.60 samples/sec	accuracy=nan
2023-03-21 23:30:17,954 Node[0] Epoch[32] Batch [120-140]	Speed: 21430.02 samples/sec	accuracy=nan
2023-03-21 23:30:20,993 Node[0] Epoch[32] Batch [140-160]	Speed: 21475.92 samples/sec	accuracy=nan
2023-03-21 23:30:24,037 Node[0] Epoch[32] Batch [160-180]	Speed: 21446.27 samples/sec	accuracy=nan
2023-03-21 23:30:27,075 Node[0] Epoch[32] Batch [180-200]	Speed: 21491.40 samples/sec	accuracy=nan
2023-03-21 23:30:30,124 Node[0] Epoch[32] Batch [200-220]	Speed: 21408.71 samples/sec	accuracy=nan
2023-03-21 23:30:33,174 Node[0] Epoch[32] Batch [220-240]	Speed: 21399.47 samples/sec	accuracy=nan
2023-03-21 23:30:36,222 Node[0] Epoch[32] Batch [240-260]	Speed: 21418.62 samples/sec	accuracy=nan
2023-03-21 23:30:39,269 Node[0] Epoch[32] Batch [260-280]	Speed: 21425.65 samples/sec	accuracy=nan
2023-03-21 23:30:42,313 Node[0] Epoch[32] Batch [280-300]	Speed: 21445.68 samples/sec	accuracy=nan
2023-03-21 23:30:47,603 Node[0] Epoch[32] Batch [300-320]	Speed: 12339.25 samples/sec	accuracy=nan
2023-03-21 23:30:50,638 Node[0] Epoch[32] Batch [320-340]	Speed: 21511.81 samples/sec	accuracy=nan
2023-03-21 23:30:53,677 Node[0] Epoch[32] Batch [340-360]	Speed: 21480.01 samples/sec	accuracy=nan
2023-03-21 23:30:56,710 Node[0] Epoch[32] Batch [360-380]	Speed: 21521.67 samples/sec	accuracy=nan
2023-03-21 23:30:58,377 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:30:58,377 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:30:58,377 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:30:58,377 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:30:58,377 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:30:58,377 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:30:58,377 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679459458377, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-21 23:30:58,379 Node[0] Epoch[32] Time cost=61.856
:::MLLOG {"namespace": "", "time_ms": 1679459458379, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20712.165308152576}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679459458379, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-21 23:30:58,379 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:31:01,576 Node[0] Epoch[33] Batch [0-20]	Speed: 21452.78 samples/sec	accuracy=nan
2023-03-21 23:31:04,616 Node[0] Epoch[33] Batch [20-40]	Speed: 21475.72 samples/sec	accuracy=nan
2023-03-21 23:31:09,925 Node[0] Epoch[33] Batch [40-60]	Speed: 12296.52 samples/sec	accuracy=nan
2023-03-21 23:31:12,951 Node[0] Epoch[33] Batch [60-80]	Speed: 21573.18 samples/sec	accuracy=nan
2023-03-21 23:31:15,987 Node[0] Epoch[33] Batch [80-100]	Speed: 21502.49 samples/sec	accuracy=nan
2023-03-21 23:31:19,026 Node[0] Epoch[33] Batch [100-120]	Speed: 21477.32 samples/sec	accuracy=nan
2023-03-21 23:31:22,064 Node[0] Epoch[33] Batch [120-140]	Speed: 21492.96 samples/sec	accuracy=nan
2023-03-21 23:31:25,105 Node[0] Epoch[33] Batch [140-160]	Speed: 21461.40 samples/sec	accuracy=nan
2023-03-21 23:31:28,150 Node[0] Epoch[33] Batch [160-180]	Speed: 21439.64 samples/sec	accuracy=nan
2023-03-21 23:31:31,189 Node[0] Epoch[33] Batch [180-200]	Speed: 21482.00 samples/sec	accuracy=nan
2023-03-21 23:31:34,233 Node[0] Epoch[33] Batch [200-220]	Speed: 21441.66 samples/sec	accuracy=nan
2023-03-21 23:31:37,274 Node[0] Epoch[33] Batch [220-240]	Speed: 21467.26 samples/sec	accuracy=nan
2023-03-21 23:31:40,315 Node[0] Epoch[33] Batch [240-260]	Speed: 21471.00 samples/sec	accuracy=nan
2023-03-21 23:31:43,352 Node[0] Epoch[33] Batch [260-280]	Speed: 21494.87 samples/sec	accuracy=nan
2023-03-21 23:31:46,406 Node[0] Epoch[33] Batch [280-300]	Speed: 21372.08 samples/sec	accuracy=nan
2023-03-21 23:31:49,461 Node[0] Epoch[33] Batch [300-320]	Speed: 21370.59 samples/sec	accuracy=nan
2023-03-21 23:31:52,506 Node[0] Epoch[33] Batch [320-340]	Speed: 21435.54 samples/sec	accuracy=nan
2023-03-21 23:31:55,548 Node[0] Epoch[33] Batch [340-360]	Speed: 21463.14 samples/sec	accuracy=nan
2023-03-21 23:31:58,585 Node[0] Epoch[33] Batch [360-380]	Speed: 21490.75 samples/sec	accuracy=nan
2023-03-21 23:32:00,412 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:32:00,412 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:32:00,412 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:32:00,412 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:32:00,412 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:32:00,412 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:32:00,412 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679459520412, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-21 23:32:00,414 Node[0] Epoch[33] Time cost=62.034
:::MLLOG {"namespace": "", "time_ms": 1679459520414, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20652.567361851532}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679459520414, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-21 23:32:00,414 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:32:03,609 Node[0] Epoch[34] Batch [0-20]	Speed: 21450.24 samples/sec	accuracy=nan
2023-03-21 23:32:06,658 Node[0] Epoch[34] Batch [20-40]	Speed: 21407.47 samples/sec	accuracy=nan
2023-03-21 23:32:09,698 Node[0] Epoch[34] Batch [40-60]	Speed: 21474.34 samples/sec	accuracy=nan
2023-03-21 23:32:12,741 Node[0] Epoch[34] Batch [60-80]	Speed: 21448.68 samples/sec	accuracy=nan
2023-03-21 23:32:15,785 Node[0] Epoch[34] Batch [80-100]	Speed: 21445.16 samples/sec	accuracy=nan
2023-03-21 23:32:18,827 Node[0] Epoch[34] Batch [100-120]	Speed: 21464.77 samples/sec	accuracy=nan
2023-03-21 23:32:21,867 Node[0] Epoch[34] Batch [120-140]	Speed: 21474.66 samples/sec	accuracy=nan
2023-03-21 23:32:24,912 Node[0] Epoch[34] Batch [140-160]	Speed: 21436.08 samples/sec	accuracy=nan
2023-03-21 23:32:30,407 Node[0] Epoch[34] Batch [160-180]	Speed: 11879.05 samples/sec	accuracy=nan
2023-03-21 23:32:33,448 Node[0] Epoch[34] Batch [180-200]	Speed: 21469.65 samples/sec	accuracy=nan
2023-03-21 23:32:36,490 Node[0] Epoch[34] Batch [200-220]	Speed: 21457.09 samples/sec	accuracy=nan
2023-03-21 23:32:39,538 Node[0] Epoch[34] Batch [220-240]	Speed: 21420.06 samples/sec	accuracy=nan
2023-03-21 23:32:42,589 Node[0] Epoch[34] Batch [240-260]	Speed: 21394.36 samples/sec	accuracy=nan
2023-03-21 23:32:45,643 Node[0] Epoch[34] Batch [260-280]	Speed: 21372.77 samples/sec	accuracy=nan
2023-03-21 23:32:48,691 Node[0] Epoch[34] Batch [280-300]	Speed: 21421.94 samples/sec	accuracy=nan
2023-03-21 23:32:53,954 Node[0] Epoch[34] Batch [300-320]	Speed: 12402.37 samples/sec	accuracy=nan
2023-03-21 23:32:56,982 Node[0] Epoch[34] Batch [320-340]	Speed: 21557.63 samples/sec	accuracy=nan
2023-03-21 23:33:00,015 Node[0] Epoch[34] Batch [340-360]	Speed: 21527.60 samples/sec	accuracy=nan
2023-03-21 23:33:03,052 Node[0] Epoch[34] Batch [360-380]	Speed: 21491.77 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679459584873, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-21 23:33:04,874 Node[0] Epoch[34] Time cost=64.460
:::MLLOG {"namespace": "", "time_ms": 1679459584874, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 19875.491442006663}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679459585019, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-21 23:33:06,470 Node[0] Epoch[34] Validation-accuracy=0.762720
2023-03-21 23:33:06,470 Node[0] Epoch[34] Validation-correct-count=4767.000000
2023-03-21 23:33:06,470 Node[0] Epoch[34] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679459586659, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679459586659, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75844, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679459586659, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
2023-03-21 23:33:06,659 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:33:06,659 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:33:06,659 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679459586659, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 36, "epoch_count": 2}}
2023-03-21 23:33:06,659 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:33:06,659 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:33:06,659 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:33:06,659 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679459586660, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 36}}
2023-03-21 23:33:06,660 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:33:09,718 Node[0] Epoch[35] Batch [0-20]	Speed: 21419.72 samples/sec	accuracy=nan
2023-03-21 23:33:12,771 Node[0] Epoch[35] Batch [20-40]	Speed: 21383.59 samples/sec	accuracy=nan
2023-03-21 23:33:15,817 Node[0] Epoch[35] Batch [40-60]	Speed: 21427.23 samples/sec	accuracy=nan
2023-03-21 23:33:18,861 Node[0] Epoch[35] Batch [60-80]	Speed: 21450.89 samples/sec	accuracy=nan
2023-03-21 23:33:21,900 Node[0] Epoch[35] Batch [80-100]	Speed: 21477.96 samples/sec	accuracy=nan
2023-03-21 23:33:24,935 Node[0] Epoch[35] Batch [100-120]	Speed: 21507.23 samples/sec	accuracy=nan
2023-03-21 23:33:27,973 Node[0] Epoch[35] Batch [120-140]	Speed: 21491.72 samples/sec	accuracy=nan
2023-03-21 23:33:31,012 Node[0] Epoch[35] Batch [140-160]	Speed: 21478.43 samples/sec	accuracy=nan
2023-03-21 23:33:34,053 Node[0] Epoch[35] Batch [160-180]	Speed: 21467.64 samples/sec	accuracy=nan
2023-03-21 23:33:37,097 Node[0] Epoch[35] Batch [180-200]	Speed: 21442.51 samples/sec	accuracy=nan
2023-03-21 23:33:40,140 Node[0] Epoch[35] Batch [200-220]	Speed: 21454.02 samples/sec	accuracy=nan
2023-03-21 23:33:43,185 Node[0] Epoch[35] Batch [220-240]	Speed: 21439.75 samples/sec	accuracy=nan
2023-03-21 23:33:46,227 Node[0] Epoch[35] Batch [240-260]	Speed: 21455.88 samples/sec	accuracy=nan
2023-03-21 23:33:49,268 Node[0] Epoch[35] Batch [260-280]	Speed: 21466.57 samples/sec	accuracy=nan
2023-03-21 23:33:52,308 Node[0] Epoch[35] Batch [280-300]	Speed: 21478.83 samples/sec	accuracy=nan
2023-03-21 23:33:55,350 Node[0] Epoch[35] Batch [300-320]	Speed: 21456.41 samples/sec	accuracy=nan
2023-03-21 23:33:58,392 Node[0] Epoch[35] Batch [320-340]	Speed: 21459.37 samples/sec	accuracy=nan
2023-03-21 23:34:01,434 Node[0] Epoch[35] Batch [340-360]	Speed: 21460.29 samples/sec	accuracy=nan
2023-03-21 23:34:04,473 Node[0] Epoch[35] Batch [360-380]	Speed: 21478.03 samples/sec	accuracy=nan
2023-03-21 23:34:06,141 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:34:06,141 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:34:06,141 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:34:06,141 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:34:06,141 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:34:06,141 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:34:06,141 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679459646141, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 36}}
2023-03-21 23:34:06,142 Node[0] Epoch[35] Time cost=59.482
:::MLLOG {"namespace": "", "time_ms": 1679459646142, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21538.644494459328}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 36}}
:::MLLOG {"namespace": "", "time_ms": 1679459646143, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 37}}
2023-03-21 23:34:06,143 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 23:34:09,337 Node[0] Epoch[36] Batch [0-20]	Speed: 21444.93 samples/sec	accuracy=nan
2023-03-21 23:34:12,380 Node[0] Epoch[36] Batch [20-40]	Speed: 21458.33 samples/sec	accuracy=nan
2023-03-21 23:34:15,423 Node[0] Epoch[36] Batch [40-60]	Speed: 21450.02 samples/sec	accuracy=nan
2023-03-21 23:34:18,465 Node[0] Epoch[36] Batch [60-80]	Speed: 21457.07 samples/sec	accuracy=nan
2023-03-21 23:34:21,508 Node[0] Epoch[36] Batch [80-100]	Speed: 21454.07 samples/sec	accuracy=nan
2023-03-21 23:34:24,553 Node[0] Epoch[36] Batch [100-120]	Speed: 21438.05 samples/sec	accuracy=nan
2023-03-21 23:34:27,599 Node[0] Epoch[36] Batch [120-140]	Speed: 21434.52 samples/sec	accuracy=nan
2023-03-21 23:34:30,638 Node[0] Epoch[36] Batch [140-160]	Speed: 21476.50 samples/sec	accuracy=nan
2023-03-21 23:34:33,692 Node[0] Epoch[36] Batch [160-180]	Speed: 21376.37 samples/sec	accuracy=nan
2023-03-21 23:34:36,738 Node[0] Epoch[36] Batch [180-200]	Speed: 21431.88 samples/sec	accuracy=nan
2023-03-21 23:34:39,787 Node[0] Epoch[36] Batch [200-220]	Speed: 21408.59 samples/sec	accuracy=nan
2023-03-21 23:34:42,829 Node[0] Epoch[36] Batch [220-240]	Speed: 21459.44 samples/sec	accuracy=nan
2023-03-21 23:34:45,874 Node[0] Epoch[36] Batch [240-260]	Speed: 21441.32 samples/sec	accuracy=nan
2023-03-21 23:34:48,919 Node[0] Epoch[36] Batch [260-280]	Speed: 21435.73 samples/sec	accuracy=nan
2023-03-21 23:34:51,960 Node[0] Epoch[36] Batch [280-300]	Speed: 21471.37 samples/sec	accuracy=nan
2023-03-21 23:34:55,005 Node[0] Epoch[36] Batch [300-320]	Speed: 21435.63 samples/sec	accuracy=nan
2023-03-21 23:34:58,059 Node[0] Epoch[36] Batch [320-340]	Speed: 21377.37 samples/sec	accuracy=nan
2023-03-21 23:35:01,116 Node[0] Epoch[36] Batch [340-360]	Speed: 21354.60 samples/sec	accuracy=nan
2023-03-21 23:35:04,166 Node[0] Epoch[36] Batch [360-380]	Speed: 21398.76 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679459705987, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 37}}
2023-03-21 23:35:05,987 Node[0] Epoch[36] Time cost=59.844
:::MLLOG {"namespace": "", "time_ms": 1679459705987, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21408.334376842802}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 37}}
:::MLLOG {"namespace": "", "time_ms": 1679459705988, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "status": "aborted"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679459722
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:35:22 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:35:22 PM'
ENDING TIMING RUN AT 2023-03-21 11:35:22 PM
+ result=2385
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2385,root,2023-03-21 10:55:37 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2385,root,2023-03-21 10:55:37 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679459723
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:35:23 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:35:23 PM'
ENDING TIMING RUN AT 2023-03-21 11:35:23 PM
+ result=2386
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2386,root,2023-03-21 10:55:37 PM'
RESULT,IMAGE_CLASSIFICATION,,2386,root,2023-03-21 10:55:37 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679459723
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:35:23 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:35:23 PM'
ENDING TIMING RUN AT 2023-03-21 11:35:23 PM
+ result=2386
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2386,root,2023-03-21 10:55:37 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2386,root,2023-03-21 10:55:37 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679459723
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:35:23 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:35:23 PM'
ENDING TIMING RUN AT 2023-03-21 11:35:23 PM
+ result=2386
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2386,root,2023-03-21 10:55:37 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2386,root,2023-03-21 10:55:37 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679459723
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:35:23 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:35:23 PM'
ENDING TIMING RUN AT 2023-03-21 11:35:23 PM
+ result=2386
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2386,root,2023-03-21 10:55:37 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2386,root,2023-03-21 10:55:37 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679459723
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:35:23 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:35:23 PM'
ENDING TIMING RUN AT 2023-03-21 11:35:23 PM
+ result=2386
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2386,root,2023-03-21 10:55:37 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2386,root,2023-03-21 10:55:37 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679459725
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:35:25 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:35:25 PM'
ENDING TIMING RUN AT 2023-03-21 11:35:25 PM
+ result=2388
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2388,root,2023-03-21 10:55:37 PM'
RESULT,IMAGE_CLASSIFICATION,,2388,root,2023-03-21 10:55:37 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679459725
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 11:35:25 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 11:35:25 PM'
ENDING TIMING RUN AT 2023-03-21 11:35:25 PM
+ result=2388
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2388,root,2023-03-21 10:55:37 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2388,root,2023-03-21 10:55:37 PM'
+ export PROFILE=0
+ PROFILE=0
