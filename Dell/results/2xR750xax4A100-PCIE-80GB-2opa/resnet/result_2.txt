+ echo 'Beginning trial 3 of 5'
Beginning trial 3 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node044 node045 '
+ echo 'hosts=node044 node045 '
hosts=node044 node045 
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679452705057, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679452705092, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679452705093, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679452705095, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679452705096, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679452718161, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679452724238, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679452724274, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679452724275, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679452724277, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679452724278, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB-2opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node045 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node045
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679452735893, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=19702
+ SEED=19702
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node045: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export DGXNNODES=2
++ DGXNNODES=2
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
+++ sed 's/^config_//'
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+++ sed 's/^config_//'
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
+++ sed 's/\.sh$//'
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
+++ sed 's/\.sh$//'
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++++ readlink -f ./config_2xR750xax4A100.sh
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++++ readlink -f ./config_2xR750xax4A100.sh
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date +%s
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ source ./config_2xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ dirname ./config_2xR750xax4A100.sh
+ start=1679452737
+ start=1679452737
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start=1679452737
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 09:38:57 PM'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:38:57 PM'
STARTING TIMING RUN AT 2023-03-21 09:38:57 PM
+ readonly global_rank=0
+ global_rank=0
+ start_fmt='2023-03-21 09:38:57 PM'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:38:57 PM'
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
STARTING TIMING RUN AT 2023-03-21 09:38:57 PM
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ readonly global_rank=0
+ global_rank=0
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ readonly local_rank=0
+ local_rank=0
+ LARSETA=0.001
+ SLURM_NTASKS_PER_NODE=4
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ OPTIMIZER=sgdwfastlars
+ LABELSMOOTHING=0.1
+ BATCHSIZE=408
+ SEED=19702
+ INPUT_BATCH_MULTIPLIER=1
+ EVAL_OFFSET=2
+ KVSTORE=horovod
+ EVAL_PERIOD=4
+ LR=12.5
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ MOM=0.9
+ DALI_THREADS=6
+ LRSCHED=pow2
+ DALI_CACHE_SIZE=0
+ WARMUP_EPOCHS=2
+ DALI_ROI_DECODE=1
+ LARSETA=0.001
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ DALI_PREALLOCATE_HEIGHT=6430
+ LABELSMOOTHING=0.1
+ DALI_TMP_BUFFER_HINT=355568328
+ SEED=19702
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_PREFETCH_QUEUE=5
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_NVJPEG_MEMPADDING=256
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+ DALI_ROI_DECODE=1
+ NETWORK=resnet-v1b-stats-fl
+ DALI_PREALLOCATE_WIDTH=5980
+ BN_GROUP=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+ DALI_PREALLOCATE_HEIGHT=6430
+ PROFILE=0
+ PROFILE_EXCEL=0
+++ export DGXNGPU=4
+++ DGXNGPU=4
+ DALI_TMP_BUFFER_HINT=355568328
+ NODALI=0
+ DALI_DECODER_BUFFER_HINT=1315942
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+ NUMEXAMPLES=
+ DALI_CROP_BUFFER_HINT=165581
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+ PROFILE_ALL_LOCAL_RANKS=0
+++ export DGXHT=1
+++ DGXHT=1
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ THR=0.759
+ NUMEPOCHS=37
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+ [[ 0 == 1 ]]
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ DATAROOT=/data
+ echo 'running benchmark'
+ PROFILE=0
+ PROFILE_EXCEL=0
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ NODALI=0
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+ [[ 0 -ge 1 ]]
+ [[ 0 == 1 ]]
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+ DATAROOT=/data
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+ NGPUS=4
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+ [[ 0 -ge 1 ]]
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
+ start_fmt='2023-03-21 09:38:57 PM'
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:38:57 PM'
STARTING TIMING RUN AT 2023-03-21 09:38:57 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=19702
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
++ seq 0 3
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
++ seq 0 3
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
++ tr '\n' ,
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
++ tr '\n' ,
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ sed 's/,$//'
+ [[ 0 -ge 1 ]]
++ sed 's/,$//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
+ start=1679452737
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-21 09:38:57 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:38:57 PM'
STARTING TIMING RUN AT 2023-03-21 09:38:57 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=19702
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ DGXNNODES=2
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ date +%s
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ date +%s
++ date +%s
+ start=1679452737
++ date '+%Y-%m-%d %r'
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+ start_fmt='2023-03-21 09:38:57 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:38:57 PM'
STARTING TIMING RUN AT 2023-03-21 09:38:57 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=19702
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ start=1679452737
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ date '+%Y-%m-%d %r'
+ start=1679452737
++ date '+%Y-%m-%d %r'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start_fmt='2023-03-21 09:38:57 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:38:57 PM'
STARTING TIMING RUN AT 2023-03-21 09:38:57 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=19702
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-21 09:38:57 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:38:57 PM'
STARTING TIMING RUN AT 2023-03-21 09:38:57 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=19702
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
+ [[ 0 -ge 1 ]]
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1,hfi1_1:1
++ export UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ UCX_NET_DEVICES=hfi1_0:1,hfi1_1:1
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ date +%s
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679452737
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ GPUS=0,1,2,3
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start_fmt='2023-03-21 09:38:57 PM'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo 'STARTING TIMING RUN AT 2023-03-21 09:38:57 PM'
STARTING TIMING RUN AT 2023-03-21 09:38:57 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=19702
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ [[ '' -ge 1 ]]
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 19702 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node044:122169] MCW rank 2 is not bound (or bound to all available processors)
[node044:122168] MCW rank 3 is not bound (or bound to all available processors)
[node044:122167] MCW rank 1 is not bound (or bound to all available processors)
[node044:122176] MCW rank 0 is not bound (or bound to all available processors)
[node045:113302] MCW rank 6 is not bound (or bound to all available processors)
[node045:113301] MCW rank 5 is not bound (or bound to all available processors)
[node045:113300] MCW rank 4 is not bound (or bound to all available processors)
[node045:113295] MCW rank 7 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679452741764, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[21:39:08] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:39:08] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:39:08] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:39:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:39:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:39:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[21:39:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679452749073, "event_type": "POINT_IN_TIME", "key": "seed", "value": 19702, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[21:39:09] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679452750602, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 408, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[21:39:15] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:39:15] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:39:15] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:39:15] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679452755538, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755539, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755539, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755540, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755540, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755540, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755540, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755541, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755541, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755541, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755541, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755542, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755542, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755542, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755542, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755543, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755543, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755543, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755543, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755544, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755544, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755544, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755545, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755545, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755545, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755545, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755545, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755546, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755546, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755546, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755547, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755547, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755547, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755547, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755547, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755548, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755548, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755548, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755549, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755549, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755549, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755549, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755550, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755550, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755550, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755550, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755550, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755551, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755551, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755551, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755552, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755552, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755552, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755552, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755553, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755553, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755553, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755553, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755554, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755554, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755554, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755554, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755555, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755555, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755555, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755555, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755556, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755556, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755556, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755556, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755557, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755557, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755557, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755557, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755557, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755558, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755558, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755558, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755559, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755559, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755559, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755559, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755560, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755560, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755560, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755560, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755561, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755561, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755561, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755561, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755562, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755562, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755562, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755562, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755563, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755563, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755563, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755563, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755564, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755564, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755564, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755564, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755565, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755565, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755565, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755566, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755566, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755566, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755566, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755567, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755567, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755567, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755567, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755568, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755568, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755568, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755569, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755569, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755569, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755569, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755570, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755570, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755570, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755570, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755571, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755571, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755571, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755572, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755572, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755572, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755572, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755573, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755573, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755573, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755573, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755574, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755574, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755574, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755574, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755575, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755575, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755575, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755575, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755576, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755576, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755576, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755576, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755577, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755577, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755577, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755577, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755578, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755578, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755578, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755578, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755579, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755579, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755579, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755579, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755580, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679452755580, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[21:39:15] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:39:15] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:39:15] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[21:39:15] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 21:39:17,272 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=46211, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 21:39:17,272 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=60329, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 21:39:17,272 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=13736, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 21:39:17,272 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=40360, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 21:39:17,272 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=59433, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 21:39:17,272 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=35340, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 21:39:17,272 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61683, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-21 21:39:17,273 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=5748, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679452757272, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679452757274, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679452757274, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679452757274, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679452757274, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 408, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679452757274, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679452757275, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679452757275, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679452757275, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679452757275, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679452757275, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679452757275, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679452757275, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679452757275, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679452757275, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679452757275, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679452757275, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679452757275, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 12.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679452757275, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679452757275, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679452847915, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679452847916, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679452847917, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679452848531, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679452848680, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679452848680, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-21 21:40:51,715 Node[0] Epoch[0] Batch [0-20]	Speed: 21632.02 samples/sec	accuracy=nan
2023-03-21 21:40:54,711 Node[0] Epoch[0] Batch [20-40]	Speed: 21787.67 samples/sec	accuracy=nan
2023-03-21 21:40:57,724 Node[0] Epoch[0] Batch [40-60]	Speed: 21666.35 samples/sec	accuracy=nan
2023-03-21 21:41:00,738 Node[0] Epoch[0] Batch [60-80]	Speed: 21657.21 samples/sec	accuracy=nan
2023-03-21 21:41:03,752 Node[0] Epoch[0] Batch [80-100]	Speed: 21658.18 samples/sec	accuracy=nan
2023-03-21 21:41:06,776 Node[0] Epoch[0] Batch [100-120]	Speed: 21592.58 samples/sec	accuracy=nan
2023-03-21 21:41:09,799 Node[0] Epoch[0] Batch [120-140]	Speed: 21594.49 samples/sec	accuracy=nan
2023-03-21 21:41:12,822 Node[0] Epoch[0] Batch [140-160]	Speed: 21588.15 samples/sec	accuracy=nan
2023-03-21 21:41:15,848 Node[0] Epoch[0] Batch [160-180]	Speed: 21575.72 samples/sec	accuracy=nan
2023-03-21 21:41:18,875 Node[0] Epoch[0] Batch [180-200]	Speed: 21565.39 samples/sec	accuracy=nan
2023-03-21 21:41:21,912 Node[0] Epoch[0] Batch [200-220]	Speed: 21493.94 samples/sec	accuracy=nan
2023-03-21 21:41:32,025 Node[0] Epoch[0] Batch [220-240]	Speed: 6455.28 samples/sec	accuracy=nan
2023-03-21 21:41:37,467 Node[0] Epoch[0] Batch [240-260]	Speed: 11995.96 samples/sec	accuracy=nan
2023-03-21 21:41:42,739 Node[0] Epoch[0] Batch [260-280]	Speed: 12382.13 samples/sec	accuracy=nan
2023-03-21 21:41:45,753 Node[0] Epoch[0] Batch [280-300]	Speed: 21659.97 samples/sec	accuracy=nan
2023-03-21 21:41:48,776 Node[0] Epoch[0] Batch [300-320]	Speed: 21595.62 samples/sec	accuracy=nan
2023-03-21 21:41:51,802 Node[0] Epoch[0] Batch [320-340]	Speed: 21574.01 samples/sec	accuracy=nan
2023-03-21 21:41:54,832 Node[0] Epoch[0] Batch [340-360]	Speed: 21539.28 samples/sec	accuracy=nan
2023-03-21 21:41:57,867 Node[0] Epoch[0] Batch [360-380]	Speed: 21512.23 samples/sec	accuracy=nan
2023-03-21 21:41:59,680 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679452919679, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-21 21:41:59,680 Node[0] Epoch[0] Time cost=71.000
:::MLLOG {"namespace": "", "time_ms": 1679452919680, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 18044.72173252522}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-21 21:41:59,680 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:41:59,680 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:41:59,680 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:41:59,680 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:41:59,680 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:41:59,680 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679452919681, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-21 21:41:59,681 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:42:02,874 Node[0] Epoch[1] Batch [0-20]	Speed: 21466.31 samples/sec	accuracy=nan
2023-03-21 21:42:05,911 Node[0] Epoch[1] Batch [20-40]	Speed: 21499.01 samples/sec	accuracy=nan
2023-03-21 21:42:08,950 Node[0] Epoch[1] Batch [40-60]	Speed: 21476.46 samples/sec	accuracy=nan
2023-03-21 21:42:11,991 Node[0] Epoch[1] Batch [60-80]	Speed: 21470.59 samples/sec	accuracy=nan
2023-03-21 21:42:15,034 Node[0] Epoch[1] Batch [80-100]	Speed: 21451.88 samples/sec	accuracy=nan
2023-03-21 21:42:18,073 Node[0] Epoch[1] Batch [100-120]	Speed: 21480.68 samples/sec	accuracy=nan
2023-03-21 21:42:21,118 Node[0] Epoch[1] Batch [120-140]	Speed: 21439.56 samples/sec	accuracy=nan
2023-03-21 21:42:24,170 Node[0] Epoch[1] Batch [140-160]	Speed: 21385.45 samples/sec	accuracy=nan
2023-03-21 21:42:27,225 Node[0] Epoch[1] Batch [160-180]	Speed: 21371.56 samples/sec	accuracy=nan
2023-03-21 21:42:30,283 Node[0] Epoch[1] Batch [180-200]	Speed: 21348.50 samples/sec	accuracy=nan
2023-03-21 21:42:33,328 Node[0] Epoch[1] Batch [200-220]	Speed: 21433.98 samples/sec	accuracy=nan
2023-03-21 21:42:36,371 Node[0] Epoch[1] Batch [220-240]	Speed: 21452.53 samples/sec	accuracy=nan
2023-03-21 21:42:39,418 Node[0] Epoch[1] Batch [240-260]	Speed: 21423.79 samples/sec	accuracy=nan
2023-03-21 21:42:42,462 Node[0] Epoch[1] Batch [260-280]	Speed: 21449.28 samples/sec	accuracy=nan
2023-03-21 21:42:45,510 Node[0] Epoch[1] Batch [280-300]	Speed: 21414.04 samples/sec	accuracy=nan
2023-03-21 21:42:48,558 Node[0] Epoch[1] Batch [300-320]	Speed: 21416.81 samples/sec	accuracy=nan
2023-03-21 21:42:51,601 Node[0] Epoch[1] Batch [320-340]	Speed: 21450.82 samples/sec	accuracy=nan
2023-03-21 21:42:54,647 Node[0] Epoch[1] Batch [340-360]	Speed: 21430.71 samples/sec	accuracy=nan
2023-03-21 21:42:57,695 Node[0] Epoch[1] Batch [360-380]	Speed: 21418.51 samples/sec	accuracy=nan
2023-03-21 21:42:59,519 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:42:59,519 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:42:59,519 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:42:59,519 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:42:59,519 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:42:59,519 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:42:59,519 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679452979519, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-21 21:42:59,520 Node[0] Epoch[1] Time cost=59.839
:::MLLOG {"namespace": "", "time_ms": 1679452979520, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21410.179452316243}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679452979521, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-21 21:42:59,521 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:43:02,723 Node[0] Epoch[2] Batch [0-20]	Speed: 21414.17 samples/sec	accuracy=nan
2023-03-21 21:43:05,772 Node[0] Epoch[2] Batch [20-40]	Speed: 21414.80 samples/sec	accuracy=nan
2023-03-21 21:43:08,818 Node[0] Epoch[2] Batch [40-60]	Speed: 21425.63 samples/sec	accuracy=nan
2023-03-21 21:43:11,863 Node[0] Epoch[2] Batch [60-80]	Speed: 21439.27 samples/sec	accuracy=nan
2023-03-21 21:43:14,910 Node[0] Epoch[2] Batch [80-100]	Speed: 21430.00 samples/sec	accuracy=nan
2023-03-21 21:43:17,956 Node[0] Epoch[2] Batch [100-120]	Speed: 21425.56 samples/sec	accuracy=nan
2023-03-21 21:43:21,003 Node[0] Epoch[2] Batch [120-140]	Speed: 21425.88 samples/sec	accuracy=nan
2023-03-21 21:43:24,047 Node[0] Epoch[2] Batch [140-160]	Speed: 21449.55 samples/sec	accuracy=nan
2023-03-21 21:43:27,093 Node[0] Epoch[2] Batch [160-180]	Speed: 21426.92 samples/sec	accuracy=nan
2023-03-21 21:43:30,134 Node[0] Epoch[2] Batch [180-200]	Speed: 21467.10 samples/sec	accuracy=nan
2023-03-21 21:43:33,180 Node[0] Epoch[2] Batch [200-220]	Speed: 21432.64 samples/sec	accuracy=nan
2023-03-21 21:43:36,226 Node[0] Epoch[2] Batch [220-240]	Speed: 21433.49 samples/sec	accuracy=nan
2023-03-21 21:43:39,269 Node[0] Epoch[2] Batch [240-260]	Speed: 21453.35 samples/sec	accuracy=nan
2023-03-21 21:43:42,309 Node[0] Epoch[2] Batch [260-280]	Speed: 21469.51 samples/sec	accuracy=nan
2023-03-21 21:43:45,347 Node[0] Epoch[2] Batch [280-300]	Speed: 21489.34 samples/sec	accuracy=nan
2023-03-21 21:43:48,390 Node[0] Epoch[2] Batch [300-320]	Speed: 21450.44 samples/sec	accuracy=nan
2023-03-21 21:43:51,433 Node[0] Epoch[2] Batch [320-340]	Speed: 21455.36 samples/sec	accuracy=nan
2023-03-21 21:43:54,481 Node[0] Epoch[2] Batch [340-360]	Speed: 21418.24 samples/sec	accuracy=nan
2023-03-21 21:43:57,520 Node[0] Epoch[2] Batch [360-380]	Speed: 21477.02 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679453039194, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-21 21:43:59,195 Node[0] Epoch[2] Time cost=59.674
:::MLLOG {"namespace": "", "time_ms": 1679453039195, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21469.26613509016}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
2023-03-21 21:43:59,341 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:43:59,341 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:43:59,341 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:43:59,341 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:43:59,342 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:43:59,342 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453039341, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-21 21:43:59,342 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:43:59,342 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:44:00,702 Node[0] Epoch[2] Validation-accuracy=0.279360
2023-03-21 21:44:00,703 Node[0] Epoch[2] Validation-correct-count=1746.000000
2023-03-21 21:44:00,703 Node[0] Epoch[2] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679453040914, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679453040914, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.27636, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679453040914, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-21 21:44:00,914 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:44:00,914 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:44:00,914 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:44:00,914 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:44:00,914 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:44:00,914 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453040914, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-21 21:44:00,914 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453040915, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-21 21:44:00,915 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:44:03,973 Node[0] Epoch[3] Batch [0-20]	Speed: 21438.61 samples/sec	accuracy=nan
2023-03-21 21:44:07,018 Node[0] Epoch[3] Batch [20-40]	Speed: 21432.50 samples/sec	accuracy=nan
2023-03-21 21:44:10,061 Node[0] Epoch[3] Batch [40-60]	Speed: 21455.07 samples/sec	accuracy=nan
2023-03-21 21:44:13,106 Node[0] Epoch[3] Batch [60-80]	Speed: 21439.14 samples/sec	accuracy=nan
2023-03-21 21:44:16,148 Node[0] Epoch[3] Batch [80-100]	Speed: 21457.66 samples/sec	accuracy=nan
2023-03-21 21:44:19,191 Node[0] Epoch[3] Batch [100-120]	Speed: 21452.79 samples/sec	accuracy=nan
2023-03-21 21:44:22,237 Node[0] Epoch[3] Batch [120-140]	Speed: 21431.96 samples/sec	accuracy=nan
2023-03-21 21:44:25,279 Node[0] Epoch[3] Batch [140-160]	Speed: 21456.69 samples/sec	accuracy=nan
2023-03-21 21:44:28,324 Node[0] Epoch[3] Batch [160-180]	Speed: 21442.68 samples/sec	accuracy=nan
2023-03-21 21:44:31,369 Node[0] Epoch[3] Batch [180-200]	Speed: 21436.48 samples/sec	accuracy=nan
2023-03-21 21:44:34,415 Node[0] Epoch[3] Batch [200-220]	Speed: 21429.91 samples/sec	accuracy=nan
2023-03-21 21:44:37,463 Node[0] Epoch[3] Batch [220-240]	Speed: 21417.45 samples/sec	accuracy=nan
2023-03-21 21:44:40,507 Node[0] Epoch[3] Batch [240-260]	Speed: 21448.17 samples/sec	accuracy=nan
2023-03-21 21:44:43,548 Node[0] Epoch[3] Batch [260-280]	Speed: 21464.51 samples/sec	accuracy=nan
2023-03-21 21:44:46,586 Node[0] Epoch[3] Batch [280-300]	Speed: 21487.99 samples/sec	accuracy=nan
2023-03-21 21:44:49,627 Node[0] Epoch[3] Batch [300-320]	Speed: 21468.21 samples/sec	accuracy=nan
2023-03-21 21:44:52,671 Node[0] Epoch[3] Batch [320-340]	Speed: 21445.50 samples/sec	accuracy=nan
2023-03-21 21:44:55,713 Node[0] Epoch[3] Batch [340-360]	Speed: 21458.98 samples/sec	accuracy=nan
2023-03-21 21:44:58,756 Node[0] Epoch[3] Batch [360-380]	Speed: 21453.24 samples/sec	accuracy=nan
2023-03-21 21:45:00,577 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:45:00,577 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:45:00,578 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:45:00,577 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:45:00,578 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:45:00,578 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453100578, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-21 21:45:00,579 Node[0] Epoch[3] Time cost=59.664
:::MLLOG {"namespace": "", "time_ms": 1679453100579, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21473.010936094768}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
2023-03-21 21:45:00,578 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453100579, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-21 21:45:00,579 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:45:03,774 Node[0] Epoch[4] Batch [0-20]	Speed: 21450.94 samples/sec	accuracy=nan
2023-03-21 21:45:06,820 Node[0] Epoch[4] Batch [20-40]	Speed: 21434.78 samples/sec	accuracy=nan
2023-03-21 21:45:09,859 Node[0] Epoch[4] Batch [40-60]	Speed: 21478.22 samples/sec	accuracy=nan
2023-03-21 21:45:12,906 Node[0] Epoch[4] Batch [60-80]	Speed: 21425.37 samples/sec	accuracy=nan
2023-03-21 21:45:15,947 Node[0] Epoch[4] Batch [80-100]	Speed: 21465.68 samples/sec	accuracy=nan
2023-03-21 21:45:18,993 Node[0] Epoch[4] Batch [100-120]	Speed: 21430.62 samples/sec	accuracy=nan
2023-03-21 21:45:22,038 Node[0] Epoch[4] Batch [120-140]	Speed: 21438.21 samples/sec	accuracy=nan
2023-03-21 21:45:25,081 Node[0] Epoch[4] Batch [140-160]	Speed: 21456.74 samples/sec	accuracy=nan
2023-03-21 21:45:28,125 Node[0] Epoch[4] Batch [160-180]	Speed: 21439.64 samples/sec	accuracy=nan
2023-03-21 21:45:31,169 Node[0] Epoch[4] Batch [180-200]	Speed: 21451.35 samples/sec	accuracy=nan
2023-03-21 21:45:34,215 Node[0] Epoch[4] Batch [200-220]	Speed: 21427.94 samples/sec	accuracy=nan
2023-03-21 21:45:37,262 Node[0] Epoch[4] Batch [220-240]	Speed: 21424.08 samples/sec	accuracy=nan
2023-03-21 21:45:40,306 Node[0] Epoch[4] Batch [240-260]	Speed: 21449.06 samples/sec	accuracy=nan
2023-03-21 21:45:43,355 Node[0] Epoch[4] Batch [260-280]	Speed: 21406.01 samples/sec	accuracy=nan
2023-03-21 21:45:46,406 Node[0] Epoch[4] Batch [280-300]	Speed: 21396.09 samples/sec	accuracy=nan
2023-03-21 21:45:49,464 Node[0] Epoch[4] Batch [300-320]	Speed: 21351.49 samples/sec	accuracy=nan
2023-03-21 21:45:52,509 Node[0] Epoch[4] Batch [320-340]	Speed: 21434.36 samples/sec	accuracy=nan
2023-03-21 21:45:55,553 Node[0] Epoch[4] Batch [340-360]	Speed: 21448.18 samples/sec	accuracy=nan
2023-03-21 21:45:58,603 Node[0] Epoch[4] Batch [360-380]	Speed: 21402.67 samples/sec	accuracy=nan
2023-03-21 21:46:00,273 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:46:00,273 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453160273, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-21 21:46:00,273 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:46:00,274 Node[0] Epoch[4] Time cost=59.694
2023-03-21 21:46:00,273 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:46:00,273 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453160274, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21462.19507025205}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
2023-03-21 21:46:00,274 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453160274, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-21 21:46:00,274 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:46:00,274 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:46:03,470 Node[0] Epoch[5] Batch [0-20]	Speed: 21476.73 samples/sec	accuracy=nan
2023-03-21 21:46:06,515 Node[0] Epoch[5] Batch [20-40]	Speed: 21435.20 samples/sec	accuracy=nan
2023-03-21 21:46:09,553 Node[0] Epoch[5] Batch [40-60]	Speed: 21486.82 samples/sec	accuracy=nan
2023-03-21 21:46:12,597 Node[0] Epoch[5] Batch [60-80]	Speed: 21443.58 samples/sec	accuracy=nan
2023-03-21 21:46:15,640 Node[0] Epoch[5] Batch [80-100]	Speed: 21452.56 samples/sec	accuracy=nan
2023-03-21 21:46:18,681 Node[0] Epoch[5] Batch [100-120]	Speed: 21471.91 samples/sec	accuracy=nan
2023-03-21 21:46:21,725 Node[0] Epoch[5] Batch [120-140]	Speed: 21444.67 samples/sec	accuracy=nan
2023-03-21 21:46:24,778 Node[0] Epoch[5] Batch [140-160]	Speed: 21382.20 samples/sec	accuracy=nan
2023-03-21 21:46:27,820 Node[0] Epoch[5] Batch [160-180]	Speed: 21456.04 samples/sec	accuracy=nan
2023-03-21 21:46:30,863 Node[0] Epoch[5] Batch [180-200]	Speed: 21451.67 samples/sec	accuracy=nan
2023-03-21 21:46:33,905 Node[0] Epoch[5] Batch [200-220]	Speed: 21463.43 samples/sec	accuracy=nan
2023-03-21 21:46:36,950 Node[0] Epoch[5] Batch [220-240]	Speed: 21439.74 samples/sec	accuracy=nan
2023-03-21 21:46:39,991 Node[0] Epoch[5] Batch [240-260]	Speed: 21464.60 samples/sec	accuracy=nan
2023-03-21 21:46:43,034 Node[0] Epoch[5] Batch [260-280]	Speed: 21454.34 samples/sec	accuracy=nan
2023-03-21 21:46:46,077 Node[0] Epoch[5] Batch [280-300]	Speed: 21451.02 samples/sec	accuracy=nan
2023-03-21 21:46:49,126 Node[0] Epoch[5] Batch [300-320]	Speed: 21406.10 samples/sec	accuracy=nan
2023-03-21 21:46:52,180 Node[0] Epoch[5] Batch [320-340]	Speed: 21376.60 samples/sec	accuracy=nan
2023-03-21 21:46:55,238 Node[0] Epoch[5] Batch [340-360]	Speed: 21349.88 samples/sec	accuracy=nan
2023-03-21 21:46:58,288 Node[0] Epoch[5] Batch [360-380]	Speed: 21401.94 samples/sec	accuracy=nan
2023-03-21 21:47:00,111 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:47:00,111 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:47:00,112 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:47:00,112 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:47:00,112 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:47:00,112 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453220111, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-21 21:47:00,113 Node[0] Epoch[5] Time cost=59.839
2023-03-21 21:47:00,113 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453220113, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21410.38213913868}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679453220113, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-21 21:47:00,113 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:47:03,313 Node[0] Epoch[6] Batch [0-20]	Speed: 21418.47 samples/sec	accuracy=nan
2023-03-21 21:47:06,355 Node[0] Epoch[6] Batch [20-40]	Speed: 21460.31 samples/sec	accuracy=nan
2023-03-21 21:47:09,398 Node[0] Epoch[6] Batch [40-60]	Speed: 21452.93 samples/sec	accuracy=nan
2023-03-21 21:47:12,442 Node[0] Epoch[6] Batch [60-80]	Speed: 21445.85 samples/sec	accuracy=nan
2023-03-21 21:47:15,485 Node[0] Epoch[6] Batch [80-100]	Speed: 21452.45 samples/sec	accuracy=nan
2023-03-21 21:47:18,528 Node[0] Epoch[6] Batch [100-120]	Speed: 21454.29 samples/sec	accuracy=nan
2023-03-21 21:47:21,576 Node[0] Epoch[6] Batch [120-140]	Speed: 21416.89 samples/sec	accuracy=nan
2023-03-21 21:47:24,621 Node[0] Epoch[6] Batch [140-160]	Speed: 21434.55 samples/sec	accuracy=nan
2023-03-21 21:47:27,661 Node[0] Epoch[6] Batch [160-180]	Speed: 21473.15 samples/sec	accuracy=nan
2023-03-21 21:47:30,707 Node[0] Epoch[6] Batch [180-200]	Speed: 21434.30 samples/sec	accuracy=nan
2023-03-21 21:47:33,750 Node[0] Epoch[6] Batch [200-220]	Speed: 21455.51 samples/sec	accuracy=nan
2023-03-21 21:47:36,791 Node[0] Epoch[6] Batch [220-240]	Speed: 21462.59 samples/sec	accuracy=nan
2023-03-21 21:47:39,831 Node[0] Epoch[6] Batch [240-260]	Speed: 21475.89 samples/sec	accuracy=nan
2023-03-21 21:47:42,871 Node[0] Epoch[6] Batch [260-280]	Speed: 21471.80 samples/sec	accuracy=nan
2023-03-21 21:47:45,914 Node[0] Epoch[6] Batch [280-300]	Speed: 21449.78 samples/sec	accuracy=nan
2023-03-21 21:47:48,958 Node[0] Epoch[6] Batch [300-320]	Speed: 21450.57 samples/sec	accuracy=nan
2023-03-21 21:47:51,995 Node[0] Epoch[6] Batch [320-340]	Speed: 21489.95 samples/sec	accuracy=nan
2023-03-21 21:47:55,036 Node[0] Epoch[6] Batch [340-360]	Speed: 21470.21 samples/sec	accuracy=nan
2023-03-21 21:47:58,082 Node[0] Epoch[6] Batch [360-380]	Speed: 21428.97 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679453279755, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-21 21:47:59,756 Node[0] Epoch[6] Time cost=59.643
:::MLLOG {"namespace": "", "time_ms": 1679453279756, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21480.693452249157}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679453279903, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-21 21:48:01,307 Node[0] Epoch[6] Validation-accuracy=0.407840
2023-03-21 21:48:01,307 Node[0] Epoch[6] Validation-correct-count=2549.000000
2023-03-21 21:48:01,307 Node[0] Epoch[6] Validation-total-count=6250.000000
2023-03-21 21:48:01,561 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:48:01,561 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:48:01,561 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:48:01,561 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:48:01,561 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:48:01,561 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:48:01,561 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453281561, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679453281562, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.40692, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679453281562, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679453281562, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679453281562, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-21 21:48:01,562 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:48:04,614 Node[0] Epoch[7] Batch [0-20]	Speed: 21457.69 samples/sec	accuracy=nan
2023-03-21 21:48:07,652 Node[0] Epoch[7] Batch [20-40]	Speed: 21485.63 samples/sec	accuracy=nan
2023-03-21 21:48:10,690 Node[0] Epoch[7] Batch [40-60]	Speed: 21493.04 samples/sec	accuracy=nan
2023-03-21 21:48:13,727 Node[0] Epoch[7] Batch [60-80]	Speed: 21491.94 samples/sec	accuracy=nan
2023-03-21 21:48:16,765 Node[0] Epoch[7] Batch [80-100]	Speed: 21485.36 samples/sec	accuracy=nan
2023-03-21 21:48:19,805 Node[0] Epoch[7] Batch [100-120]	Speed: 21480.01 samples/sec	accuracy=nan
2023-03-21 21:48:22,843 Node[0] Epoch[7] Batch [120-140]	Speed: 21488.34 samples/sec	accuracy=nan
2023-03-21 21:48:25,884 Node[0] Epoch[7] Batch [140-160]	Speed: 21462.20 samples/sec	accuracy=nan
2023-03-21 21:48:28,922 Node[0] Epoch[7] Batch [160-180]	Speed: 21491.66 samples/sec	accuracy=nan
2023-03-21 21:48:31,957 Node[0] Epoch[7] Batch [180-200]	Speed: 21502.52 samples/sec	accuracy=nan
2023-03-21 21:48:34,995 Node[0] Epoch[7] Batch [200-220]	Speed: 21492.86 samples/sec	accuracy=nan
2023-03-21 21:48:38,029 Node[0] Epoch[7] Batch [220-240]	Speed: 21514.34 samples/sec	accuracy=nan
2023-03-21 21:48:41,068 Node[0] Epoch[7] Batch [240-260]	Speed: 21483.56 samples/sec	accuracy=nan
2023-03-21 21:48:44,108 Node[0] Epoch[7] Batch [260-280]	Speed: 21471.26 samples/sec	accuracy=nan
2023-03-21 21:48:47,148 Node[0] Epoch[7] Batch [280-300]	Speed: 21476.47 samples/sec	accuracy=nan
2023-03-21 21:48:50,188 Node[0] Epoch[7] Batch [300-320]	Speed: 21467.70 samples/sec	accuracy=nan
2023-03-21 21:48:53,228 Node[0] Epoch[7] Batch [320-340]	Speed: 21478.49 samples/sec	accuracy=nan
2023-03-21 21:48:56,265 Node[0] Epoch[7] Batch [340-360]	Speed: 21490.01 samples/sec	accuracy=nan
2023-03-21 21:48:59,311 Node[0] Epoch[7] Batch [360-380]	Speed: 21437.06 samples/sec	accuracy=nan
2023-03-21 21:49:01,136 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:49:01,136 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:49:01,136 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453341136, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-21 21:49:01,136 Node[0] Epoch[7] Time cost=59.574
:::MLLOG {"namespace": "", "time_ms": 1679453341136, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21505.5816191603}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
2023-03-21 21:49:01,136 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453341136, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-21 21:49:01,137 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:49:01,136 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:49:01,137 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:49:01,137 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:49:04,335 Node[0] Epoch[8] Batch [0-20]	Speed: 21441.53 samples/sec	accuracy=nan
2023-03-21 21:49:07,380 Node[0] Epoch[8] Batch [20-40]	Speed: 21436.32 samples/sec	accuracy=nan
2023-03-21 21:49:10,418 Node[0] Epoch[8] Batch [40-60]	Speed: 21485.47 samples/sec	accuracy=nan
2023-03-21 21:49:13,462 Node[0] Epoch[8] Batch [60-80]	Speed: 21448.17 samples/sec	accuracy=nan
2023-03-21 21:49:16,504 Node[0] Epoch[8] Batch [80-100]	Speed: 21461.48 samples/sec	accuracy=nan
2023-03-21 21:49:19,545 Node[0] Epoch[8] Batch [100-120]	Speed: 21466.22 samples/sec	accuracy=nan
2023-03-21 21:49:22,586 Node[0] Epoch[8] Batch [120-140]	Speed: 21462.08 samples/sec	accuracy=nan
2023-03-21 21:49:25,630 Node[0] Epoch[8] Batch [140-160]	Speed: 21449.92 samples/sec	accuracy=nan
2023-03-21 21:49:28,674 Node[0] Epoch[8] Batch [160-180]	Speed: 21446.49 samples/sec	accuracy=nan
2023-03-21 21:49:31,715 Node[0] Epoch[8] Batch [180-200]	Speed: 21463.30 samples/sec	accuracy=nan
2023-03-21 21:49:34,756 Node[0] Epoch[8] Batch [200-220]	Speed: 21465.90 samples/sec	accuracy=nan
2023-03-21 21:49:37,803 Node[0] Epoch[8] Batch [220-240]	Speed: 21422.79 samples/sec	accuracy=nan
2023-03-21 21:49:40,845 Node[0] Epoch[8] Batch [240-260]	Speed: 21465.68 samples/sec	accuracy=nan
2023-03-21 21:49:43,886 Node[0] Epoch[8] Batch [260-280]	Speed: 21463.54 samples/sec	accuracy=nan
2023-03-21 21:49:46,928 Node[0] Epoch[8] Batch [280-300]	Speed: 21457.95 samples/sec	accuracy=nan
2023-03-21 21:49:49,970 Node[0] Epoch[8] Batch [300-320]	Speed: 21461.59 samples/sec	accuracy=nan
2023-03-21 21:49:53,016 Node[0] Epoch[8] Batch [320-340]	Speed: 21429.89 samples/sec	accuracy=nan
2023-03-21 21:49:56,058 Node[0] Epoch[8] Batch [340-360]	Speed: 21459.88 samples/sec	accuracy=nan
2023-03-21 21:49:59,103 Node[0] Epoch[8] Batch [360-380]	Speed: 21439.69 samples/sec	accuracy=nan
2023-03-21 21:50:00,779 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:50:00,779 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:50:00,779 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:50:00,779 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:50:00,779 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:50:00,779 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:50:00,779 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453400779, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-21 21:50:00,780 Node[0] Epoch[8] Time cost=59.643
:::MLLOG {"namespace": "", "time_ms": 1679453400780, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21480.468051322532}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679453400781, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-21 21:50:00,781 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:50:03,978 Node[0] Epoch[9] Batch [0-20]	Speed: 21455.12 samples/sec	accuracy=nan
2023-03-21 21:50:07,016 Node[0] Epoch[9] Batch [20-40]	Speed: 21489.35 samples/sec	accuracy=nan
2023-03-21 21:50:10,060 Node[0] Epoch[9] Batch [40-60]	Speed: 21448.86 samples/sec	accuracy=nan
2023-03-21 21:50:13,098 Node[0] Epoch[9] Batch [60-80]	Speed: 21487.17 samples/sec	accuracy=nan
2023-03-21 21:50:16,140 Node[0] Epoch[9] Batch [80-100]	Speed: 21456.23 samples/sec	accuracy=nan
2023-03-21 21:50:19,179 Node[0] Epoch[9] Batch [100-120]	Speed: 21483.89 samples/sec	accuracy=nan
2023-03-21 21:50:22,220 Node[0] Epoch[9] Batch [120-140]	Speed: 21466.17 samples/sec	accuracy=nan
2023-03-21 21:50:25,263 Node[0] Epoch[9] Batch [140-160]	Speed: 21447.25 samples/sec	accuracy=nan
2023-03-21 21:50:28,300 Node[0] Epoch[9] Batch [160-180]	Speed: 21494.71 samples/sec	accuracy=nan
2023-03-21 21:50:31,340 Node[0] Epoch[9] Batch [180-200]	Speed: 21479.10 samples/sec	accuracy=nan
2023-03-21 21:50:34,380 Node[0] Epoch[9] Batch [200-220]	Speed: 21468.41 samples/sec	accuracy=nan
2023-03-21 21:50:37,421 Node[0] Epoch[9] Batch [220-240]	Speed: 21469.00 samples/sec	accuracy=nan
2023-03-21 21:50:40,463 Node[0] Epoch[9] Batch [240-260]	Speed: 21461.19 samples/sec	accuracy=nan
2023-03-21 21:50:43,505 Node[0] Epoch[9] Batch [260-280]	Speed: 21461.51 samples/sec	accuracy=nan
2023-03-21 21:50:46,549 Node[0] Epoch[9] Batch [280-300]	Speed: 21445.32 samples/sec	accuracy=nan
2023-03-21 21:50:49,589 Node[0] Epoch[9] Batch [300-320]	Speed: 21470.33 samples/sec	accuracy=nan
2023-03-21 21:50:52,630 Node[0] Epoch[9] Batch [320-340]	Speed: 21469.88 samples/sec	accuracy=nan
2023-03-21 21:50:55,673 Node[0] Epoch[9] Batch [340-360]	Speed: 21448.54 samples/sec	accuracy=nan
2023-03-21 21:50:58,716 Node[0] Epoch[9] Batch [360-380]	Speed: 21454.63 samples/sec	accuracy=nan
2023-03-21 21:51:00,537 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:51:00,538 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:51:00,538 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453460538, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-21 21:51:00,538 Node[0] Epoch[9] Time cost=59.758
2023-03-21 21:51:00,538 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453460538, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21439.42345566591}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
2023-03-21 21:51:00,538 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453460539, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-21 21:51:00,539 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:51:00,539 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:51:00,539 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:51:03,737 Node[0] Epoch[10] Batch [0-20]	Speed: 21427.42 samples/sec	accuracy=nan
2023-03-21 21:51:06,779 Node[0] Epoch[10] Batch [20-40]	Speed: 21458.07 samples/sec	accuracy=nan
2023-03-21 21:51:09,821 Node[0] Epoch[10] Batch [40-60]	Speed: 21461.14 samples/sec	accuracy=nan
2023-03-21 21:51:12,863 Node[0] Epoch[10] Batch [60-80]	Speed: 21460.28 samples/sec	accuracy=nan
2023-03-21 21:51:15,901 Node[0] Epoch[10] Batch [80-100]	Speed: 21482.90 samples/sec	accuracy=nan
2023-03-21 21:51:18,944 Node[0] Epoch[10] Batch [100-120]	Speed: 21454.01 samples/sec	accuracy=nan
2023-03-21 21:51:21,987 Node[0] Epoch[10] Batch [120-140]	Speed: 21455.53 samples/sec	accuracy=nan
2023-03-21 21:51:25,027 Node[0] Epoch[10] Batch [140-160]	Speed: 21470.93 samples/sec	accuracy=nan
2023-03-21 21:51:28,069 Node[0] Epoch[10] Batch [160-180]	Speed: 21463.35 samples/sec	accuracy=nan
2023-03-21 21:51:31,115 Node[0] Epoch[10] Batch [180-200]	Speed: 21431.26 samples/sec	accuracy=nan
2023-03-21 21:51:34,156 Node[0] Epoch[10] Batch [200-220]	Speed: 21465.83 samples/sec	accuracy=nan
2023-03-21 21:51:37,193 Node[0] Epoch[10] Batch [220-240]	Speed: 21492.07 samples/sec	accuracy=nan
2023-03-21 21:51:40,233 Node[0] Epoch[10] Batch [240-260]	Speed: 21475.95 samples/sec	accuracy=nan
2023-03-21 21:51:43,275 Node[0] Epoch[10] Batch [260-280]	Speed: 21459.27 samples/sec	accuracy=nan
2023-03-21 21:51:46,311 Node[0] Epoch[10] Batch [280-300]	Speed: 21501.31 samples/sec	accuracy=nan
2023-03-21 21:51:49,353 Node[0] Epoch[10] Batch [300-320]	Speed: 21462.83 samples/sec	accuracy=nan
2023-03-21 21:51:52,390 Node[0] Epoch[10] Batch [320-340]	Speed: 21494.05 samples/sec	accuracy=nan
2023-03-21 21:51:55,435 Node[0] Epoch[10] Batch [340-360]	Speed: 21434.55 samples/sec	accuracy=nan
2023-03-21 21:51:58,477 Node[0] Epoch[10] Batch [360-380]	Speed: 21458.85 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679453520149, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-21 21:52:00,150 Node[0] Epoch[10] Time cost=59.611
:::MLLOG {"namespace": "", "time_ms": 1679453520150, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21492.062797941635}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679453520296, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-21 21:52:01,800 Node[0] Epoch[10] Validation-accuracy=0.486880
2023-03-21 21:52:01,800 Node[0] Epoch[10] Validation-correct-count=3043.000000
2023-03-21 21:52:01,800 Node[0] Epoch[10] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679453521949, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
2023-03-21 21:52:01,949 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453521949, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.48848, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
2023-03-21 21:52:01,949 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:52:01,949 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453521949, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-21 21:52:01,949 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453521949, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-21 21:52:01,949 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:52:01,949 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:52:01,949 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453521950, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-21 21:52:01,950 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:52:05,009 Node[0] Epoch[11] Batch [0-20]	Speed: 21418.81 samples/sec	accuracy=nan
2023-03-21 21:52:08,051 Node[0] Epoch[11] Batch [20-40]	Speed: 21458.68 samples/sec	accuracy=nan
2023-03-21 21:52:11,091 Node[0] Epoch[11] Batch [40-60]	Speed: 21474.58 samples/sec	accuracy=nan
2023-03-21 21:52:14,130 Node[0] Epoch[11] Batch [60-80]	Speed: 21483.36 samples/sec	accuracy=nan
2023-03-21 21:52:17,174 Node[0] Epoch[11] Batch [80-100]	Speed: 21442.69 samples/sec	accuracy=nan
2023-03-21 21:52:20,216 Node[0] Epoch[11] Batch [100-120]	Speed: 21461.57 samples/sec	accuracy=nan
2023-03-21 21:52:23,259 Node[0] Epoch[11] Batch [120-140]	Speed: 21450.15 samples/sec	accuracy=nan
2023-03-21 21:52:26,298 Node[0] Epoch[11] Batch [140-160]	Speed: 21479.52 samples/sec	accuracy=nan
2023-03-21 21:52:29,340 Node[0] Epoch[11] Batch [160-180]	Speed: 21465.16 samples/sec	accuracy=nan
2023-03-21 21:52:32,381 Node[0] Epoch[11] Batch [180-200]	Speed: 21466.34 samples/sec	accuracy=nan
2023-03-21 21:52:35,419 Node[0] Epoch[11] Batch [200-220]	Speed: 21486.08 samples/sec	accuracy=nan
2023-03-21 21:52:38,467 Node[0] Epoch[11] Batch [220-240]	Speed: 21418.73 samples/sec	accuracy=nan
2023-03-21 21:52:41,509 Node[0] Epoch[11] Batch [240-260]	Speed: 21460.62 samples/sec	accuracy=nan
2023-03-21 21:52:44,554 Node[0] Epoch[11] Batch [260-280]	Speed: 21432.69 samples/sec	accuracy=nan
2023-03-21 21:52:47,593 Node[0] Epoch[11] Batch [280-300]	Speed: 21485.54 samples/sec	accuracy=nan
2023-03-21 21:52:50,635 Node[0] Epoch[11] Batch [300-320]	Speed: 21460.09 samples/sec	accuracy=nan
2023-03-21 21:52:53,673 Node[0] Epoch[11] Batch [320-340]	Speed: 21481.76 samples/sec	accuracy=nan
2023-03-21 21:52:56,716 Node[0] Epoch[11] Batch [340-360]	Speed: 21458.95 samples/sec	accuracy=nan
2023-03-21 21:52:59,759 Node[0] Epoch[11] Batch [360-380]	Speed: 21451.18 samples/sec	accuracy=nan
2023-03-21 21:53:01,581 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:53:01,581 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:53:01,581 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:53:01,581 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:53:01,582 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:53:01,582 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:53:01,582 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453581581, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-21 21:53:01,583 Node[0] Epoch[11] Time cost=59.633
:::MLLOG {"namespace": "", "time_ms": 1679453581583, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21484.312621967394}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679453581583, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-21 21:53:01,583 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:53:04,773 Node[0] Epoch[12] Batch [0-20]	Speed: 21489.21 samples/sec	accuracy=nan
2023-03-21 21:53:07,818 Node[0] Epoch[12] Batch [20-40]	Speed: 21442.29 samples/sec	accuracy=nan
2023-03-21 21:53:10,857 Node[0] Epoch[12] Batch [40-60]	Speed: 21481.91 samples/sec	accuracy=nan
2023-03-21 21:53:13,899 Node[0] Epoch[12] Batch [60-80]	Speed: 21457.74 samples/sec	accuracy=nan
2023-03-21 21:53:16,938 Node[0] Epoch[12] Batch [80-100]	Speed: 21483.06 samples/sec	accuracy=nan
2023-03-21 21:53:19,981 Node[0] Epoch[12] Batch [100-120]	Speed: 21452.98 samples/sec	accuracy=nan
2023-03-21 21:53:23,027 Node[0] Epoch[12] Batch [120-140]	Speed: 21425.55 samples/sec	accuracy=nan
2023-03-21 21:53:26,069 Node[0] Epoch[12] Batch [140-160]	Speed: 21459.58 samples/sec	accuracy=nan
2023-03-21 21:53:29,109 Node[0] Epoch[12] Batch [160-180]	Speed: 21478.05 samples/sec	accuracy=nan
2023-03-21 21:53:32,153 Node[0] Epoch[12] Batch [180-200]	Speed: 21443.73 samples/sec	accuracy=nan
2023-03-21 21:53:35,197 Node[0] Epoch[12] Batch [200-220]	Speed: 21444.12 samples/sec	accuracy=nan
2023-03-21 21:53:38,237 Node[0] Epoch[12] Batch [220-240]	Speed: 21471.97 samples/sec	accuracy=nan
2023-03-21 21:53:41,279 Node[0] Epoch[12] Batch [240-260]	Speed: 21465.88 samples/sec	accuracy=nan
2023-03-21 21:53:44,323 Node[0] Epoch[12] Batch [260-280]	Speed: 21439.79 samples/sec	accuracy=nan
2023-03-21 21:53:47,364 Node[0] Epoch[12] Batch [280-300]	Speed: 21471.11 samples/sec	accuracy=nan
2023-03-21 21:53:50,404 Node[0] Epoch[12] Batch [300-320]	Speed: 21469.40 samples/sec	accuracy=nan
2023-03-21 21:53:53,438 Node[0] Epoch[12] Batch [320-340]	Speed: 21522.46 samples/sec	accuracy=nan
2023-03-21 21:53:56,475 Node[0] Epoch[12] Batch [340-360]	Speed: 21490.54 samples/sec	accuracy=nan
2023-03-21 21:53:59,523 Node[0] Epoch[12] Batch [360-380]	Speed: 21420.51 samples/sec	accuracy=nan
2023-03-21 21:54:01,192 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:54:01,192 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:54:01,192 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453641192, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-21 21:54:01,192 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:54:01,192 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:54:01,193 Node[0] Epoch[12] Time cost=59.610
2023-03-21 21:54:01,193 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:54:01,193 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453641193, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21492.64707607058}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1679453641193, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-21 21:54:01,193 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:54:04,389 Node[0] Epoch[13] Batch [0-20]	Speed: 21479.96 samples/sec	accuracy=nan
2023-03-21 21:54:07,431 Node[0] Epoch[13] Batch [20-40]	Speed: 21454.16 samples/sec	accuracy=nan
2023-03-21 21:54:10,476 Node[0] Epoch[13] Batch [40-60]	Speed: 21438.15 samples/sec	accuracy=nan
2023-03-21 21:54:13,522 Node[0] Epoch[13] Batch [60-80]	Speed: 21431.38 samples/sec	accuracy=nan
2023-03-21 21:54:16,564 Node[0] Epoch[13] Batch [80-100]	Speed: 21461.58 samples/sec	accuracy=nan
2023-03-21 21:54:19,606 Node[0] Epoch[13] Batch [100-120]	Speed: 21457.35 samples/sec	accuracy=nan
2023-03-21 21:54:22,649 Node[0] Epoch[13] Batch [120-140]	Speed: 21457.81 samples/sec	accuracy=nan
2023-03-21 21:54:25,694 Node[0] Epoch[13] Batch [140-160]	Speed: 21436.93 samples/sec	accuracy=nan
2023-03-21 21:54:28,733 Node[0] Epoch[13] Batch [160-180]	Speed: 21480.56 samples/sec	accuracy=nan
2023-03-21 21:54:31,774 Node[0] Epoch[13] Batch [180-200]	Speed: 21467.61 samples/sec	accuracy=nan
2023-03-21 21:54:34,817 Node[0] Epoch[13] Batch [200-220]	Speed: 21453.21 samples/sec	accuracy=nan
2023-03-21 21:54:37,860 Node[0] Epoch[13] Batch [220-240]	Speed: 21452.72 samples/sec	accuracy=nan
2023-03-21 21:54:40,904 Node[0] Epoch[13] Batch [240-260]	Speed: 21445.89 samples/sec	accuracy=nan
2023-03-21 21:54:43,945 Node[0] Epoch[13] Batch [260-280]	Speed: 21464.60 samples/sec	accuracy=nan
2023-03-21 21:54:46,987 Node[0] Epoch[13] Batch [280-300]	Speed: 21457.53 samples/sec	accuracy=nan
2023-03-21 21:54:50,037 Node[0] Epoch[13] Batch [300-320]	Speed: 21405.72 samples/sec	accuracy=nan
2023-03-21 21:54:53,088 Node[0] Epoch[13] Batch [320-340]	Speed: 21395.62 samples/sec	accuracy=nan
2023-03-21 21:54:56,143 Node[0] Epoch[13] Batch [340-360]	Speed: 21367.47 samples/sec	accuracy=nan
2023-03-21 21:54:59,194 Node[0] Epoch[13] Batch [360-380]	Speed: 21396.06 samples/sec	accuracy=nan
2023-03-21 21:55:01,019 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:55:01,019 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:55:01,019 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:55:01,019 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:55:01,019 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:55:01,020 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:55:01,020 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453701019, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-21 21:55:01,020 Node[0] Epoch[13] Time cost=59.827
:::MLLOG {"namespace": "", "time_ms": 1679453701020, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21414.605995595983}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679453701021, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-21 21:55:01,021 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:55:04,215 Node[0] Epoch[14] Batch [0-20]	Speed: 21451.32 samples/sec	accuracy=nan
2023-03-21 21:55:07,257 Node[0] Epoch[14] Batch [20-40]	Speed: 21455.82 samples/sec	accuracy=nan
2023-03-21 21:55:10,301 Node[0] Epoch[14] Batch [40-60]	Speed: 21450.72 samples/sec	accuracy=nan
2023-03-21 21:55:13,341 Node[0] Epoch[14] Batch [60-80]	Speed: 21469.26 samples/sec	accuracy=nan
2023-03-21 21:55:16,383 Node[0] Epoch[14] Batch [80-100]	Speed: 21458.26 samples/sec	accuracy=nan
2023-03-21 21:55:19,423 Node[0] Epoch[14] Batch [100-120]	Speed: 21476.10 samples/sec	accuracy=nan
2023-03-21 21:55:22,463 Node[0] Epoch[14] Batch [120-140]	Speed: 21475.24 samples/sec	accuracy=nan
2023-03-21 21:55:25,506 Node[0] Epoch[14] Batch [140-160]	Speed: 21452.20 samples/sec	accuracy=nan
2023-03-21 21:55:28,545 Node[0] Epoch[14] Batch [160-180]	Speed: 21481.96 samples/sec	accuracy=nan
2023-03-21 21:55:31,588 Node[0] Epoch[14] Batch [180-200]	Speed: 21449.71 samples/sec	accuracy=nan
2023-03-21 21:55:34,631 Node[0] Epoch[14] Batch [200-220]	Speed: 21457.17 samples/sec	accuracy=nan
2023-03-21 21:55:37,672 Node[0] Epoch[14] Batch [220-240]	Speed: 21462.00 samples/sec	accuracy=nan
2023-03-21 21:55:40,716 Node[0] Epoch[14] Batch [240-260]	Speed: 21446.27 samples/sec	accuracy=nan
2023-03-21 21:55:43,758 Node[0] Epoch[14] Batch [260-280]	Speed: 21456.61 samples/sec	accuracy=nan
2023-03-21 21:55:46,800 Node[0] Epoch[14] Batch [280-300]	Speed: 21466.16 samples/sec	accuracy=nan
2023-03-21 21:55:49,846 Node[0] Epoch[14] Batch [300-320]	Speed: 21425.66 samples/sec	accuracy=nan
2023-03-21 21:55:52,884 Node[0] Epoch[14] Batch [320-340]	Speed: 21493.86 samples/sec	accuracy=nan
2023-03-21 21:55:55,925 Node[0] Epoch[14] Batch [340-360]	Speed: 21465.96 samples/sec	accuracy=nan
2023-03-21 21:55:58,971 Node[0] Epoch[14] Batch [360-380]	Speed: 21427.41 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679453760644, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-21 21:56:00,645 Node[0] Epoch[14] Time cost=59.624
:::MLLOG {"namespace": "", "time_ms": 1679453760645, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21487.48216817576}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679453760790, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-21 21:56:02,245 Node[0] Epoch[14] Validation-accuracy=0.587040
2023-03-21 21:56:02,245 Node[0] Epoch[14] Validation-correct-count=3669.000000
2023-03-21 21:56:02,245 Node[0] Epoch[14] Validation-total-count=6250.000000
2023-03-21 21:56:02,431 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:56:02,431 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:56:02,431 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:56:02,431 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:56:02,431 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:56:02,431 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:56:02,431 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453762431, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679453762432, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.57974, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679453762432, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679453762432, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679453762432, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-21 21:56:02,433 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:56:05,489 Node[0] Epoch[15] Batch [0-20]	Speed: 21428.20 samples/sec	accuracy=nan
2023-03-21 21:56:08,528 Node[0] Epoch[15] Batch [20-40]	Speed: 21476.34 samples/sec	accuracy=nan
2023-03-21 21:56:11,579 Node[0] Epoch[15] Batch [40-60]	Speed: 21398.66 samples/sec	accuracy=nan
2023-03-21 21:56:14,631 Node[0] Epoch[15] Batch [60-80]	Speed: 21384.72 samples/sec	accuracy=nan
2023-03-21 21:56:17,673 Node[0] Epoch[15] Batch [80-100]	Speed: 21463.96 samples/sec	accuracy=nan
2023-03-21 21:56:20,710 Node[0] Epoch[15] Batch [100-120]	Speed: 21496.41 samples/sec	accuracy=nan
2023-03-21 21:56:23,753 Node[0] Epoch[15] Batch [120-140]	Speed: 21451.64 samples/sec	accuracy=nan
2023-03-21 21:56:26,800 Node[0] Epoch[15] Batch [140-160]	Speed: 21420.66 samples/sec	accuracy=nan
2023-03-21 21:56:29,850 Node[0] Epoch[15] Batch [160-180]	Speed: 21403.44 samples/sec	accuracy=nan
2023-03-21 21:56:32,899 Node[0] Epoch[15] Batch [180-200]	Speed: 21411.56 samples/sec	accuracy=nan
2023-03-21 21:56:35,942 Node[0] Epoch[15] Batch [200-220]	Speed: 21452.42 samples/sec	accuracy=nan
2023-03-21 21:56:38,988 Node[0] Epoch[15] Batch [220-240]	Speed: 21431.93 samples/sec	accuracy=nan
2023-03-21 21:56:42,034 Node[0] Epoch[15] Batch [240-260]	Speed: 21430.81 samples/sec	accuracy=nan
2023-03-21 21:56:45,082 Node[0] Epoch[15] Batch [260-280]	Speed: 21421.71 samples/sec	accuracy=nan
2023-03-21 21:56:48,128 Node[0] Epoch[15] Batch [280-300]	Speed: 21429.97 samples/sec	accuracy=nan
2023-03-21 21:56:51,173 Node[0] Epoch[15] Batch [300-320]	Speed: 21438.76 samples/sec	accuracy=nan
2023-03-21 21:56:54,221 Node[0] Epoch[15] Batch [320-340]	Speed: 21413.89 samples/sec	accuracy=nan
2023-03-21 21:56:57,274 Node[0] Epoch[15] Batch [340-360]	Speed: 21386.08 samples/sec	accuracy=nan
2023-03-21 21:57:00,324 Node[0] Epoch[15] Batch [360-380]	Speed: 21397.90 samples/sec	accuracy=nan
2023-03-21 21:57:02,146 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:57:02,146 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:57:02,146 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:57:02,147 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:57:02,147 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453822147, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-21 21:57:02,147 Node[0] Epoch[15] Time cost=59.714
2023-03-21 21:57:02,147 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:57:02,147 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453822147, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21454.884951368644}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679453822147, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-21 21:57:02,148 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:57:05,343 Node[0] Epoch[16] Batch [0-20]	Speed: 20482.12 samples/sec	accuracy=nan
2023-03-21 21:57:08,385 Node[0] Epoch[16] Batch [20-40]	Speed: 21454.76 samples/sec	accuracy=nan
2023-03-21 21:57:11,429 Node[0] Epoch[16] Batch [40-60]	Speed: 21446.96 samples/sec	accuracy=nan
2023-03-21 21:57:14,469 Node[0] Epoch[16] Batch [60-80]	Speed: 21475.91 samples/sec	accuracy=nan
2023-03-21 21:57:17,512 Node[0] Epoch[16] Batch [80-100]	Speed: 21452.06 samples/sec	accuracy=nan
2023-03-21 21:57:20,555 Node[0] Epoch[16] Batch [100-120]	Speed: 21449.46 samples/sec	accuracy=nan
2023-03-21 21:57:23,604 Node[0] Epoch[16] Batch [120-140]	Speed: 21411.01 samples/sec	accuracy=nan
2023-03-21 21:57:26,654 Node[0] Epoch[16] Batch [140-160]	Speed: 21405.26 samples/sec	accuracy=nan
2023-03-21 21:57:29,707 Node[0] Epoch[16] Batch [160-180]	Speed: 21379.38 samples/sec	accuracy=nan
2023-03-21 21:57:32,750 Node[0] Epoch[16] Batch [180-200]	Speed: 21458.24 samples/sec	accuracy=nan
2023-03-21 21:57:35,789 Node[0] Epoch[16] Batch [200-220]	Speed: 21475.85 samples/sec	accuracy=nan
2023-03-21 21:57:38,832 Node[0] Epoch[16] Batch [220-240]	Speed: 21450.90 samples/sec	accuracy=nan
2023-03-21 21:57:41,878 Node[0] Epoch[16] Batch [240-260]	Speed: 21434.23 samples/sec	accuracy=nan
2023-03-21 21:57:44,924 Node[0] Epoch[16] Batch [260-280]	Speed: 21431.55 samples/sec	accuracy=nan
2023-03-21 21:57:47,965 Node[0] Epoch[16] Batch [280-300]	Speed: 21469.94 samples/sec	accuracy=nan
2023-03-21 21:57:51,012 Node[0] Epoch[16] Batch [300-320]	Speed: 21421.65 samples/sec	accuracy=nan
2023-03-21 21:57:54,057 Node[0] Epoch[16] Batch [320-340]	Speed: 21441.61 samples/sec	accuracy=nan
2023-03-21 21:57:57,102 Node[0] Epoch[16] Batch [340-360]	Speed: 21433.80 samples/sec	accuracy=nan
2023-03-21 21:58:00,148 Node[0] Epoch[16] Batch [360-380]	Speed: 21435.71 samples/sec	accuracy=nan
2023-03-21 21:58:01,817 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:58:01,817 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:58:01,817 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:58:01,817 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:58:01,818 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:58:01,818 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:58:01,818 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453881817, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-21 21:58:01,819 Node[0] Epoch[16] Time cost=59.671
:::MLLOG {"namespace": "", "time_ms": 1679453881819, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21470.523178760766}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1679453881819, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-21 21:58:01,819 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:58:05,016 Node[0] Epoch[17] Batch [0-20]	Speed: 21468.16 samples/sec	accuracy=nan
2023-03-21 21:58:08,059 Node[0] Epoch[17] Batch [20-40]	Speed: 21451.75 samples/sec	accuracy=nan
2023-03-21 21:58:11,105 Node[0] Epoch[17] Batch [40-60]	Speed: 21433.08 samples/sec	accuracy=nan
2023-03-21 21:58:14,149 Node[0] Epoch[17] Batch [60-80]	Speed: 21442.08 samples/sec	accuracy=nan
2023-03-21 21:58:17,192 Node[0] Epoch[17] Batch [80-100]	Speed: 21458.11 samples/sec	accuracy=nan
2023-03-21 21:58:20,239 Node[0] Epoch[17] Batch [100-120]	Speed: 21424.14 samples/sec	accuracy=nan
2023-03-21 21:58:23,281 Node[0] Epoch[17] Batch [120-140]	Speed: 21458.64 samples/sec	accuracy=nan
2023-03-21 21:58:26,326 Node[0] Epoch[17] Batch [140-160]	Speed: 21435.60 samples/sec	accuracy=nan
2023-03-21 21:58:29,369 Node[0] Epoch[17] Batch [160-180]	Speed: 21452.20 samples/sec	accuracy=nan
2023-03-21 21:58:32,410 Node[0] Epoch[17] Batch [180-200]	Speed: 21467.55 samples/sec	accuracy=nan
2023-03-21 21:58:35,454 Node[0] Epoch[17] Batch [200-220]	Speed: 21444.38 samples/sec	accuracy=nan
2023-03-21 21:58:38,498 Node[0] Epoch[17] Batch [220-240]	Speed: 21446.07 samples/sec	accuracy=nan
2023-03-21 21:58:41,544 Node[0] Epoch[17] Batch [240-260]	Speed: 21434.77 samples/sec	accuracy=nan
2023-03-21 21:58:44,587 Node[0] Epoch[17] Batch [260-280]	Speed: 21448.30 samples/sec	accuracy=nan
2023-03-21 21:58:47,631 Node[0] Epoch[17] Batch [280-300]	Speed: 21449.58 samples/sec	accuracy=nan
2023-03-21 21:58:50,676 Node[0] Epoch[17] Batch [300-320]	Speed: 21435.62 samples/sec	accuracy=nan
2023-03-21 21:58:53,718 Node[0] Epoch[17] Batch [320-340]	Speed: 21459.04 samples/sec	accuracy=nan
2023-03-21 21:58:56,762 Node[0] Epoch[17] Batch [340-360]	Speed: 21446.35 samples/sec	accuracy=nan
2023-03-21 21:58:59,806 Node[0] Epoch[17] Batch [360-380]	Speed: 21448.11 samples/sec	accuracy=nan
2023-03-21 21:59:01,629 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:59:01,629 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:59:01,629 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:59:01,629 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:59:01,629 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:59:01,629 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:59:01,629 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679453941629, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-21 21:59:01,630 Node[0] Epoch[17] Time cost=59.810
:::MLLOG {"namespace": "", "time_ms": 1679453941630, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21420.456908141605}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679453941630, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-21 21:59:01,630 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 21:59:04,832 Node[0] Epoch[18] Batch [0-20]	Speed: 21404.66 samples/sec	accuracy=nan
2023-03-21 21:59:07,875 Node[0] Epoch[18] Batch [20-40]	Speed: 21456.35 samples/sec	accuracy=nan
2023-03-21 21:59:10,915 Node[0] Epoch[18] Batch [40-60]	Speed: 21468.00 samples/sec	accuracy=nan
2023-03-21 21:59:13,958 Node[0] Epoch[18] Batch [60-80]	Speed: 21457.06 samples/sec	accuracy=nan
2023-03-21 21:59:16,997 Node[0] Epoch[18] Batch [80-100]	Speed: 21478.20 samples/sec	accuracy=nan
2023-03-21 21:59:20,035 Node[0] Epoch[18] Batch [100-120]	Speed: 21489.76 samples/sec	accuracy=nan
2023-03-21 21:59:23,078 Node[0] Epoch[18] Batch [120-140]	Speed: 21450.08 samples/sec	accuracy=nan
2023-03-21 21:59:26,125 Node[0] Epoch[18] Batch [140-160]	Speed: 21425.45 samples/sec	accuracy=nan
2023-03-21 21:59:29,174 Node[0] Epoch[18] Batch [160-180]	Speed: 21408.13 samples/sec	accuracy=nan
2023-03-21 21:59:32,221 Node[0] Epoch[18] Batch [180-200]	Speed: 21427.26 samples/sec	accuracy=nan
2023-03-21 21:59:35,265 Node[0] Epoch[18] Batch [200-220]	Speed: 21446.98 samples/sec	accuracy=nan
2023-03-21 21:59:38,303 Node[0] Epoch[18] Batch [220-240]	Speed: 21486.57 samples/sec	accuracy=nan
2023-03-21 21:59:41,348 Node[0] Epoch[18] Batch [240-260]	Speed: 21435.42 samples/sec	accuracy=nan
2023-03-21 21:59:44,393 Node[0] Epoch[18] Batch [260-280]	Speed: 21441.31 samples/sec	accuracy=nan
2023-03-21 21:59:47,433 Node[0] Epoch[18] Batch [280-300]	Speed: 21474.24 samples/sec	accuracy=nan
2023-03-21 21:59:50,476 Node[0] Epoch[18] Batch [300-320]	Speed: 21450.97 samples/sec	accuracy=nan
2023-03-21 21:59:53,519 Node[0] Epoch[18] Batch [320-340]	Speed: 21455.65 samples/sec	accuracy=nan
2023-03-21 21:59:56,559 Node[0] Epoch[18] Batch [340-360]	Speed: 21474.05 samples/sec	accuracy=nan
2023-03-21 21:59:59,605 Node[0] Epoch[18] Batch [360-380]	Speed: 21428.13 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679454001277, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-21 22:00:01,279 Node[0] Epoch[18] Time cost=59.648
:::MLLOG {"namespace": "", "time_ms": 1679454001279, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21478.616593935698}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679454001425, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-21 22:00:02,978 Node[0] Epoch[18] Validation-accuracy=0.640960
2023-03-21 22:00:02,978 Node[0] Epoch[18] Validation-correct-count=4006.000000
2023-03-21 22:00:02,978 Node[0] Epoch[18] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679454003061, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
2023-03-21 22:00:03,061 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:00:03,061 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454003061, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.64266, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-21 22:00:03,061 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454003062, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679454003062, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-21 22:00:03,061 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:00:03,061 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:00:03,061 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:00:03,061 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454003062, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-21 22:00:03,062 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:00:06,122 Node[0] Epoch[19] Batch [0-20]	Speed: 21420.46 samples/sec	accuracy=nan
2023-03-21 22:00:09,170 Node[0] Epoch[19] Batch [20-40]	Speed: 21416.42 samples/sec	accuracy=nan
2023-03-21 22:00:12,213 Node[0] Epoch[19] Batch [40-60]	Speed: 21451.14 samples/sec	accuracy=nan
2023-03-21 22:00:15,266 Node[0] Epoch[19] Batch [60-80]	Speed: 21382.17 samples/sec	accuracy=nan
2023-03-21 22:00:18,316 Node[0] Epoch[19] Batch [80-100]	Speed: 21404.76 samples/sec	accuracy=nan
2023-03-21 22:00:21,362 Node[0] Epoch[19] Batch [100-120]	Speed: 21434.61 samples/sec	accuracy=nan
2023-03-21 22:00:24,401 Node[0] Epoch[19] Batch [120-140]	Speed: 21475.23 samples/sec	accuracy=nan
2023-03-21 22:00:27,448 Node[0] Epoch[19] Batch [140-160]	Speed: 21430.45 samples/sec	accuracy=nan
2023-03-21 22:00:30,491 Node[0] Epoch[19] Batch [160-180]	Speed: 21445.48 samples/sec	accuracy=nan
2023-03-21 22:00:33,535 Node[0] Epoch[19] Batch [180-200]	Speed: 21445.18 samples/sec	accuracy=nan
2023-03-21 22:00:36,585 Node[0] Epoch[19] Batch [200-220]	Speed: 21405.93 samples/sec	accuracy=nan
2023-03-21 22:00:39,634 Node[0] Epoch[19] Batch [220-240]	Speed: 21412.97 samples/sec	accuracy=nan
2023-03-21 22:00:42,677 Node[0] Epoch[19] Batch [240-260]	Speed: 21451.68 samples/sec	accuracy=nan
2023-03-21 22:00:45,723 Node[0] Epoch[19] Batch [260-280]	Speed: 21427.23 samples/sec	accuracy=nan
2023-03-21 22:00:48,768 Node[0] Epoch[19] Batch [280-300]	Speed: 21444.21 samples/sec	accuracy=nan
2023-03-21 22:00:51,815 Node[0] Epoch[19] Batch [300-320]	Speed: 21419.65 samples/sec	accuracy=nan
2023-03-21 22:00:54,861 Node[0] Epoch[19] Batch [320-340]	Speed: 21433.00 samples/sec	accuracy=nan
2023-03-21 22:00:57,906 Node[0] Epoch[19] Batch [340-360]	Speed: 21441.58 samples/sec	accuracy=nan
2023-03-21 22:01:00,955 Node[0] Epoch[19] Batch [360-380]	Speed: 21406.27 samples/sec	accuracy=nan
2023-03-21 22:01:02,778 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:01:02,777 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:01:02,778 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:01:02,777 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:01:02,778 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:01:02,778 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:01:02,778 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454062778, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-21 22:01:02,780 Node[0] Epoch[19] Time cost=59.718
:::MLLOG {"namespace": "", "time_ms": 1679454062780, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21453.687638828946}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679454062780, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-21 22:01:02,780 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:01:05,982 Node[0] Epoch[20] Batch [0-20]	Speed: 21396.70 samples/sec	accuracy=nan
2023-03-21 22:01:09,027 Node[0] Epoch[20] Batch [20-40]	Speed: 21439.46 samples/sec	accuracy=nan
2023-03-21 22:01:12,071 Node[0] Epoch[20] Batch [40-60]	Speed: 21447.41 samples/sec	accuracy=nan
2023-03-21 22:01:15,117 Node[0] Epoch[20] Batch [60-80]	Speed: 21427.39 samples/sec	accuracy=nan
2023-03-21 22:01:18,165 Node[0] Epoch[20] Batch [80-100]	Speed: 21422.41 samples/sec	accuracy=nan
2023-03-21 22:01:21,209 Node[0] Epoch[20] Batch [100-120]	Speed: 21442.09 samples/sec	accuracy=nan
2023-03-21 22:01:24,253 Node[0] Epoch[20] Batch [120-140]	Speed: 21446.89 samples/sec	accuracy=nan
2023-03-21 22:01:27,296 Node[0] Epoch[20] Batch [140-160]	Speed: 21455.91 samples/sec	accuracy=nan
2023-03-21 22:01:30,351 Node[0] Epoch[20] Batch [160-180]	Speed: 21364.35 samples/sec	accuracy=nan
2023-03-21 22:01:33,405 Node[0] Epoch[20] Batch [180-200]	Speed: 21376.80 samples/sec	accuracy=nan
2023-03-21 22:01:36,450 Node[0] Epoch[20] Batch [200-220]	Speed: 21439.87 samples/sec	accuracy=nan
2023-03-21 22:01:39,497 Node[0] Epoch[20] Batch [220-240]	Speed: 21424.98 samples/sec	accuracy=nan
2023-03-21 22:01:42,541 Node[0] Epoch[20] Batch [240-260]	Speed: 21442.71 samples/sec	accuracy=nan
2023-03-21 22:01:45,595 Node[0] Epoch[20] Batch [260-280]	Speed: 21376.68 samples/sec	accuracy=nan
2023-03-21 22:01:48,641 Node[0] Epoch[20] Batch [280-300]	Speed: 21427.81 samples/sec	accuracy=nan
2023-03-21 22:01:51,685 Node[0] Epoch[20] Batch [300-320]	Speed: 21445.65 samples/sec	accuracy=nan
2023-03-21 22:01:54,730 Node[0] Epoch[20] Batch [320-340]	Speed: 21442.82 samples/sec	accuracy=nan
2023-03-21 22:01:57,781 Node[0] Epoch[20] Batch [340-360]	Speed: 21395.75 samples/sec	accuracy=nan
2023-03-21 22:02:00,841 Node[0] Epoch[20] Batch [360-380]	Speed: 21331.49 samples/sec	accuracy=nan
2023-03-21 22:02:02,512 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:02:02,512 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:02:02,512 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454122512, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-21 22:02:02,512 Node[0] Epoch[20] Time cost=59.732
2023-03-21 22:02:02,512 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454122512, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21448.671651656452}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1679454122513, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-21 22:02:02,513 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:02:02,512 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:02:02,512 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:02:02,513 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:02:05,712 Node[0] Epoch[21] Batch [0-20]	Speed: 21440.31 samples/sec	accuracy=nan
2023-03-21 22:02:08,755 Node[0] Epoch[21] Batch [20-40]	Speed: 21457.48 samples/sec	accuracy=nan
2023-03-21 22:02:11,796 Node[0] Epoch[21] Batch [40-60]	Speed: 21465.56 samples/sec	accuracy=nan
2023-03-21 22:02:14,840 Node[0] Epoch[21] Batch [60-80]	Speed: 21446.88 samples/sec	accuracy=nan
2023-03-21 22:02:17,882 Node[0] Epoch[21] Batch [80-100]	Speed: 21454.76 samples/sec	accuracy=nan
2023-03-21 22:02:20,930 Node[0] Epoch[21] Batch [100-120]	Speed: 21422.66 samples/sec	accuracy=nan
2023-03-21 22:02:23,974 Node[0] Epoch[21] Batch [120-140]	Speed: 21443.26 samples/sec	accuracy=nan
2023-03-21 22:02:27,019 Node[0] Epoch[21] Batch [140-160]	Speed: 21434.61 samples/sec	accuracy=nan
2023-03-21 22:02:30,062 Node[0] Epoch[21] Batch [160-180]	Speed: 21452.01 samples/sec	accuracy=nan
2023-03-21 22:02:33,101 Node[0] Epoch[21] Batch [180-200]	Speed: 21482.01 samples/sec	accuracy=nan
2023-03-21 22:02:36,141 Node[0] Epoch[21] Batch [200-220]	Speed: 21479.46 samples/sec	accuracy=nan
2023-03-21 22:02:39,184 Node[0] Epoch[21] Batch [220-240]	Speed: 21450.99 samples/sec	accuracy=nan
2023-03-21 22:02:42,230 Node[0] Epoch[21] Batch [240-260]	Speed: 21426.72 samples/sec	accuracy=nan
2023-03-21 22:02:45,268 Node[0] Epoch[21] Batch [260-280]	Speed: 21489.54 samples/sec	accuracy=nan
2023-03-21 22:02:48,308 Node[0] Epoch[21] Batch [280-300]	Speed: 21477.04 samples/sec	accuracy=nan
2023-03-21 22:02:53,695 Node[0] Epoch[21] Batch [300-320]	Speed: 12116.83 samples/sec	accuracy=nan
2023-03-21 22:02:56,720 Node[0] Epoch[21] Batch [320-340]	Speed: 21579.63 samples/sec	accuracy=nan
2023-03-21 22:02:59,756 Node[0] Epoch[21] Batch [340-360]	Speed: 21502.81 samples/sec	accuracy=nan
2023-03-21 22:03:02,794 Node[0] Epoch[21] Batch [360-380]	Speed: 21489.29 samples/sec	accuracy=nan
2023-03-21 22:03:04,614 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:03:04,614 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:03:04,614 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:03:04,614 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:03:04,614 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:03:04,614 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:03:04,614 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454184614, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-21 22:03:04,615 Node[0] Epoch[21] Time cost=62.102
:::MLLOG {"namespace": "", "time_ms": 1679454184615, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20630.043487982086}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679454184615, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-21 22:03:04,615 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:03:07,814 Node[0] Epoch[22] Batch [0-20]	Speed: 21439.11 samples/sec	accuracy=nan
2023-03-21 22:03:10,864 Node[0] Epoch[22] Batch [20-40]	Speed: 21401.00 samples/sec	accuracy=nan
2023-03-21 22:03:13,904 Node[0] Epoch[22] Batch [40-60]	Speed: 21472.68 samples/sec	accuracy=nan
2023-03-21 22:03:16,952 Node[0] Epoch[22] Batch [60-80]	Speed: 21414.04 samples/sec	accuracy=nan
2023-03-21 22:03:20,000 Node[0] Epoch[22] Batch [80-100]	Speed: 21416.50 samples/sec	accuracy=nan
2023-03-21 22:03:23,049 Node[0] Epoch[22] Batch [100-120]	Speed: 21415.43 samples/sec	accuracy=nan
2023-03-21 22:03:26,094 Node[0] Epoch[22] Batch [120-140]	Speed: 21439.04 samples/sec	accuracy=nan
2023-03-21 22:03:29,142 Node[0] Epoch[22] Batch [140-160]	Speed: 21415.33 samples/sec	accuracy=nan
2023-03-21 22:03:32,192 Node[0] Epoch[22] Batch [160-180]	Speed: 21403.66 samples/sec	accuracy=nan
2023-03-21 22:03:35,240 Node[0] Epoch[22] Batch [180-200]	Speed: 21416.18 samples/sec	accuracy=nan
2023-03-21 22:03:38,287 Node[0] Epoch[22] Batch [200-220]	Speed: 21421.41 samples/sec	accuracy=nan
2023-03-21 22:03:41,331 Node[0] Epoch[22] Batch [220-240]	Speed: 21450.41 samples/sec	accuracy=nan
2023-03-21 22:03:44,371 Node[0] Epoch[22] Batch [240-260]	Speed: 21469.20 samples/sec	accuracy=nan
2023-03-21 22:03:47,411 Node[0] Epoch[22] Batch [260-280]	Speed: 21478.10 samples/sec	accuracy=nan
2023-03-21 22:03:50,452 Node[0] Epoch[22] Batch [280-300]	Speed: 21463.74 samples/sec	accuracy=nan
2023-03-21 22:03:53,499 Node[0] Epoch[22] Batch [300-320]	Speed: 21423.90 samples/sec	accuracy=nan
2023-03-21 22:03:56,542 Node[0] Epoch[22] Batch [320-340]	Speed: 21457.68 samples/sec	accuracy=nan
2023-03-21 22:03:59,589 Node[0] Epoch[22] Batch [340-360]	Speed: 21419.94 samples/sec	accuracy=nan
2023-03-21 22:04:02,635 Node[0] Epoch[22] Batch [360-380]	Speed: 21435.34 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679454244305, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-21 22:04:04,305 Node[0] Epoch[22] Time cost=59.690
:::MLLOG {"namespace": "", "time_ms": 1679454244305, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21463.802613811236}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679454244452, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-21 22:04:05,951 Node[0] Epoch[22] Validation-accuracy=0.671840
2023-03-21 22:04:05,952 Node[0] Epoch[22] Validation-correct-count=4199.000000
2023-03-21 22:04:05,952 Node[0] Epoch[22] Validation-total-count=6250.000000
2023-03-21 22:04:06,107 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:04:06,107 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:04:06,107 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:04:06,107 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:04:06,107 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:04:06,107 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454246107, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
2023-03-21 22:04:06,108 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454246108, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.67752, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679454246108, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679454246108, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679454246108, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-21 22:04:06,108 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:04:09,168 Node[0] Epoch[23] Batch [0-20]	Speed: 21417.06 samples/sec	accuracy=nan
2023-03-21 22:04:12,206 Node[0] Epoch[23] Batch [20-40]	Speed: 21488.40 samples/sec	accuracy=nan
2023-03-21 22:04:15,250 Node[0] Epoch[23] Batch [40-60]	Speed: 21444.58 samples/sec	accuracy=nan
2023-03-21 22:04:18,291 Node[0] Epoch[23] Batch [60-80]	Speed: 21471.11 samples/sec	accuracy=nan
2023-03-21 22:04:21,332 Node[0] Epoch[23] Batch [80-100]	Speed: 21465.93 samples/sec	accuracy=nan
2023-03-21 22:04:24,371 Node[0] Epoch[23] Batch [100-120]	Speed: 21474.83 samples/sec	accuracy=nan
2023-03-21 22:04:27,414 Node[0] Epoch[23] Batch [120-140]	Speed: 21458.38 samples/sec	accuracy=nan
2023-03-21 22:04:30,455 Node[0] Epoch[23] Batch [140-160]	Speed: 21461.64 samples/sec	accuracy=nan
2023-03-21 22:04:33,495 Node[0] Epoch[23] Batch [160-180]	Speed: 21474.46 samples/sec	accuracy=nan
2023-03-21 22:04:36,537 Node[0] Epoch[23] Batch [180-200]	Speed: 21458.96 samples/sec	accuracy=nan
2023-03-21 22:04:39,577 Node[0] Epoch[23] Batch [200-220]	Speed: 21472.66 samples/sec	accuracy=nan
2023-03-21 22:04:42,619 Node[0] Epoch[23] Batch [220-240]	Speed: 21462.49 samples/sec	accuracy=nan
2023-03-21 22:04:45,660 Node[0] Epoch[23] Batch [240-260]	Speed: 21466.34 samples/sec	accuracy=nan
2023-03-21 22:04:48,706 Node[0] Epoch[23] Batch [260-280]	Speed: 21429.19 samples/sec	accuracy=nan
2023-03-21 22:04:51,752 Node[0] Epoch[23] Batch [280-300]	Speed: 21437.84 samples/sec	accuracy=nan
2023-03-21 22:04:54,794 Node[0] Epoch[23] Batch [300-320]	Speed: 21453.44 samples/sec	accuracy=nan
2023-03-21 22:04:57,836 Node[0] Epoch[23] Batch [320-340]	Speed: 21464.55 samples/sec	accuracy=nan
2023-03-21 22:05:00,880 Node[0] Epoch[23] Batch [340-360]	Speed: 21446.28 samples/sec	accuracy=nan
2023-03-21 22:05:03,925 Node[0] Epoch[23] Batch [360-380]	Speed: 21437.55 samples/sec	accuracy=nan
2023-03-21 22:05:05,748 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:05:05,748 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:05:05,748 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:05:05,748 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:05:05,748 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:05:05,749 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454305748, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-21 22:05:05,749 Node[0] Epoch[23] Time cost=59.640
:::MLLOG {"namespace": "", "time_ms": 1679454305749, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21481.495660322056}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
2023-03-21 22:05:05,749 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454305749, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-21 22:05:05,749 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:05:08,945 Node[0] Epoch[24] Batch [0-20]	Speed: 21450.62 samples/sec	accuracy=nan
2023-03-21 22:05:11,988 Node[0] Epoch[24] Batch [20-40]	Speed: 21451.01 samples/sec	accuracy=nan
2023-03-21 22:05:15,034 Node[0] Epoch[24] Batch [40-60]	Speed: 21430.51 samples/sec	accuracy=nan
2023-03-21 22:05:18,077 Node[0] Epoch[24] Batch [60-80]	Speed: 21450.39 samples/sec	accuracy=nan
2023-03-21 22:05:21,127 Node[0] Epoch[24] Batch [80-100]	Speed: 21405.57 samples/sec	accuracy=nan
2023-03-21 22:05:24,182 Node[0] Epoch[24] Batch [100-120]	Speed: 21365.45 samples/sec	accuracy=nan
2023-03-21 22:05:27,230 Node[0] Epoch[24] Batch [120-140]	Speed: 21419.47 samples/sec	accuracy=nan
2023-03-21 22:05:30,266 Node[0] Epoch[24] Batch [140-160]	Speed: 21498.82 samples/sec	accuracy=nan
2023-03-21 22:05:33,308 Node[0] Epoch[24] Batch [160-180]	Speed: 21465.91 samples/sec	accuracy=nan
2023-03-21 22:05:36,354 Node[0] Epoch[24] Batch [180-200]	Speed: 21429.17 samples/sec	accuracy=nan
2023-03-21 22:05:39,400 Node[0] Epoch[24] Batch [200-220]	Speed: 21426.73 samples/sec	accuracy=nan
2023-03-21 22:05:42,445 Node[0] Epoch[24] Batch [220-240]	Speed: 21441.29 samples/sec	accuracy=nan
2023-03-21 22:05:45,489 Node[0] Epoch[24] Batch [240-260]	Speed: 21447.93 samples/sec	accuracy=nan
2023-03-21 22:05:48,532 Node[0] Epoch[24] Batch [260-280]	Speed: 21451.80 samples/sec	accuracy=nan
2023-03-21 22:05:51,576 Node[0] Epoch[24] Batch [280-300]	Speed: 21441.98 samples/sec	accuracy=nan
2023-03-21 22:05:54,619 Node[0] Epoch[24] Batch [300-320]	Speed: 21451.75 samples/sec	accuracy=nan
2023-03-21 22:05:57,658 Node[0] Epoch[24] Batch [320-340]	Speed: 21486.45 samples/sec	accuracy=nan
2023-03-21 22:06:00,698 Node[0] Epoch[24] Batch [340-360]	Speed: 21472.45 samples/sec	accuracy=nan
2023-03-21 22:06:03,743 Node[0] Epoch[24] Batch [360-380]	Speed: 21439.82 samples/sec	accuracy=nan
2023-03-21 22:06:05,411 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:06:05,411 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:06:05,411 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:06:05,411 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:06:05,411 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:06:05,412 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:06:05,412 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454365411, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-21 22:06:05,412 Node[0] Epoch[24] Time cost=59.663
:::MLLOG {"namespace": "", "time_ms": 1679454365413, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21473.39981824428}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679454365413, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-21 22:06:05,413 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:06:08,608 Node[0] Epoch[25] Batch [0-20]	Speed: 21469.66 samples/sec	accuracy=nan
2023-03-21 22:06:11,653 Node[0] Epoch[25] Batch [20-40]	Speed: 21438.47 samples/sec	accuracy=nan
2023-03-21 22:06:14,696 Node[0] Epoch[25] Batch [40-60]	Speed: 21453.76 samples/sec	accuracy=nan
2023-03-21 22:06:17,740 Node[0] Epoch[25] Batch [60-80]	Speed: 21446.00 samples/sec	accuracy=nan
2023-03-21 22:06:20,781 Node[0] Epoch[25] Batch [80-100]	Speed: 21468.99 samples/sec	accuracy=nan
2023-03-21 22:06:23,829 Node[0] Epoch[25] Batch [100-120]	Speed: 21412.58 samples/sec	accuracy=nan
2023-03-21 22:06:26,881 Node[0] Epoch[25] Batch [120-140]	Speed: 21392.46 samples/sec	accuracy=nan
2023-03-21 22:06:29,933 Node[0] Epoch[25] Batch [140-160]	Speed: 21384.74 samples/sec	accuracy=nan
2023-03-21 22:06:32,974 Node[0] Epoch[25] Batch [160-180]	Speed: 21467.52 samples/sec	accuracy=nan
2023-03-21 22:06:36,020 Node[0] Epoch[25] Batch [180-200]	Speed: 21434.28 samples/sec	accuracy=nan
2023-03-21 22:06:39,071 Node[0] Epoch[25] Batch [200-220]	Speed: 21397.05 samples/sec	accuracy=nan
2023-03-21 22:06:42,118 Node[0] Epoch[25] Batch [220-240]	Speed: 21425.15 samples/sec	accuracy=nan
2023-03-21 22:06:45,164 Node[0] Epoch[25] Batch [240-260]	Speed: 21429.24 samples/sec	accuracy=nan
2023-03-21 22:06:48,210 Node[0] Epoch[25] Batch [260-280]	Speed: 21430.03 samples/sec	accuracy=nan
2023-03-21 22:06:51,263 Node[0] Epoch[25] Batch [280-300]	Speed: 21385.13 samples/sec	accuracy=nan
2023-03-21 22:06:54,313 Node[0] Epoch[25] Batch [300-320]	Speed: 21402.15 samples/sec	accuracy=nan
2023-03-21 22:06:57,370 Node[0] Epoch[25] Batch [320-340]	Speed: 21355.86 samples/sec	accuracy=nan
2023-03-21 22:07:00,416 Node[0] Epoch[25] Batch [340-360]	Speed: 21431.05 samples/sec	accuracy=nan
2023-03-21 22:07:03,460 Node[0] Epoch[25] Batch [360-380]	Speed: 21443.44 samples/sec	accuracy=nan
2023-03-21 22:07:05,283 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:07:05,283 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:07:05,283 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:07:05,283 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454425283, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-21 22:07:05,283 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:07:05,284 Node[0] Epoch[25] Time cost=59.871
:::MLLOG {"namespace": "", "time_ms": 1679454425284, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21398.922712870128}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
2023-03-21 22:07:05,284 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:07:05,284 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454425284, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-21 22:07:05,284 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:07:08,483 Node[0] Epoch[26] Batch [0-20]	Speed: 21439.38 samples/sec	accuracy=nan
2023-03-21 22:07:11,523 Node[0] Epoch[26] Batch [20-40]	Speed: 21473.54 samples/sec	accuracy=nan
2023-03-21 22:07:14,563 Node[0] Epoch[26] Batch [40-60]	Speed: 21469.45 samples/sec	accuracy=nan
2023-03-21 22:07:17,603 Node[0] Epoch[26] Batch [60-80]	Speed: 21476.66 samples/sec	accuracy=nan
2023-03-21 22:07:20,646 Node[0] Epoch[26] Batch [80-100]	Speed: 21451.73 samples/sec	accuracy=nan
2023-03-21 22:07:23,691 Node[0] Epoch[26] Batch [100-120]	Speed: 21439.47 samples/sec	accuracy=nan
2023-03-21 22:07:26,732 Node[0] Epoch[26] Batch [120-140]	Speed: 21467.61 samples/sec	accuracy=nan
2023-03-21 22:07:29,776 Node[0] Epoch[26] Batch [140-160]	Speed: 21443.69 samples/sec	accuracy=nan
2023-03-21 22:07:32,821 Node[0] Epoch[26] Batch [160-180]	Speed: 21437.75 samples/sec	accuracy=nan
2023-03-21 22:07:35,877 Node[0] Epoch[26] Batch [180-200]	Speed: 21359.79 samples/sec	accuracy=nan
2023-03-21 22:07:38,926 Node[0] Epoch[26] Batch [200-220]	Speed: 21408.44 samples/sec	accuracy=nan
2023-03-21 22:07:41,973 Node[0] Epoch[26] Batch [220-240]	Speed: 21424.86 samples/sec	accuracy=nan
2023-03-21 22:07:45,019 Node[0] Epoch[26] Batch [240-260]	Speed: 21437.37 samples/sec	accuracy=nan
2023-03-21 22:07:48,061 Node[0] Epoch[26] Batch [260-280]	Speed: 21456.27 samples/sec	accuracy=nan
2023-03-21 22:07:51,108 Node[0] Epoch[26] Batch [280-300]	Speed: 21424.01 samples/sec	accuracy=nan
2023-03-21 22:07:54,150 Node[0] Epoch[26] Batch [300-320]	Speed: 21462.14 samples/sec	accuracy=nan
2023-03-21 22:07:57,192 Node[0] Epoch[26] Batch [320-340]	Speed: 21454.72 samples/sec	accuracy=nan
2023-03-21 22:08:00,239 Node[0] Epoch[26] Batch [340-360]	Speed: 21423.90 samples/sec	accuracy=nan
2023-03-21 22:08:03,287 Node[0] Epoch[26] Batch [360-380]	Speed: 21418.71 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679454484957, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-21 22:08:04,959 Node[0] Epoch[26] Time cost=59.674
:::MLLOG {"namespace": "", "time_ms": 1679454484959, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21469.303619523173}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679454485105, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-21 22:08:06,560 Node[0] Epoch[26] Validation-accuracy=0.712320
2023-03-21 22:08:06,560 Node[0] Epoch[26] Validation-correct-count=4452.000000
2023-03-21 22:08:06,560 Node[0] Epoch[26] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679454486743, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
2023-03-21 22:08:06,743 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454486743, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72014, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679454486743, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
2023-03-21 22:08:06,743 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:08:06,743 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454486744, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-21 22:08:06,743 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:08:06,743 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:08:06,743 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:08:06,743 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454486744, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-21 22:08:06,744 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:08:09,805 Node[0] Epoch[27] Batch [0-20]	Speed: 21412.75 samples/sec	accuracy=nan
2023-03-21 22:08:12,844 Node[0] Epoch[27] Batch [20-40]	Speed: 21479.04 samples/sec	accuracy=nan
2023-03-21 22:08:15,884 Node[0] Epoch[27] Batch [40-60]	Speed: 21475.90 samples/sec	accuracy=nan
2023-03-21 22:08:18,924 Node[0] Epoch[27] Batch [60-80]	Speed: 21470.44 samples/sec	accuracy=nan
2023-03-21 22:08:21,967 Node[0] Epoch[27] Batch [80-100]	Speed: 21451.17 samples/sec	accuracy=nan
2023-03-21 22:08:25,021 Node[0] Epoch[27] Batch [100-120]	Speed: 21374.00 samples/sec	accuracy=nan
2023-03-21 22:08:28,077 Node[0] Epoch[27] Batch [120-140]	Speed: 21367.15 samples/sec	accuracy=nan
2023-03-21 22:08:31,127 Node[0] Epoch[27] Batch [140-160]	Speed: 21398.14 samples/sec	accuracy=nan
2023-03-21 22:08:34,171 Node[0] Epoch[27] Batch [160-180]	Speed: 21450.81 samples/sec	accuracy=nan
2023-03-21 22:08:37,218 Node[0] Epoch[27] Batch [180-200]	Speed: 21420.09 samples/sec	accuracy=nan
2023-03-21 22:08:40,264 Node[0] Epoch[27] Batch [200-220]	Speed: 21432.26 samples/sec	accuracy=nan
2023-03-21 22:08:43,313 Node[0] Epoch[27] Batch [220-240]	Speed: 21414.25 samples/sec	accuracy=nan
2023-03-21 22:08:46,356 Node[0] Epoch[27] Batch [240-260]	Speed: 21449.75 samples/sec	accuracy=nan
2023-03-21 22:08:49,401 Node[0] Epoch[27] Batch [260-280]	Speed: 21435.15 samples/sec	accuracy=nan
2023-03-21 22:08:52,446 Node[0] Epoch[27] Batch [280-300]	Speed: 21438.13 samples/sec	accuracy=nan
2023-03-21 22:09:00,029 Node[0] Epoch[27] Batch [300-320]	Speed: 8609.65 samples/sec	accuracy=nan
2023-03-21 22:09:03,050 Node[0] Epoch[27] Batch [320-340]	Speed: 21607.95 samples/sec	accuracy=nan
2023-03-21 22:09:06,079 Node[0] Epoch[27] Batch [340-360]	Speed: 21551.46 samples/sec	accuracy=nan
2023-03-21 22:09:09,113 Node[0] Epoch[27] Batch [360-380]	Speed: 21512.10 samples/sec	accuracy=nan
2023-03-21 22:09:10,930 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:09:10,930 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:09:10,930 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:09:10,930 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:09:10,930 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:09:10,930 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454550930, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-21 22:09:10,931 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:09:10,931 Node[0] Epoch[27] Time cost=64.187
:::MLLOG {"namespace": "", "time_ms": 1679454550931, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 19959.860387043165}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679454550932, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-21 22:09:10,932 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:09:14,123 Node[0] Epoch[28] Batch [0-20]	Speed: 21471.87 samples/sec	accuracy=nan
2023-03-21 22:09:17,164 Node[0] Epoch[28] Batch [20-40]	Speed: 21465.74 samples/sec	accuracy=nan
2023-03-21 22:09:20,205 Node[0] Epoch[28] Batch [40-60]	Speed: 21468.40 samples/sec	accuracy=nan
2023-03-21 22:09:23,249 Node[0] Epoch[28] Batch [60-80]	Speed: 21446.69 samples/sec	accuracy=nan
2023-03-21 22:09:26,293 Node[0] Epoch[28] Batch [80-100]	Speed: 21447.59 samples/sec	accuracy=nan
2023-03-21 22:09:29,338 Node[0] Epoch[28] Batch [100-120]	Speed: 21436.20 samples/sec	accuracy=nan
2023-03-21 22:09:32,383 Node[0] Epoch[28] Batch [120-140]	Speed: 21437.99 samples/sec	accuracy=nan
2023-03-21 22:09:35,428 Node[0] Epoch[28] Batch [140-160]	Speed: 21440.15 samples/sec	accuracy=nan
2023-03-21 22:09:38,468 Node[0] Epoch[28] Batch [160-180]	Speed: 21475.98 samples/sec	accuracy=nan
2023-03-21 22:09:41,505 Node[0] Epoch[28] Batch [180-200]	Speed: 21489.01 samples/sec	accuracy=nan
2023-03-21 22:09:44,550 Node[0] Epoch[28] Batch [200-220]	Speed: 21438.44 samples/sec	accuracy=nan
2023-03-21 22:09:47,594 Node[0] Epoch[28] Batch [220-240]	Speed: 21450.13 samples/sec	accuracy=nan
2023-03-21 22:09:50,640 Node[0] Epoch[28] Batch [240-260]	Speed: 21427.43 samples/sec	accuracy=nan
2023-03-21 22:09:53,683 Node[0] Epoch[28] Batch [260-280]	Speed: 21453.82 samples/sec	accuracy=nan
2023-03-21 22:09:56,727 Node[0] Epoch[28] Batch [280-300]	Speed: 21449.46 samples/sec	accuracy=nan
2023-03-21 22:10:02,058 Node[0] Epoch[28] Batch [300-320]	Speed: 12243.68 samples/sec	accuracy=nan
2023-03-21 22:10:05,080 Node[0] Epoch[28] Batch [320-340]	Speed: 21602.21 samples/sec	accuracy=nan
2023-03-21 22:10:08,115 Node[0] Epoch[28] Batch [340-360]	Speed: 21509.95 samples/sec	accuracy=nan
2023-03-21 22:10:11,153 Node[0] Epoch[28] Batch [360-380]	Speed: 21492.08 samples/sec	accuracy=nan
2023-03-21 22:10:12,819 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:10:12,819 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:10:12,819 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:10:12,820 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:10:12,820 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:10:12,820 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454612819, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-21 22:10:12,821 Node[0] Epoch[28] Time cost=61.889
:::MLLOG {"namespace": "", "time_ms": 1679454612821, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20701.055568421794}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
2023-03-21 22:10:12,821 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454612821, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-21 22:10:12,821 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:10:16,013 Node[0] Epoch[29] Batch [0-20]	Speed: 21495.08 samples/sec	accuracy=nan
2023-03-21 22:10:19,055 Node[0] Epoch[29] Batch [20-40]	Speed: 21461.38 samples/sec	accuracy=nan
2023-03-21 22:10:22,094 Node[0] Epoch[29] Batch [40-60]	Speed: 21480.93 samples/sec	accuracy=nan
2023-03-21 22:10:25,135 Node[0] Epoch[29] Batch [60-80]	Speed: 21468.83 samples/sec	accuracy=nan
2023-03-21 22:10:28,175 Node[0] Epoch[29] Batch [80-100]	Speed: 21468.58 samples/sec	accuracy=nan
2023-03-21 22:10:31,216 Node[0] Epoch[29] Batch [100-120]	Speed: 21465.87 samples/sec	accuracy=nan
2023-03-21 22:10:34,260 Node[0] Epoch[29] Batch [120-140]	Speed: 21449.43 samples/sec	accuracy=nan
2023-03-21 22:10:37,301 Node[0] Epoch[29] Batch [140-160]	Speed: 21466.68 samples/sec	accuracy=nan
2023-03-21 22:10:40,339 Node[0] Epoch[29] Batch [160-180]	Speed: 21486.61 samples/sec	accuracy=nan
2023-03-21 22:10:43,377 Node[0] Epoch[29] Batch [180-200]	Speed: 21489.17 samples/sec	accuracy=nan
2023-03-21 22:10:46,427 Node[0] Epoch[29] Batch [200-220]	Speed: 21402.39 samples/sec	accuracy=nan
2023-03-21 22:10:49,471 Node[0] Epoch[29] Batch [220-240]	Speed: 21443.88 samples/sec	accuracy=nan
2023-03-21 22:10:52,513 Node[0] Epoch[29] Batch [240-260]	Speed: 21460.09 samples/sec	accuracy=nan
2023-03-21 22:10:55,555 Node[0] Epoch[29] Batch [260-280]	Speed: 21457.54 samples/sec	accuracy=nan
2023-03-21 22:10:58,597 Node[0] Epoch[29] Batch [280-300]	Speed: 21462.29 samples/sec	accuracy=nan
2023-03-21 22:11:03,879 Node[0] Epoch[29] Batch [300-320]	Speed: 12359.09 samples/sec	accuracy=nan
2023-03-21 22:11:06,910 Node[0] Epoch[29] Batch [320-340]	Speed: 21536.61 samples/sec	accuracy=nan
2023-03-21 22:11:09,946 Node[0] Epoch[29] Batch [340-360]	Speed: 21499.61 samples/sec	accuracy=nan
2023-03-21 22:11:12,988 Node[0] Epoch[29] Batch [360-380]	Speed: 21462.57 samples/sec	accuracy=nan
2023-03-21 22:11:14,809 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:11:14,809 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:11:14,810 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:11:14,810 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:11:14,810 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454674809, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-21 22:11:14,811 Node[0] Epoch[29] Time cost=61.989
2023-03-21 22:11:14,811 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454674811, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20667.515630982038}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
2023-03-21 22:11:14,811 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454674811, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-21 22:11:14,811 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:11:18,002 Node[0] Epoch[30] Batch [0-20]	Speed: 21470.83 samples/sec	accuracy=nan
2023-03-21 22:11:21,041 Node[0] Epoch[30] Batch [20-40]	Speed: 21477.66 samples/sec	accuracy=nan
2023-03-21 22:11:24,083 Node[0] Epoch[30] Batch [40-60]	Speed: 21461.75 samples/sec	accuracy=nan
2023-03-21 22:11:27,127 Node[0] Epoch[30] Batch [60-80]	Speed: 21443.31 samples/sec	accuracy=nan
2023-03-21 22:11:30,168 Node[0] Epoch[30] Batch [80-100]	Speed: 21465.47 samples/sec	accuracy=nan
2023-03-21 22:11:33,213 Node[0] Epoch[30] Batch [100-120]	Speed: 21441.35 samples/sec	accuracy=nan
2023-03-21 22:11:36,254 Node[0] Epoch[30] Batch [120-140]	Speed: 21465.13 samples/sec	accuracy=nan
2023-03-21 22:11:39,296 Node[0] Epoch[30] Batch [140-160]	Speed: 21460.28 samples/sec	accuracy=nan
2023-03-21 22:11:42,341 Node[0] Epoch[30] Batch [160-180]	Speed: 21435.88 samples/sec	accuracy=nan
2023-03-21 22:11:45,384 Node[0] Epoch[30] Batch [180-200]	Speed: 21455.51 samples/sec	accuracy=nan
2023-03-21 22:11:48,429 Node[0] Epoch[30] Batch [200-220]	Speed: 21438.19 samples/sec	accuracy=nan
2023-03-21 22:11:51,476 Node[0] Epoch[30] Batch [220-240]	Speed: 21424.15 samples/sec	accuracy=nan
2023-03-21 22:11:54,534 Node[0] Epoch[30] Batch [240-260]	Speed: 21345.17 samples/sec	accuracy=nan
2023-03-21 22:11:57,587 Node[0] Epoch[30] Batch [260-280]	Speed: 21382.21 samples/sec	accuracy=nan
2023-03-21 22:12:00,640 Node[0] Epoch[30] Batch [280-300]	Speed: 21380.97 samples/sec	accuracy=nan
2023-03-21 22:12:05,922 Node[0] Epoch[30] Batch [300-320]	Speed: 12359.10 samples/sec	accuracy=nan
2023-03-21 22:12:11,184 Node[0] Epoch[30] Batch [320-340]	Speed: 12406.92 samples/sec	accuracy=nan
2023-03-21 22:12:14,213 Node[0] Epoch[30] Batch [340-360]	Speed: 21551.78 samples/sec	accuracy=nan
2023-03-21 22:12:17,248 Node[0] Epoch[30] Batch [360-380]	Speed: 21505.56 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679454738913, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-21 22:12:18,914 Node[0] Epoch[30] Time cost=64.103
:::MLLOG {"namespace": "", "time_ms": 1679454738914, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 19986.152869999405}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679454739060, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-21 22:12:20,701 Node[0] Epoch[30] Validation-accuracy=0.753760
2023-03-21 22:12:20,701 Node[0] Epoch[30] Validation-correct-count=4711.000000
2023-03-21 22:12:20,701 Node[0] Epoch[30] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679454740701, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679454740702, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.74948, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
2023-03-21 22:12:20,702 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:12:20,702 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454740702, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679454740702, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-21 22:12:20,702 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:12:20,702 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:12:20,702 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:12:20,702 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:12:20,702 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454740702, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-21 22:12:20,702 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:12:23,762 Node[0] Epoch[31] Batch [0-20]	Speed: 21415.11 samples/sec	accuracy=nan
2023-03-21 22:12:26,795 Node[0] Epoch[31] Batch [20-40]	Speed: 21527.01 samples/sec	accuracy=nan
2023-03-21 22:12:29,835 Node[0] Epoch[31] Batch [40-60]	Speed: 21475.19 samples/sec	accuracy=nan
2023-03-21 22:12:32,875 Node[0] Epoch[31] Batch [60-80]	Speed: 21468.38 samples/sec	accuracy=nan
2023-03-21 22:12:35,916 Node[0] Epoch[31] Batch [80-100]	Speed: 21467.19 samples/sec	accuracy=nan
2023-03-21 22:12:38,957 Node[0] Epoch[31] Batch [100-120]	Speed: 21470.91 samples/sec	accuracy=nan
2023-03-21 22:12:42,000 Node[0] Epoch[31] Batch [120-140]	Speed: 21450.21 samples/sec	accuracy=nan
2023-03-21 22:12:45,044 Node[0] Epoch[31] Batch [140-160]	Speed: 21447.27 samples/sec	accuracy=nan
2023-03-21 22:12:48,087 Node[0] Epoch[31] Batch [160-180]	Speed: 21452.82 samples/sec	accuracy=nan
2023-03-21 22:12:51,130 Node[0] Epoch[31] Batch [180-200]	Speed: 21451.75 samples/sec	accuracy=nan
2023-03-21 22:12:54,172 Node[0] Epoch[31] Batch [200-220]	Speed: 21462.57 samples/sec	accuracy=nan
2023-03-21 22:12:57,213 Node[0] Epoch[31] Batch [220-240]	Speed: 21464.85 samples/sec	accuracy=nan
2023-03-21 22:13:00,253 Node[0] Epoch[31] Batch [240-260]	Speed: 21471.04 samples/sec	accuracy=nan
2023-03-21 22:13:03,290 Node[0] Epoch[31] Batch [260-280]	Speed: 21494.11 samples/sec	accuracy=nan
2023-03-21 22:13:06,334 Node[0] Epoch[31] Batch [280-300]	Speed: 21446.35 samples/sec	accuracy=nan
2023-03-21 22:13:09,380 Node[0] Epoch[31] Batch [300-320]	Speed: 21430.58 samples/sec	accuracy=nan
2023-03-21 22:13:12,424 Node[0] Epoch[31] Batch [320-340]	Speed: 21446.77 samples/sec	accuracy=nan
2023-03-21 22:13:15,474 Node[0] Epoch[31] Batch [340-360]	Speed: 21402.10 samples/sec	accuracy=nan
2023-03-21 22:13:18,522 Node[0] Epoch[31] Batch [360-380]	Speed: 21421.80 samples/sec	accuracy=nan
2023-03-21 22:13:20,347 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:13:20,347 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:13:20,348 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:13:20,348 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:13:20,347 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:13:20,348 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454800347, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-21 22:13:20,348 Node[0] Epoch[31] Time cost=59.646
:::MLLOG {"namespace": "", "time_ms": 1679454800349, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21479.505706980555}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
2023-03-21 22:13:20,348 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454800349, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-21 22:13:20,349 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:13:23,546 Node[0] Epoch[32] Batch [0-20]	Speed: 21434.16 samples/sec	accuracy=nan
2023-03-21 22:13:26,591 Node[0] Epoch[32] Batch [20-40]	Speed: 21438.00 samples/sec	accuracy=nan
2023-03-21 22:13:29,642 Node[0] Epoch[32] Batch [40-60]	Speed: 21401.91 samples/sec	accuracy=nan
2023-03-21 22:13:32,687 Node[0] Epoch[32] Batch [60-80]	Speed: 21436.11 samples/sec	accuracy=nan
2023-03-21 22:13:35,731 Node[0] Epoch[32] Batch [80-100]	Speed: 21444.23 samples/sec	accuracy=nan
2023-03-21 22:13:38,778 Node[0] Epoch[32] Batch [100-120]	Speed: 21424.22 samples/sec	accuracy=nan
2023-03-21 22:13:41,816 Node[0] Epoch[32] Batch [120-140]	Speed: 21489.99 samples/sec	accuracy=nan
2023-03-21 22:13:44,861 Node[0] Epoch[32] Batch [140-160]	Speed: 21439.70 samples/sec	accuracy=nan
2023-03-21 22:13:47,907 Node[0] Epoch[32] Batch [160-180]	Speed: 21431.78 samples/sec	accuracy=nan
2023-03-21 22:13:50,951 Node[0] Epoch[32] Batch [180-200]	Speed: 21441.70 samples/sec	accuracy=nan
2023-03-21 22:13:53,998 Node[0] Epoch[32] Batch [200-220]	Speed: 21426.41 samples/sec	accuracy=nan
2023-03-21 22:13:57,055 Node[0] Epoch[32] Batch [220-240]	Speed: 21355.44 samples/sec	accuracy=nan
2023-03-21 22:14:00,113 Node[0] Epoch[32] Batch [240-260]	Speed: 21348.74 samples/sec	accuracy=nan
2023-03-21 22:14:03,166 Node[0] Epoch[32] Batch [260-280]	Speed: 21376.79 samples/sec	accuracy=nan
2023-03-21 22:14:06,221 Node[0] Epoch[32] Batch [280-300]	Speed: 21372.45 samples/sec	accuracy=nan
2023-03-21 22:14:11,554 Node[0] Epoch[32] Batch [300-320]	Speed: 12241.02 samples/sec	accuracy=nan
2023-03-21 22:14:14,584 Node[0] Epoch[32] Batch [320-340]	Speed: 21538.06 samples/sec	accuracy=nan
2023-03-21 22:14:17,622 Node[0] Epoch[32] Batch [340-360]	Speed: 21491.07 samples/sec	accuracy=nan
2023-03-21 22:14:20,663 Node[0] Epoch[32] Batch [360-380]	Speed: 21467.74 samples/sec	accuracy=nan
2023-03-21 22:14:22,334 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:14:22,334 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:14:22,334 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:14:22,334 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:14:22,335 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:14:22,335 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:14:22,335 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454862334, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-21 22:14:22,335 Node[0] Epoch[32] Time cost=61.986
:::MLLOG {"namespace": "", "time_ms": 1679454862335, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20668.553421227574}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679454862336, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-21 22:14:22,336 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:14:25,529 Node[0] Epoch[33] Batch [0-20]	Speed: 21482.90 samples/sec	accuracy=nan
2023-03-21 22:14:28,569 Node[0] Epoch[33] Batch [20-40]	Speed: 21475.29 samples/sec	accuracy=nan
2023-03-21 22:14:31,611 Node[0] Epoch[33] Batch [40-60]	Speed: 21460.75 samples/sec	accuracy=nan
2023-03-21 22:14:34,651 Node[0] Epoch[33] Batch [60-80]	Speed: 21475.11 samples/sec	accuracy=nan
2023-03-21 22:14:37,689 Node[0] Epoch[33] Batch [80-100]	Speed: 21484.57 samples/sec	accuracy=nan
2023-03-21 22:14:40,731 Node[0] Epoch[33] Batch [100-120]	Speed: 21461.43 samples/sec	accuracy=nan
2023-03-21 22:14:43,772 Node[0] Epoch[33] Batch [120-140]	Speed: 21462.14 samples/sec	accuracy=nan
2023-03-21 22:14:46,810 Node[0] Epoch[33] Batch [140-160]	Speed: 21489.34 samples/sec	accuracy=nan
2023-03-21 22:14:49,846 Node[0] Epoch[33] Batch [160-180]	Speed: 21504.09 samples/sec	accuracy=nan
2023-03-21 22:14:52,885 Node[0] Epoch[33] Batch [180-200]	Speed: 21476.85 samples/sec	accuracy=nan
2023-03-21 22:14:55,927 Node[0] Epoch[33] Batch [200-220]	Speed: 21461.05 samples/sec	accuracy=nan
2023-03-21 22:14:58,970 Node[0] Epoch[33] Batch [220-240]	Speed: 21452.39 samples/sec	accuracy=nan
2023-03-21 22:15:02,020 Node[0] Epoch[33] Batch [240-260]	Speed: 21406.18 samples/sec	accuracy=nan
2023-03-21 22:15:05,062 Node[0] Epoch[33] Batch [260-280]	Speed: 21455.76 samples/sec	accuracy=nan
2023-03-21 22:15:08,108 Node[0] Epoch[33] Batch [280-300]	Speed: 21434.07 samples/sec	accuracy=nan
2023-03-21 22:15:11,153 Node[0] Epoch[33] Batch [300-320]	Speed: 21436.91 samples/sec	accuracy=nan
2023-03-21 22:15:14,202 Node[0] Epoch[33] Batch [320-340]	Speed: 21411.22 samples/sec	accuracy=nan
2023-03-21 22:15:17,244 Node[0] Epoch[33] Batch [340-360]	Speed: 21456.99 samples/sec	accuracy=nan
2023-03-21 22:15:20,288 Node[0] Epoch[33] Batch [360-380]	Speed: 21447.18 samples/sec	accuracy=nan
2023-03-21 22:15:22,111 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:15:22,111 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:15:22,111 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:15:22,111 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:15:22,111 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:15:22,111 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454922111, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-21 22:15:22,111 Node[0] Epoch[33] Time cost=59.775
:::MLLOG {"namespace": "", "time_ms": 1679454922112, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21432.992820247735}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
2023-03-21 22:15:22,111 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679454922112, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-21 22:15:22,112 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-21 22:15:25,311 Node[0] Epoch[34] Batch [0-20]	Speed: 20456.60 samples/sec	accuracy=nan
2023-03-21 22:15:28,355 Node[0] Epoch[34] Batch [20-40]	Speed: 21449.69 samples/sec	accuracy=nan
2023-03-21 22:15:31,399 Node[0] Epoch[34] Batch [40-60]	Speed: 21442.41 samples/sec	accuracy=nan
2023-03-21 22:15:34,443 Node[0] Epoch[34] Batch [60-80]	Speed: 21443.97 samples/sec	accuracy=nan
2023-03-21 22:15:37,489 Node[0] Epoch[34] Batch [80-100]	Speed: 21431.02 samples/sec	accuracy=nan
2023-03-21 22:15:40,534 Node[0] Epoch[34] Batch [100-120]	Speed: 21441.58 samples/sec	accuracy=nan
2023-03-21 22:15:43,580 Node[0] Epoch[34] Batch [120-140]	Speed: 21427.03 samples/sec	accuracy=nan
2023-03-21 22:15:46,625 Node[0] Epoch[34] Batch [140-160]	Speed: 21445.51 samples/sec	accuracy=nan
2023-03-21 22:15:49,675 Node[0] Epoch[34] Batch [160-180]	Speed: 21400.19 samples/sec	accuracy=nan
2023-03-21 22:15:52,734 Node[0] Epoch[34] Batch [180-200]	Speed: 21341.40 samples/sec	accuracy=nan
2023-03-21 22:15:55,787 Node[0] Epoch[34] Batch [200-220]	Speed: 21383.11 samples/sec	accuracy=nan
2023-03-21 22:15:58,830 Node[0] Epoch[34] Batch [220-240]	Speed: 21452.58 samples/sec	accuracy=nan
2023-03-21 22:16:01,875 Node[0] Epoch[34] Batch [240-260]	Speed: 21433.58 samples/sec	accuracy=nan
2023-03-21 22:16:04,921 Node[0] Epoch[34] Batch [260-280]	Speed: 21434.91 samples/sec	accuracy=nan
2023-03-21 22:16:07,971 Node[0] Epoch[34] Batch [280-300]	Speed: 21401.26 samples/sec	accuracy=nan
2023-03-21 22:16:11,016 Node[0] Epoch[34] Batch [300-320]	Speed: 21440.68 samples/sec	accuracy=nan
2023-03-21 22:16:14,057 Node[0] Epoch[34] Batch [320-340]	Speed: 21463.74 samples/sec	accuracy=nan
2023-03-21 22:16:17,104 Node[0] Epoch[34] Batch [340-360]	Speed: 21423.61 samples/sec	accuracy=nan
2023-03-21 22:16:20,148 Node[0] Epoch[34] Batch [360-380]	Speed: 21444.59 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679454981975, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-21 22:16:21,976 Node[0] Epoch[34] Time cost=59.864
:::MLLOG {"namespace": "", "time_ms": 1679454981976, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21401.237754875412}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679454982122, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-21 22:16:23,566 Node[0] Epoch[34] Validation-accuracy=0.768800
2023-03-21 22:16:23,566 Node[0] Epoch[34] Validation-correct-count=4805.000000
2023-03-21 22:16:23,566 Node[0] Epoch[34] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679454983756, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679454983757, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76132, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679454983757, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679454983757, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679455000
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:40 PM'
ENDING TIMING RUN AT 2023-03-21 10:16:40 PM
+ result=2263
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2263,root,2023-03-21 09:38:57 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2263,root,2023-03-21 09:38:57 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679455000
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:40 PM'
ENDING TIMING RUN AT 2023-03-21 10:16:40 PM
+ result=2263
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2263,root,2023-03-21 09:38:57 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2263,root,2023-03-21 09:38:57 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679455001
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:41 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:41 PM'
ENDING TIMING RUN AT 2023-03-21 10:16:41 PM
+ result=2264
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2264,root,2023-03-21 09:38:57 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2264,root,2023-03-21 09:38:57 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679455001
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:41 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:41 PM'
ENDING TIMING RUN AT 2023-03-21 10:16:41 PM
+ result=2264
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2264,root,2023-03-21 09:38:57 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2264,root,2023-03-21 09:38:57 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679455001
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:41 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:41 PM'
ENDING TIMING RUN AT 2023-03-21 10:16:41 PM
+ result=2264
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2264,root,2023-03-21 09:38:57 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2264,root,2023-03-21 09:38:57 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679455001
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:41 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:41 PM'
ENDING TIMING RUN AT 2023-03-21 10:16:41 PM
+ result=2264
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2264,root,2023-03-21 09:38:57 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2264,root,2023-03-21 09:38:57 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679455002
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:42 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:42 PM'
ENDING TIMING RUN AT 2023-03-21 10:16:42 PM
+ result=2265
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 09:38:57 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 09:38:57 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679455002
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-21 10:16:42 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-21 10:16:42 PM'
ENDING TIMING RUN AT 2023-03-21 10:16:42 PM
+ result=2265
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 09:38:57 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2265,root,2023-03-21 09:38:57 PM'
+ export PROFILE=0
+ PROFILE=0
