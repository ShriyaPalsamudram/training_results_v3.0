+ echo 'Beginning trial 3 of 5'
Beginning trial 3 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node041 node046 '
+ echo 'hosts=node041 node046 '
hosts=node041 node046 
+ for node in $hosts
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679324283174, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679324283203, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679324283204, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679324283205, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679324283207, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node041 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node041
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679324294716, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679324300005, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679324300033, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679324300035, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679324300036, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679324300037, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node046 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node046
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679324310650, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=13946
+ SEED=13946
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node041: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node046: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export 'OMPI_MCA_btl=^openib'
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ OMPI_MCA_btl='^openib'
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export DGXSOCKETCORES=32
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ DGXSOCKETCORES=32
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
++ export MXNET_DETERMINISTIC=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
++ export BATCHSIZE=408
++ BATCHSIZE=408
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
++ export LR=12.5
++ LR=12.5
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ EVAL_PERIOD=4
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
++ export MOM=0.9
++ MOM=0.9
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
++ export LARSETA=0.001
++ LARSETA=0.001
++ MOM=0.9
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ NUMEPOCHS=37
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export LR=12.5
++ LR=12.5
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export WD=5.0e-05
++ WD=5.0e-05
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export MOM=0.9
++ MOM=0.9
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export LARSETA=0.001
++ LARSETA=0.001
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DALI_PREALLOCATE_HEIGHT=6430
++ export DGXNNODES=2
++ DGXNNODES=2
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
++ date +%s
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
++ date +%s
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ date +%s
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+ start=1679324311
+ start=1679324311
+ start=1679324311
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+ start_fmt='2023-03-20 09:58:31 AM'
+ start_fmt='2023-03-20 09:58:31 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 09:58:31 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 09:58:31 AM'
STARTING TIMING RUN AT 2023-03-20 09:58:31 AM
STARTING TIMING RUN AT 2023-03-20 09:58:31 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ start_fmt='2023-03-20 09:58:31 AM'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ OPTIMIZER=sgdwfastlars
+ echo 'STARTING TIMING RUN AT 2023-03-20 09:58:31 AM'
+ BATCHSIZE=408
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
STARTING TIMING RUN AT 2023-03-20 09:58:31 AM
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ readonly global_rank=0
+ global_rank=0
+ MOM=0.9
+ LRSCHED=pow2
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ DALI_HW_DECODER_LOAD=0
+ readonly local_rank=0
+ local_rank=0
+ LABELSMOOTHING=0.1
+ SEED=13946
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ SEED=13946
+ SLURM_NTASKS_PER_NODE=4
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ OPTIMIZER=sgdwfastlars
+ DALI_PREFETCH_QUEUE=5
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ BATCHSIZE=408
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_CACHE_SIZE=0
+ INPUT_BATCH_MULTIPLIER=1
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_ROI_DECODE=1
+ KVSTORE=horovod
+ DALI_PREALLOCATE_HEIGHT=6430
+ LR=12.5
+ DALI_PREALLOCATE_WIDTH=5980
+ MOM=0.9
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_PREALLOCATE_HEIGHT=6430
+ LRSCHED=pow2
+ DALI_TMP_BUFFER_HINT=355568328
+ WARMUP_EPOCHS=2
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_DECODER_BUFFER_HINT=1315942
+ LARSETA=0.001
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ NETWORK=resnet-v1b-stats-fl
+ DALI_DONT_USE_MMAP=0
+ BN_GROUP=1
+ LABELSMOOTHING=0.1
+ SEED=13946
+ NUMEPOCHS=37
+ EVAL_OFFSET=2
+ PROFILE=0
+ NETWORK=resnet-v1b-stats-fl
+ PROFILE_EXCEL=0
+ EVAL_PERIOD=4
+ BN_GROUP=1
+ PROFILE=0
+ DALI_PREFETCH_QUEUE=5
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_EXCEL=0
+ DALI_NVJPEG_MEMPADDING=256
+ PROFILE_ALL_LOCAL_RANKS=0
+ NODALI=0
+ DALI_THREADS=6
+ NUMEXAMPLES=
+ THR=0.759
+ DALI_CACHE_SIZE=0
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_ROI_DECODE=1
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ DALI_PREALLOCATE_WIDTH=5980
+ echo 'running benchmark'
+ DALI_PREALLOCATE_HEIGHT=6430
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
running benchmark
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ [[ 0 -ge 1 ]]
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679324311
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start_fmt='2023-03-20 09:58:31 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 09:58:31 AM'
STARTING TIMING RUN AT 2023-03-20 09:58:31 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=13946
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ date +%s
++ date +%s
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679324311
+ start=1679324311
+ start=1679324311
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start=1679324311
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 09:58:31 AM'
+ start_fmt='2023-03-20 09:58:31 AM'
STARTING TIMING RUN AT 2023-03-20 09:58:31 AM
+ echo 'STARTING TIMING RUN AT 2023-03-20 09:58:31 AM'
+ readonly global_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-20 09:58:31 AM'
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
STARTING TIMING RUN AT 2023-03-20 09:58:31 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ start_fmt='2023-03-20 09:58:31 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 09:58:31 AM'
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
STARTING TIMING RUN AT 2023-03-20 09:58:31 AM
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ readonly global_rank=0
+ global_rank=0
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=13946
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=13946
+ EVAL_OFFSET=2
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ SEED=13946
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
running benchmark
+ [[ 0 -ge 1 ]]
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-20 09:58:31 AM'
STARTING TIMING RUN AT 2023-03-20 09:58:31 AM
+ echo 'STARTING TIMING RUN AT 2023-03-20 09:58:31 AM'
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=13946
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
++ seq 0 3
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
++ seq 0 3
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ tr '\n' ,
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 13946 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node041:888095] MCW rank 1 is not bound (or bound to all available processors)
[node041:888091] MCW rank 0 is not bound (or bound to all available processors)
[node041:888089] MCW rank 3 is not bound (or bound to all available processors)
[node041:888092] MCW rank 2 is not bound (or bound to all available processors)
[node046:1060462] MCW rank 7 is not bound (or bound to all available processors)
[node046:1060461] MCW rank 6 is not bound (or bound to all available processors)
[node046:1060463] MCW rank 5 is not bound (or bound to all available processors)
[node046:1060460] MCW rank 4 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679324316963, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[09:58:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:58:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:58:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679324324051, "event_type": "POINT_IN_TIME", "key": "seed", "value": 13946, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[09:58:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:58:45] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:58:45] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:58:45] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:58:45] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679324326590, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 408, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[09:58:50] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:58:51] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:58:51] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:58:51] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679324331030, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331031, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331031, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331031, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331032, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331032, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331032, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331032, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331032, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331033, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331033, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331033, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331033, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331033, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331034, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331034, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331034, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331034, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331034, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331035, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331035, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331035, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331035, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331036, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331036, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331036, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331036, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331036, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331036, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331037, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331037, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331037, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331037, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331037, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331038, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331038, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331038, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331038, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331038, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331039, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331039, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331039, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331039, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331039, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331040, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331040, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331040, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331040, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331040, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331041, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331041, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331041, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331041, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331041, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331042, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331043, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331044, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331045, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331046, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331047, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331048, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331049, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331049, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331049, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331049, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331049, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331049, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331050, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331050, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331050, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331050, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331050, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331051, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331051, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331051, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331051, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331051, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331052, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331052, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331052, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331052, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331052, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331053, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331053, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331053, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331053, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331053, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331054, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331054, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331054, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331054, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331054, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331055, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331055, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331055, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331055, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331055, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331056, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331056, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331056, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331056, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331057, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331057, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331057, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331057, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331058, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331058, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331058, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331058, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331058, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331059, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331059, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331059, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331059, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331059, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331059, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331060, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331060, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331060, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331060, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331060, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331061, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331061, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331061, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331061, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331061, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331062, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331062, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331062, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331062, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331062, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331063, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679324331063, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[09:58:51] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:58:51] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:58:51] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:58:51] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 09:58:53,269 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=3327, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 09:58:53,270 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=35082, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 09:58:53,270 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=2948, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 09:58:53,270 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=13388, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679324333270, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679324333272, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679324333272, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679324333272, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679324333272, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 408, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679324333272, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679324333272, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679324333272, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679324333272, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679324333272, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679324333272, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679324333272, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679324333272, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679324333273, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679324333273, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679324333273, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679324333273, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679324333273, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 12.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679324333273, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679324333273, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 09:58:53,273 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=4312, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 09:58:53,273 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=54891, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 09:58:53,273 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=8734, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 09:58:53,274 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=13217, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679324420427, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679324420428, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679324420429, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679324420973, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679324421096, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679324421097, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-20 10:00:24,343 Node[0] Epoch[0] Batch [0-20]	Speed: 20187.45 samples/sec	accuracy=nan
2023-03-20 10:00:27,438 Node[0] Epoch[0] Batch [20-40]	Speed: 21093.07 samples/sec	accuracy=nan
2023-03-20 10:00:30,533 Node[0] Epoch[0] Batch [40-60]	Speed: 21094.46 samples/sec	accuracy=nan
2023-03-20 10:00:33,633 Node[0] Epoch[0] Batch [60-80]	Speed: 21055.56 samples/sec	accuracy=nan
2023-03-20 10:00:36,734 Node[0] Epoch[0] Batch [80-100]	Speed: 21048.68 samples/sec	accuracy=nan
2023-03-20 10:00:39,836 Node[0] Epoch[0] Batch [100-120]	Speed: 21044.24 samples/sec	accuracy=nan
2023-03-20 10:00:42,937 Node[0] Epoch[0] Batch [120-140]	Speed: 21052.96 samples/sec	accuracy=nan
2023-03-20 10:00:46,036 Node[0] Epoch[0] Batch [140-160]	Speed: 21068.24 samples/sec	accuracy=nan
2023-03-20 10:00:49,150 Node[0] Epoch[0] Batch [160-180]	Speed: 20961.34 samples/sec	accuracy=nan
2023-03-20 10:00:52,257 Node[0] Epoch[0] Batch [180-200]	Speed: 21011.03 samples/sec	accuracy=nan
2023-03-20 10:00:57,614 Node[0] Epoch[0] Batch [200-220]	Speed: 12185.54 samples/sec	accuracy=nan
2023-03-20 10:01:04,627 Node[0] Epoch[0] Batch [220-240]	Speed: 9308.56 samples/sec	accuracy=nan
2023-03-20 10:01:12,476 Node[0] Epoch[0] Batch [240-260]	Speed: 8316.99 samples/sec	accuracy=nan
2023-03-20 10:01:17,825 Node[0] Epoch[0] Batch [260-280]	Speed: 12205.05 samples/sec	accuracy=nan
2023-03-20 10:01:20,926 Node[0] Epoch[0] Batch [280-300]	Speed: 21050.23 samples/sec	accuracy=nan
2023-03-20 10:01:24,035 Node[0] Epoch[0] Batch [300-320]	Speed: 20997.63 samples/sec	accuracy=nan
2023-03-20 10:01:27,141 Node[0] Epoch[0] Batch [320-340]	Speed: 21015.84 samples/sec	accuracy=nan
2023-03-20 10:01:30,251 Node[0] Epoch[0] Batch [340-360]	Speed: 20987.93 samples/sec	accuracy=nan
2023-03-20 10:01:33,362 Node[0] Epoch[0] Batch [360-380]	Speed: 20985.06 samples/sec	accuracy=nan
2023-03-20 10:01:35,226 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:01:35,226 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:01:35,226 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:01:35,227 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324495226, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-20 10:01:35,227 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:01:35,227 Node[0] Epoch[0] Time cost=74.130
:::MLLOG {"namespace": "", "time_ms": 1679324495227, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 17282.63260273471}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-20 10:01:35,227 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324495228, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-20 10:01:35,228 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:01:35,228 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:01:38,493 Node[0] Epoch[1] Batch [0-20]	Speed: 20984.99 samples/sec	accuracy=nan
2023-03-20 10:01:41,606 Node[0] Epoch[1] Batch [20-40]	Speed: 20970.91 samples/sec	accuracy=nan
2023-03-20 10:01:44,718 Node[0] Epoch[1] Batch [40-60]	Speed: 20972.54 samples/sec	accuracy=nan
2023-03-20 10:01:47,832 Node[0] Epoch[1] Batch [60-80]	Speed: 20967.17 samples/sec	accuracy=nan
2023-03-20 10:01:50,949 Node[0] Epoch[1] Batch [80-100]	Speed: 20940.99 samples/sec	accuracy=nan
2023-03-20 10:01:54,064 Node[0] Epoch[1] Batch [100-120]	Speed: 20956.86 samples/sec	accuracy=nan
2023-03-20 10:01:57,183 Node[0] Epoch[1] Batch [120-140]	Speed: 20928.12 samples/sec	accuracy=nan
2023-03-20 10:02:00,297 Node[0] Epoch[1] Batch [140-160]	Speed: 20964.37 samples/sec	accuracy=nan
2023-03-20 10:02:03,414 Node[0] Epoch[1] Batch [160-180]	Speed: 20945.74 samples/sec	accuracy=nan
2023-03-20 10:02:06,537 Node[0] Epoch[1] Batch [180-200]	Speed: 20901.32 samples/sec	accuracy=nan
2023-03-20 10:02:09,656 Node[0] Epoch[1] Batch [200-220]	Speed: 20930.61 samples/sec	accuracy=nan
2023-03-20 10:02:12,776 Node[0] Epoch[1] Batch [220-240]	Speed: 20923.47 samples/sec	accuracy=nan
2023-03-20 10:02:15,895 Node[0] Epoch[1] Batch [240-260]	Speed: 20931.49 samples/sec	accuracy=nan
2023-03-20 10:02:19,011 Node[0] Epoch[1] Batch [260-280]	Speed: 20946.23 samples/sec	accuracy=nan
2023-03-20 10:02:22,126 Node[0] Epoch[1] Batch [280-300]	Speed: 20957.92 samples/sec	accuracy=nan
2023-03-20 10:02:25,250 Node[0] Epoch[1] Batch [300-320]	Speed: 20899.48 samples/sec	accuracy=nan
2023-03-20 10:02:28,364 Node[0] Epoch[1] Batch [320-340]	Speed: 20958.03 samples/sec	accuracy=nan
2023-03-20 10:02:31,477 Node[0] Epoch[1] Batch [340-360]	Speed: 20970.82 samples/sec	accuracy=nan
2023-03-20 10:02:34,589 Node[0] Epoch[1] Batch [360-380]	Speed: 20979.86 samples/sec	accuracy=nan
2023-03-20 10:02:36,455 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:02:36,455 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:02:36,455 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:02:36,455 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:02:36,456 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:02:36,455 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:02:36,455 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324556455, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-20 10:02:36,456 Node[0] Epoch[1] Time cost=61.228
:::MLLOG {"namespace": "", "time_ms": 1679324556456, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20924.44645898818}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679324556457, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-20 10:02:36,457 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:02:39,729 Node[0] Epoch[2] Batch [0-20]	Speed: 20946.05 samples/sec	accuracy=nan
2023-03-20 10:02:42,841 Node[0] Epoch[2] Batch [20-40]	Speed: 20977.08 samples/sec	accuracy=nan
2023-03-20 10:02:45,955 Node[0] Epoch[2] Batch [40-60]	Speed: 20962.05 samples/sec	accuracy=nan
2023-03-20 10:02:49,071 Node[0] Epoch[2] Batch [60-80]	Speed: 20949.66 samples/sec	accuracy=nan
2023-03-20 10:02:52,183 Node[0] Epoch[2] Batch [80-100]	Speed: 20973.91 samples/sec	accuracy=nan
2023-03-20 10:02:55,291 Node[0] Epoch[2] Batch [100-120]	Speed: 21008.20 samples/sec	accuracy=nan
2023-03-20 10:02:58,401 Node[0] Epoch[2] Batch [120-140]	Speed: 20985.67 samples/sec	accuracy=nan
2023-03-20 10:03:01,509 Node[0] Epoch[2] Batch [140-160]	Speed: 21005.65 samples/sec	accuracy=nan
2023-03-20 10:03:04,622 Node[0] Epoch[2] Batch [160-180]	Speed: 20970.83 samples/sec	accuracy=nan
2023-03-20 10:03:07,731 Node[0] Epoch[2] Batch [180-200]	Speed: 20999.34 samples/sec	accuracy=nan
2023-03-20 10:03:10,845 Node[0] Epoch[2] Batch [200-220]	Speed: 20958.31 samples/sec	accuracy=nan
2023-03-20 10:03:13,952 Node[0] Epoch[2] Batch [220-240]	Speed: 21012.98 samples/sec	accuracy=nan
2023-03-20 10:03:17,065 Node[0] Epoch[2] Batch [240-260]	Speed: 20974.50 samples/sec	accuracy=nan
2023-03-20 10:03:20,172 Node[0] Epoch[2] Batch [260-280]	Speed: 21009.74 samples/sec	accuracy=nan
2023-03-20 10:03:23,280 Node[0] Epoch[2] Batch [280-300]	Speed: 20998.23 samples/sec	accuracy=nan
2023-03-20 10:03:26,388 Node[0] Epoch[2] Batch [300-320]	Speed: 21004.92 samples/sec	accuracy=nan
2023-03-20 10:03:29,492 Node[0] Epoch[2] Batch [320-340]	Speed: 21030.48 samples/sec	accuracy=nan
2023-03-20 10:03:32,599 Node[0] Epoch[2] Batch [340-360]	Speed: 21010.44 samples/sec	accuracy=nan
2023-03-20 10:03:35,708 Node[0] Epoch[2] Batch [360-380]	Speed: 20998.14 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679324617417, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-20 10:03:37,418 Node[0] Epoch[2] Time cost=60.961
:::MLLOG {"namespace": "", "time_ms": 1679324617418, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21016.278510075208}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
2023-03-20 10:03:37,567 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:03:37,567 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:03:37,568 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:03:37,567 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324617568, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-20 10:03:37,568 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:03:37,568 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:03:37,568 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:03:37,568 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:03:38,724 Node[0] Epoch[2] Validation-accuracy=0.309600
2023-03-20 10:03:38,724 Node[0] Epoch[2] Validation-correct-count=1935.000000
2023-03-20 10:03:38,724 Node[0] Epoch[2] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679324619216, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-20 10:03:39,216 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:03:39,216 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324619216, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.3014, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679324619216, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1679324619216, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-20 10:03:39,216 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:03:39,216 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:03:39,216 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:03:39,216 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:03:39,216 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324619216, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-20 10:03:39,216 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:03:42,355 Node[0] Epoch[3] Batch [0-20]	Speed: 20834.94 samples/sec	accuracy=nan
2023-03-20 10:03:45,459 Node[0] Epoch[3] Batch [20-40]	Speed: 21035.32 samples/sec	accuracy=nan
2023-03-20 10:03:48,563 Node[0] Epoch[3] Batch [40-60]	Speed: 21029.86 samples/sec	accuracy=nan
2023-03-20 10:03:51,671 Node[0] Epoch[3] Batch [60-80]	Speed: 21004.53 samples/sec	accuracy=nan
2023-03-20 10:03:54,779 Node[0] Epoch[3] Batch [80-100]	Speed: 21001.25 samples/sec	accuracy=nan
2023-03-20 10:03:57,883 Node[0] Epoch[3] Batch [100-120]	Speed: 21031.20 samples/sec	accuracy=nan
2023-03-20 10:04:00,984 Node[0] Epoch[3] Batch [120-140]	Speed: 21049.55 samples/sec	accuracy=nan
2023-03-20 10:04:04,088 Node[0] Epoch[3] Batch [140-160]	Speed: 21033.98 samples/sec	accuracy=nan
2023-03-20 10:04:07,193 Node[0] Epoch[3] Batch [160-180]	Speed: 21026.54 samples/sec	accuracy=nan
2023-03-20 10:04:10,297 Node[0] Epoch[3] Batch [180-200]	Speed: 21028.12 samples/sec	accuracy=nan
2023-03-20 10:04:13,403 Node[0] Epoch[3] Batch [200-220]	Speed: 21019.19 samples/sec	accuracy=nan
2023-03-20 10:04:16,511 Node[0] Epoch[3] Batch [220-240]	Speed: 21003.02 samples/sec	accuracy=nan
2023-03-20 10:04:19,620 Node[0] Epoch[3] Batch [240-260]	Speed: 20997.46 samples/sec	accuracy=nan
2023-03-20 10:04:22,724 Node[0] Epoch[3] Batch [260-280]	Speed: 21029.91 samples/sec	accuracy=nan
2023-03-20 10:04:25,828 Node[0] Epoch[3] Batch [280-300]	Speed: 21032.49 samples/sec	accuracy=nan
2023-03-20 10:04:28,929 Node[0] Epoch[3] Batch [300-320]	Speed: 21049.97 samples/sec	accuracy=nan
2023-03-20 10:04:32,028 Node[0] Epoch[3] Batch [320-340]	Speed: 21063.19 samples/sec	accuracy=nan
2023-03-20 10:04:35,132 Node[0] Epoch[3] Batch [340-360]	Speed: 21035.04 samples/sec	accuracy=nan
2023-03-20 10:04:38,246 Node[0] Epoch[3] Batch [360-380]	Speed: 20960.28 samples/sec	accuracy=nan
2023-03-20 10:04:40,107 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:04:40,107 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:04:40,107 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:04:40,107 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:04:40,108 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:04:40,107 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:04:40,108 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324680107, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-20 10:04:40,108 Node[0] Epoch[3] Time cost=60.892
:::MLLOG {"namespace": "", "time_ms": 1679324680108, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21040.005240295042}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679324680109, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-20 10:04:40,109 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:04:43,371 Node[0] Epoch[4] Batch [0-20]	Speed: 21015.98 samples/sec	accuracy=nan
2023-03-20 10:04:46,472 Node[0] Epoch[4] Batch [20-40]	Speed: 21053.79 samples/sec	accuracy=nan
2023-03-20 10:04:49,575 Node[0] Epoch[4] Batch [40-60]	Speed: 21037.11 samples/sec	accuracy=nan
2023-03-20 10:04:52,672 Node[0] Epoch[4] Batch [60-80]	Speed: 21078.66 samples/sec	accuracy=nan
2023-03-20 10:04:55,771 Node[0] Epoch[4] Batch [80-100]	Speed: 21065.68 samples/sec	accuracy=nan
2023-03-20 10:04:58,873 Node[0] Epoch[4] Batch [100-120]	Speed: 21042.08 samples/sec	accuracy=nan
2023-03-20 10:05:01,974 Node[0] Epoch[4] Batch [120-140]	Speed: 21051.69 samples/sec	accuracy=nan
2023-03-20 10:05:05,076 Node[0] Epoch[4] Batch [140-160]	Speed: 21048.51 samples/sec	accuracy=nan
2023-03-20 10:05:08,185 Node[0] Epoch[4] Batch [160-180]	Speed: 20994.13 samples/sec	accuracy=nan
2023-03-20 10:05:11,288 Node[0] Epoch[4] Batch [180-200]	Speed: 21036.51 samples/sec	accuracy=nan
2023-03-20 10:05:14,389 Node[0] Epoch[4] Batch [200-220]	Speed: 21053.22 samples/sec	accuracy=nan
2023-03-20 10:05:17,489 Node[0] Epoch[4] Batch [220-240]	Speed: 21059.43 samples/sec	accuracy=nan
2023-03-20 10:05:20,586 Node[0] Epoch[4] Batch [240-260]	Speed: 21074.54 samples/sec	accuracy=nan
2023-03-20 10:05:23,684 Node[0] Epoch[4] Batch [260-280]	Speed: 21071.14 samples/sec	accuracy=nan
2023-03-20 10:05:26,785 Node[0] Epoch[4] Batch [280-300]	Speed: 21050.29 samples/sec	accuracy=nan
2023-03-20 10:05:29,889 Node[0] Epoch[4] Batch [300-320]	Speed: 21034.05 samples/sec	accuracy=nan
2023-03-20 10:05:32,989 Node[0] Epoch[4] Batch [320-340]	Speed: 21058.24 samples/sec	accuracy=nan
2023-03-20 10:05:36,089 Node[0] Epoch[4] Batch [340-360]	Speed: 21058.88 samples/sec	accuracy=nan
2023-03-20 10:05:39,190 Node[0] Epoch[4] Batch [360-380]	Speed: 21052.11 samples/sec	accuracy=nan
2023-03-20 10:05:40,895 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:05:40,895 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:05:40,894 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:05:40,895 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:05:40,895 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:05:40,895 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:05:40,895 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324740895, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-20 10:05:40,896 Node[0] Epoch[4] Time cost=60.787
:::MLLOG {"namespace": "", "time_ms": 1679324740896, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21076.20267757085}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1679324740897, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-20 10:05:40,897 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:05:44,156 Node[0] Epoch[5] Batch [0-20]	Speed: 21054.47 samples/sec	accuracy=nan
2023-03-20 10:05:47,259 Node[0] Epoch[5] Batch [20-40]	Speed: 21038.71 samples/sec	accuracy=nan
2023-03-20 10:05:50,360 Node[0] Epoch[5] Batch [40-60]	Speed: 21049.42 samples/sec	accuracy=nan
2023-03-20 10:05:53,458 Node[0] Epoch[5] Batch [60-80]	Speed: 21070.99 samples/sec	accuracy=nan
2023-03-20 10:05:56,563 Node[0] Epoch[5] Batch [80-100]	Speed: 21027.07 samples/sec	accuracy=nan
2023-03-20 10:05:59,665 Node[0] Epoch[5] Batch [100-120]	Speed: 21046.88 samples/sec	accuracy=nan
2023-03-20 10:06:02,762 Node[0] Epoch[5] Batch [120-140]	Speed: 21073.94 samples/sec	accuracy=nan
2023-03-20 10:06:05,857 Node[0] Epoch[5] Batch [140-160]	Speed: 21096.19 samples/sec	accuracy=nan
2023-03-20 10:06:08,953 Node[0] Epoch[5] Batch [160-180]	Speed: 21085.36 samples/sec	accuracy=nan
2023-03-20 10:06:12,052 Node[0] Epoch[5] Batch [180-200]	Speed: 21061.18 samples/sec	accuracy=nan
2023-03-20 10:06:15,156 Node[0] Epoch[5] Batch [200-220]	Speed: 21029.85 samples/sec	accuracy=nan
2023-03-20 10:06:18,260 Node[0] Epoch[5] Batch [220-240]	Speed: 21032.73 samples/sec	accuracy=nan
2023-03-20 10:06:21,366 Node[0] Epoch[5] Batch [240-260]	Speed: 21020.07 samples/sec	accuracy=nan
2023-03-20 10:06:24,472 Node[0] Epoch[5] Batch [260-280]	Speed: 21012.49 samples/sec	accuracy=nan
2023-03-20 10:06:27,573 Node[0] Epoch[5] Batch [280-300]	Speed: 21054.36 samples/sec	accuracy=nan
2023-03-20 10:06:30,671 Node[0] Epoch[5] Batch [300-320]	Speed: 21070.02 samples/sec	accuracy=nan
2023-03-20 10:06:33,770 Node[0] Epoch[5] Batch [320-340]	Speed: 21067.49 samples/sec	accuracy=nan
2023-03-20 10:06:36,868 Node[0] Epoch[5] Batch [340-360]	Speed: 21068.34 samples/sec	accuracy=nan
2023-03-20 10:06:39,967 Node[0] Epoch[5] Batch [360-380]	Speed: 21064.83 samples/sec	accuracy=nan
2023-03-20 10:06:41,823 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:06:41,823 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:06:41,824 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:06:41,824 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:06:41,824 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:06:41,824 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324801824, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-20 10:06:41,825 Node[0] Epoch[5] Time cost=60.928
:::MLLOG {"namespace": "", "time_ms": 1679324801825, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21027.528573526728}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
2023-03-20 10:06:41,825 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324801825, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-20 10:06:41,825 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:06:45,079 Node[0] Epoch[6] Batch [0-20]	Speed: 21061.03 samples/sec	accuracy=nan
2023-03-20 10:06:48,176 Node[0] Epoch[6] Batch [20-40]	Speed: 21081.59 samples/sec	accuracy=nan
2023-03-20 10:06:51,273 Node[0] Epoch[6] Batch [40-60]	Speed: 21073.22 samples/sec	accuracy=nan
2023-03-20 10:06:54,374 Node[0] Epoch[6] Batch [60-80]	Speed: 21056.12 samples/sec	accuracy=nan
2023-03-20 10:06:57,474 Node[0] Epoch[6] Batch [80-100]	Speed: 21055.28 samples/sec	accuracy=nan
2023-03-20 10:07:00,573 Node[0] Epoch[6] Batch [100-120]	Speed: 21067.89 samples/sec	accuracy=nan
2023-03-20 10:07:03,670 Node[0] Epoch[6] Batch [120-140]	Speed: 21077.46 samples/sec	accuracy=nan
2023-03-20 10:07:06,767 Node[0] Epoch[6] Batch [140-160]	Speed: 21077.09 samples/sec	accuracy=nan
2023-03-20 10:07:09,865 Node[0] Epoch[6] Batch [160-180]	Speed: 21069.47 samples/sec	accuracy=nan
2023-03-20 10:07:12,966 Node[0] Epoch[6] Batch [180-200]	Speed: 21051.97 samples/sec	accuracy=nan
2023-03-20 10:07:16,061 Node[0] Epoch[6] Batch [200-220]	Speed: 21091.46 samples/sec	accuracy=nan
2023-03-20 10:07:19,159 Node[0] Epoch[6] Batch [220-240]	Speed: 21070.09 samples/sec	accuracy=nan
2023-03-20 10:07:22,255 Node[0] Epoch[6] Batch [240-260]	Speed: 21091.35 samples/sec	accuracy=nan
2023-03-20 10:07:25,353 Node[0] Epoch[6] Batch [260-280]	Speed: 21069.33 samples/sec	accuracy=nan
2023-03-20 10:07:28,449 Node[0] Epoch[6] Batch [280-300]	Speed: 21084.06 samples/sec	accuracy=nan
2023-03-20 10:07:31,549 Node[0] Epoch[6] Batch [300-320]	Speed: 21058.43 samples/sec	accuracy=nan
2023-03-20 10:07:34,645 Node[0] Epoch[6] Batch [320-340]	Speed: 21085.00 samples/sec	accuracy=nan
2023-03-20 10:07:37,745 Node[0] Epoch[6] Batch [340-360]	Speed: 21056.95 samples/sec	accuracy=nan
2023-03-20 10:07:40,846 Node[0] Epoch[6] Batch [360-380]	Speed: 21051.43 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679324862547, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-20 10:07:42,548 Node[0] Epoch[6] Time cost=60.723
:::MLLOG {"namespace": "", "time_ms": 1679324862549, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21098.47550772695}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679324862698, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-20 10:07:43,889 Node[0] Epoch[6] Validation-accuracy=0.410240
2023-03-20 10:07:43,889 Node[0] Epoch[6] Validation-correct-count=2564.000000
2023-03-20 10:07:43,889 Node[0] Epoch[6] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679324864367, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679324864367, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.4034, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
2023-03-20 10:07:44,367 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324864367, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
2023-03-20 10:07:44,367 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:07:44,367 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324864368, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-20 10:07:44,367 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:07:44,367 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324864368, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-20 10:07:44,368 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:07:44,368 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:07:44,368 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:07:47,493 Node[0] Epoch[7] Batch [0-20]	Speed: 20942.54 samples/sec	accuracy=nan
2023-03-20 10:07:50,597 Node[0] Epoch[7] Batch [20-40]	Speed: 21034.15 samples/sec	accuracy=nan
2023-03-20 10:07:53,694 Node[0] Epoch[7] Batch [40-60]	Speed: 21076.35 samples/sec	accuracy=nan
2023-03-20 10:07:56,793 Node[0] Epoch[7] Batch [60-80]	Speed: 21064.57 samples/sec	accuracy=nan
2023-03-20 10:07:59,894 Node[0] Epoch[7] Batch [80-100]	Speed: 21048.92 samples/sec	accuracy=nan
2023-03-20 10:08:02,994 Node[0] Epoch[7] Batch [100-120]	Speed: 21058.33 samples/sec	accuracy=nan
2023-03-20 10:08:06,092 Node[0] Epoch[7] Batch [120-140]	Speed: 21072.30 samples/sec	accuracy=nan
2023-03-20 10:08:09,197 Node[0] Epoch[7] Batch [140-160]	Speed: 21027.30 samples/sec	accuracy=nan
2023-03-20 10:08:12,299 Node[0] Epoch[7] Batch [160-180]	Speed: 21043.48 samples/sec	accuracy=nan
2023-03-20 10:08:15,399 Node[0] Epoch[7] Batch [180-200]	Speed: 21054.31 samples/sec	accuracy=nan
2023-03-20 10:08:18,498 Node[0] Epoch[7] Batch [200-220]	Speed: 21063.89 samples/sec	accuracy=nan
2023-03-20 10:08:21,598 Node[0] Epoch[7] Batch [220-240]	Speed: 21058.05 samples/sec	accuracy=nan
2023-03-20 10:08:24,702 Node[0] Epoch[7] Batch [240-260]	Speed: 21035.06 samples/sec	accuracy=nan
2023-03-20 10:08:27,796 Node[0] Epoch[7] Batch [260-280]	Speed: 21097.66 samples/sec	accuracy=nan
2023-03-20 10:08:30,892 Node[0] Epoch[7] Batch [280-300]	Speed: 21082.48 samples/sec	accuracy=nan
2023-03-20 10:08:33,987 Node[0] Epoch[7] Batch [300-320]	Speed: 21092.44 samples/sec	accuracy=nan
2023-03-20 10:08:37,079 Node[0] Epoch[7] Batch [320-340]	Speed: 21115.36 samples/sec	accuracy=nan
2023-03-20 10:08:40,179 Node[0] Epoch[7] Batch [340-360]	Speed: 21058.74 samples/sec	accuracy=nan
2023-03-20 10:08:43,275 Node[0] Epoch[7] Batch [360-380]	Speed: 21084.19 samples/sec	accuracy=nan
2023-03-20 10:08:45,129 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:08:45,130 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:08:45,130 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:08:45,130 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:08:45,130 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:08:45,130 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:08:45,131 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324925130, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-20 10:08:45,132 Node[0] Epoch[7] Time cost=60.764
:::MLLOG {"namespace": "", "time_ms": 1679324925132, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21084.33148465753}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679324925132, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-20 10:08:45,132 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:08:48,386 Node[0] Epoch[8] Batch [0-20]	Speed: 21061.26 samples/sec	accuracy=nan
2023-03-20 10:08:51,492 Node[0] Epoch[8] Batch [20-40]	Speed: 21020.90 samples/sec	accuracy=nan
2023-03-20 10:08:54,596 Node[0] Epoch[8] Batch [40-60]	Speed: 21028.36 samples/sec	accuracy=nan
2023-03-20 10:08:57,697 Node[0] Epoch[8] Batch [60-80]	Speed: 21049.90 samples/sec	accuracy=nan
2023-03-20 10:09:00,800 Node[0] Epoch[8] Batch [80-100]	Speed: 21035.18 samples/sec	accuracy=nan
2023-03-20 10:09:03,904 Node[0] Epoch[8] Batch [100-120]	Speed: 21034.14 samples/sec	accuracy=nan
2023-03-20 10:09:07,004 Node[0] Epoch[8] Batch [120-140]	Speed: 21056.55 samples/sec	accuracy=nan
2023-03-20 10:09:10,108 Node[0] Epoch[8] Batch [140-160]	Speed: 21030.48 samples/sec	accuracy=nan
2023-03-20 10:09:13,211 Node[0] Epoch[8] Batch [160-180]	Speed: 21040.76 samples/sec	accuracy=nan
2023-03-20 10:09:16,312 Node[0] Epoch[8] Batch [180-200]	Speed: 21048.36 samples/sec	accuracy=nan
2023-03-20 10:09:19,411 Node[0] Epoch[8] Batch [200-220]	Speed: 21068.24 samples/sec	accuracy=nan
2023-03-20 10:09:22,506 Node[0] Epoch[8] Batch [220-240]	Speed: 21091.80 samples/sec	accuracy=nan
2023-03-20 10:09:25,603 Node[0] Epoch[8] Batch [240-260]	Speed: 21080.45 samples/sec	accuracy=nan
2023-03-20 10:09:28,703 Node[0] Epoch[8] Batch [260-280]	Speed: 21054.54 samples/sec	accuracy=nan
2023-03-20 10:09:31,803 Node[0] Epoch[8] Batch [280-300]	Speed: 21059.98 samples/sec	accuracy=nan
2023-03-20 10:09:34,900 Node[0] Epoch[8] Batch [300-320]	Speed: 21075.06 samples/sec	accuracy=nan
2023-03-20 10:09:37,994 Node[0] Epoch[8] Batch [320-340]	Speed: 21097.72 samples/sec	accuracy=nan
2023-03-20 10:09:41,095 Node[0] Epoch[8] Batch [340-360]	Speed: 21056.29 samples/sec	accuracy=nan
2023-03-20 10:09:44,192 Node[0] Epoch[8] Batch [360-380]	Speed: 21078.36 samples/sec	accuracy=nan
2023-03-20 10:09:45,893 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:09:45,894 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:09:45,894 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:09:45,894 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:09:45,894 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:09:45,895 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:09:45,895 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324985894, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-20 10:09:45,896 Node[0] Epoch[8] Time cost=60.763
:::MLLOG {"namespace": "", "time_ms": 1679324985896, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21084.537066450943}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679324985896, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-20 10:09:45,896 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:09:49,150 Node[0] Epoch[9] Batch [0-20]	Speed: 21082.32 samples/sec	accuracy=nan
2023-03-20 10:09:52,246 Node[0] Epoch[9] Batch [20-40]	Speed: 21082.17 samples/sec	accuracy=nan
2023-03-20 10:09:55,342 Node[0] Epoch[9] Batch [40-60]	Speed: 21091.00 samples/sec	accuracy=nan
2023-03-20 10:09:58,439 Node[0] Epoch[9] Batch [60-80]	Speed: 21072.47 samples/sec	accuracy=nan
2023-03-20 10:10:01,537 Node[0] Epoch[9] Batch [80-100]	Speed: 21076.47 samples/sec	accuracy=nan
2023-03-20 10:10:04,633 Node[0] Epoch[9] Batch [100-120]	Speed: 21082.15 samples/sec	accuracy=nan
2023-03-20 10:10:07,734 Node[0] Epoch[9] Batch [120-140]	Speed: 21054.07 samples/sec	accuracy=nan
2023-03-20 10:10:10,836 Node[0] Epoch[9] Batch [140-160]	Speed: 21039.90 samples/sec	accuracy=nan
2023-03-20 10:10:13,935 Node[0] Epoch[9] Batch [160-180]	Speed: 21068.61 samples/sec	accuracy=nan
2023-03-20 10:10:17,038 Node[0] Epoch[9] Batch [180-200]	Speed: 21035.06 samples/sec	accuracy=nan
2023-03-20 10:10:20,134 Node[0] Epoch[9] Batch [200-220]	Speed: 21088.43 samples/sec	accuracy=nan
2023-03-20 10:10:23,234 Node[0] Epoch[9] Batch [220-240]	Speed: 21056.75 samples/sec	accuracy=nan
2023-03-20 10:10:26,332 Node[0] Epoch[9] Batch [240-260]	Speed: 21073.08 samples/sec	accuracy=nan
2023-03-20 10:10:29,430 Node[0] Epoch[9] Batch [260-280]	Speed: 21071.60 samples/sec	accuracy=nan
2023-03-20 10:10:32,529 Node[0] Epoch[9] Batch [280-300]	Speed: 21065.80 samples/sec	accuracy=nan
2023-03-20 10:10:35,625 Node[0] Epoch[9] Batch [300-320]	Speed: 21082.10 samples/sec	accuracy=nan
2023-03-20 10:10:38,726 Node[0] Epoch[9] Batch [320-340]	Speed: 21051.35 samples/sec	accuracy=nan
2023-03-20 10:10:41,822 Node[0] Epoch[9] Batch [340-360]	Speed: 21089.12 samples/sec	accuracy=nan
2023-03-20 10:10:44,924 Node[0] Epoch[9] Batch [360-380]	Speed: 21044.16 samples/sec	accuracy=nan
2023-03-20 10:10:46,779 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:10:46,780 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:10:46,780 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:10:46,780 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:10:46,780 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:10:46,780 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:10:46,781 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325046781, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-20 10:10:46,782 Node[0] Epoch[9] Time cost=60.886
:::MLLOG {"namespace": "", "time_ms": 1679325046782, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21042.046752366477}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1679325046783, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-20 10:10:46,783 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:10:50,033 Node[0] Epoch[10] Batch [0-20]	Speed: 21078.28 samples/sec	accuracy=nan
2023-03-20 10:10:53,132 Node[0] Epoch[10] Batch [20-40]	Speed: 21067.46 samples/sec	accuracy=nan
2023-03-20 10:10:56,229 Node[0] Epoch[10] Batch [40-60]	Speed: 21073.66 samples/sec	accuracy=nan
2023-03-20 10:10:59,326 Node[0] Epoch[10] Batch [60-80]	Speed: 21078.59 samples/sec	accuracy=nan
2023-03-20 10:11:02,423 Node[0] Epoch[10] Batch [80-100]	Speed: 21084.07 samples/sec	accuracy=nan
2023-03-20 10:11:05,522 Node[0] Epoch[10] Batch [100-120]	Speed: 21060.43 samples/sec	accuracy=nan
2023-03-20 10:11:08,618 Node[0] Epoch[10] Batch [120-140]	Speed: 21085.31 samples/sec	accuracy=nan
2023-03-20 10:11:11,722 Node[0] Epoch[10] Batch [140-160]	Speed: 21031.70 samples/sec	accuracy=nan
2023-03-20 10:11:14,821 Node[0] Epoch[10] Batch [160-180]	Speed: 21063.80 samples/sec	accuracy=nan
2023-03-20 10:11:17,926 Node[0] Epoch[10] Batch [180-200]	Speed: 21026.79 samples/sec	accuracy=nan
2023-03-20 10:11:21,027 Node[0] Epoch[10] Batch [200-220]	Speed: 21051.73 samples/sec	accuracy=nan
2023-03-20 10:11:24,125 Node[0] Epoch[10] Batch [220-240]	Speed: 21067.36 samples/sec	accuracy=nan
2023-03-20 10:11:27,225 Node[0] Epoch[10] Batch [240-260]	Speed: 21062.88 samples/sec	accuracy=nan
2023-03-20 10:11:30,328 Node[0] Epoch[10] Batch [260-280]	Speed: 21038.43 samples/sec	accuracy=nan
2023-03-20 10:11:33,426 Node[0] Epoch[10] Batch [280-300]	Speed: 21070.50 samples/sec	accuracy=nan
2023-03-20 10:11:36,527 Node[0] Epoch[10] Batch [300-320]	Speed: 21048.10 samples/sec	accuracy=nan
2023-03-20 10:11:39,630 Node[0] Epoch[10] Batch [320-340]	Speed: 21038.69 samples/sec	accuracy=nan
2023-03-20 10:11:42,730 Node[0] Epoch[10] Batch [340-360]	Speed: 21061.07 samples/sec	accuracy=nan
2023-03-20 10:11:45,828 Node[0] Epoch[10] Batch [360-380]	Speed: 21073.00 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679325107530, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-20 10:11:47,531 Node[0] Epoch[10] Time cost=60.749
:::MLLOG {"namespace": "", "time_ms": 1679325107531, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21089.587281509223}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679325107682, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-20 10:11:48,946 Node[0] Epoch[10] Validation-accuracy=0.509280
2023-03-20 10:11:48,946 Node[0] Epoch[10] Validation-correct-count=3183.000000
2023-03-20 10:11:48,946 Node[0] Epoch[10] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679325109324, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679325109324, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.51094, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
2023-03-20 10:11:49,324 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:11:49,324 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:11:49,324 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325109324, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679325109324, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-20 10:11:49,324 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:11:49,324 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325109324, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-20 10:11:49,324 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:11:49,325 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:11:49,324 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:11:52,450 Node[0] Epoch[11] Batch [0-20]	Speed: 20939.83 samples/sec	accuracy=nan
2023-03-20 10:11:55,551 Node[0] Epoch[11] Batch [20-40]	Speed: 21054.28 samples/sec	accuracy=nan
2023-03-20 10:11:58,656 Node[0] Epoch[11] Batch [40-60]	Speed: 21023.38 samples/sec	accuracy=nan
2023-03-20 10:12:01,759 Node[0] Epoch[11] Batch [60-80]	Speed: 21037.61 samples/sec	accuracy=nan
2023-03-20 10:12:04,862 Node[0] Epoch[11] Batch [80-100]	Speed: 21036.82 samples/sec	accuracy=nan
2023-03-20 10:12:07,963 Node[0] Epoch[11] Batch [100-120]	Speed: 21054.40 samples/sec	accuracy=nan
2023-03-20 10:12:11,060 Node[0] Epoch[11] Batch [120-140]	Speed: 21076.20 samples/sec	accuracy=nan
2023-03-20 10:12:14,160 Node[0] Epoch[11] Batch [140-160]	Speed: 21061.33 samples/sec	accuracy=nan
2023-03-20 10:12:17,258 Node[0] Epoch[11] Batch [160-180]	Speed: 21067.89 samples/sec	accuracy=nan
2023-03-20 10:12:20,363 Node[0] Epoch[11] Batch [180-200]	Speed: 21026.87 samples/sec	accuracy=nan
2023-03-20 10:12:23,465 Node[0] Epoch[11] Batch [200-220]	Speed: 21045.16 samples/sec	accuracy=nan
2023-03-20 10:12:26,566 Node[0] Epoch[11] Batch [220-240]	Speed: 21049.96 samples/sec	accuracy=nan
2023-03-20 10:12:29,667 Node[0] Epoch[11] Batch [240-260]	Speed: 21050.65 samples/sec	accuracy=nan
2023-03-20 10:12:32,766 Node[0] Epoch[11] Batch [260-280]	Speed: 21066.67 samples/sec	accuracy=nan
2023-03-20 10:12:35,866 Node[0] Epoch[11] Batch [280-300]	Speed: 21056.14 samples/sec	accuracy=nan
2023-03-20 10:12:38,967 Node[0] Epoch[11] Batch [300-320]	Speed: 21052.00 samples/sec	accuracy=nan
2023-03-20 10:12:42,067 Node[0] Epoch[11] Batch [320-340]	Speed: 21054.93 samples/sec	accuracy=nan
2023-03-20 10:12:45,165 Node[0] Epoch[11] Batch [340-360]	Speed: 21074.58 samples/sec	accuracy=nan
2023-03-20 10:12:48,265 Node[0] Epoch[11] Batch [360-380]	Speed: 21058.01 samples/sec	accuracy=nan
2023-03-20 10:12:50,123 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:12:50,124 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:12:50,124 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:12:50,124 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:12:50,124 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:12:50,124 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:12:50,124 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325170125, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-20 10:12:50,126 Node[0] Epoch[11] Time cost=60.802
:::MLLOG {"namespace": "", "time_ms": 1679325170126, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21071.205140068498}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679325170127, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-20 10:12:50,127 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:12:53,382 Node[0] Epoch[12] Batch [0-20]	Speed: 21043.72 samples/sec	accuracy=nan
2023-03-20 10:12:56,489 Node[0] Epoch[12] Batch [20-40]	Speed: 21015.72 samples/sec	accuracy=nan
2023-03-20 10:12:59,586 Node[0] Epoch[12] Batch [40-60]	Speed: 21072.56 samples/sec	accuracy=nan
2023-03-20 10:13:02,689 Node[0] Epoch[12] Batch [60-80]	Speed: 21043.50 samples/sec	accuracy=nan
2023-03-20 10:13:05,790 Node[0] Epoch[12] Batch [80-100]	Speed: 21051.85 samples/sec	accuracy=nan
2023-03-20 10:13:08,894 Node[0] Epoch[12] Batch [100-120]	Speed: 21026.36 samples/sec	accuracy=nan
2023-03-20 10:13:11,995 Node[0] Epoch[12] Batch [120-140]	Speed: 21050.75 samples/sec	accuracy=nan
2023-03-20 10:13:15,092 Node[0] Epoch[12] Batch [140-160]	Speed: 21081.71 samples/sec	accuracy=nan
2023-03-20 10:13:18,193 Node[0] Epoch[12] Batch [160-180]	Speed: 21052.40 samples/sec	accuracy=nan
2023-03-20 10:13:21,291 Node[0] Epoch[12] Batch [180-200]	Speed: 21071.68 samples/sec	accuracy=nan
2023-03-20 10:13:24,392 Node[0] Epoch[12] Batch [200-220]	Speed: 21046.57 samples/sec	accuracy=nan
2023-03-20 10:13:27,494 Node[0] Epoch[12] Batch [220-240]	Speed: 21048.11 samples/sec	accuracy=nan
2023-03-20 10:13:30,593 Node[0] Epoch[12] Batch [240-260]	Speed: 21061.62 samples/sec	accuracy=nan
2023-03-20 10:13:33,696 Node[0] Epoch[12] Batch [260-280]	Speed: 21037.56 samples/sec	accuracy=nan
2023-03-20 10:13:36,795 Node[0] Epoch[12] Batch [280-300]	Speed: 21066.90 samples/sec	accuracy=nan
2023-03-20 10:13:39,902 Node[0] Epoch[12] Batch [300-320]	Speed: 21010.20 samples/sec	accuracy=nan
2023-03-20 10:13:43,003 Node[0] Epoch[12] Batch [320-340]	Speed: 21053.86 samples/sec	accuracy=nan
2023-03-20 10:13:46,103 Node[0] Epoch[12] Batch [340-360]	Speed: 21057.23 samples/sec	accuracy=nan
2023-03-20 10:13:49,201 Node[0] Epoch[12] Batch [360-380]	Speed: 21073.42 samples/sec	accuracy=nan
2023-03-20 10:13:50,901 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:13:50,902 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:13:50,902 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:13:50,902 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:13:50,902 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:13:50,902 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:13:50,902 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325230902, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-20 10:13:50,903 Node[0] Epoch[12] Time cost=60.777
:::MLLOG {"namespace": "", "time_ms": 1679325230903, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21079.97285342698}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1679325230904, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-20 10:13:50,904 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:13:54,158 Node[0] Epoch[13] Batch [0-20]	Speed: 21083.57 samples/sec	accuracy=nan
2023-03-20 10:13:57,261 Node[0] Epoch[13] Batch [20-40]	Speed: 21038.87 samples/sec	accuracy=nan
2023-03-20 10:14:00,358 Node[0] Epoch[13] Batch [40-60]	Speed: 21081.34 samples/sec	accuracy=nan
2023-03-20 10:14:03,460 Node[0] Epoch[13] Batch [60-80]	Speed: 21043.52 samples/sec	accuracy=nan
2023-03-20 10:14:06,558 Node[0] Epoch[13] Batch [80-100]	Speed: 21073.86 samples/sec	accuracy=nan
2023-03-20 10:14:09,663 Node[0] Epoch[13] Batch [100-120]	Speed: 21023.75 samples/sec	accuracy=nan
2023-03-20 10:14:12,766 Node[0] Epoch[13] Batch [120-140]	Speed: 21037.25 samples/sec	accuracy=nan
2023-03-20 10:14:15,869 Node[0] Epoch[13] Batch [140-160]	Speed: 21037.99 samples/sec	accuracy=nan
2023-03-20 10:14:18,974 Node[0] Epoch[13] Batch [160-180]	Speed: 21024.98 samples/sec	accuracy=nan
2023-03-20 10:14:22,077 Node[0] Epoch[13] Batch [180-200]	Speed: 21032.26 samples/sec	accuracy=nan
2023-03-20 10:14:25,181 Node[0] Epoch[13] Batch [200-220]	Speed: 21032.24 samples/sec	accuracy=nan
2023-03-20 10:14:28,283 Node[0] Epoch[13] Batch [220-240]	Speed: 21043.42 samples/sec	accuracy=nan
2023-03-20 10:14:31,388 Node[0] Epoch[13] Batch [240-260]	Speed: 21029.43 samples/sec	accuracy=nan
2023-03-20 10:14:34,488 Node[0] Epoch[13] Batch [260-280]	Speed: 21052.94 samples/sec	accuracy=nan
2023-03-20 10:14:37,587 Node[0] Epoch[13] Batch [280-300]	Speed: 21064.55 samples/sec	accuracy=nan
2023-03-20 10:14:40,692 Node[0] Epoch[13] Batch [300-320]	Speed: 21024.46 samples/sec	accuracy=nan
2023-03-20 10:14:43,794 Node[0] Epoch[13] Batch [320-340]	Speed: 21044.60 samples/sec	accuracy=nan
2023-03-20 10:14:46,896 Node[0] Epoch[13] Batch [340-360]	Speed: 21048.82 samples/sec	accuracy=nan
2023-03-20 10:14:49,995 Node[0] Epoch[13] Batch [360-380]	Speed: 21060.07 samples/sec	accuracy=nan
2023-03-20 10:14:51,856 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:14:51,857 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:14:51,856 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:14:51,857 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:14:51,857 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:14:51,857 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:14:51,857 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325291857, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-20 10:14:51,858 Node[0] Epoch[13] Time cost=60.954
:::MLLOG {"namespace": "", "time_ms": 1679325291858, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21018.550546325267}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679325291858, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-20 10:14:51,858 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:14:55,113 Node[0] Epoch[14] Batch [0-20]	Speed: 21054.98 samples/sec	accuracy=nan
2023-03-20 10:14:58,212 Node[0] Epoch[14] Batch [20-40]	Speed: 21063.23 samples/sec	accuracy=nan
2023-03-20 10:15:01,313 Node[0] Epoch[14] Batch [40-60]	Speed: 21053.50 samples/sec	accuracy=nan
2023-03-20 10:15:04,413 Node[0] Epoch[14] Batch [60-80]	Speed: 21058.00 samples/sec	accuracy=nan
2023-03-20 10:15:07,516 Node[0] Epoch[14] Batch [80-100]	Speed: 21036.65 samples/sec	accuracy=nan
2023-03-20 10:15:10,616 Node[0] Epoch[14] Batch [100-120]	Speed: 21055.85 samples/sec	accuracy=nan
2023-03-20 10:15:13,717 Node[0] Epoch[14] Batch [120-140]	Speed: 21051.07 samples/sec	accuracy=nan
2023-03-20 10:15:16,815 Node[0] Epoch[14] Batch [140-160]	Speed: 21068.75 samples/sec	accuracy=nan
2023-03-20 10:15:19,916 Node[0] Epoch[14] Batch [160-180]	Speed: 21053.41 samples/sec	accuracy=nan
2023-03-20 10:15:23,016 Node[0] Epoch[14] Batch [180-200]	Speed: 21055.90 samples/sec	accuracy=nan
2023-03-20 10:15:26,117 Node[0] Epoch[14] Batch [200-220]	Speed: 21053.87 samples/sec	accuracy=nan
2023-03-20 10:15:29,222 Node[0] Epoch[14] Batch [220-240]	Speed: 21025.78 samples/sec	accuracy=nan
2023-03-20 10:15:32,321 Node[0] Epoch[14] Batch [240-260]	Speed: 21061.41 samples/sec	accuracy=nan
2023-03-20 10:15:35,421 Node[0] Epoch[14] Batch [260-280]	Speed: 21058.25 samples/sec	accuracy=nan
2023-03-20 10:15:38,523 Node[0] Epoch[14] Batch [280-300]	Speed: 21044.19 samples/sec	accuracy=nan
2023-03-20 10:15:41,622 Node[0] Epoch[14] Batch [300-320]	Speed: 21069.15 samples/sec	accuracy=nan
2023-03-20 10:15:44,719 Node[0] Epoch[14] Batch [320-340]	Speed: 21074.48 samples/sec	accuracy=nan
2023-03-20 10:15:47,820 Node[0] Epoch[14] Batch [340-360]	Speed: 21051.87 samples/sec	accuracy=nan
2023-03-20 10:15:50,923 Node[0] Epoch[14] Batch [360-380]	Speed: 21040.25 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679325352627, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-20 10:15:52,628 Node[0] Epoch[14] Time cost=60.769
:::MLLOG {"namespace": "", "time_ms": 1679325352628, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21082.437094419325}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679325352777, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-20 10:15:54,013 Node[0] Epoch[14] Validation-accuracy=0.564320
2023-03-20 10:15:54,013 Node[0] Epoch[14] Validation-correct-count=3527.000000
2023-03-20 10:15:54,013 Node[0] Epoch[14] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679325354436, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
2023-03-20 10:15:54,436 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:15:54,436 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325354437, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.57036, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
2023-03-20 10:15:54,437 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325354437, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679325354437, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-20 10:15:54,436 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:15:54,437 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:15:54,437 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:15:54,437 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325354437, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-20 10:15:54,437 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:15:57,565 Node[0] Epoch[15] Batch [0-20]	Speed: 20939.13 samples/sec	accuracy=nan
2023-03-20 10:16:00,663 Node[0] Epoch[15] Batch [20-40]	Speed: 21072.19 samples/sec	accuracy=nan
2023-03-20 10:16:03,759 Node[0] Epoch[15] Batch [40-60]	Speed: 21084.89 samples/sec	accuracy=nan
2023-03-20 10:16:06,855 Node[0] Epoch[15] Batch [60-80]	Speed: 21080.88 samples/sec	accuracy=nan
2023-03-20 10:16:09,955 Node[0] Epoch[15] Batch [80-100]	Speed: 21061.49 samples/sec	accuracy=nan
2023-03-20 10:16:13,054 Node[0] Epoch[15] Batch [100-120]	Speed: 21062.16 samples/sec	accuracy=nan
2023-03-20 10:16:16,154 Node[0] Epoch[15] Batch [120-140]	Speed: 21061.88 samples/sec	accuracy=nan
2023-03-20 10:16:19,252 Node[0] Epoch[15] Batch [140-160]	Speed: 21070.30 samples/sec	accuracy=nan
2023-03-20 10:16:22,355 Node[0] Epoch[15] Batch [160-180]	Speed: 21034.62 samples/sec	accuracy=nan
2023-03-20 10:16:25,454 Node[0] Epoch[15] Batch [180-200]	Speed: 21064.83 samples/sec	accuracy=nan
2023-03-20 10:16:28,558 Node[0] Epoch[15] Batch [200-220]	Speed: 21034.93 samples/sec	accuracy=nan
2023-03-20 10:16:31,655 Node[0] Epoch[15] Batch [220-240]	Speed: 21078.48 samples/sec	accuracy=nan
2023-03-20 10:16:34,756 Node[0] Epoch[15] Batch [240-260]	Speed: 21051.05 samples/sec	accuracy=nan
2023-03-20 10:16:37,854 Node[0] Epoch[15] Batch [260-280]	Speed: 21068.77 samples/sec	accuracy=nan
2023-03-20 10:16:40,961 Node[0] Epoch[15] Batch [280-300]	Speed: 21012.51 samples/sec	accuracy=nan
2023-03-20 10:16:44,062 Node[0] Epoch[15] Batch [300-320]	Speed: 21052.01 samples/sec	accuracy=nan
2023-03-20 10:16:47,161 Node[0] Epoch[15] Batch [320-340]	Speed: 21066.21 samples/sec	accuracy=nan
2023-03-20 10:16:50,260 Node[0] Epoch[15] Batch [340-360]	Speed: 21062.86 samples/sec	accuracy=nan
2023-03-20 10:16:53,362 Node[0] Epoch[15] Batch [360-380]	Speed: 21044.80 samples/sec	accuracy=nan
2023-03-20 10:16:55,220 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:16:55,220 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:16:55,220 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:16:55,221 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:16:55,221 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:16:55,221 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325415221, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-20 10:16:55,222 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:16:55,222 Node[0] Epoch[15] Time cost=60.785
:::MLLOG {"namespace": "", "time_ms": 1679325415222, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21077.13922539467}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679325415222, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-20 10:16:55,222 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:16:58,475 Node[0] Epoch[16] Batch [0-20]	Speed: 21062.75 samples/sec	accuracy=nan
2023-03-20 10:17:01,574 Node[0] Epoch[16] Batch [20-40]	Speed: 21068.91 samples/sec	accuracy=nan
2023-03-20 10:17:04,671 Node[0] Epoch[16] Batch [40-60]	Speed: 21078.74 samples/sec	accuracy=nan
2023-03-20 10:17:07,771 Node[0] Epoch[16] Batch [60-80]	Speed: 21057.70 samples/sec	accuracy=nan
2023-03-20 10:17:10,874 Node[0] Epoch[16] Batch [80-100]	Speed: 21039.87 samples/sec	accuracy=nan
2023-03-20 10:17:13,972 Node[0] Epoch[16] Batch [100-120]	Speed: 21068.06 samples/sec	accuracy=nan
2023-03-20 10:17:17,075 Node[0] Epoch[16] Batch [120-140]	Speed: 21037.80 samples/sec	accuracy=nan
2023-03-20 10:17:20,175 Node[0] Epoch[16] Batch [140-160]	Speed: 21056.32 samples/sec	accuracy=nan
2023-03-20 10:17:23,274 Node[0] Epoch[16] Batch [160-180]	Speed: 21066.56 samples/sec	accuracy=nan
2023-03-20 10:17:26,371 Node[0] Epoch[16] Batch [180-200]	Speed: 21077.73 samples/sec	accuracy=nan
2023-03-20 10:17:29,472 Node[0] Epoch[16] Batch [200-220]	Speed: 21052.54 samples/sec	accuracy=nan
2023-03-20 10:17:32,573 Node[0] Epoch[16] Batch [220-240]	Speed: 21049.43 samples/sec	accuracy=nan
2023-03-20 10:17:35,673 Node[0] Epoch[16] Batch [240-260]	Speed: 21063.28 samples/sec	accuracy=nan
2023-03-20 10:17:38,778 Node[0] Epoch[16] Batch [260-280]	Speed: 21019.22 samples/sec	accuracy=nan
2023-03-20 10:17:41,883 Node[0] Epoch[16] Batch [280-300]	Speed: 21024.16 samples/sec	accuracy=nan
2023-03-20 10:17:44,985 Node[0] Epoch[16] Batch [300-320]	Speed: 21046.16 samples/sec	accuracy=nan
2023-03-20 10:17:48,088 Node[0] Epoch[16] Batch [320-340]	Speed: 21036.28 samples/sec	accuracy=nan
2023-03-20 10:17:51,188 Node[0] Epoch[16] Batch [340-360]	Speed: 21059.89 samples/sec	accuracy=nan
2023-03-20 10:17:54,291 Node[0] Epoch[16] Batch [360-380]	Speed: 21037.21 samples/sec	accuracy=nan
2023-03-20 10:17:55,995 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:17:55,995 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:17:55,995 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:17:55,995 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:17:55,995 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:17:55,996 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:17:55,996 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325475996, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-20 10:17:55,997 Node[0] Epoch[16] Time cost=60.775
:::MLLOG {"namespace": "", "time_ms": 1679325475997, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21080.445047229387}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1679325475998, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-20 10:17:55,998 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:17:59,255 Node[0] Epoch[17] Batch [0-20]	Speed: 21060.20 samples/sec	accuracy=nan
2023-03-20 10:18:02,357 Node[0] Epoch[17] Batch [20-40]	Speed: 21044.18 samples/sec	accuracy=nan
2023-03-20 10:18:05,455 Node[0] Epoch[17] Batch [40-60]	Speed: 21070.09 samples/sec	accuracy=nan
2023-03-20 10:18:08,556 Node[0] Epoch[17] Batch [60-80]	Speed: 21047.64 samples/sec	accuracy=nan
2023-03-20 10:18:11,657 Node[0] Epoch[17] Batch [80-100]	Speed: 21052.73 samples/sec	accuracy=nan
2023-03-20 10:18:14,757 Node[0] Epoch[17] Batch [100-120]	Speed: 21056.41 samples/sec	accuracy=nan
2023-03-20 10:18:17,857 Node[0] Epoch[17] Batch [120-140]	Speed: 21058.87 samples/sec	accuracy=nan
2023-03-20 10:18:20,956 Node[0] Epoch[17] Batch [140-160]	Speed: 21069.41 samples/sec	accuracy=nan
2023-03-20 10:18:24,059 Node[0] Epoch[17] Batch [160-180]	Speed: 21037.55 samples/sec	accuracy=nan
2023-03-20 10:18:27,167 Node[0] Epoch[17] Batch [180-200]	Speed: 20999.67 samples/sec	accuracy=nan
2023-03-20 10:18:30,275 Node[0] Epoch[17] Batch [200-220]	Speed: 21006.35 samples/sec	accuracy=nan
2023-03-20 10:18:33,380 Node[0] Epoch[17] Batch [220-240]	Speed: 21025.38 samples/sec	accuracy=nan
2023-03-20 10:18:36,481 Node[0] Epoch[17] Batch [240-260]	Speed: 21050.75 samples/sec	accuracy=nan
2023-03-20 10:18:39,583 Node[0] Epoch[17] Batch [260-280]	Speed: 21040.75 samples/sec	accuracy=nan
2023-03-20 10:18:42,687 Node[0] Epoch[17] Batch [280-300]	Speed: 21033.93 samples/sec	accuracy=nan
2023-03-20 10:18:45,787 Node[0] Epoch[17] Batch [300-320]	Speed: 21054.93 samples/sec	accuracy=nan
2023-03-20 10:18:48,885 Node[0] Epoch[17] Batch [320-340]	Speed: 21075.80 samples/sec	accuracy=nan
2023-03-20 10:18:51,984 Node[0] Epoch[17] Batch [340-360]	Speed: 21061.67 samples/sec	accuracy=nan
2023-03-20 10:18:55,084 Node[0] Epoch[17] Batch [360-380]	Speed: 21059.63 samples/sec	accuracy=nan
2023-03-20 10:18:56,940 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:18:56,940 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:18:56,940 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:18:56,940 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:18:56,940 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:18:56,941 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:18:56,941 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325536940, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-20 10:18:56,942 Node[0] Epoch[17] Time cost=60.944
:::MLLOG {"namespace": "", "time_ms": 1679325536942, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21022.143452318258}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679325536942, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-20 10:18:56,942 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:19:00,196 Node[0] Epoch[18] Batch [0-20]	Speed: 21061.02 samples/sec	accuracy=nan
2023-03-20 10:19:03,295 Node[0] Epoch[18] Batch [20-40]	Speed: 21061.17 samples/sec	accuracy=nan
2023-03-20 10:19:06,395 Node[0] Epoch[18] Batch [40-60]	Speed: 21061.37 samples/sec	accuracy=nan
2023-03-20 10:19:09,494 Node[0] Epoch[18] Batch [60-80]	Speed: 21064.31 samples/sec	accuracy=nan
2023-03-20 10:19:12,595 Node[0] Epoch[18] Batch [80-100]	Speed: 21050.44 samples/sec	accuracy=nan
2023-03-20 10:19:15,694 Node[0] Epoch[18] Batch [100-120]	Speed: 21066.72 samples/sec	accuracy=nan
2023-03-20 10:19:18,792 Node[0] Epoch[18] Batch [120-140]	Speed: 21067.61 samples/sec	accuracy=nan
2023-03-20 10:19:21,892 Node[0] Epoch[18] Batch [140-160]	Speed: 21061.76 samples/sec	accuracy=nan
2023-03-20 10:19:24,991 Node[0] Epoch[18] Batch [160-180]	Speed: 21064.30 samples/sec	accuracy=nan
2023-03-20 10:19:28,092 Node[0] Epoch[18] Batch [180-200]	Speed: 21050.87 samples/sec	accuracy=nan
2023-03-20 10:19:31,194 Node[0] Epoch[18] Batch [200-220]	Speed: 21047.01 samples/sec	accuracy=nan
2023-03-20 10:19:34,297 Node[0] Epoch[18] Batch [220-240]	Speed: 21035.55 samples/sec	accuracy=nan
2023-03-20 10:19:37,398 Node[0] Epoch[18] Batch [240-260]	Speed: 21050.95 samples/sec	accuracy=nan
2023-03-20 10:19:40,498 Node[0] Epoch[18] Batch [260-280]	Speed: 21054.66 samples/sec	accuracy=nan
2023-03-20 10:19:43,604 Node[0] Epoch[18] Batch [280-300]	Speed: 21021.66 samples/sec	accuracy=nan
2023-03-20 10:19:46,708 Node[0] Epoch[18] Batch [300-320]	Speed: 21030.65 samples/sec	accuracy=nan
2023-03-20 10:19:49,810 Node[0] Epoch[18] Batch [320-340]	Speed: 21040.91 samples/sec	accuracy=nan
2023-03-20 10:19:52,913 Node[0] Epoch[18] Batch [340-360]	Speed: 21042.54 samples/sec	accuracy=nan
2023-03-20 10:19:56,014 Node[0] Epoch[18] Batch [360-380]	Speed: 21049.86 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679325597716, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-20 10:19:57,717 Node[0] Epoch[18] Time cost=60.775
:::MLLOG {"namespace": "", "time_ms": 1679325597717, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21080.384512621105}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679325597868, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-20 10:19:59,174 Node[0] Epoch[18] Validation-accuracy=0.629280
2023-03-20 10:19:59,174 Node[0] Epoch[18] Validation-correct-count=3933.000000
2023-03-20 10:19:59,174 Node[0] Epoch[18] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679325599395, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679325599395, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.63238, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-20 10:19:59,395 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325599395, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-20 10:19:59,395 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325599395, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-20 10:19:59,395 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:19:59,395 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:19:59,395 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:19:59,395 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:19:59,395 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325599396, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-20 10:19:59,396 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:20:02,524 Node[0] Epoch[19] Batch [0-20]	Speed: 20917.70 samples/sec	accuracy=nan
2023-03-20 10:20:05,624 Node[0] Epoch[19] Batch [20-40]	Speed: 21057.42 samples/sec	accuracy=nan
2023-03-20 10:20:08,724 Node[0] Epoch[19] Batch [40-60]	Speed: 21057.75 samples/sec	accuracy=nan
2023-03-20 10:20:11,829 Node[0] Epoch[19] Batch [60-80]	Speed: 21026.62 samples/sec	accuracy=nan
2023-03-20 10:20:14,929 Node[0] Epoch[19] Batch [80-100]	Speed: 21059.85 samples/sec	accuracy=nan
2023-03-20 10:20:18,032 Node[0] Epoch[19] Batch [100-120]	Speed: 21033.91 samples/sec	accuracy=nan
2023-03-20 10:20:21,136 Node[0] Epoch[19] Batch [120-140]	Speed: 21035.63 samples/sec	accuracy=nan
2023-03-20 10:20:24,237 Node[0] Epoch[19] Batch [140-160]	Speed: 21048.93 samples/sec	accuracy=nan
2023-03-20 10:20:27,339 Node[0] Epoch[19] Batch [160-180]	Speed: 21045.23 samples/sec	accuracy=nan
2023-03-20 10:20:30,440 Node[0] Epoch[19] Batch [180-200]	Speed: 21048.15 samples/sec	accuracy=nan
2023-03-20 10:20:33,543 Node[0] Epoch[19] Batch [200-220]	Speed: 21038.96 samples/sec	accuracy=nan
2023-03-20 10:20:36,646 Node[0] Epoch[19] Batch [220-240]	Speed: 21039.89 samples/sec	accuracy=nan
2023-03-20 10:20:39,754 Node[0] Epoch[19] Batch [240-260]	Speed: 21005.30 samples/sec	accuracy=nan
2023-03-20 10:20:42,857 Node[0] Epoch[19] Batch [260-280]	Speed: 21037.97 samples/sec	accuracy=nan
2023-03-20 10:20:45,961 Node[0] Epoch[19] Batch [280-300]	Speed: 21029.37 samples/sec	accuracy=nan
2023-03-20 10:20:49,063 Node[0] Epoch[19] Batch [300-320]	Speed: 21043.32 samples/sec	accuracy=nan
2023-03-20 10:20:52,167 Node[0] Epoch[19] Batch [320-340]	Speed: 21028.60 samples/sec	accuracy=nan
2023-03-20 10:20:55,269 Node[0] Epoch[19] Batch [340-360]	Speed: 21043.84 samples/sec	accuracy=nan
2023-03-20 10:20:58,372 Node[0] Epoch[19] Batch [360-380]	Speed: 21041.28 samples/sec	accuracy=nan
2023-03-20 10:21:00,230 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:21:00,230 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:21:00,230 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:21:00,230 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:21:00,231 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:21:00,231 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:21:00,231 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325660230, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-20 10:21:00,232 Node[0] Epoch[19] Time cost=60.836
:::MLLOG {"namespace": "", "time_ms": 1679325660232, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21059.396094771855}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679325660232, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-20 10:21:00,232 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:21:03,495 Node[0] Epoch[20] Batch [0-20]	Speed: 21008.64 samples/sec	accuracy=nan
2023-03-20 10:21:06,599 Node[0] Epoch[20] Batch [20-40]	Speed: 21028.68 samples/sec	accuracy=nan
2023-03-20 10:21:09,705 Node[0] Epoch[20] Batch [40-60]	Speed: 21019.46 samples/sec	accuracy=nan
2023-03-20 10:21:12,815 Node[0] Epoch[20] Batch [60-80]	Speed: 20988.07 samples/sec	accuracy=nan
2023-03-20 10:21:15,919 Node[0] Epoch[20] Batch [80-100]	Speed: 21032.75 samples/sec	accuracy=nan
2023-03-20 10:21:19,020 Node[0] Epoch[20] Batch [100-120]	Speed: 21047.35 samples/sec	accuracy=nan
2023-03-20 10:21:22,122 Node[0] Epoch[20] Batch [120-140]	Speed: 21050.58 samples/sec	accuracy=nan
2023-03-20 10:21:25,225 Node[0] Epoch[20] Batch [140-160]	Speed: 21031.15 samples/sec	accuracy=nan
2023-03-20 10:21:28,332 Node[0] Epoch[20] Batch [160-180]	Speed: 21013.41 samples/sec	accuracy=nan
2023-03-20 10:21:31,434 Node[0] Epoch[20] Batch [180-200]	Speed: 21045.90 samples/sec	accuracy=nan
2023-03-20 10:21:34,537 Node[0] Epoch[20] Batch [200-220]	Speed: 21036.41 samples/sec	accuracy=nan
2023-03-20 10:21:37,644 Node[0] Epoch[20] Batch [220-240]	Speed: 21012.55 samples/sec	accuracy=nan
2023-03-20 10:21:40,746 Node[0] Epoch[20] Batch [240-260]	Speed: 21044.20 samples/sec	accuracy=nan
2023-03-20 10:21:43,850 Node[0] Epoch[20] Batch [260-280]	Speed: 21031.19 samples/sec	accuracy=nan
2023-03-20 10:21:46,954 Node[0] Epoch[20] Batch [280-300]	Speed: 21028.90 samples/sec	accuracy=nan
2023-03-20 10:21:50,062 Node[0] Epoch[20] Batch [300-320]	Speed: 21003.96 samples/sec	accuracy=nan
2023-03-20 10:21:53,168 Node[0] Epoch[20] Batch [320-340]	Speed: 21016.44 samples/sec	accuracy=nan
2023-03-20 10:21:56,274 Node[0] Epoch[20] Batch [340-360]	Speed: 21020.66 samples/sec	accuracy=nan
2023-03-20 10:21:59,380 Node[0] Epoch[20] Batch [360-380]	Speed: 21012.89 samples/sec	accuracy=nan
2023-03-20 10:22:01,084 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:22:01,084 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:22:01,085 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:22:01,084 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:22:01,084 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:22:01,085 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325721085, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-20 10:22:01,086 Node[0] Epoch[20] Time cost=60.854
:::MLLOG {"namespace": "", "time_ms": 1679325721086, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21053.190472718852}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
2023-03-20 10:22:01,086 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325721086, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-20 10:22:01,086 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:22:04,345 Node[0] Epoch[21] Batch [0-20]	Speed: 21049.57 samples/sec	accuracy=nan
2023-03-20 10:22:07,450 Node[0] Epoch[21] Batch [20-40]	Speed: 21024.07 samples/sec	accuracy=nan
2023-03-20 10:22:10,558 Node[0] Epoch[21] Batch [40-60]	Speed: 21002.32 samples/sec	accuracy=nan
2023-03-20 10:22:13,660 Node[0] Epoch[21] Batch [60-80]	Speed: 21045.04 samples/sec	accuracy=nan
2023-03-20 10:22:16,767 Node[0] Epoch[21] Batch [80-100]	Speed: 21011.80 samples/sec	accuracy=nan
2023-03-20 10:22:19,869 Node[0] Epoch[21] Batch [100-120]	Speed: 21043.30 samples/sec	accuracy=nan
2023-03-20 10:22:22,972 Node[0] Epoch[21] Batch [120-140]	Speed: 21037.95 samples/sec	accuracy=nan
2023-03-20 10:22:26,076 Node[0] Epoch[21] Batch [140-160]	Speed: 21029.94 samples/sec	accuracy=nan
2023-03-20 10:22:29,181 Node[0] Epoch[21] Batch [160-180]	Speed: 21027.43 samples/sec	accuracy=nan
2023-03-20 10:22:32,286 Node[0] Epoch[21] Batch [180-200]	Speed: 21021.86 samples/sec	accuracy=nan
2023-03-20 10:22:35,386 Node[0] Epoch[21] Batch [200-220]	Speed: 21061.00 samples/sec	accuracy=nan
2023-03-20 10:22:38,490 Node[0] Epoch[21] Batch [220-240]	Speed: 21026.80 samples/sec	accuracy=nan
2023-03-20 10:22:41,590 Node[0] Epoch[21] Batch [240-260]	Speed: 21063.98 samples/sec	accuracy=nan
2023-03-20 10:22:44,691 Node[0] Epoch[21] Batch [260-280]	Speed: 21046.79 samples/sec	accuracy=nan
2023-03-20 10:22:47,794 Node[0] Epoch[21] Batch [280-300]	Speed: 21041.57 samples/sec	accuracy=nan
2023-03-20 10:22:50,897 Node[0] Epoch[21] Batch [300-320]	Speed: 21035.01 samples/sec	accuracy=nan
2023-03-20 10:22:53,999 Node[0] Epoch[21] Batch [320-340]	Speed: 21044.14 samples/sec	accuracy=nan
2023-03-20 10:22:57,103 Node[0] Epoch[21] Batch [340-360]	Speed: 21030.13 samples/sec	accuracy=nan
2023-03-20 10:23:00,207 Node[0] Epoch[21] Batch [360-380]	Speed: 21035.11 samples/sec	accuracy=nan
2023-03-20 10:23:02,065 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:23:02,066 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:23:02,066 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:23:02,066 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:23:02,066 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:23:02,066 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325782066, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-20 10:23:02,067 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:23:02,067 Node[0] Epoch[21] Time cost=60.981
:::MLLOG {"namespace": "", "time_ms": 1679325782067, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21009.40185212585}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679325782067, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-20 10:23:02,067 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:23:05,328 Node[0] Epoch[22] Batch [0-20]	Speed: 21019.22 samples/sec	accuracy=nan
2023-03-20 10:23:08,430 Node[0] Epoch[22] Batch [20-40]	Speed: 21047.66 samples/sec	accuracy=nan
2023-03-20 10:23:11,533 Node[0] Epoch[22] Batch [40-60]	Speed: 21036.68 samples/sec	accuracy=nan
2023-03-20 10:23:14,636 Node[0] Epoch[22] Batch [60-80]	Speed: 21039.02 samples/sec	accuracy=nan
2023-03-20 10:23:17,739 Node[0] Epoch[22] Batch [80-100]	Speed: 21035.85 samples/sec	accuracy=nan
2023-03-20 10:23:20,841 Node[0] Epoch[22] Batch [100-120]	Speed: 21044.30 samples/sec	accuracy=nan
2023-03-20 10:23:23,951 Node[0] Epoch[22] Batch [120-140]	Speed: 20988.76 samples/sec	accuracy=nan
2023-03-20 10:23:27,059 Node[0] Epoch[22] Batch [140-160]	Speed: 21007.47 samples/sec	accuracy=nan
2023-03-20 10:23:30,165 Node[0] Epoch[22] Batch [160-180]	Speed: 21017.84 samples/sec	accuracy=nan
2023-03-20 10:23:33,275 Node[0] Epoch[22] Batch [180-200]	Speed: 20989.11 samples/sec	accuracy=nan
2023-03-20 10:23:36,384 Node[0] Epoch[22] Batch [200-220]	Speed: 20995.96 samples/sec	accuracy=nan
2023-03-20 10:23:39,495 Node[0] Epoch[22] Batch [220-240]	Speed: 20983.04 samples/sec	accuracy=nan
2023-03-20 10:23:42,604 Node[0] Epoch[22] Batch [240-260]	Speed: 20995.55 samples/sec	accuracy=nan
2023-03-20 10:23:45,712 Node[0] Epoch[22] Batch [260-280]	Speed: 21005.85 samples/sec	accuracy=nan
2023-03-20 10:23:48,821 Node[0] Epoch[22] Batch [280-300]	Speed: 20994.55 samples/sec	accuracy=nan
2023-03-20 10:23:51,930 Node[0] Epoch[22] Batch [300-320]	Speed: 20996.70 samples/sec	accuracy=nan
2023-03-20 10:23:55,036 Node[0] Epoch[22] Batch [320-340]	Speed: 21022.25 samples/sec	accuracy=nan
2023-03-20 10:23:58,143 Node[0] Epoch[22] Batch [340-360]	Speed: 21005.95 samples/sec	accuracy=nan
2023-03-20 10:24:01,254 Node[0] Epoch[22] Batch [360-380]	Speed: 20986.67 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679325842962, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-20 10:24:02,963 Node[0] Epoch[22] Time cost=60.896
:::MLLOG {"namespace": "", "time_ms": 1679325842963, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21038.769188913866}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679325843113, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-20 10:24:04,384 Node[0] Epoch[22] Validation-accuracy=0.687360
2023-03-20 10:24:04,384 Node[0] Epoch[22] Validation-correct-count=4296.000000
2023-03-20 10:24:04,384 Node[0] Epoch[22] Validation-total-count=6250.000000
2023-03-20 10:24:04,690 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:24:04,690 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:24:04,689 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:24:04,690 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325844689, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
2023-03-20 10:24:04,690 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:24:04,690 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:24:04,690 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325844690, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.6841, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679325844690, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679325844690, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679325844690, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-20 10:24:04,691 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:24:07,817 Node[0] Epoch[23] Batch [0-20]	Speed: 20937.94 samples/sec	accuracy=nan
2023-03-20 10:24:10,921 Node[0] Epoch[23] Batch [20-40]	Speed: 21030.93 samples/sec	accuracy=nan
2023-03-20 10:24:14,021 Node[0] Epoch[23] Batch [40-60]	Speed: 21064.60 samples/sec	accuracy=nan
2023-03-20 10:24:17,121 Node[0] Epoch[23] Batch [60-80]	Speed: 21053.83 samples/sec	accuracy=nan
2023-03-20 10:24:20,223 Node[0] Epoch[23] Batch [80-100]	Speed: 21046.65 samples/sec	accuracy=nan
2023-03-20 10:24:23,322 Node[0] Epoch[23] Batch [100-120]	Speed: 21061.38 samples/sec	accuracy=nan
2023-03-20 10:24:26,423 Node[0] Epoch[23] Batch [120-140]	Speed: 21055.29 samples/sec	accuracy=nan
2023-03-20 10:24:29,521 Node[0] Epoch[23] Batch [140-160]	Speed: 21066.43 samples/sec	accuracy=nan
2023-03-20 10:24:32,628 Node[0] Epoch[23] Batch [160-180]	Speed: 21013.96 samples/sec	accuracy=nan
2023-03-20 10:24:35,736 Node[0] Epoch[23] Batch [180-200]	Speed: 21001.82 samples/sec	accuracy=nan
2023-03-20 10:24:38,842 Node[0] Epoch[23] Batch [200-220]	Speed: 21016.32 samples/sec	accuracy=nan
2023-03-20 10:24:41,953 Node[0] Epoch[23] Batch [220-240]	Speed: 20987.41 samples/sec	accuracy=nan
2023-03-20 10:24:45,062 Node[0] Epoch[23] Batch [240-260]	Speed: 20994.65 samples/sec	accuracy=nan
2023-03-20 10:24:48,168 Node[0] Epoch[23] Batch [260-280]	Speed: 21021.87 samples/sec	accuracy=nan
2023-03-20 10:24:51,276 Node[0] Epoch[23] Batch [280-300]	Speed: 21002.52 samples/sec	accuracy=nan
2023-03-20 10:24:54,381 Node[0] Epoch[23] Batch [300-320]	Speed: 21021.41 samples/sec	accuracy=nan
2023-03-20 10:24:57,489 Node[0] Epoch[23] Batch [320-340]	Speed: 21004.81 samples/sec	accuracy=nan
2023-03-20 10:25:00,595 Node[0] Epoch[23] Batch [340-360]	Speed: 21017.50 samples/sec	accuracy=nan
2023-03-20 10:25:03,703 Node[0] Epoch[23] Batch [360-380]	Speed: 21002.71 samples/sec	accuracy=nan
2023-03-20 10:25:05,563 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:25:05,564 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:25:05,564 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:25:05,564 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:25:05,564 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:25:05,564 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:25:05,564 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325905564, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-20 10:25:05,565 Node[0] Epoch[23] Time cost=60.875
:::MLLOG {"namespace": "", "time_ms": 1679325905565, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21046.01606017132}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679325905565, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-20 10:25:05,566 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:25:08,825 Node[0] Epoch[24] Batch [0-20]	Speed: 21024.69 samples/sec	accuracy=nan
2023-03-20 10:25:11,932 Node[0] Epoch[24] Batch [20-40]	Speed: 21009.27 samples/sec	accuracy=nan
2023-03-20 10:25:15,037 Node[0] Epoch[24] Batch [40-60]	Speed: 21025.12 samples/sec	accuracy=nan
2023-03-20 10:25:18,142 Node[0] Epoch[24] Batch [60-80]	Speed: 21022.57 samples/sec	accuracy=nan
2023-03-20 10:25:21,246 Node[0] Epoch[24] Batch [80-100]	Speed: 21029.34 samples/sec	accuracy=nan
2023-03-20 10:25:24,351 Node[0] Epoch[24] Batch [100-120]	Speed: 21023.98 samples/sec	accuracy=nan
2023-03-20 10:25:27,454 Node[0] Epoch[24] Batch [120-140]	Speed: 21036.68 samples/sec	accuracy=nan
2023-03-20 10:25:30,558 Node[0] Epoch[24] Batch [140-160]	Speed: 21032.18 samples/sec	accuracy=nan
2023-03-20 10:25:33,664 Node[0] Epoch[24] Batch [160-180]	Speed: 21015.86 samples/sec	accuracy=nan
2023-03-20 10:25:36,770 Node[0] Epoch[24] Batch [180-200]	Speed: 21019.95 samples/sec	accuracy=nan
2023-03-20 10:25:39,881 Node[0] Epoch[24] Batch [200-220]	Speed: 20984.64 samples/sec	accuracy=nan
2023-03-20 10:25:42,985 Node[0] Epoch[24] Batch [220-240]	Speed: 21029.66 samples/sec	accuracy=nan
2023-03-20 10:25:46,087 Node[0] Epoch[24] Batch [240-260]	Speed: 21048.22 samples/sec	accuracy=nan
2023-03-20 10:25:49,192 Node[0] Epoch[24] Batch [260-280]	Speed: 21018.72 samples/sec	accuracy=nan
2023-03-20 10:25:52,302 Node[0] Epoch[24] Batch [280-300]	Speed: 20991.79 samples/sec	accuracy=nan
2023-03-20 10:25:57,477 Node[0] Epoch[24] Batch [300-320]	Speed: 12613.58 samples/sec	accuracy=nan
2023-03-20 10:26:00,581 Node[0] Epoch[24] Batch [320-340]	Speed: 21036.12 samples/sec	accuracy=nan
2023-03-20 10:26:03,684 Node[0] Epoch[24] Batch [340-360]	Speed: 21037.28 samples/sec	accuracy=nan
2023-03-20 10:26:06,790 Node[0] Epoch[24] Batch [360-380]	Speed: 21016.11 samples/sec	accuracy=nan
2023-03-20 10:26:08,496 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:26:08,497 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:26:08,497 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:26:08,497 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:26:08,497 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:26:08,497 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:26:08,497 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679325968497, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-20 10:26:08,498 Node[0] Epoch[24] Time cost=62.932
:::MLLOG {"namespace": "", "time_ms": 1679325968498, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20357.798093598296}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679325968498, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-20 10:26:08,499 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:26:11,766 Node[0] Epoch[25] Batch [0-20]	Speed: 21001.33 samples/sec	accuracy=nan
2023-03-20 10:26:14,869 Node[0] Epoch[25] Batch [20-40]	Speed: 21033.97 samples/sec	accuracy=nan
2023-03-20 10:26:17,975 Node[0] Epoch[25] Batch [40-60]	Speed: 21020.57 samples/sec	accuracy=nan
2023-03-20 10:26:21,082 Node[0] Epoch[25] Batch [60-80]	Speed: 21009.76 samples/sec	accuracy=nan
2023-03-20 10:26:24,188 Node[0] Epoch[25] Batch [80-100]	Speed: 21020.35 samples/sec	accuracy=nan
2023-03-20 10:26:27,292 Node[0] Epoch[25] Batch [100-120]	Speed: 21028.92 samples/sec	accuracy=nan
2023-03-20 10:26:30,393 Node[0] Epoch[25] Batch [120-140]	Speed: 21054.19 samples/sec	accuracy=nan
2023-03-20 10:26:33,493 Node[0] Epoch[25] Batch [140-160]	Speed: 21057.71 samples/sec	accuracy=nan
2023-03-20 10:26:36,601 Node[0] Epoch[25] Batch [160-180]	Speed: 21000.59 samples/sec	accuracy=nan
2023-03-20 10:26:39,707 Node[0] Epoch[25] Batch [180-200]	Speed: 21016.91 samples/sec	accuracy=nan
2023-03-20 10:26:42,811 Node[0] Epoch[25] Batch [200-220]	Speed: 21033.22 samples/sec	accuracy=nan
2023-03-20 10:26:45,912 Node[0] Epoch[25] Batch [220-240]	Speed: 21052.02 samples/sec	accuracy=nan
2023-03-20 10:26:49,014 Node[0] Epoch[25] Batch [240-260]	Speed: 21045.19 samples/sec	accuracy=nan
2023-03-20 10:26:52,116 Node[0] Epoch[25] Batch [260-280]	Speed: 21041.06 samples/sec	accuracy=nan
2023-03-20 10:26:55,219 Node[0] Epoch[25] Batch [280-300]	Speed: 21039.70 samples/sec	accuracy=nan
2023-03-20 10:27:00,295 Node[0] Epoch[25] Batch [300-320]	Speed: 12859.09 samples/sec	accuracy=nan
2023-03-20 10:27:03,394 Node[0] Epoch[25] Batch [320-340]	Speed: 21067.18 samples/sec	accuracy=nan
2023-03-20 10:27:06,496 Node[0] Epoch[25] Batch [340-360]	Speed: 21043.19 samples/sec	accuracy=nan
2023-03-20 10:27:09,600 Node[0] Epoch[25] Batch [360-380]	Speed: 21035.70 samples/sec	accuracy=nan
2023-03-20 10:27:11,457 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:27:11,457 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:27:11,457 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:27:11,458 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:27:11,458 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679326031457, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-20 10:27:11,458 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:27:11,459 Node[0] Epoch[25] Time cost=62.960
:::MLLOG {"namespace": "", "time_ms": 1679326031459, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20348.895808567104}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679326031459, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-20 10:27:11,459 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:27:11,459 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:27:14,720 Node[0] Epoch[26] Batch [0-20]	Speed: 21009.43 samples/sec	accuracy=nan
2023-03-20 10:27:17,822 Node[0] Epoch[26] Batch [20-40]	Speed: 21048.65 samples/sec	accuracy=nan
2023-03-20 10:27:20,924 Node[0] Epoch[26] Batch [40-60]	Speed: 21040.60 samples/sec	accuracy=nan
2023-03-20 10:27:24,027 Node[0] Epoch[26] Batch [60-80]	Speed: 21041.25 samples/sec	accuracy=nan
2023-03-20 10:27:27,130 Node[0] Epoch[26] Batch [80-100]	Speed: 21035.01 samples/sec	accuracy=nan
2023-03-20 10:27:30,233 Node[0] Epoch[26] Batch [100-120]	Speed: 21042.37 samples/sec	accuracy=nan
2023-03-20 10:27:33,333 Node[0] Epoch[26] Batch [120-140]	Speed: 21051.23 samples/sec	accuracy=nan
2023-03-20 10:27:36,438 Node[0] Epoch[26] Batch [140-160]	Speed: 21026.13 samples/sec	accuracy=nan
2023-03-20 10:27:39,549 Node[0] Epoch[26] Batch [160-180]	Speed: 20987.05 samples/sec	accuracy=nan
2023-03-20 10:27:42,655 Node[0] Epoch[26] Batch [180-200]	Speed: 21013.78 samples/sec	accuracy=nan
2023-03-20 10:27:45,760 Node[0] Epoch[26] Batch [200-220]	Speed: 21023.95 samples/sec	accuracy=nan
2023-03-20 10:27:48,862 Node[0] Epoch[26] Batch [220-240]	Speed: 21045.78 samples/sec	accuracy=nan
2023-03-20 10:27:51,965 Node[0] Epoch[26] Batch [240-260]	Speed: 21037.29 samples/sec	accuracy=nan
2023-03-20 10:27:55,077 Node[0] Epoch[26] Batch [260-280]	Speed: 20974.46 samples/sec	accuracy=nan
2023-03-20 10:27:58,181 Node[0] Epoch[26] Batch [280-300]	Speed: 21034.37 samples/sec	accuracy=nan
2023-03-20 10:28:01,287 Node[0] Epoch[26] Batch [300-320]	Speed: 21015.65 samples/sec	accuracy=nan
2023-03-20 10:28:04,390 Node[0] Epoch[26] Batch [320-340]	Speed: 21037.74 samples/sec	accuracy=nan
2023-03-20 10:28:07,494 Node[0] Epoch[26] Batch [340-360]	Speed: 21033.64 samples/sec	accuracy=nan
2023-03-20 10:28:10,595 Node[0] Epoch[26] Batch [360-380]	Speed: 21047.52 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679326092303, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-20 10:28:12,304 Node[0] Epoch[26] Time cost=60.845
:::MLLOG {"namespace": "", "time_ms": 1679326092304, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21056.271044326106}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679326092454, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-20 10:28:13,688 Node[0] Epoch[26] Validation-accuracy=0.718400
2023-03-20 10:28:13,688 Node[0] Epoch[26] Validation-correct-count=4490.000000
2023-03-20 10:28:13,688 Node[0] Epoch[26] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679326094027, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679326094027, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.71996, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
2023-03-20 10:28:14,027 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:28:14,027 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679326094028, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679326094028, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-20 10:28:14,027 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:28:14,027 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:28:14,027 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:28:14,028 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679326094028, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-20 10:28:14,028 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:28:14,028 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:28:17,159 Node[0] Epoch[27] Batch [0-20]	Speed: 20902.87 samples/sec	accuracy=nan
2023-03-20 10:28:20,265 Node[0] Epoch[27] Batch [20-40]	Speed: 21019.38 samples/sec	accuracy=nan
2023-03-20 10:28:23,368 Node[0] Epoch[27] Batch [40-60]	Speed: 21033.08 samples/sec	accuracy=nan
2023-03-20 10:28:26,473 Node[0] Epoch[27] Batch [60-80]	Speed: 21027.50 samples/sec	accuracy=nan
2023-03-20 10:28:29,575 Node[0] Epoch[27] Batch [80-100]	Speed: 21041.93 samples/sec	accuracy=nan
2023-03-20 10:28:32,683 Node[0] Epoch[27] Batch [100-120]	Speed: 21007.42 samples/sec	accuracy=nan
2023-03-20 10:28:35,792 Node[0] Epoch[27] Batch [120-140]	Speed: 20993.35 samples/sec	accuracy=nan
2023-03-20 10:28:38,897 Node[0] Epoch[27] Batch [140-160]	Speed: 21027.50 samples/sec	accuracy=nan
2023-03-20 10:28:42,001 Node[0] Epoch[27] Batch [160-180]	Speed: 21030.06 samples/sec	accuracy=nan
2023-03-20 10:28:45,109 Node[0] Epoch[27] Batch [180-200]	Speed: 21001.66 samples/sec	accuracy=nan
2023-03-20 10:28:48,216 Node[0] Epoch[27] Batch [200-220]	Speed: 21013.29 samples/sec	accuracy=nan
2023-03-20 10:28:51,321 Node[0] Epoch[27] Batch [220-240]	Speed: 21021.40 samples/sec	accuracy=nan
2023-03-20 10:28:54,427 Node[0] Epoch[27] Batch [240-260]	Speed: 21016.46 samples/sec	accuracy=nan
2023-03-20 10:28:57,533 Node[0] Epoch[27] Batch [260-280]	Speed: 21017.06 samples/sec	accuracy=nan
2023-03-20 10:29:00,639 Node[0] Epoch[27] Batch [280-300]	Speed: 21022.41 samples/sec	accuracy=nan
2023-03-20 10:29:05,694 Node[0] Epoch[27] Batch [300-320]	Speed: 12912.68 samples/sec	accuracy=nan
2023-03-20 10:29:08,803 Node[0] Epoch[27] Batch [320-340]	Speed: 20998.18 samples/sec	accuracy=nan
2023-03-20 10:29:11,913 Node[0] Epoch[27] Batch [340-360]	Speed: 20989.48 samples/sec	accuracy=nan
2023-03-20 10:29:15,016 Node[0] Epoch[27] Batch [360-380]	Speed: 21037.73 samples/sec	accuracy=nan
2023-03-20 10:29:16,876 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:29:16,877 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:29:16,877 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:29:16,877 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:29:16,877 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:29:16,877 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:29:16,877 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679326156877, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-20 10:29:16,878 Node[0] Epoch[27] Time cost=62.850
:::MLLOG {"namespace": "", "time_ms": 1679326156878, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20384.444027921356}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679326156879, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-20 10:29:16,879 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:29:20,140 Node[0] Epoch[28] Batch [0-20]	Speed: 21017.44 samples/sec	accuracy=nan
2023-03-20 10:29:23,239 Node[0] Epoch[28] Batch [20-40]	Speed: 21058.67 samples/sec	accuracy=nan
2023-03-20 10:29:26,342 Node[0] Epoch[28] Batch [40-60]	Speed: 21042.46 samples/sec	accuracy=nan
2023-03-20 10:29:29,448 Node[0] Epoch[28] Batch [60-80]	Speed: 21015.53 samples/sec	accuracy=nan
2023-03-20 10:29:32,550 Node[0] Epoch[28] Batch [80-100]	Speed: 21047.09 samples/sec	accuracy=nan
2023-03-20 10:29:35,656 Node[0] Epoch[28] Batch [100-120]	Speed: 21017.25 samples/sec	accuracy=nan
2023-03-20 10:29:38,766 Node[0] Epoch[28] Batch [120-140]	Speed: 20991.60 samples/sec	accuracy=nan
2023-03-20 10:29:41,871 Node[0] Epoch[28] Batch [140-160]	Speed: 21023.49 samples/sec	accuracy=nan
2023-03-20 10:29:44,978 Node[0] Epoch[28] Batch [160-180]	Speed: 21010.08 samples/sec	accuracy=nan
2023-03-20 10:29:48,087 Node[0] Epoch[28] Batch [180-200]	Speed: 20993.84 samples/sec	accuracy=nan
2023-03-20 10:29:51,194 Node[0] Epoch[28] Batch [200-220]	Speed: 21014.58 samples/sec	accuracy=nan
2023-03-20 10:29:54,299 Node[0] Epoch[28] Batch [220-240]	Speed: 21022.08 samples/sec	accuracy=nan
2023-03-20 10:29:57,401 Node[0] Epoch[28] Batch [240-260]	Speed: 21045.80 samples/sec	accuracy=nan
2023-03-20 10:30:00,506 Node[0] Epoch[28] Batch [260-280]	Speed: 21023.00 samples/sec	accuracy=nan
2023-03-20 10:30:03,608 Node[0] Epoch[28] Batch [280-300]	Speed: 21043.21 samples/sec	accuracy=nan
2023-03-20 10:30:06,712 Node[0] Epoch[28] Batch [300-320]	Speed: 21029.89 samples/sec	accuracy=nan
2023-03-20 10:30:09,817 Node[0] Epoch[28] Batch [320-340]	Speed: 21024.14 samples/sec	accuracy=nan
2023-03-20 10:30:12,922 Node[0] Epoch[28] Batch [340-360]	Speed: 21024.43 samples/sec	accuracy=nan
2023-03-20 10:30:16,029 Node[0] Epoch[28] Batch [360-380]	Speed: 21010.95 samples/sec	accuracy=nan
2023-03-20 10:30:17,735 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:30:17,735 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:30:17,735 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:30:17,735 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:30:17,735 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:30:17,736 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:30:17,736 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679326217735, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-20 10:30:17,736 Node[0] Epoch[28] Time cost=60.858
:::MLLOG {"namespace": "", "time_ms": 1679326217736, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21051.84483079347}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1679326217737, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-20 10:30:17,737 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:30:21,001 Node[0] Epoch[29] Batch [0-20]	Speed: 21016.09 samples/sec	accuracy=nan
2023-03-20 10:30:24,107 Node[0] Epoch[29] Batch [20-40]	Speed: 21018.57 samples/sec	accuracy=nan
2023-03-20 10:30:27,213 Node[0] Epoch[29] Batch [40-60]	Speed: 21017.37 samples/sec	accuracy=nan
2023-03-20 10:30:30,322 Node[0] Epoch[29] Batch [60-80]	Speed: 20998.77 samples/sec	accuracy=nan
2023-03-20 10:30:33,425 Node[0] Epoch[29] Batch [80-100]	Speed: 21033.53 samples/sec	accuracy=nan
2023-03-20 10:30:36,531 Node[0] Epoch[29] Batch [100-120]	Speed: 21021.11 samples/sec	accuracy=nan
2023-03-20 10:30:39,640 Node[0] Epoch[29] Batch [120-140]	Speed: 20998.47 samples/sec	accuracy=nan
2023-03-20 10:30:42,742 Node[0] Epoch[29] Batch [140-160]	Speed: 21039.73 samples/sec	accuracy=nan
2023-03-20 10:30:45,847 Node[0] Epoch[29] Batch [160-180]	Speed: 21028.49 samples/sec	accuracy=nan
2023-03-20 10:30:48,954 Node[0] Epoch[29] Batch [180-200]	Speed: 21004.89 samples/sec	accuracy=nan
2023-03-20 10:30:52,059 Node[0] Epoch[29] Batch [200-220]	Speed: 21027.11 samples/sec	accuracy=nan
2023-03-20 10:30:55,163 Node[0] Epoch[29] Batch [220-240]	Speed: 21027.58 samples/sec	accuracy=nan
2023-03-20 10:30:58,265 Node[0] Epoch[29] Batch [240-260]	Speed: 21046.08 samples/sec	accuracy=nan
2023-03-20 10:31:01,373 Node[0] Epoch[29] Batch [260-280]	Speed: 21005.67 samples/sec	accuracy=nan
2023-03-20 10:31:04,478 Node[0] Epoch[29] Batch [280-300]	Speed: 21027.54 samples/sec	accuracy=nan
2023-03-20 10:31:09,863 Node[0] Epoch[29] Batch [300-320]	Speed: 12121.07 samples/sec	accuracy=nan
2023-03-20 10:31:12,972 Node[0] Epoch[29] Batch [320-340]	Speed: 21000.54 samples/sec	accuracy=nan
2023-03-20 10:31:16,081 Node[0] Epoch[29] Batch [340-360]	Speed: 20994.62 samples/sec	accuracy=nan
2023-03-20 10:31:19,190 Node[0] Epoch[29] Batch [360-380]	Speed: 21000.04 samples/sec	accuracy=nan
2023-03-20 10:31:21,052 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:31:21,052 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:31:21,053 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:31:21,052 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:31:21,053 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:31:21,053 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:31:21,053 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679326281053, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-20 10:31:21,054 Node[0] Epoch[29] Time cost=63.317
:::MLLOG {"namespace": "", "time_ms": 1679326281054, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20234.113345369413}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679326281054, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-20 10:31:21,054 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:31:24,321 Node[0] Epoch[30] Batch [0-20]	Speed: 20978.51 samples/sec	accuracy=nan
2023-03-20 10:31:27,431 Node[0] Epoch[30] Batch [20-40]	Speed: 20993.34 samples/sec	accuracy=nan
2023-03-20 10:31:30,530 Node[0] Epoch[30] Batch [40-60]	Speed: 21062.41 samples/sec	accuracy=nan
2023-03-20 10:31:33,634 Node[0] Epoch[30] Batch [60-80]	Speed: 21033.36 samples/sec	accuracy=nan
2023-03-20 10:31:36,733 Node[0] Epoch[30] Batch [80-100]	Speed: 21062.41 samples/sec	accuracy=nan
2023-03-20 10:31:39,836 Node[0] Epoch[30] Batch [100-120]	Speed: 21037.79 samples/sec	accuracy=nan
2023-03-20 10:31:42,939 Node[0] Epoch[30] Batch [120-140]	Speed: 21038.29 samples/sec	accuracy=nan
2023-03-20 10:31:46,044 Node[0] Epoch[30] Batch [140-160]	Speed: 21024.92 samples/sec	accuracy=nan
2023-03-20 10:31:49,153 Node[0] Epoch[30] Batch [160-180]	Speed: 20999.92 samples/sec	accuracy=nan
2023-03-20 10:31:52,257 Node[0] Epoch[30] Batch [180-200]	Speed: 21027.29 samples/sec	accuracy=nan
2023-03-20 10:31:55,360 Node[0] Epoch[30] Batch [200-220]	Speed: 21041.20 samples/sec	accuracy=nan
2023-03-20 10:31:58,461 Node[0] Epoch[30] Batch [220-240]	Speed: 21046.62 samples/sec	accuracy=nan
2023-03-20 10:32:01,564 Node[0] Epoch[30] Batch [240-260]	Speed: 21036.36 samples/sec	accuracy=nan
2023-03-20 10:32:04,672 Node[0] Epoch[30] Batch [260-280]	Speed: 21009.24 samples/sec	accuracy=nan
2023-03-20 10:32:07,774 Node[0] Epoch[30] Batch [280-300]	Speed: 21039.14 samples/sec	accuracy=nan
2023-03-20 10:32:13,142 Node[0] Epoch[30] Batch [300-320]	Speed: 12162.90 samples/sec	accuracy=nan
2023-03-20 10:32:16,246 Node[0] Epoch[30] Batch [320-340]	Speed: 21028.60 samples/sec	accuracy=nan
2023-03-20 10:32:19,353 Node[0] Epoch[30] Batch [340-360]	Speed: 21012.18 samples/sec	accuracy=nan
2023-03-20 10:32:22,456 Node[0] Epoch[30] Batch [360-380]	Speed: 21033.27 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679326344164, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-20 10:32:24,165 Node[0] Epoch[30] Time cost=63.111
:::MLLOG {"namespace": "", "time_ms": 1679326344165, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20300.314300923426}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679326344315, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-20 10:32:25,690 Node[0] Epoch[30] Validation-accuracy=0.755200
2023-03-20 10:32:25,690 Node[0] Epoch[30] Validation-correct-count=4720.000000
2023-03-20 10:32:25,691 Node[0] Epoch[30] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679326345862, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
2023-03-20 10:32:25,862 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:32:25,862 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:32:25,862 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679326345862, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.74622, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679326345862, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679326345863, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-20 10:32:25,862 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:32:25,862 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:32:25,862 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:32:25,862 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679326345863, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-20 10:32:25,863 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:32:29,002 Node[0] Epoch[31] Batch [0-20]	Speed: 20851.06 samples/sec	accuracy=nan
2023-03-20 10:32:32,110 Node[0] Epoch[31] Batch [20-40]	Speed: 21005.35 samples/sec	accuracy=nan
2023-03-20 10:32:35,212 Node[0] Epoch[31] Batch [40-60]	Speed: 21039.62 samples/sec	accuracy=nan
2023-03-20 10:32:38,319 Node[0] Epoch[31] Batch [60-80]	Speed: 21015.39 samples/sec	accuracy=nan
2023-03-20 10:32:41,425 Node[0] Epoch[31] Batch [80-100]	Speed: 21015.19 samples/sec	accuracy=nan
2023-03-20 10:32:44,531 Node[0] Epoch[31] Batch [100-120]	Speed: 21017.28 samples/sec	accuracy=nan
2023-03-20 10:32:47,638 Node[0] Epoch[31] Batch [120-140]	Speed: 21011.16 samples/sec	accuracy=nan
2023-03-20 10:32:50,746 Node[0] Epoch[31] Batch [140-160]	Speed: 21004.66 samples/sec	accuracy=nan
2023-03-20 10:32:53,854 Node[0] Epoch[31] Batch [160-180]	Speed: 21005.47 samples/sec	accuracy=nan
2023-03-20 10:32:56,957 Node[0] Epoch[31] Batch [180-200]	Speed: 21031.70 samples/sec	accuracy=nan
2023-03-20 10:33:00,065 Node[0] Epoch[31] Batch [200-220]	Speed: 21009.80 samples/sec	accuracy=nan
2023-03-20 10:33:03,174 Node[0] Epoch[31] Batch [220-240]	Speed: 20997.52 samples/sec	accuracy=nan
2023-03-20 10:33:06,286 Node[0] Epoch[31] Batch [240-260]	Speed: 20972.44 samples/sec	accuracy=nan
2023-03-20 10:33:09,398 Node[0] Epoch[31] Batch [260-280]	Speed: 20977.60 samples/sec	accuracy=nan
2023-03-20 10:33:12,504 Node[0] Epoch[31] Batch [280-300]	Speed: 21019.20 samples/sec	accuracy=nan
2023-03-20 10:33:17,902 Node[0] Epoch[31] Batch [300-320]	Speed: 12093.67 samples/sec	accuracy=nan
2023-03-20 10:33:21,008 Node[0] Epoch[31] Batch [320-340]	Speed: 21014.76 samples/sec	accuracy=nan
2023-03-20 10:33:24,115 Node[0] Epoch[31] Batch [340-360]	Speed: 21013.51 samples/sec	accuracy=nan
2023-03-20 10:33:27,221 Node[0] Epoch[31] Batch [360-380]	Speed: 21013.90 samples/sec	accuracy=nan
2023-03-20 10:33:29,080 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:33:29,080 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:33:29,080 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:33:29,080 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:33:29,081 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:33:29,081 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:33:29,081 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679326409081, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-20 10:33:29,082 Node[0] Epoch[31] Time cost=63.219
:::MLLOG {"namespace": "", "time_ms": 1679326409082, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20265.560460999834}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679326409082, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-20 10:33:29,082 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:33:32,339 Node[0] Epoch[32] Batch [0-20]	Speed: 21040.23 samples/sec	accuracy=nan
2023-03-20 10:33:35,437 Node[0] Epoch[32] Batch [20-40]	Speed: 21073.82 samples/sec	accuracy=nan
2023-03-20 10:33:38,540 Node[0] Epoch[32] Batch [40-60]	Speed: 21037.21 samples/sec	accuracy=nan
2023-03-20 10:33:41,643 Node[0] Epoch[32] Batch [60-80]	Speed: 21036.34 samples/sec	accuracy=nan
2023-03-20 10:33:44,747 Node[0] Epoch[32] Batch [80-100]	Speed: 21033.75 samples/sec	accuracy=nan
2023-03-20 10:33:47,848 Node[0] Epoch[32] Batch [100-120]	Speed: 21049.94 samples/sec	accuracy=nan
2023-03-20 10:33:50,950 Node[0] Epoch[32] Batch [120-140]	Speed: 21046.43 samples/sec	accuracy=nan
2023-03-20 10:33:54,055 Node[0] Epoch[32] Batch [140-160]	Speed: 21023.98 samples/sec	accuracy=nan
2023-03-20 10:33:57,159 Node[0] Epoch[32] Batch [160-180]	Speed: 21026.53 samples/sec	accuracy=nan
2023-03-20 10:34:00,263 Node[0] Epoch[32] Batch [180-200]	Speed: 21030.13 samples/sec	accuracy=nan
2023-03-20 10:34:03,364 Node[0] Epoch[32] Batch [200-220]	Speed: 21054.98 samples/sec	accuracy=nan
2023-03-20 10:34:06,464 Node[0] Epoch[32] Batch [220-240]	Speed: 21057.31 samples/sec	accuracy=nan
2023-03-20 10:34:09,566 Node[0] Epoch[32] Batch [240-260]	Speed: 21046.88 samples/sec	accuracy=nan
2023-03-20 10:34:12,670 Node[0] Epoch[32] Batch [260-280]	Speed: 21032.42 samples/sec	accuracy=nan
2023-03-20 10:34:15,776 Node[0] Epoch[32] Batch [280-300]	Speed: 21011.77 samples/sec	accuracy=nan
2023-03-20 10:34:21,137 Node[0] Epoch[32] Batch [300-320]	Speed: 12178.07 samples/sec	accuracy=nan
2023-03-20 10:34:24,242 Node[0] Epoch[32] Batch [320-340]	Speed: 21021.57 samples/sec	accuracy=nan
2023-03-20 10:34:27,347 Node[0] Epoch[32] Batch [340-360]	Speed: 21026.16 samples/sec	accuracy=nan
2023-03-20 10:34:30,450 Node[0] Epoch[32] Batch [360-380]	Speed: 21036.24 samples/sec	accuracy=nan
2023-03-20 10:34:32,154 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:34:32,154 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:34:32,154 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:34:32,154 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:34:32,154 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:34:32,154 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:34:32,155 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679326472154, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-20 10:34:32,156 Node[0] Epoch[32] Time cost=63.073
:::MLLOG {"namespace": "", "time_ms": 1679326472156, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20312.328101076786}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679326472156, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-20 10:34:32,156 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:34:35,419 Node[0] Epoch[33] Batch [0-20]	Speed: 21024.39 samples/sec	accuracy=nan
2023-03-20 10:34:38,527 Node[0] Epoch[33] Batch [20-40]	Speed: 21001.28 samples/sec	accuracy=nan
2023-03-20 10:34:41,637 Node[0] Epoch[33] Batch [40-60]	Speed: 20990.32 samples/sec	accuracy=nan
2023-03-20 10:34:44,747 Node[0] Epoch[33] Batch [60-80]	Speed: 20994.42 samples/sec	accuracy=nan
2023-03-20 10:34:47,859 Node[0] Epoch[33] Batch [80-100]	Speed: 20977.12 samples/sec	accuracy=nan
2023-03-20 10:34:50,967 Node[0] Epoch[33] Batch [100-120]	Speed: 20999.91 samples/sec	accuracy=nan
2023-03-20 10:34:54,076 Node[0] Epoch[33] Batch [120-140]	Speed: 21000.53 samples/sec	accuracy=nan
2023-03-20 10:34:57,187 Node[0] Epoch[33] Batch [140-160]	Speed: 20982.18 samples/sec	accuracy=nan
2023-03-20 10:35:00,295 Node[0] Epoch[33] Batch [160-180]	Speed: 21002.61 samples/sec	accuracy=nan
2023-03-20 10:35:03,407 Node[0] Epoch[33] Batch [180-200]	Speed: 20975.26 samples/sec	accuracy=nan
2023-03-20 10:35:06,515 Node[0] Epoch[33] Batch [200-220]	Speed: 21007.76 samples/sec	accuracy=nan
2023-03-20 10:35:09,627 Node[0] Epoch[33] Batch [220-240]	Speed: 20977.89 samples/sec	accuracy=nan
2023-03-20 10:35:12,736 Node[0] Epoch[33] Batch [240-260]	Speed: 20992.49 samples/sec	accuracy=nan
2023-03-20 10:35:15,847 Node[0] Epoch[33] Batch [260-280]	Speed: 20984.85 samples/sec	accuracy=nan
2023-03-20 10:35:18,958 Node[0] Epoch[33] Batch [280-300]	Speed: 20981.84 samples/sec	accuracy=nan
2023-03-20 10:35:22,067 Node[0] Epoch[33] Batch [300-320]	Speed: 20997.27 samples/sec	accuracy=nan
2023-03-20 10:35:25,182 Node[0] Epoch[33] Batch [320-340]	Speed: 20961.02 samples/sec	accuracy=nan
2023-03-20 10:35:28,289 Node[0] Epoch[33] Batch [340-360]	Speed: 21005.97 samples/sec	accuracy=nan
2023-03-20 10:35:31,397 Node[0] Epoch[33] Batch [360-380]	Speed: 21004.16 samples/sec	accuracy=nan
2023-03-20 10:35:33,257 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:35:33,258 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:35:33,258 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:35:33,258 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:35:33,258 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:35:33,258 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679326533258, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-20 10:35:33,259 Node[0] Epoch[33] Time cost=61.103
:::MLLOG {"namespace": "", "time_ms": 1679326533259, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20967.399322025703}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
2023-03-20 10:35:33,259 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679326533259, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-20 10:35:33,259 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:35:36,518 Node[0] Epoch[34] Batch [0-20]	Speed: 21031.25 samples/sec	accuracy=nan
2023-03-20 10:35:39,622 Node[0] Epoch[34] Batch [20-40]	Speed: 21029.13 samples/sec	accuracy=nan
2023-03-20 10:35:42,727 Node[0] Epoch[34] Batch [40-60]	Speed: 21026.90 samples/sec	accuracy=nan
2023-03-20 10:35:45,831 Node[0] Epoch[34] Batch [60-80]	Speed: 21030.58 samples/sec	accuracy=nan
2023-03-20 10:35:48,936 Node[0] Epoch[34] Batch [80-100]	Speed: 21023.51 samples/sec	accuracy=nan
2023-03-20 10:35:52,042 Node[0] Epoch[34] Batch [100-120]	Speed: 21019.36 samples/sec	accuracy=nan
2023-03-20 10:35:55,148 Node[0] Epoch[34] Batch [120-140]	Speed: 21016.16 samples/sec	accuracy=nan
2023-03-20 10:35:58,254 Node[0] Epoch[34] Batch [140-160]	Speed: 21015.96 samples/sec	accuracy=nan
2023-03-20 10:36:01,357 Node[0] Epoch[34] Batch [160-180]	Speed: 21039.19 samples/sec	accuracy=nan
2023-03-20 10:36:04,462 Node[0] Epoch[34] Batch [180-200]	Speed: 21022.19 samples/sec	accuracy=nan
2023-03-20 10:36:07,565 Node[0] Epoch[34] Batch [200-220]	Speed: 21034.87 samples/sec	accuracy=nan
2023-03-20 10:36:10,674 Node[0] Epoch[34] Batch [220-240]	Speed: 20998.82 samples/sec	accuracy=nan
2023-03-20 10:36:13,778 Node[0] Epoch[34] Batch [240-260]	Speed: 21035.04 samples/sec	accuracy=nan
2023-03-20 10:36:16,885 Node[0] Epoch[34] Batch [260-280]	Speed: 21005.46 samples/sec	accuracy=nan
2023-03-20 10:36:19,987 Node[0] Epoch[34] Batch [280-300]	Speed: 21044.46 samples/sec	accuracy=nan
2023-03-20 10:36:23,093 Node[0] Epoch[34] Batch [300-320]	Speed: 21016.44 samples/sec	accuracy=nan
2023-03-20 10:36:26,195 Node[0] Epoch[34] Batch [320-340]	Speed: 21049.15 samples/sec	accuracy=nan
2023-03-20 10:36:29,298 Node[0] Epoch[34] Batch [340-360]	Speed: 21037.08 samples/sec	accuracy=nan
2023-03-20 10:36:32,403 Node[0] Epoch[34] Batch [360-380]	Speed: 21020.56 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679326594262, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-20 10:36:34,263 Node[0] Epoch[34] Time cost=61.004
:::MLLOG {"namespace": "", "time_ms": 1679326594263, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21001.45341540111}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679326594413, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-20 10:36:35,628 Node[0] Epoch[34] Validation-accuracy=0.759840
2023-03-20 10:36:35,628 Node[0] Epoch[34] Validation-correct-count=4749.000000
2023-03-20 10:36:35,628 Node[0] Epoch[34] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679326596071, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679326596072, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75978, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679326596072, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679326596072, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679326611
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 10:36:51 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 10:36:51 AM'
ENDING TIMING RUN AT 2023-03-20 10:36:51 AM
+ result=2300
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2300,root,2023-03-20 09:58:31 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2300,root,2023-03-20 09:58:31 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679326611
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 10:36:51 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 10:36:51 AM'
ENDING TIMING RUN AT 2023-03-20 10:36:51 AM
+ result=2300
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2300,root,2023-03-20 09:58:31 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2300,root,2023-03-20 09:58:31 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679326612
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 10:36:52 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 10:36:52 AM'
ENDING TIMING RUN AT 2023-03-20 10:36:52 AM
+ result=2301
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2301,root,2023-03-20 09:58:31 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2301,root,2023-03-20 09:58:31 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679326612
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 10:36:52 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 10:36:52 AM'
ENDING TIMING RUN AT 2023-03-20 10:36:52 AM
+ result=2301
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2301,root,2023-03-20 09:58:31 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2301,root,2023-03-20 09:58:31 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679326612
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 10:36:52 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 10:36:52 AM'
ENDING TIMING RUN AT 2023-03-20 10:36:52 AM
+ result=2301
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2301,root,2023-03-20 09:58:31 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2301,root,2023-03-20 09:58:31 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679326612
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 10:36:52 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 10:36:52 AM'
ENDING TIMING RUN AT 2023-03-20 10:36:52 AM
+ result=2301
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2301,root,2023-03-20 09:58:31 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2301,root,2023-03-20 09:58:31 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679326612
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 10:36:52 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 10:36:52 AM'
ENDING TIMING RUN AT 2023-03-20 10:36:52 AM
+ result=2301
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2301,root,2023-03-20 09:58:31 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2301,root,2023-03-20 09:58:31 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679326613
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 10:36:53 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 10:36:53 AM'
ENDING TIMING RUN AT 2023-03-20 10:36:53 AM
+ result=2302
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2302,root,2023-03-20 09:58:31 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2302,root,2023-03-20 09:58:31 AM'
+ export PROFILE=0
+ PROFILE=0
