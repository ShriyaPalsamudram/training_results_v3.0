+ echo 'Beginning trial 5 of 5'
Beginning trial 5 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node041 node046 '
+ echo 'hosts=node041 node046 '
hosts=node041 node046 
+ for node in $hosts
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679328956153, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679328956182, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679328956183, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679328956184, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679328956185, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node041 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node041
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679328967676, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679328972959, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679328972988, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679328972989, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679328972990, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679328972991, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node046 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node046
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679328983590, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=22976
+ SEED=22976
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node041: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node046: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export LR=12.5
++ LR=12.5
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export LR=12.5
++ LR=12.5
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ WARMUP_EPOCHS=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ export LARSETA=0.001
++ LARSETA=0.001
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DGXNNODES=2
++ DGXNNODES=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export DGXNNODES=2
++ DGXNNODES=2
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ UCX_NET_DEVICES=hfi1_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ date +%s
++ date +%s
++ date +%s
+ start=1679328984
+ start=1679328984
+ start=1679328984
+ start=1679328984
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 11:16:24 AM'
+ start_fmt='2023-03-20 11:16:24 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 11:16:24 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 11:16:24 AM'
STARTING TIMING RUN AT 2023-03-20 11:16:24 AM
STARTING TIMING RUN AT 2023-03-20 11:16:24 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ readonly local_rank=0
+ start_fmt='2023-03-20 11:16:24 AM'
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ start_fmt='2023-03-20 11:16:24 AM'
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ BATCHSIZE=408
+ echo 'STARTING TIMING RUN AT 2023-03-20 11:16:24 AM'
+ INPUT_BATCH_MULTIPLIER=1
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ echo 'STARTING TIMING RUN AT 2023-03-20 11:16:24 AM'
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ readonly global_rank=0
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
STARTING TIMING RUN AT 2023-03-20 11:16:24 AM
STARTING TIMING RUN AT 2023-03-20 11:16:24 AM
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ global_rank=0
+ readonly global_rank=0
+ global_rank=0
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ LABELSMOOTHING=0.1
+ SEED=22976
+ readonly local_rank=0
+ local_rank=0
+ SEED=22976
+ readonly local_rank=0
+ local_rank=0
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ SLURM_NTASKS_PER_NODE=4
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ SLURM_NTASKS_PER_NODE=4
+ DALI_PREFETCH_QUEUE=5
+ OPTIMIZER=sgdwfastlars
+ DALI_PREFETCH_QUEUE=5
+ BATCHSIZE=408
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_THREADS=6
+ OPTIMIZER=sgdwfastlars
+ INPUT_BATCH_MULTIPLIER=1
+ DALI_CACHE_SIZE=0
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ BATCHSIZE=408
+ KVSTORE=horovod
+ DALI_ROI_DECODE=1
+ LR=12.5
+ INPUT_BATCH_MULTIPLIER=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ MOM=0.9
+ LRSCHED=pow2
+ KVSTORE=horovod
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ WARMUP_EPOCHS=2
+ LR=12.5
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ LARSETA=0.001
+ DALI_DECODER_BUFFER_HINT=1315942
+ MOM=0.9
+ LRSCHED=pow2
+ DALI_HW_DECODER_LOAD=0
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ WD=5.0e-05
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ WARMUP_EPOCHS=2
+ DALI_DONT_USE_MMAP=0
+ LABELSMOOTHING=0.1
+ SEED=22976
+ NUMEPOCHS=37
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ LARSETA=0.001
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_HW_DECODER_LOAD=0
+ NETWORK=resnet-v1b-stats-fl
+ NETWORK=resnet-v1b-stats-fl
+ DALI_PREFETCH_QUEUE=5
+ WD=5.0e-05
+ BN_GROUP=1
+ PROFILE=0
+ BN_GROUP=1
+ PROFILE=0
+ LABELSMOOTHING=0.1
+ PROFILE_EXCEL=0
+ NODALI=0
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ PROFILE_EXCEL=0
+ NODALI=0
+ SEED=22976
+ EVAL_OFFSET=2
+ NUMEXAMPLES=
+ DALI_CACHE_SIZE=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_ROI_DECODE=1
+ THR=0.759
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ [[ 0 == 1 ]]
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_CACHE_SIZE=0
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ DATAROOT=/data
+ DALI_TMP_BUFFER_HINT=355568328
+ echo 'running benchmark'
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_DECODER_BUFFER_HINT=1315942
+ echo 'running benchmark'
+ export NGPUS=4
running benchmark
running benchmark
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ export NGPUS=4
+ NGPUS=4
+ NGPUS=4
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DALI_DECODER_BUFFER_HINT=1315942
+ NUMEPOCHS=37
+ DALI_CROP_BUFFER_HINT=165581
+ [[ 0 -ge 1 ]]
+ [[ 0 -ge 1 ]]
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ PROFILE=0
+ NUMEPOCHS=37
+ PROFILE_EXCEL=0
+ NETWORK=resnet-v1b-stats-fl
+ NODALI=0
+ BN_GROUP=1
+ PROFILE=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ [[ 0 == 1 ]]
+ PROFILE_ALL_LOCAL_RANKS=0
+ DATAROOT=/data
+ THR=0.759
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ [[ 0 -ge 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ sed 's/,$//'
++ tr '\n' ,
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
+ source ./config_2xR750xax4A100.sh
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export DGXNNODES=2
++ DGXNNODES=2
+++ dirname ./config_2xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ date +%s
++ date +%s
++ date +%s
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679328984
+ start=1679328984
+ start=1679328984
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 11:16:24 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 11:16:24 AM'
STARTING TIMING RUN AT 2023-03-20 11:16:24 AM
+ readonly global_rank=0
+ global_rank=0
+ start_fmt='2023-03-20 11:16:24 AM'
+ readonly local_rank=0
+ local_rank=0
+ start_fmt='2023-03-20 11:16:24 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 11:16:24 AM'
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
STARTING TIMING RUN AT 2023-03-20 11:16:24 AM
+ echo 'STARTING TIMING RUN AT 2023-03-20 11:16:24 AM'
STARTING TIMING RUN AT 2023-03-20 11:16:24 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ LABELSMOOTHING=0.1
+ SEED=22976
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ SEED=22976
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=22976
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ [[ 0 -ge 1 ]]
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
running benchmark
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ [[ 0 -ge 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start=1679328984
++ seq 0 3
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ date '+%Y-%m-%d %r'
++ sed 's/,$//'
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+ start_fmt='2023-03-20 11:16:24 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 11:16:24 AM'
STARTING TIMING RUN AT 2023-03-20 11:16:24 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=22976
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 22976 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node041:894150] MCW rank 1 is not bound (or bound to all available processors)
[node041:894151] MCW rank 3 is not bound (or bound to all available processors)
[node041:894149] MCW rank 2 is not bound (or bound to all available processors)
[node041:894148] MCW rank 0 is not bound (or bound to all available processors)
[node046:1066075] MCW rank 4 is not bound (or bound to all available processors)
[node046:1066073] MCW rank 6 is not bound (or bound to all available processors)
[node046:1066074] MCW rank 7 is not bound (or bound to all available processors)
[node046:1066076] MCW rank 5 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679328989885, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[11:16:36] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:16:36] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:16:36] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:16:36] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679328996957, "event_type": "POINT_IN_TIME", "key": "seed", "value": 22976, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[11:16:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:16:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:16:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[11:16:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679328999543, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 408, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[11:16:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:16:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:16:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:16:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679329004061, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004061, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004062, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004062, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004062, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004062, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004062, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004063, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004063, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004063, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004063, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004063, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004064, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004064, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004064, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004064, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004064, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004065, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004065, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004065, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004065, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004066, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004066, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004066, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004066, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004066, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004066, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004067, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004067, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004067, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004067, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004067, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004068, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004068, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004068, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004068, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004068, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004069, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004069, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004069, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004069, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004069, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004070, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004070, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004070, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004070, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004070, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004071, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004071, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004071, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004071, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004071, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004072, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004072, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004072, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004072, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004072, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004073, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004073, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004073, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004073, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004073, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004074, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004074, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004074, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004074, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004074, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004074, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004075, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004075, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004075, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004075, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004075, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004076, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004076, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004076, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004076, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004076, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004077, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004077, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004077, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004077, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004078, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004078, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004078, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004078, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004078, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004078, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004079, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004079, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004079, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004079, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004079, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004080, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004080, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004080, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004080, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004080, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004081, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004081, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004081, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004081, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004081, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004082, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004082, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004082, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004082, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004083, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004083, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004083, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004083, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004083, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004084, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004084, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004084, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004084, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004085, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004085, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004085, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004085, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004085, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004086, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004086, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004086, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004086, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004087, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004087, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004087, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004087, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004088, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004088, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004088, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004088, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004088, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004089, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004089, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004089, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004089, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004089, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004090, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004090, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004090, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004090, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004090, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004091, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004091, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004091, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004091, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004091, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004092, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004092, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004092, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004092, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004092, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004092, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004093, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004093, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004093, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004093, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004093, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679329004094, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[11:16:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:16:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:16:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[11:16:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 11:16:46,339 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=54678, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 11:16:46,339 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=32959, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 11:16:46,340 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=945, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 11:16:46,340 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=55063, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679329006340, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679329006342, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679329006342, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679329006342, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679329006342, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 408, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679329006342, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679329006342, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679329006342, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679329006342, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679329006342, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679329006342, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679329006342, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679329006342, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679329006342, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679329006342, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679329006343, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679329006343, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679329006343, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 12.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 11:16:46,342 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=49328, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679329006343, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679329006343, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 11:16:46,342 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=25502, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 11:16:46,342 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=46478, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 11:16:46,343 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=57316, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679329093733, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679329093735, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679329093735, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679329094289, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679329094413, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679329094414, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-20 11:18:17,673 Node[0] Epoch[0] Batch [0-20]	Speed: 20110.79 samples/sec	accuracy=nan
2023-03-20 11:18:20,771 Node[0] Epoch[0] Batch [20-40]	Speed: 21071.91 samples/sec	accuracy=nan
2023-03-20 11:18:23,871 Node[0] Epoch[0] Batch [40-60]	Speed: 21061.95 samples/sec	accuracy=nan
2023-03-20 11:18:26,969 Node[0] Epoch[0] Batch [60-80]	Speed: 21066.59 samples/sec	accuracy=nan
2023-03-20 11:18:30,069 Node[0] Epoch[0] Batch [80-100]	Speed: 21059.08 samples/sec	accuracy=nan
2023-03-20 11:18:33,169 Node[0] Epoch[0] Batch [100-120]	Speed: 21060.90 samples/sec	accuracy=nan
2023-03-20 11:18:36,269 Node[0] Epoch[0] Batch [120-140]	Speed: 21056.36 samples/sec	accuracy=nan
2023-03-20 11:18:39,376 Node[0] Epoch[0] Batch [140-160]	Speed: 21009.51 samples/sec	accuracy=nan
2023-03-20 11:18:42,483 Node[0] Epoch[0] Batch [160-180]	Speed: 21009.95 samples/sec	accuracy=nan
2023-03-20 11:18:45,595 Node[0] Epoch[0] Batch [180-200]	Speed: 20981.39 samples/sec	accuracy=nan
2023-03-20 11:18:50,974 Node[0] Epoch[0] Batch [200-220]	Speed: 12135.14 samples/sec	accuracy=nan
2023-03-20 11:18:56,333 Node[0] Epoch[0] Batch [220-240]	Speed: 12181.61 samples/sec	accuracy=nan
2023-03-20 11:19:06,025 Node[0] Epoch[0] Batch [240-260]	Speed: 6735.41 samples/sec	accuracy=nan
2023-03-20 11:19:11,394 Node[0] Epoch[0] Batch [260-280]	Speed: 12158.02 samples/sec	accuracy=nan
2023-03-20 11:19:14,501 Node[0] Epoch[0] Batch [280-300]	Speed: 21011.41 samples/sec	accuracy=nan
2023-03-20 11:19:17,615 Node[0] Epoch[0] Batch [300-320]	Speed: 20966.64 samples/sec	accuracy=nan
2023-03-20 11:19:20,720 Node[0] Epoch[0] Batch [320-340]	Speed: 21019.58 samples/sec	accuracy=nan
2023-03-20 11:19:23,830 Node[0] Epoch[0] Batch [340-360]	Speed: 20992.89 samples/sec	accuracy=nan
2023-03-20 11:19:26,946 Node[0] Epoch[0] Batch [360-380]	Speed: 20952.37 samples/sec	accuracy=nan
2023-03-20 11:19:28,812 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:19:28,812 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:19:28,812 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329168812, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-20 11:19:28,812 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:19:28,813 Node[0] Epoch[0] Time cost=74.398
:::MLLOG {"namespace": "", "time_ms": 1679329168813, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 17220.401518124585}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-20 11:19:28,812 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:19:28,812 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:19:28,813 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329168814, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-20 11:19:28,814 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:19:32,084 Node[0] Epoch[1] Batch [0-20]	Speed: 20954.01 samples/sec	accuracy=nan
2023-03-20 11:19:35,200 Node[0] Epoch[1] Batch [20-40]	Speed: 20949.55 samples/sec	accuracy=nan
2023-03-20 11:19:38,314 Node[0] Epoch[1] Batch [40-60]	Speed: 20965.87 samples/sec	accuracy=nan
2023-03-20 11:19:41,429 Node[0] Epoch[1] Batch [60-80]	Speed: 20950.64 samples/sec	accuracy=nan
2023-03-20 11:19:44,548 Node[0] Epoch[1] Batch [80-100]	Speed: 20935.08 samples/sec	accuracy=nan
2023-03-20 11:19:47,668 Node[0] Epoch[1] Batch [100-120]	Speed: 20921.82 samples/sec	accuracy=nan
2023-03-20 11:19:50,786 Node[0] Epoch[1] Batch [120-140]	Speed: 20936.23 samples/sec	accuracy=nan
2023-03-20 11:19:53,906 Node[0] Epoch[1] Batch [140-160]	Speed: 20919.50 samples/sec	accuracy=nan
2023-03-20 11:19:57,025 Node[0] Epoch[1] Batch [160-180]	Speed: 20928.62 samples/sec	accuracy=nan
2023-03-20 11:20:00,150 Node[0] Epoch[1] Batch [180-200]	Speed: 20891.78 samples/sec	accuracy=nan
2023-03-20 11:20:03,266 Node[0] Epoch[1] Batch [200-220]	Speed: 20951.08 samples/sec	accuracy=nan
2023-03-20 11:20:06,384 Node[0] Epoch[1] Batch [220-240]	Speed: 20937.85 samples/sec	accuracy=nan
2023-03-20 11:20:09,505 Node[0] Epoch[1] Batch [240-260]	Speed: 20913.00 samples/sec	accuracy=nan
2023-03-20 11:20:12,627 Node[0] Epoch[1] Batch [260-280]	Speed: 20913.71 samples/sec	accuracy=nan
2023-03-20 11:20:15,753 Node[0] Epoch[1] Batch [280-300]	Speed: 20881.16 samples/sec	accuracy=nan
2023-03-20 11:20:18,868 Node[0] Epoch[1] Batch [300-320]	Speed: 20956.76 samples/sec	accuracy=nan
2023-03-20 11:20:21,986 Node[0] Epoch[1] Batch [320-340]	Speed: 20935.31 samples/sec	accuracy=nan
2023-03-20 11:20:25,102 Node[0] Epoch[1] Batch [340-360]	Speed: 20949.55 samples/sec	accuracy=nan
2023-03-20 11:20:28,222 Node[0] Epoch[1] Batch [360-380]	Speed: 20923.35 samples/sec	accuracy=nan
2023-03-20 11:20:30,090 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:20:30,090 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:20:30,090 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:20:30,090 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:20:30,090 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:20:30,090 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:20:30,091 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329230091, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-20 11:20:30,092 Node[0] Epoch[1] Time cost=61.278
:::MLLOG {"namespace": "", "time_ms": 1679329230092, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20907.481437281705}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679329230092, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-20 11:20:30,092 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:20:33,369 Node[0] Epoch[2] Batch [0-20]	Speed: 20915.32 samples/sec	accuracy=nan
2023-03-20 11:20:36,481 Node[0] Epoch[2] Batch [20-40]	Speed: 20973.41 samples/sec	accuracy=nan
2023-03-20 11:20:39,602 Node[0] Epoch[2] Batch [40-60]	Speed: 20922.54 samples/sec	accuracy=nan
2023-03-20 11:20:42,716 Node[0] Epoch[2] Batch [60-80]	Speed: 20960.24 samples/sec	accuracy=nan
2023-03-20 11:20:45,830 Node[0] Epoch[2] Batch [80-100]	Speed: 20965.13 samples/sec	accuracy=nan
2023-03-20 11:20:48,944 Node[0] Epoch[2] Batch [100-120]	Speed: 20962.50 samples/sec	accuracy=nan
2023-03-20 11:20:52,055 Node[0] Epoch[2] Batch [120-140]	Speed: 20981.92 samples/sec	accuracy=nan
2023-03-20 11:20:55,169 Node[0] Epoch[2] Batch [140-160]	Speed: 20963.43 samples/sec	accuracy=nan
2023-03-20 11:20:58,284 Node[0] Epoch[2] Batch [160-180]	Speed: 20958.51 samples/sec	accuracy=nan
2023-03-20 11:21:01,395 Node[0] Epoch[2] Batch [180-200]	Speed: 20984.19 samples/sec	accuracy=nan
2023-03-20 11:21:04,509 Node[0] Epoch[2] Batch [200-220]	Speed: 20961.80 samples/sec	accuracy=nan
2023-03-20 11:21:07,620 Node[0] Epoch[2] Batch [220-240]	Speed: 20987.17 samples/sec	accuracy=nan
2023-03-20 11:21:10,733 Node[0] Epoch[2] Batch [240-260]	Speed: 20966.96 samples/sec	accuracy=nan
2023-03-20 11:21:13,844 Node[0] Epoch[2] Batch [260-280]	Speed: 20983.52 samples/sec	accuracy=nan
2023-03-20 11:21:16,954 Node[0] Epoch[2] Batch [280-300]	Speed: 20987.85 samples/sec	accuracy=nan
2023-03-20 11:21:20,067 Node[0] Epoch[2] Batch [300-320]	Speed: 20969.38 samples/sec	accuracy=nan
2023-03-20 11:21:23,175 Node[0] Epoch[2] Batch [320-340]	Speed: 21010.20 samples/sec	accuracy=nan
2023-03-20 11:21:26,282 Node[0] Epoch[2] Batch [340-360]	Speed: 21005.36 samples/sec	accuracy=nan
2023-03-20 11:21:29,392 Node[0] Epoch[2] Batch [360-380]	Speed: 20993.91 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679329291100, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-20 11:21:31,101 Node[0] Epoch[2] Time cost=61.009
:::MLLOG {"namespace": "", "time_ms": 1679329291101, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20999.681639365837}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
2023-03-20 11:21:31,251 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:21:31,252 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:21:31,251 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329291252, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-20 11:21:31,251 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:21:31,251 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:21:31,251 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:21:31,252 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:21:31,252 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:21:32,403 Node[0] Epoch[2] Validation-accuracy=0.281760
2023-03-20 11:21:32,403 Node[0] Epoch[2] Validation-correct-count=1761.000000
2023-03-20 11:21:32,404 Node[0] Epoch[2] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679329292829, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679329292829, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.2799, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-20 11:21:32,829 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329292829, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1679329292829, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-20 11:21:32,829 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:21:32,828 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:21:32,829 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:21:32,828 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:21:32,828 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329292829, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-20 11:21:32,828 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:21:32,829 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:21:35,971 Node[0] Epoch[3] Batch [0-20]	Speed: 20810.66 samples/sec	accuracy=nan
2023-03-20 11:21:39,085 Node[0] Epoch[3] Batch [20-40]	Speed: 20962.60 samples/sec	accuracy=nan
2023-03-20 11:21:42,199 Node[0] Epoch[3] Batch [40-60]	Speed: 20966.83 samples/sec	accuracy=nan
2023-03-20 11:21:45,314 Node[0] Epoch[3] Batch [60-80]	Speed: 20952.77 samples/sec	accuracy=nan
2023-03-20 11:21:48,429 Node[0] Epoch[3] Batch [80-100]	Speed: 20959.78 samples/sec	accuracy=nan
2023-03-20 11:21:51,543 Node[0] Epoch[3] Batch [100-120]	Speed: 20963.58 samples/sec	accuracy=nan
2023-03-20 11:21:54,656 Node[0] Epoch[3] Batch [120-140]	Speed: 20970.57 samples/sec	accuracy=nan
2023-03-20 11:21:57,766 Node[0] Epoch[3] Batch [140-160]	Speed: 20992.15 samples/sec	accuracy=nan
2023-03-20 11:22:00,876 Node[0] Epoch[3] Batch [160-180]	Speed: 20987.07 samples/sec	accuracy=nan
2023-03-20 11:22:03,987 Node[0] Epoch[3] Batch [180-200]	Speed: 20985.27 samples/sec	accuracy=nan
2023-03-20 11:22:07,098 Node[0] Epoch[3] Batch [200-220]	Speed: 20983.64 samples/sec	accuracy=nan
2023-03-20 11:22:10,211 Node[0] Epoch[3] Batch [220-240]	Speed: 20969.80 samples/sec	accuracy=nan
2023-03-20 11:22:13,320 Node[0] Epoch[3] Batch [240-260]	Speed: 20994.90 samples/sec	accuracy=nan
2023-03-20 11:22:16,429 Node[0] Epoch[3] Batch [260-280]	Speed: 20997.75 samples/sec	accuracy=nan
2023-03-20 11:22:19,540 Node[0] Epoch[3] Batch [280-300]	Speed: 20980.94 samples/sec	accuracy=nan
2023-03-20 11:22:22,646 Node[0] Epoch[3] Batch [300-320]	Speed: 21022.50 samples/sec	accuracy=nan
2023-03-20 11:22:25,751 Node[0] Epoch[3] Batch [320-340]	Speed: 21024.27 samples/sec	accuracy=nan
2023-03-20 11:22:28,856 Node[0] Epoch[3] Batch [340-360]	Speed: 21023.09 samples/sec	accuracy=nan
2023-03-20 11:22:31,965 Node[0] Epoch[3] Batch [360-380]	Speed: 20997.05 samples/sec	accuracy=nan
2023-03-20 11:22:33,826 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:22:33,826 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:22:33,826 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:22:33,826 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:22:33,826 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:22:33,826 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:22:33,826 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329353827, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-20 11:22:33,828 Node[0] Epoch[3] Time cost=60.998
:::MLLOG {"namespace": "", "time_ms": 1679329353828, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21003.321868108582}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679329353828, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-20 11:22:33,828 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:22:37,092 Node[0] Epoch[4] Batch [0-20]	Speed: 20998.68 samples/sec	accuracy=nan
2023-03-20 11:22:40,205 Node[0] Epoch[4] Batch [20-40]	Speed: 20972.58 samples/sec	accuracy=nan
2023-03-20 11:22:43,310 Node[0] Epoch[4] Batch [40-60]	Speed: 21023.46 samples/sec	accuracy=nan
2023-03-20 11:22:46,416 Node[0] Epoch[4] Batch [60-80]	Speed: 21015.22 samples/sec	accuracy=nan
2023-03-20 11:22:49,522 Node[0] Epoch[4] Batch [80-100]	Speed: 21020.35 samples/sec	accuracy=nan
2023-03-20 11:22:52,626 Node[0] Epoch[4] Batch [100-120]	Speed: 21029.49 samples/sec	accuracy=nan
2023-03-20 11:22:55,727 Node[0] Epoch[4] Batch [120-140]	Speed: 21052.99 samples/sec	accuracy=nan
2023-03-20 11:22:58,828 Node[0] Epoch[4] Batch [140-160]	Speed: 21048.46 samples/sec	accuracy=nan
2023-03-20 11:23:01,928 Node[0] Epoch[4] Batch [160-180]	Speed: 21059.84 samples/sec	accuracy=nan
2023-03-20 11:23:05,029 Node[0] Epoch[4] Batch [180-200]	Speed: 21050.18 samples/sec	accuracy=nan
2023-03-20 11:23:08,129 Node[0] Epoch[4] Batch [200-220]	Speed: 21060.71 samples/sec	accuracy=nan
2023-03-20 11:23:11,230 Node[0] Epoch[4] Batch [220-240]	Speed: 21048.04 samples/sec	accuracy=nan
2023-03-20 11:23:14,330 Node[0] Epoch[4] Batch [240-260]	Speed: 21061.07 samples/sec	accuracy=nan
2023-03-20 11:23:17,428 Node[0] Epoch[4] Batch [260-280]	Speed: 21069.24 samples/sec	accuracy=nan
2023-03-20 11:23:20,532 Node[0] Epoch[4] Batch [280-300]	Speed: 21033.94 samples/sec	accuracy=nan
2023-03-20 11:23:23,633 Node[0] Epoch[4] Batch [300-320]	Speed: 21053.12 samples/sec	accuracy=nan
2023-03-20 11:23:26,730 Node[0] Epoch[4] Batch [320-340]	Speed: 21074.82 samples/sec	accuracy=nan
2023-03-20 11:23:29,830 Node[0] Epoch[4] Batch [340-360]	Speed: 21055.85 samples/sec	accuracy=nan
2023-03-20 11:23:32,928 Node[0] Epoch[4] Batch [360-380]	Speed: 21074.87 samples/sec	accuracy=nan
2023-03-20 11:23:34,631 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:23:34,631 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:23:34,632 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:23:34,631 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:23:34,632 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:23:34,632 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329414632, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-20 11:23:34,632 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:23:34,633 Node[0] Epoch[4] Time cost=60.805
:::MLLOG {"namespace": "", "time_ms": 1679329414633, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21070.154115926714}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1679329414633, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-20 11:23:34,633 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:23:37,890 Node[0] Epoch[5] Batch [0-20]	Speed: 21064.59 samples/sec	accuracy=nan
2023-03-20 11:23:40,995 Node[0] Epoch[5] Batch [20-40]	Speed: 21028.41 samples/sec	accuracy=nan
2023-03-20 11:23:44,095 Node[0] Epoch[5] Batch [40-60]	Speed: 21056.43 samples/sec	accuracy=nan
2023-03-20 11:23:47,198 Node[0] Epoch[5] Batch [60-80]	Speed: 21036.41 samples/sec	accuracy=nan
2023-03-20 11:23:50,299 Node[0] Epoch[5] Batch [80-100]	Speed: 21051.78 samples/sec	accuracy=nan
2023-03-20 11:23:53,399 Node[0] Epoch[5] Batch [100-120]	Speed: 21055.74 samples/sec	accuracy=nan
2023-03-20 11:23:56,501 Node[0] Epoch[5] Batch [120-140]	Speed: 21047.09 samples/sec	accuracy=nan
2023-03-20 11:23:59,602 Node[0] Epoch[5] Batch [140-160]	Speed: 21050.32 samples/sec	accuracy=nan
2023-03-20 11:24:02,706 Node[0] Epoch[5] Batch [160-180]	Speed: 21034.67 samples/sec	accuracy=nan
2023-03-20 11:24:05,807 Node[0] Epoch[5] Batch [180-200]	Speed: 21049.26 samples/sec	accuracy=nan
2023-03-20 11:24:08,904 Node[0] Epoch[5] Batch [200-220]	Speed: 21078.35 samples/sec	accuracy=nan
2023-03-20 11:24:12,005 Node[0] Epoch[5] Batch [220-240]	Speed: 21049.14 samples/sec	accuracy=nan
2023-03-20 11:24:15,100 Node[0] Epoch[5] Batch [240-260]	Speed: 21091.13 samples/sec	accuracy=nan
2023-03-20 11:24:18,205 Node[0] Epoch[5] Batch [260-280]	Speed: 21026.82 samples/sec	accuracy=nan
2023-03-20 11:24:21,304 Node[0] Epoch[5] Batch [280-300]	Speed: 21063.58 samples/sec	accuracy=nan
2023-03-20 11:24:24,404 Node[0] Epoch[5] Batch [300-320]	Speed: 21056.50 samples/sec	accuracy=nan
2023-03-20 11:24:27,502 Node[0] Epoch[5] Batch [320-340]	Speed: 21074.29 samples/sec	accuracy=nan
2023-03-20 11:24:30,601 Node[0] Epoch[5] Batch [340-360]	Speed: 21062.74 samples/sec	accuracy=nan
2023-03-20 11:24:33,709 Node[0] Epoch[5] Batch [360-380]	Speed: 21009.21 samples/sec	accuracy=nan
2023-03-20 11:24:35,568 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:24:35,569 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:24:35,569 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:24:35,569 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:24:35,569 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:24:35,569 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:24:35,569 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329475569, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-20 11:24:35,570 Node[0] Epoch[5] Time cost=60.937
:::MLLOG {"namespace": "", "time_ms": 1679329475570, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21024.477546327234}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679329475571, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-20 11:24:35,571 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:24:38,824 Node[0] Epoch[6] Batch [0-20]	Speed: 21062.23 samples/sec	accuracy=nan
2023-03-20 11:24:41,927 Node[0] Epoch[6] Batch [20-40]	Speed: 21041.81 samples/sec	accuracy=nan
2023-03-20 11:24:45,025 Node[0] Epoch[6] Batch [40-60]	Speed: 21068.93 samples/sec	accuracy=nan
2023-03-20 11:24:48,125 Node[0] Epoch[6] Batch [60-80]	Speed: 21059.09 samples/sec	accuracy=nan
2023-03-20 11:24:51,225 Node[0] Epoch[6] Batch [80-100]	Speed: 21061.67 samples/sec	accuracy=nan
2023-03-20 11:24:54,328 Node[0] Epoch[6] Batch [100-120]	Speed: 21033.24 samples/sec	accuracy=nan
2023-03-20 11:24:57,425 Node[0] Epoch[6] Batch [120-140]	Speed: 21080.45 samples/sec	accuracy=nan
2023-03-20 11:25:00,520 Node[0] Epoch[6] Batch [140-160]	Speed: 21090.19 samples/sec	accuracy=nan
2023-03-20 11:25:03,628 Node[0] Epoch[6] Batch [160-180]	Speed: 21005.00 samples/sec	accuracy=nan
2023-03-20 11:25:06,731 Node[0] Epoch[6] Batch [180-200]	Speed: 21036.79 samples/sec	accuracy=nan
2023-03-20 11:25:09,826 Node[0] Epoch[6] Batch [200-220]	Speed: 21092.53 samples/sec	accuracy=nan
2023-03-20 11:25:12,925 Node[0] Epoch[6] Batch [220-240]	Speed: 21068.08 samples/sec	accuracy=nan
2023-03-20 11:25:16,021 Node[0] Epoch[6] Batch [240-260]	Speed: 21079.89 samples/sec	accuracy=nan
2023-03-20 11:25:19,119 Node[0] Epoch[6] Batch [260-280]	Speed: 21076.81 samples/sec	accuracy=nan
2023-03-20 11:25:22,217 Node[0] Epoch[6] Batch [280-300]	Speed: 21067.85 samples/sec	accuracy=nan
2023-03-20 11:25:25,323 Node[0] Epoch[6] Batch [300-320]	Speed: 21017.96 samples/sec	accuracy=nan
2023-03-20 11:25:28,419 Node[0] Epoch[6] Batch [320-340]	Speed: 21089.27 samples/sec	accuracy=nan
2023-03-20 11:25:31,516 Node[0] Epoch[6] Batch [340-360]	Speed: 21075.57 samples/sec	accuracy=nan
2023-03-20 11:25:34,611 Node[0] Epoch[6] Batch [360-380]	Speed: 21094.85 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679329536311, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-20 11:25:36,312 Node[0] Epoch[6] Time cost=60.741
:::MLLOG {"namespace": "", "time_ms": 1679329536312, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21092.28914244975}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679329536462, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-20 11:25:37,642 Node[0] Epoch[6] Validation-accuracy=0.437280
2023-03-20 11:25:37,642 Node[0] Epoch[6] Validation-correct-count=2733.000000
2023-03-20 11:25:37,642 Node[0] Epoch[6] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679329538122, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679329538123, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.43632, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679329538123, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679329538123, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-20 11:25:38,123 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:25:38,123 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:25:38,123 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:25:38,123 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:25:38,123 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:25:38,123 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329538123, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-20 11:25:38,123 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:25:38,123 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:25:41,253 Node[0] Epoch[7] Batch [0-20]	Speed: 20910.06 samples/sec	accuracy=nan
2023-03-20 11:25:44,355 Node[0] Epoch[7] Batch [20-40]	Speed: 21046.53 samples/sec	accuracy=nan
2023-03-20 11:25:47,454 Node[0] Epoch[7] Batch [40-60]	Speed: 21065.83 samples/sec	accuracy=nan
2023-03-20 11:25:50,558 Node[0] Epoch[7] Batch [60-80]	Speed: 21025.62 samples/sec	accuracy=nan
2023-03-20 11:25:53,660 Node[0] Epoch[7] Batch [80-100]	Speed: 21050.13 samples/sec	accuracy=nan
2023-03-20 11:25:56,762 Node[0] Epoch[7] Batch [100-120]	Speed: 21039.11 samples/sec	accuracy=nan
2023-03-20 11:25:59,865 Node[0] Epoch[7] Batch [120-140]	Speed: 21042.53 samples/sec	accuracy=nan
2023-03-20 11:26:02,966 Node[0] Epoch[7] Batch [140-160]	Speed: 21052.21 samples/sec	accuracy=nan
2023-03-20 11:26:06,080 Node[0] Epoch[7] Batch [160-180]	Speed: 20963.64 samples/sec	accuracy=nan
2023-03-20 11:26:09,183 Node[0] Epoch[7] Batch [180-200]	Speed: 21034.97 samples/sec	accuracy=nan
2023-03-20 11:26:12,285 Node[0] Epoch[7] Batch [200-220]	Speed: 21046.69 samples/sec	accuracy=nan
2023-03-20 11:26:15,384 Node[0] Epoch[7] Batch [220-240]	Speed: 21064.99 samples/sec	accuracy=nan
2023-03-20 11:26:18,481 Node[0] Epoch[7] Batch [240-260]	Speed: 21078.00 samples/sec	accuracy=nan
2023-03-20 11:26:21,573 Node[0] Epoch[7] Batch [260-280]	Speed: 21107.45 samples/sec	accuracy=nan
2023-03-20 11:26:24,670 Node[0] Epoch[7] Batch [280-300]	Speed: 21081.55 samples/sec	accuracy=nan
2023-03-20 11:26:27,771 Node[0] Epoch[7] Batch [300-320]	Speed: 21052.85 samples/sec	accuracy=nan
2023-03-20 11:26:30,873 Node[0] Epoch[7] Batch [320-340]	Speed: 21042.91 samples/sec	accuracy=nan
2023-03-20 11:26:33,974 Node[0] Epoch[7] Batch [340-360]	Speed: 21054.34 samples/sec	accuracy=nan
2023-03-20 11:26:37,069 Node[0] Epoch[7] Batch [360-380]	Speed: 21089.96 samples/sec	accuracy=nan
2023-03-20 11:26:38,925 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:26:38,925 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:26:38,925 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:26:38,925 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:26:38,925 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:26:38,926 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:26:38,926 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329598926, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-20 11:26:38,927 Node[0] Epoch[7] Time cost=60.804
:::MLLOG {"namespace": "", "time_ms": 1679329598927, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21070.546306446588}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679329598927, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-20 11:26:38,927 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:26:42,180 Node[0] Epoch[8] Batch [0-20]	Speed: 21072.61 samples/sec	accuracy=nan
2023-03-20 11:26:45,280 Node[0] Epoch[8] Batch [20-40]	Speed: 21055.33 samples/sec	accuracy=nan
2023-03-20 11:26:48,382 Node[0] Epoch[8] Batch [40-60]	Speed: 21046.56 samples/sec	accuracy=nan
2023-03-20 11:26:51,483 Node[0] Epoch[8] Batch [60-80]	Speed: 21048.71 samples/sec	accuracy=nan
2023-03-20 11:26:54,588 Node[0] Epoch[8] Batch [80-100]	Speed: 21027.68 samples/sec	accuracy=nan
2023-03-20 11:26:57,685 Node[0] Epoch[8] Batch [100-120]	Speed: 21076.50 samples/sec	accuracy=nan
2023-03-20 11:27:00,780 Node[0] Epoch[8] Batch [120-140]	Speed: 21090.80 samples/sec	accuracy=nan
2023-03-20 11:27:03,880 Node[0] Epoch[8] Batch [140-160]	Speed: 21061.46 samples/sec	accuracy=nan
2023-03-20 11:27:06,982 Node[0] Epoch[8] Batch [160-180]	Speed: 21043.10 samples/sec	accuracy=nan
2023-03-20 11:27:10,083 Node[0] Epoch[8] Batch [180-200]	Speed: 21049.64 samples/sec	accuracy=nan
2023-03-20 11:27:13,183 Node[0] Epoch[8] Batch [200-220]	Speed: 21058.95 samples/sec	accuracy=nan
2023-03-20 11:27:16,282 Node[0] Epoch[8] Batch [220-240]	Speed: 21065.43 samples/sec	accuracy=nan
2023-03-20 11:27:19,380 Node[0] Epoch[8] Batch [240-260]	Speed: 21073.11 samples/sec	accuracy=nan
2023-03-20 11:27:22,481 Node[0] Epoch[8] Batch [260-280]	Speed: 21049.57 samples/sec	accuracy=nan
2023-03-20 11:27:25,582 Node[0] Epoch[8] Batch [280-300]	Speed: 21051.72 samples/sec	accuracy=nan
2023-03-20 11:27:28,683 Node[0] Epoch[8] Batch [300-320]	Speed: 21052.08 samples/sec	accuracy=nan
2023-03-20 11:27:31,782 Node[0] Epoch[8] Batch [320-340]	Speed: 21059.58 samples/sec	accuracy=nan
2023-03-20 11:27:34,880 Node[0] Epoch[8] Batch [340-360]	Speed: 21077.10 samples/sec	accuracy=nan
2023-03-20 11:27:37,978 Node[0] Epoch[8] Batch [360-380]	Speed: 21070.86 samples/sec	accuracy=nan
2023-03-20 11:27:39,678 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:27:39,678 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:27:39,678 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:27:39,678 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:27:39,678 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:27:39,678 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:27:39,679 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329659679, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-20 11:27:39,680 Node[0] Epoch[8] Time cost=60.753
:::MLLOG {"namespace": "", "time_ms": 1679329659681, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21088.107548831456}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679329659681, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-20 11:27:39,681 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:27:42,937 Node[0] Epoch[9] Batch [0-20]	Speed: 21067.42 samples/sec	accuracy=nan
2023-03-20 11:27:46,033 Node[0] Epoch[9] Batch [20-40]	Speed: 21082.90 samples/sec	accuracy=nan
2023-03-20 11:27:49,131 Node[0] Epoch[9] Batch [40-60]	Speed: 21071.84 samples/sec	accuracy=nan
2023-03-20 11:27:52,233 Node[0] Epoch[9] Batch [60-80]	Speed: 21042.71 samples/sec	accuracy=nan
2023-03-20 11:27:55,332 Node[0] Epoch[9] Batch [80-100]	Speed: 21064.37 samples/sec	accuracy=nan
2023-03-20 11:27:58,434 Node[0] Epoch[9] Batch [100-120]	Speed: 21043.42 samples/sec	accuracy=nan
2023-03-20 11:28:01,533 Node[0] Epoch[9] Batch [120-140]	Speed: 21064.93 samples/sec	accuracy=nan
2023-03-20 11:28:04,631 Node[0] Epoch[9] Batch [140-160]	Speed: 21074.28 samples/sec	accuracy=nan
2023-03-20 11:28:07,734 Node[0] Epoch[9] Batch [160-180]	Speed: 21036.29 samples/sec	accuracy=nan
2023-03-20 11:28:10,840 Node[0] Epoch[9] Batch [180-200]	Speed: 21020.68 samples/sec	accuracy=nan
2023-03-20 11:28:13,941 Node[0] Epoch[9] Batch [200-220]	Speed: 21048.91 samples/sec	accuracy=nan
2023-03-20 11:28:17,044 Node[0] Epoch[9] Batch [220-240]	Speed: 21039.95 samples/sec	accuracy=nan
2023-03-20 11:28:20,143 Node[0] Epoch[9] Batch [240-260]	Speed: 21063.95 samples/sec	accuracy=nan
2023-03-20 11:28:23,245 Node[0] Epoch[9] Batch [260-280]	Speed: 21042.09 samples/sec	accuracy=nan
2023-03-20 11:28:26,347 Node[0] Epoch[9] Batch [280-300]	Speed: 21047.50 samples/sec	accuracy=nan
2023-03-20 11:28:29,447 Node[0] Epoch[9] Batch [300-320]	Speed: 21058.27 samples/sec	accuracy=nan
2023-03-20 11:28:32,545 Node[0] Epoch[9] Batch [320-340]	Speed: 21067.15 samples/sec	accuracy=nan
2023-03-20 11:28:35,645 Node[0] Epoch[9] Batch [340-360]	Speed: 21060.03 samples/sec	accuracy=nan
2023-03-20 11:28:38,750 Node[0] Epoch[9] Batch [360-380]	Speed: 21023.30 samples/sec	accuracy=nan
2023-03-20 11:28:40,612 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:28:40,612 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:28:40,612 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:28:40,612 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:28:40,612 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:28:40,612 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:28:40,612 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329720613, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-20 11:28:40,614 Node[0] Epoch[9] Time cost=60.933
:::MLLOG {"namespace": "", "time_ms": 1679329720614, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21025.75576835262}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1679329720615, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-20 11:28:40,615 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:28:43,875 Node[0] Epoch[10] Batch [0-20]	Speed: 21018.90 samples/sec	accuracy=nan
2023-03-20 11:28:46,979 Node[0] Epoch[10] Batch [20-40]	Speed: 21024.81 samples/sec	accuracy=nan
2023-03-20 11:28:50,087 Node[0] Epoch[10] Batch [40-60]	Speed: 21005.05 samples/sec	accuracy=nan
2023-03-20 11:28:53,195 Node[0] Epoch[10] Batch [60-80]	Speed: 21007.74 samples/sec	accuracy=nan
2023-03-20 11:28:56,299 Node[0] Epoch[10] Batch [80-100]	Speed: 21026.14 samples/sec	accuracy=nan
2023-03-20 11:28:59,406 Node[0] Epoch[10] Batch [100-120]	Speed: 21012.88 samples/sec	accuracy=nan
2023-03-20 11:29:02,512 Node[0] Epoch[10] Batch [120-140]	Speed: 21020.96 samples/sec	accuracy=nan
2023-03-20 11:29:05,620 Node[0] Epoch[10] Batch [140-160]	Speed: 21002.33 samples/sec	accuracy=nan
2023-03-20 11:29:08,728 Node[0] Epoch[10] Batch [160-180]	Speed: 21004.11 samples/sec	accuracy=nan
2023-03-20 11:29:11,838 Node[0] Epoch[10] Batch [180-200]	Speed: 20989.90 samples/sec	accuracy=nan
2023-03-20 11:29:14,945 Node[0] Epoch[10] Batch [200-220]	Speed: 21012.40 samples/sec	accuracy=nan
2023-03-20 11:29:18,048 Node[0] Epoch[10] Batch [220-240]	Speed: 21035.12 samples/sec	accuracy=nan
2023-03-20 11:29:21,155 Node[0] Epoch[10] Batch [240-260]	Speed: 21007.69 samples/sec	accuracy=nan
2023-03-20 11:29:24,266 Node[0] Epoch[10] Batch [260-280]	Speed: 20988.38 samples/sec	accuracy=nan
2023-03-20 11:29:27,372 Node[0] Epoch[10] Batch [280-300]	Speed: 21014.64 samples/sec	accuracy=nan
2023-03-20 11:29:30,484 Node[0] Epoch[10] Batch [300-320]	Speed: 20978.88 samples/sec	accuracy=nan
2023-03-20 11:29:33,591 Node[0] Epoch[10] Batch [320-340]	Speed: 21006.09 samples/sec	accuracy=nan
2023-03-20 11:29:36,699 Node[0] Epoch[10] Batch [340-360]	Speed: 21009.21 samples/sec	accuracy=nan
2023-03-20 11:29:39,806 Node[0] Epoch[10] Batch [360-380]	Speed: 21010.44 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679329781515, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-20 11:29:41,516 Node[0] Epoch[10] Time cost=60.902
:::MLLOG {"namespace": "", "time_ms": 1679329781517, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21036.602063061397}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679329781665, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-20 11:29:42,929 Node[0] Epoch[10] Validation-accuracy=0.498880
2023-03-20 11:29:42,929 Node[0] Epoch[10] Validation-correct-count=3118.000000
2023-03-20 11:29:42,929 Node[0] Epoch[10] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679329783327, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
2023-03-20 11:29:43,327 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:29:43,327 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:29:43,327 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329783327, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.49886, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
2023-03-20 11:29:43,327 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329783327, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-20 11:29:43,327 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:29:43,327 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329783327, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-20 11:29:43,327 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329783328, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-20 11:29:43,328 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:29:46,452 Node[0] Epoch[11] Batch [0-20]	Speed: 20957.54 samples/sec	accuracy=nan
2023-03-20 11:29:49,552 Node[0] Epoch[11] Batch [20-40]	Speed: 21056.08 samples/sec	accuracy=nan
2023-03-20 11:29:52,652 Node[0] Epoch[11] Batch [40-60]	Speed: 21063.85 samples/sec	accuracy=nan
2023-03-20 11:29:55,753 Node[0] Epoch[11] Batch [60-80]	Speed: 21046.22 samples/sec	accuracy=nan
2023-03-20 11:29:58,851 Node[0] Epoch[11] Batch [80-100]	Speed: 21070.91 samples/sec	accuracy=nan
2023-03-20 11:30:01,949 Node[0] Epoch[11] Batch [100-120]	Speed: 21075.22 samples/sec	accuracy=nan
2023-03-20 11:30:05,049 Node[0] Epoch[11] Batch [120-140]	Speed: 21060.28 samples/sec	accuracy=nan
2023-03-20 11:30:08,148 Node[0] Epoch[11] Batch [140-160]	Speed: 21062.07 samples/sec	accuracy=nan
2023-03-20 11:30:11,255 Node[0] Epoch[11] Batch [160-180]	Speed: 21012.64 samples/sec	accuracy=nan
2023-03-20 11:30:14,354 Node[0] Epoch[11] Batch [180-200]	Speed: 21064.13 samples/sec	accuracy=nan
2023-03-20 11:30:17,454 Node[0] Epoch[11] Batch [200-220]	Speed: 21057.52 samples/sec	accuracy=nan
2023-03-20 11:30:20,551 Node[0] Epoch[11] Batch [220-240]	Speed: 21079.33 samples/sec	accuracy=nan
2023-03-20 11:30:23,651 Node[0] Epoch[11] Batch [240-260]	Speed: 21059.58 samples/sec	accuracy=nan
2023-03-20 11:30:26,750 Node[0] Epoch[11] Batch [260-280]	Speed: 21062.67 samples/sec	accuracy=nan
2023-03-20 11:30:29,848 Node[0] Epoch[11] Batch [280-300]	Speed: 21070.59 samples/sec	accuracy=nan
2023-03-20 11:30:32,951 Node[0] Epoch[11] Batch [300-320]	Speed: 21040.72 samples/sec	accuracy=nan
2023-03-20 11:30:36,050 Node[0] Epoch[11] Batch [320-340]	Speed: 21060.96 samples/sec	accuracy=nan
2023-03-20 11:30:39,147 Node[0] Epoch[11] Batch [340-360]	Speed: 21078.03 samples/sec	accuracy=nan
2023-03-20 11:30:42,252 Node[0] Epoch[11] Batch [360-380]	Speed: 21024.94 samples/sec	accuracy=nan
2023-03-20 11:30:44,109 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:30:44,110 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:30:44,110 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:30:44,110 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:30:44,110 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:30:44,110 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329844110, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-20 11:30:44,111 Node[0] Epoch[11] Time cost=60.783
:::MLLOG {"namespace": "", "time_ms": 1679329844111, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21077.579462215297}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
2023-03-20 11:30:44,111 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329844111, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-20 11:30:44,112 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:30:47,363 Node[0] Epoch[12] Batch [0-20]	Speed: 21070.23 samples/sec	accuracy=nan
2023-03-20 11:30:50,464 Node[0] Epoch[12] Batch [20-40]	Speed: 21051.71 samples/sec	accuracy=nan
2023-03-20 11:30:53,561 Node[0] Epoch[12] Batch [40-60]	Speed: 21079.37 samples/sec	accuracy=nan
2023-03-20 11:30:56,658 Node[0] Epoch[12] Batch [60-80]	Speed: 21077.75 samples/sec	accuracy=nan
2023-03-20 11:30:59,756 Node[0] Epoch[12] Batch [80-100]	Speed: 21069.22 samples/sec	accuracy=nan
2023-03-20 11:31:02,854 Node[0] Epoch[12] Batch [100-120]	Speed: 21074.06 samples/sec	accuracy=nan
2023-03-20 11:31:05,954 Node[0] Epoch[12] Batch [120-140]	Speed: 21061.02 samples/sec	accuracy=nan
2023-03-20 11:31:09,052 Node[0] Epoch[12] Batch [140-160]	Speed: 21071.76 samples/sec	accuracy=nan
2023-03-20 11:31:12,149 Node[0] Epoch[12] Batch [160-180]	Speed: 21078.00 samples/sec	accuracy=nan
2023-03-20 11:31:15,253 Node[0] Epoch[12] Batch [180-200]	Speed: 21031.59 samples/sec	accuracy=nan
2023-03-20 11:31:18,348 Node[0] Epoch[12] Batch [200-220]	Speed: 21088.74 samples/sec	accuracy=nan
2023-03-20 11:31:21,447 Node[0] Epoch[12] Batch [220-240]	Speed: 21063.58 samples/sec	accuracy=nan
2023-03-20 11:31:24,553 Node[0] Epoch[12] Batch [240-260]	Speed: 21020.97 samples/sec	accuracy=nan
2023-03-20 11:31:27,653 Node[0] Epoch[12] Batch [260-280]	Speed: 21055.38 samples/sec	accuracy=nan
2023-03-20 11:31:30,753 Node[0] Epoch[12] Batch [280-300]	Speed: 21060.71 samples/sec	accuracy=nan
2023-03-20 11:31:33,849 Node[0] Epoch[12] Batch [300-320]	Speed: 21083.53 samples/sec	accuracy=nan
2023-03-20 11:31:36,953 Node[0] Epoch[12] Batch [320-340]	Speed: 21028.40 samples/sec	accuracy=nan
2023-03-20 11:31:40,056 Node[0] Epoch[12] Batch [340-360]	Speed: 21037.54 samples/sec	accuracy=nan
2023-03-20 11:31:43,156 Node[0] Epoch[12] Batch [360-380]	Speed: 21062.97 samples/sec	accuracy=nan
2023-03-20 11:31:44,856 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:31:44,857 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:31:44,857 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:31:44,857 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:31:44,857 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:31:44,857 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:31:44,858 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329904857, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-20 11:31:44,858 Node[0] Epoch[12] Time cost=60.747
:::MLLOG {"namespace": "", "time_ms": 1679329904859, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21090.272883851914}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1679329904859, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-20 11:31:44,859 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:31:48,113 Node[0] Epoch[13] Batch [0-20]	Speed: 21085.21 samples/sec	accuracy=nan
2023-03-20 11:31:51,211 Node[0] Epoch[13] Batch [20-40]	Speed: 21071.84 samples/sec	accuracy=nan
2023-03-20 11:31:54,312 Node[0] Epoch[13] Batch [40-60]	Speed: 21049.95 samples/sec	accuracy=nan
2023-03-20 11:31:57,411 Node[0] Epoch[13] Batch [60-80]	Speed: 21065.86 samples/sec	accuracy=nan
2023-03-20 11:32:00,511 Node[0] Epoch[13] Batch [80-100]	Speed: 21054.47 samples/sec	accuracy=nan
2023-03-20 11:32:03,610 Node[0] Epoch[13] Batch [100-120]	Speed: 21065.96 samples/sec	accuracy=nan
2023-03-20 11:32:06,708 Node[0] Epoch[13] Batch [120-140]	Speed: 21071.08 samples/sec	accuracy=nan
2023-03-20 11:32:09,810 Node[0] Epoch[13] Batch [140-160]	Speed: 21043.28 samples/sec	accuracy=nan
2023-03-20 11:32:12,908 Node[0] Epoch[13] Batch [160-180]	Speed: 21071.36 samples/sec	accuracy=nan
2023-03-20 11:32:16,010 Node[0] Epoch[13] Batch [180-200]	Speed: 21048.56 samples/sec	accuracy=nan
2023-03-20 11:32:19,112 Node[0] Epoch[13] Batch [200-220]	Speed: 21042.69 samples/sec	accuracy=nan
2023-03-20 11:32:22,212 Node[0] Epoch[13] Batch [220-240]	Speed: 21055.79 samples/sec	accuracy=nan
2023-03-20 11:32:25,312 Node[0] Epoch[13] Batch [240-260]	Speed: 21058.41 samples/sec	accuracy=nan
2023-03-20 11:32:28,412 Node[0] Epoch[13] Batch [260-280]	Speed: 21056.73 samples/sec	accuracy=nan
2023-03-20 11:32:31,512 Node[0] Epoch[13] Batch [280-300]	Speed: 21064.00 samples/sec	accuracy=nan
2023-03-20 11:32:34,612 Node[0] Epoch[13] Batch [300-320]	Speed: 21052.56 samples/sec	accuracy=nan
2023-03-20 11:32:37,710 Node[0] Epoch[13] Batch [320-340]	Speed: 21072.47 samples/sec	accuracy=nan
2023-03-20 11:32:40,813 Node[0] Epoch[13] Batch [340-360]	Speed: 21038.11 samples/sec	accuracy=nan
2023-03-20 11:32:43,910 Node[0] Epoch[13] Batch [360-380]	Speed: 21078.66 samples/sec	accuracy=nan
2023-03-20 11:32:45,770 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:32:45,770 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:32:45,770 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:32:45,770 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:32:45,770 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:32:45,770 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:32:45,770 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679329965770, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-20 11:32:45,772 Node[0] Epoch[13] Time cost=60.913
:::MLLOG {"namespace": "", "time_ms": 1679329965772, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21032.74851211299}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679329965772, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-20 11:32:45,772 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:32:49,028 Node[0] Epoch[14] Batch [0-20]	Speed: 21046.68 samples/sec	accuracy=nan
2023-03-20 11:32:52,128 Node[0] Epoch[14] Batch [20-40]	Speed: 21058.39 samples/sec	accuracy=nan
2023-03-20 11:32:55,228 Node[0] Epoch[14] Batch [40-60]	Speed: 21058.88 samples/sec	accuracy=nan
2023-03-20 11:32:58,329 Node[0] Epoch[14] Batch [60-80]	Speed: 21052.30 samples/sec	accuracy=nan
2023-03-20 11:33:01,425 Node[0] Epoch[14] Batch [80-100]	Speed: 21085.87 samples/sec	accuracy=nan
2023-03-20 11:33:04,521 Node[0] Epoch[14] Batch [100-120]	Speed: 21081.42 samples/sec	accuracy=nan
2023-03-20 11:33:07,621 Node[0] Epoch[14] Batch [120-140]	Speed: 21056.10 samples/sec	accuracy=nan
2023-03-20 11:33:10,724 Node[0] Epoch[14] Batch [140-160]	Speed: 21042.29 samples/sec	accuracy=nan
2023-03-20 11:33:13,831 Node[0] Epoch[14] Batch [160-180]	Speed: 21005.80 samples/sec	accuracy=nan
2023-03-20 11:33:16,931 Node[0] Epoch[14] Batch [180-200]	Speed: 21061.04 samples/sec	accuracy=nan
2023-03-20 11:33:20,028 Node[0] Epoch[14] Batch [200-220]	Speed: 21075.94 samples/sec	accuracy=nan
2023-03-20 11:33:23,124 Node[0] Epoch[14] Batch [220-240]	Speed: 21086.06 samples/sec	accuracy=nan
2023-03-20 11:33:26,222 Node[0] Epoch[14] Batch [240-260]	Speed: 21076.33 samples/sec	accuracy=nan
2023-03-20 11:33:29,323 Node[0] Epoch[14] Batch [260-280]	Speed: 21048.75 samples/sec	accuracy=nan
2023-03-20 11:33:32,418 Node[0] Epoch[14] Batch [280-300]	Speed: 21092.88 samples/sec	accuracy=nan
2023-03-20 11:33:35,524 Node[0] Epoch[14] Batch [300-320]	Speed: 21013.91 samples/sec	accuracy=nan
2023-03-20 11:33:38,622 Node[0] Epoch[14] Batch [320-340]	Speed: 21071.65 samples/sec	accuracy=nan
2023-03-20 11:33:41,722 Node[0] Epoch[14] Batch [340-360]	Speed: 21062.27 samples/sec	accuracy=nan
2023-03-20 11:33:44,818 Node[0] Epoch[14] Batch [360-380]	Speed: 21082.76 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679330026520, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-20 11:33:46,521 Node[0] Epoch[14] Time cost=60.748
:::MLLOG {"namespace": "", "time_ms": 1679330026521, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21089.75323573199}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679330026671, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-20 11:33:47,897 Node[0] Epoch[14] Validation-accuracy=0.576480
2023-03-20 11:33:47,898 Node[0] Epoch[14] Validation-correct-count=3603.000000
2023-03-20 11:33:47,898 Node[0] Epoch[14] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679330028315, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679330028315, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.57342, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
2023-03-20 11:33:48,315 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:33:48,315 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330028315, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679330028315, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-20 11:33:48,315 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:33:48,315 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:33:48,315 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:33:48,315 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:33:48,315 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330028315, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-20 11:33:48,316 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:33:51,438 Node[0] Epoch[15] Batch [0-20]	Speed: 20965.12 samples/sec	accuracy=nan
2023-03-20 11:33:54,537 Node[0] Epoch[15] Batch [20-40]	Speed: 21067.03 samples/sec	accuracy=nan
2023-03-20 11:33:57,631 Node[0] Epoch[15] Batch [40-60]	Speed: 21094.12 samples/sec	accuracy=nan
2023-03-20 11:34:00,727 Node[0] Epoch[15] Batch [60-80]	Speed: 21085.52 samples/sec	accuracy=nan
2023-03-20 11:34:03,824 Node[0] Epoch[15] Batch [80-100]	Speed: 21078.67 samples/sec	accuracy=nan
2023-03-20 11:34:06,922 Node[0] Epoch[15] Batch [100-120]	Speed: 21072.99 samples/sec	accuracy=nan
2023-03-20 11:34:10,018 Node[0] Epoch[15] Batch [120-140]	Speed: 21083.73 samples/sec	accuracy=nan
2023-03-20 11:34:13,116 Node[0] Epoch[15] Batch [140-160]	Speed: 21074.61 samples/sec	accuracy=nan
2023-03-20 11:34:16,221 Node[0] Epoch[15] Batch [160-180]	Speed: 21024.96 samples/sec	accuracy=nan
2023-03-20 11:34:19,320 Node[0] Epoch[15] Batch [180-200]	Speed: 21064.01 samples/sec	accuracy=nan
2023-03-20 11:34:22,418 Node[0] Epoch[15] Batch [200-220]	Speed: 21068.79 samples/sec	accuracy=nan
2023-03-20 11:34:25,514 Node[0] Epoch[15] Batch [220-240]	Speed: 21084.17 samples/sec	accuracy=nan
2023-03-20 11:34:28,612 Node[0] Epoch[15] Batch [240-260]	Speed: 21074.32 samples/sec	accuracy=nan
2023-03-20 11:34:31,707 Node[0] Epoch[15] Batch [260-280]	Speed: 21092.69 samples/sec	accuracy=nan
2023-03-20 11:34:34,802 Node[0] Epoch[15] Batch [280-300]	Speed: 21094.70 samples/sec	accuracy=nan
2023-03-20 11:34:37,901 Node[0] Epoch[15] Batch [300-320]	Speed: 21059.55 samples/sec	accuracy=nan
2023-03-20 11:34:41,004 Node[0] Epoch[15] Batch [320-340]	Speed: 21041.44 samples/sec	accuracy=nan
2023-03-20 11:34:44,100 Node[0] Epoch[15] Batch [340-360]	Speed: 21083.19 samples/sec	accuracy=nan
2023-03-20 11:34:47,195 Node[0] Epoch[15] Batch [360-380]	Speed: 21095.37 samples/sec	accuracy=nan
2023-03-20 11:34:49,051 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:34:49,051 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:34:49,051 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:34:49,051 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:34:49,051 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:34:49,051 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:34:49,052 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330089051, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-20 11:34:49,053 Node[0] Epoch[15] Time cost=60.737
:::MLLOG {"namespace": "", "time_ms": 1679330089053, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21093.673825745118}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679330089053, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-20 11:34:49,053 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:34:52,302 Node[0] Epoch[16] Batch [0-20]	Speed: 21083.02 samples/sec	accuracy=nan
2023-03-20 11:34:55,401 Node[0] Epoch[16] Batch [20-40]	Speed: 21064.53 samples/sec	accuracy=nan
2023-03-20 11:34:58,497 Node[0] Epoch[16] Batch [40-60]	Speed: 21088.03 samples/sec	accuracy=nan
2023-03-20 11:35:01,592 Node[0] Epoch[16] Batch [60-80]	Speed: 21091.90 samples/sec	accuracy=nan
2023-03-20 11:35:04,691 Node[0] Epoch[16] Batch [80-100]	Speed: 21068.15 samples/sec	accuracy=nan
2023-03-20 11:35:07,797 Node[0] Epoch[16] Batch [100-120]	Speed: 21016.16 samples/sec	accuracy=nan
2023-03-20 11:35:10,898 Node[0] Epoch[16] Batch [120-140]	Speed: 21049.49 samples/sec	accuracy=nan
2023-03-20 11:35:13,997 Node[0] Epoch[16] Batch [140-160]	Speed: 21066.35 samples/sec	accuracy=nan
2023-03-20 11:35:17,096 Node[0] Epoch[16] Batch [160-180]	Speed: 21060.72 samples/sec	accuracy=nan
2023-03-20 11:35:20,193 Node[0] Epoch[16] Batch [180-200]	Speed: 21080.04 samples/sec	accuracy=nan
2023-03-20 11:35:23,291 Node[0] Epoch[16] Batch [200-220]	Speed: 21070.58 samples/sec	accuracy=nan
2023-03-20 11:35:26,390 Node[0] Epoch[16] Batch [220-240]	Speed: 21070.11 samples/sec	accuracy=nan
2023-03-20 11:35:29,485 Node[0] Epoch[16] Batch [240-260]	Speed: 21086.32 samples/sec	accuracy=nan
2023-03-20 11:35:32,584 Node[0] Epoch[16] Batch [260-280]	Speed: 21064.54 samples/sec	accuracy=nan
2023-03-20 11:35:35,682 Node[0] Epoch[16] Batch [280-300]	Speed: 21076.76 samples/sec	accuracy=nan
2023-03-20 11:35:38,787 Node[0] Epoch[16] Batch [300-320]	Speed: 21024.90 samples/sec	accuracy=nan
2023-03-20 11:35:41,888 Node[0] Epoch[16] Batch [320-340]	Speed: 21050.27 samples/sec	accuracy=nan
2023-03-20 11:35:44,991 Node[0] Epoch[16] Batch [340-360]	Speed: 21032.87 samples/sec	accuracy=nan
2023-03-20 11:35:48,099 Node[0] Epoch[16] Batch [360-380]	Speed: 21008.27 samples/sec	accuracy=nan
2023-03-20 11:35:49,803 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:35:49,803 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:35:49,803 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:35:49,803 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:35:49,803 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:35:49,804 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:35:49,804 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330149803, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-20 11:35:49,805 Node[0] Epoch[16] Time cost=60.751
:::MLLOG {"namespace": "", "time_ms": 1679330149805, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21088.65682745381}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1679330149805, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-20 11:35:49,805 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:35:53,063 Node[0] Epoch[17] Batch [0-20]	Speed: 21057.09 samples/sec	accuracy=nan
2023-03-20 11:35:56,167 Node[0] Epoch[17] Batch [20-40]	Speed: 21033.19 samples/sec	accuracy=nan
2023-03-20 11:35:59,269 Node[0] Epoch[17] Batch [40-60]	Speed: 21045.70 samples/sec	accuracy=nan
2023-03-20 11:36:02,372 Node[0] Epoch[17] Batch [60-80]	Speed: 21031.75 samples/sec	accuracy=nan
2023-03-20 11:36:05,473 Node[0] Epoch[17] Batch [80-100]	Speed: 21053.63 samples/sec	accuracy=nan
2023-03-20 11:36:08,573 Node[0] Epoch[17] Batch [100-120]	Speed: 21061.81 samples/sec	accuracy=nan
2023-03-20 11:36:11,671 Node[0] Epoch[17] Batch [120-140]	Speed: 21066.53 samples/sec	accuracy=nan
2023-03-20 11:36:14,770 Node[0] Epoch[17] Batch [140-160]	Speed: 21067.79 samples/sec	accuracy=nan
2023-03-20 11:36:17,869 Node[0] Epoch[17] Batch [160-180]	Speed: 21062.06 samples/sec	accuracy=nan
2023-03-20 11:36:20,968 Node[0] Epoch[17] Batch [180-200]	Speed: 21067.42 samples/sec	accuracy=nan
2023-03-20 11:36:24,071 Node[0] Epoch[17] Batch [200-220]	Speed: 21036.93 samples/sec	accuracy=nan
2023-03-20 11:36:27,171 Node[0] Epoch[17] Batch [220-240]	Speed: 21057.33 samples/sec	accuracy=nan
2023-03-20 11:36:30,272 Node[0] Epoch[17] Batch [240-260]	Speed: 21054.71 samples/sec	accuracy=nan
2023-03-20 11:36:33,371 Node[0] Epoch[17] Batch [260-280]	Speed: 21062.37 samples/sec	accuracy=nan
2023-03-20 11:36:36,471 Node[0] Epoch[17] Batch [280-300]	Speed: 21061.38 samples/sec	accuracy=nan
2023-03-20 11:36:39,571 Node[0] Epoch[17] Batch [300-320]	Speed: 21056.84 samples/sec	accuracy=nan
2023-03-20 11:36:42,670 Node[0] Epoch[17] Batch [320-340]	Speed: 21065.41 samples/sec	accuracy=nan
2023-03-20 11:36:45,769 Node[0] Epoch[17] Batch [340-360]	Speed: 21060.11 samples/sec	accuracy=nan
2023-03-20 11:36:48,869 Node[0] Epoch[17] Batch [360-380]	Speed: 21057.62 samples/sec	accuracy=nan
2023-03-20 11:36:50,725 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:36:50,726 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:36:50,726 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:36:50,726 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:36:50,726 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:36:50,727 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:36:50,727 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330210726, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-20 11:36:50,728 Node[0] Epoch[17] Time cost=60.923
:::MLLOG {"namespace": "", "time_ms": 1679330210728, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21029.455327316704}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679330210728, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-20 11:36:50,728 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:36:53,983 Node[0] Epoch[18] Batch [0-20]	Speed: 21048.09 samples/sec	accuracy=nan
2023-03-20 11:36:57,084 Node[0] Epoch[18] Batch [20-40]	Speed: 21048.87 samples/sec	accuracy=nan
2023-03-20 11:37:00,185 Node[0] Epoch[18] Batch [40-60]	Speed: 21056.13 samples/sec	accuracy=nan
2023-03-20 11:37:03,280 Node[0] Epoch[18] Batch [60-80]	Speed: 21087.74 samples/sec	accuracy=nan
2023-03-20 11:37:06,381 Node[0] Epoch[18] Batch [80-100]	Speed: 21051.97 samples/sec	accuracy=nan
2023-03-20 11:37:09,486 Node[0] Epoch[18] Batch [100-120]	Speed: 21027.59 samples/sec	accuracy=nan
2023-03-20 11:37:12,586 Node[0] Epoch[18] Batch [120-140]	Speed: 21054.87 samples/sec	accuracy=nan
2023-03-20 11:37:15,688 Node[0] Epoch[18] Batch [140-160]	Speed: 21048.13 samples/sec	accuracy=nan
2023-03-20 11:37:18,787 Node[0] Epoch[18] Batch [160-180]	Speed: 21059.14 samples/sec	accuracy=nan
2023-03-20 11:37:21,888 Node[0] Epoch[18] Batch [180-200]	Speed: 21056.66 samples/sec	accuracy=nan
2023-03-20 11:37:24,989 Node[0] Epoch[18] Batch [200-220]	Speed: 21045.21 samples/sec	accuracy=nan
2023-03-20 11:37:28,089 Node[0] Epoch[18] Batch [220-240]	Speed: 21062.62 samples/sec	accuracy=nan
2023-03-20 11:37:31,191 Node[0] Epoch[18] Batch [240-260]	Speed: 21044.94 samples/sec	accuracy=nan
2023-03-20 11:37:34,293 Node[0] Epoch[18] Batch [260-280]	Speed: 21043.32 samples/sec	accuracy=nan
2023-03-20 11:37:37,395 Node[0] Epoch[18] Batch [280-300]	Speed: 21043.53 samples/sec	accuracy=nan
2023-03-20 11:37:40,498 Node[0] Epoch[18] Batch [300-320]	Speed: 21041.02 samples/sec	accuracy=nan
2023-03-20 11:37:43,594 Node[0] Epoch[18] Batch [320-340]	Speed: 21081.27 samples/sec	accuracy=nan
2023-03-20 11:37:46,694 Node[0] Epoch[18] Batch [340-360]	Speed: 21059.72 samples/sec	accuracy=nan
2023-03-20 11:37:49,795 Node[0] Epoch[18] Batch [360-380]	Speed: 21050.87 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679330271497, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-20 11:37:51,499 Node[0] Epoch[18] Time cost=60.771
:::MLLOG {"namespace": "", "time_ms": 1679330271499, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21081.989955154626}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679330271648, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-20 11:37:52,949 Node[0] Epoch[18] Validation-accuracy=0.617440
2023-03-20 11:37:52,949 Node[0] Epoch[18] Validation-correct-count=3859.000000
2023-03-20 11:37:52,949 Node[0] Epoch[18] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679330273163, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679330273163, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.62726, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-20 11:37:53,163 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:37:53,163 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330273163, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-20 11:37:53,163 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330273163, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-20 11:37:53,163 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:37:53,163 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:37:53,163 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:37:53,163 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330273163, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-20 11:37:53,163 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:37:56,294 Node[0] Epoch[19] Batch [0-20]	Speed: 20903.50 samples/sec	accuracy=nan
2023-03-20 11:37:59,395 Node[0] Epoch[19] Batch [20-40]	Speed: 21054.78 samples/sec	accuracy=nan
2023-03-20 11:38:02,495 Node[0] Epoch[19] Batch [40-60]	Speed: 21061.22 samples/sec	accuracy=nan
2023-03-20 11:38:05,598 Node[0] Epoch[19] Batch [60-80]	Speed: 21035.43 samples/sec	accuracy=nan
2023-03-20 11:38:08,698 Node[0] Epoch[19] Batch [80-100]	Speed: 21059.91 samples/sec	accuracy=nan
2023-03-20 11:38:11,812 Node[0] Epoch[19] Batch [100-120]	Speed: 20963.56 samples/sec	accuracy=nan
2023-03-20 11:38:14,910 Node[0] Epoch[19] Batch [120-140]	Speed: 21065.42 samples/sec	accuracy=nan
2023-03-20 11:38:18,009 Node[0] Epoch[19] Batch [140-160]	Speed: 21070.92 samples/sec	accuracy=nan
2023-03-20 11:38:21,105 Node[0] Epoch[19] Batch [160-180]	Speed: 21080.43 samples/sec	accuracy=nan
2023-03-20 11:38:24,207 Node[0] Epoch[19] Batch [180-200]	Speed: 21045.03 samples/sec	accuracy=nan
2023-03-20 11:38:27,306 Node[0] Epoch[19] Batch [200-220]	Speed: 21067.11 samples/sec	accuracy=nan
2023-03-20 11:38:30,407 Node[0] Epoch[19] Batch [220-240]	Speed: 21053.36 samples/sec	accuracy=nan
2023-03-20 11:38:33,513 Node[0] Epoch[19] Batch [240-260]	Speed: 21013.46 samples/sec	accuracy=nan
2023-03-20 11:38:36,615 Node[0] Epoch[19] Batch [260-280]	Speed: 21047.04 samples/sec	accuracy=nan
2023-03-20 11:38:39,713 Node[0] Epoch[19] Batch [280-300]	Speed: 21070.68 samples/sec	accuracy=nan
2023-03-20 11:38:42,812 Node[0] Epoch[19] Batch [300-320]	Speed: 21066.54 samples/sec	accuracy=nan
2023-03-20 11:38:45,909 Node[0] Epoch[19] Batch [320-340]	Speed: 21075.69 samples/sec	accuracy=nan
2023-03-20 11:38:49,010 Node[0] Epoch[19] Batch [340-360]	Speed: 21048.91 samples/sec	accuracy=nan
2023-03-20 11:38:52,111 Node[0] Epoch[19] Batch [360-380]	Speed: 21052.94 samples/sec	accuracy=nan
2023-03-20 11:38:53,968 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:38:53,969 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:38:53,969 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:38:53,969 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:38:53,969 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:38:53,969 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:38:53,969 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330333969, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-20 11:38:53,970 Node[0] Epoch[19] Time cost=60.807
:::MLLOG {"namespace": "", "time_ms": 1679330333970, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21069.55796803441}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679330333970, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-20 11:38:53,970 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:38:57,226 Node[0] Epoch[20] Batch [0-20]	Speed: 21056.74 samples/sec	accuracy=nan
2023-03-20 11:39:00,329 Node[0] Epoch[20] Batch [20-40]	Speed: 21037.81 samples/sec	accuracy=nan
2023-03-20 11:39:03,430 Node[0] Epoch[20] Batch [40-60]	Speed: 21047.76 samples/sec	accuracy=nan
2023-03-20 11:39:06,532 Node[0] Epoch[20] Batch [60-80]	Speed: 21047.74 samples/sec	accuracy=nan
2023-03-20 11:39:09,638 Node[0] Epoch[20] Batch [80-100]	Speed: 21014.36 samples/sec	accuracy=nan
2023-03-20 11:39:12,740 Node[0] Epoch[20] Batch [100-120]	Speed: 21046.34 samples/sec	accuracy=nan
2023-03-20 11:39:15,838 Node[0] Epoch[20] Batch [120-140]	Speed: 21068.77 samples/sec	accuracy=nan
2023-03-20 11:39:18,935 Node[0] Epoch[20] Batch [140-160]	Speed: 21077.22 samples/sec	accuracy=nan
2023-03-20 11:39:22,034 Node[0] Epoch[20] Batch [160-180]	Speed: 21064.58 samples/sec	accuracy=nan
2023-03-20 11:39:25,139 Node[0] Epoch[20] Batch [180-200]	Speed: 21025.37 samples/sec	accuracy=nan
2023-03-20 11:39:28,243 Node[0] Epoch[20] Batch [200-220]	Speed: 21029.18 samples/sec	accuracy=nan
2023-03-20 11:39:31,345 Node[0] Epoch[20] Batch [220-240]	Speed: 21049.00 samples/sec	accuracy=nan
2023-03-20 11:39:34,445 Node[0] Epoch[20] Batch [240-260]	Speed: 21057.22 samples/sec	accuracy=nan
2023-03-20 11:39:37,544 Node[0] Epoch[20] Batch [260-280]	Speed: 21065.99 samples/sec	accuracy=nan
2023-03-20 11:39:40,649 Node[0] Epoch[20] Batch [280-300]	Speed: 21022.13 samples/sec	accuracy=nan
2023-03-20 11:39:43,749 Node[0] Epoch[20] Batch [300-320]	Speed: 21058.57 samples/sec	accuracy=nan
2023-03-20 11:39:46,848 Node[0] Epoch[20] Batch [320-340]	Speed: 21066.76 samples/sec	accuracy=nan
2023-03-20 11:39:49,949 Node[0] Epoch[20] Batch [340-360]	Speed: 21047.24 samples/sec	accuracy=nan
2023-03-20 11:39:53,053 Node[0] Epoch[20] Batch [360-380]	Speed: 21032.21 samples/sec	accuracy=nan
2023-03-20 11:39:54,757 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:39:54,757 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:39:54,757 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:39:54,757 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:39:54,757 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:39:54,757 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:39:54,757 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330394757, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-20 11:39:54,758 Node[0] Epoch[20] Time cost=60.788
:::MLLOG {"namespace": "", "time_ms": 1679330394758, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21076.08421999695}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1679330394758, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-20 11:39:54,759 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:39:58,014 Node[0] Epoch[21] Batch [0-20]	Speed: 21070.75 samples/sec	accuracy=nan
2023-03-20 11:40:01,114 Node[0] Epoch[21] Batch [20-40]	Speed: 21056.75 samples/sec	accuracy=nan
2023-03-20 11:40:04,211 Node[0] Epoch[21] Batch [40-60]	Speed: 21081.57 samples/sec	accuracy=nan
2023-03-20 11:40:07,314 Node[0] Epoch[21] Batch [60-80]	Speed: 21036.81 samples/sec	accuracy=nan
2023-03-20 11:40:10,417 Node[0] Epoch[21] Batch [80-100]	Speed: 21036.19 samples/sec	accuracy=nan
2023-03-20 11:40:13,517 Node[0] Epoch[21] Batch [100-120]	Speed: 21061.42 samples/sec	accuracy=nan
2023-03-20 11:40:16,619 Node[0] Epoch[21] Batch [120-140]	Speed: 21042.15 samples/sec	accuracy=nan
2023-03-20 11:40:19,721 Node[0] Epoch[21] Batch [140-160]	Speed: 21042.85 samples/sec	accuracy=nan
2023-03-20 11:40:22,821 Node[0] Epoch[21] Batch [160-180]	Speed: 21062.76 samples/sec	accuracy=nan
2023-03-20 11:40:25,923 Node[0] Epoch[21] Batch [180-200]	Speed: 21040.01 samples/sec	accuracy=nan
2023-03-20 11:40:29,023 Node[0] Epoch[21] Batch [200-220]	Speed: 21058.29 samples/sec	accuracy=nan
2023-03-20 11:40:32,123 Node[0] Epoch[21] Batch [220-240]	Speed: 21058.04 samples/sec	accuracy=nan
2023-03-20 11:40:35,225 Node[0] Epoch[21] Batch [240-260]	Speed: 21047.43 samples/sec	accuracy=nan
2023-03-20 11:40:38,325 Node[0] Epoch[21] Batch [260-280]	Speed: 21055.63 samples/sec	accuracy=nan
2023-03-20 11:40:41,434 Node[0] Epoch[21] Batch [280-300]	Speed: 20998.84 samples/sec	accuracy=nan
2023-03-20 11:40:44,537 Node[0] Epoch[21] Batch [300-320]	Speed: 21034.26 samples/sec	accuracy=nan
2023-03-20 11:40:47,638 Node[0] Epoch[21] Batch [320-340]	Speed: 21052.47 samples/sec	accuracy=nan
2023-03-20 11:40:50,739 Node[0] Epoch[21] Batch [340-360]	Speed: 21051.46 samples/sec	accuracy=nan
2023-03-20 11:40:53,839 Node[0] Epoch[21] Batch [360-380]	Speed: 21056.40 samples/sec	accuracy=nan
2023-03-20 11:40:55,696 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:40:55,696 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:40:55,696 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:40:55,696 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:40:55,696 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:40:55,697 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:40:55,697 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330455697, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-20 11:40:55,698 Node[0] Epoch[21] Time cost=60.939
:::MLLOG {"namespace": "", "time_ms": 1679330455698, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21023.662141948982}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679330455698, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-20 11:40:55,698 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:40:58,952 Node[0] Epoch[22] Batch [0-20]	Speed: 21061.04 samples/sec	accuracy=nan
2023-03-20 11:41:02,050 Node[0] Epoch[22] Batch [20-40]	Speed: 21074.69 samples/sec	accuracy=nan
2023-03-20 11:41:05,157 Node[0] Epoch[22] Batch [40-60]	Speed: 21010.83 samples/sec	accuracy=nan
2023-03-20 11:41:08,259 Node[0] Epoch[22] Batch [60-80]	Speed: 21046.89 samples/sec	accuracy=nan
2023-03-20 11:41:11,359 Node[0] Epoch[22] Batch [80-100]	Speed: 21051.42 samples/sec	accuracy=nan
2023-03-20 11:41:14,466 Node[0] Epoch[22] Batch [100-120]	Speed: 21013.60 samples/sec	accuracy=nan
2023-03-20 11:41:17,569 Node[0] Epoch[22] Batch [120-140]	Speed: 21036.77 samples/sec	accuracy=nan
2023-03-20 11:41:20,672 Node[0] Epoch[22] Batch [140-160]	Speed: 21037.41 samples/sec	accuracy=nan
2023-03-20 11:41:23,772 Node[0] Epoch[22] Batch [160-180]	Speed: 21062.34 samples/sec	accuracy=nan
2023-03-20 11:41:26,873 Node[0] Epoch[22] Batch [180-200]	Speed: 21048.40 samples/sec	accuracy=nan
2023-03-20 11:41:29,974 Node[0] Epoch[22] Batch [200-220]	Speed: 21053.13 samples/sec	accuracy=nan
2023-03-20 11:41:33,075 Node[0] Epoch[22] Batch [220-240]	Speed: 21046.55 samples/sec	accuracy=nan
2023-03-20 11:41:36,176 Node[0] Epoch[22] Batch [240-260]	Speed: 21050.35 samples/sec	accuracy=nan
2023-03-20 11:41:39,280 Node[0] Epoch[22] Batch [260-280]	Speed: 21036.23 samples/sec	accuracy=nan
2023-03-20 11:41:42,380 Node[0] Epoch[22] Batch [280-300]	Speed: 21058.17 samples/sec	accuracy=nan
2023-03-20 11:41:45,484 Node[0] Epoch[22] Batch [300-320]	Speed: 21029.25 samples/sec	accuracy=nan
2023-03-20 11:41:48,584 Node[0] Epoch[22] Batch [320-340]	Speed: 21057.28 samples/sec	accuracy=nan
2023-03-20 11:41:51,684 Node[0] Epoch[22] Batch [340-360]	Speed: 21059.96 samples/sec	accuracy=nan
2023-03-20 11:41:54,783 Node[0] Epoch[22] Batch [360-380]	Speed: 21062.72 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679330516487, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-20 11:41:56,489 Node[0] Epoch[22] Time cost=60.790
:::MLLOG {"namespace": "", "time_ms": 1679330516489, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21075.19760775187}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679330516639, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-20 11:41:57,904 Node[0] Epoch[22] Validation-accuracy=0.678560
2023-03-20 11:41:57,904 Node[0] Epoch[22] Validation-correct-count=4241.000000
2023-03-20 11:41:57,904 Node[0] Epoch[22] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679330518187, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679330518187, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.67576, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679330518187, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
2023-03-20 11:41:58,187 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330518187, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-20 11:41:58,187 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:41:58,187 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:41:58,187 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:41:58,187 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:41:58,187 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:41:58,187 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330518187, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-20 11:41:58,187 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:42:01,321 Node[0] Epoch[23] Batch [0-20]	Speed: 20888.45 samples/sec	accuracy=nan
2023-03-20 11:42:04,427 Node[0] Epoch[23] Batch [20-40]	Speed: 21017.43 samples/sec	accuracy=nan
2023-03-20 11:42:07,529 Node[0] Epoch[23] Batch [40-60]	Speed: 21042.11 samples/sec	accuracy=nan
2023-03-20 11:42:10,636 Node[0] Epoch[23] Batch [60-80]	Speed: 21015.20 samples/sec	accuracy=nan
2023-03-20 11:42:13,743 Node[0] Epoch[23] Batch [80-100]	Speed: 21008.72 samples/sec	accuracy=nan
2023-03-20 11:42:16,846 Node[0] Epoch[23] Batch [100-120]	Speed: 21038.96 samples/sec	accuracy=nan
2023-03-20 11:42:19,955 Node[0] Epoch[23] Batch [120-140]	Speed: 20997.29 samples/sec	accuracy=nan
2023-03-20 11:42:23,061 Node[0] Epoch[23] Batch [140-160]	Speed: 21016.97 samples/sec	accuracy=nan
2023-03-20 11:42:26,168 Node[0] Epoch[23] Batch [160-180]	Speed: 21011.29 samples/sec	accuracy=nan
2023-03-20 11:42:29,279 Node[0] Epoch[23] Batch [180-200]	Speed: 20981.73 samples/sec	accuracy=nan
2023-03-20 11:42:32,389 Node[0] Epoch[23] Batch [200-220]	Speed: 20992.90 samples/sec	accuracy=nan
2023-03-20 11:42:35,494 Node[0] Epoch[23] Batch [220-240]	Speed: 21022.44 samples/sec	accuracy=nan
2023-03-20 11:42:38,600 Node[0] Epoch[23] Batch [240-260]	Speed: 21013.74 samples/sec	accuracy=nan
2023-03-20 11:42:41,707 Node[0] Epoch[23] Batch [260-280]	Speed: 21012.11 samples/sec	accuracy=nan
2023-03-20 11:42:44,813 Node[0] Epoch[23] Batch [280-300]	Speed: 21017.76 samples/sec	accuracy=nan
2023-03-20 11:42:47,916 Node[0] Epoch[23] Batch [300-320]	Speed: 21038.81 samples/sec	accuracy=nan
2023-03-20 11:42:51,022 Node[0] Epoch[23] Batch [320-340]	Speed: 21015.51 samples/sec	accuracy=nan
2023-03-20 11:42:54,129 Node[0] Epoch[23] Batch [340-360]	Speed: 21010.53 samples/sec	accuracy=nan
2023-03-20 11:42:57,237 Node[0] Epoch[23] Batch [360-380]	Speed: 21007.88 samples/sec	accuracy=nan
2023-03-20 11:42:59,097 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:42:59,097 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:42:59,097 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:42:59,097 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:42:59,097 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:42:59,097 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:42:59,097 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330579097, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-20 11:42:59,098 Node[0] Epoch[23] Time cost=60.911
:::MLLOG {"namespace": "", "time_ms": 1679330579098, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21033.449606578564}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679330579099, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-20 11:42:59,099 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:43:02,353 Node[0] Epoch[24] Batch [0-20]	Speed: 21055.10 samples/sec	accuracy=nan
2023-03-20 11:43:05,454 Node[0] Epoch[24] Batch [20-40]	Speed: 21052.17 samples/sec	accuracy=nan
2023-03-20 11:43:08,563 Node[0] Epoch[24] Batch [40-60]	Speed: 20995.85 samples/sec	accuracy=nan
2023-03-20 11:43:11,674 Node[0] Epoch[24] Batch [60-80]	Speed: 20980.57 samples/sec	accuracy=nan
2023-03-20 11:43:14,793 Node[0] Epoch[24] Batch [80-100]	Speed: 20929.89 samples/sec	accuracy=nan
2023-03-20 11:43:17,893 Node[0] Epoch[24] Batch [100-120]	Speed: 21061.23 samples/sec	accuracy=nan
2023-03-20 11:43:20,997 Node[0] Epoch[24] Batch [120-140]	Speed: 21029.59 samples/sec	accuracy=nan
2023-03-20 11:43:24,105 Node[0] Epoch[24] Batch [140-160]	Speed: 21002.98 samples/sec	accuracy=nan
2023-03-20 11:43:27,205 Node[0] Epoch[24] Batch [160-180]	Speed: 21057.06 samples/sec	accuracy=nan
2023-03-20 11:43:30,309 Node[0] Epoch[24] Batch [180-200]	Speed: 21031.69 samples/sec	accuracy=nan
2023-03-20 11:43:33,411 Node[0] Epoch[24] Batch [200-220]	Speed: 21048.52 samples/sec	accuracy=nan
2023-03-20 11:43:36,509 Node[0] Epoch[24] Batch [220-240]	Speed: 21068.04 samples/sec	accuracy=nan
2023-03-20 11:43:39,610 Node[0] Epoch[24] Batch [240-260]	Speed: 21050.29 samples/sec	accuracy=nan
2023-03-20 11:43:42,708 Node[0] Epoch[24] Batch [260-280]	Speed: 21074.29 samples/sec	accuracy=nan
2023-03-20 11:43:45,807 Node[0] Epoch[24] Batch [280-300]	Speed: 21065.15 samples/sec	accuracy=nan
2023-03-20 11:43:48,907 Node[0] Epoch[24] Batch [300-320]	Speed: 21057.21 samples/sec	accuracy=nan
2023-03-20 11:43:52,009 Node[0] Epoch[24] Batch [320-340]	Speed: 21047.44 samples/sec	accuracy=nan
2023-03-20 11:43:55,108 Node[0] Epoch[24] Batch [340-360]	Speed: 21061.54 samples/sec	accuracy=nan
2023-03-20 11:43:58,210 Node[0] Epoch[24] Batch [360-380]	Speed: 21043.86 samples/sec	accuracy=nan
2023-03-20 11:43:59,914 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:43:59,914 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:43:59,914 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:43:59,914 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:43:59,914 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:43:59,914 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:43:59,914 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330639914, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-20 11:43:59,915 Node[0] Epoch[24] Time cost=60.817
:::MLLOG {"namespace": "", "time_ms": 1679330639915, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21066.100215603554}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679330639916, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-20 11:43:59,916 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:44:03,171 Node[0] Epoch[25] Batch [0-20]	Speed: 21078.26 samples/sec	accuracy=nan
2023-03-20 11:44:06,270 Node[0] Epoch[25] Batch [20-40]	Speed: 21059.17 samples/sec	accuracy=nan
2023-03-20 11:44:09,373 Node[0] Epoch[25] Batch [40-60]	Speed: 21038.85 samples/sec	accuracy=nan
2023-03-20 11:44:12,475 Node[0] Epoch[25] Batch [60-80]	Speed: 21045.59 samples/sec	accuracy=nan
2023-03-20 11:44:15,577 Node[0] Epoch[25] Batch [80-100]	Speed: 21042.52 samples/sec	accuracy=nan
2023-03-20 11:44:18,679 Node[0] Epoch[25] Batch [100-120]	Speed: 21047.95 samples/sec	accuracy=nan
2023-03-20 11:44:21,781 Node[0] Epoch[25] Batch [120-140]	Speed: 21044.74 samples/sec	accuracy=nan
2023-03-20 11:44:24,882 Node[0] Epoch[25] Batch [140-160]	Speed: 21051.05 samples/sec	accuracy=nan
2023-03-20 11:44:27,996 Node[0] Epoch[25] Batch [160-180]	Speed: 20961.23 samples/sec	accuracy=nan
2023-03-20 11:44:31,100 Node[0] Epoch[25] Batch [180-200]	Speed: 21028.78 samples/sec	accuracy=nan
2023-03-20 11:44:34,204 Node[0] Epoch[25] Batch [200-220]	Speed: 21034.88 samples/sec	accuracy=nan
2023-03-20 11:44:37,304 Node[0] Epoch[25] Batch [220-240]	Speed: 21054.41 samples/sec	accuracy=nan
2023-03-20 11:44:40,414 Node[0] Epoch[25] Batch [240-260]	Speed: 20992.36 samples/sec	accuracy=nan
2023-03-20 11:44:43,521 Node[0] Epoch[25] Batch [260-280]	Speed: 21011.37 samples/sec	accuracy=nan
2023-03-20 11:44:46,629 Node[0] Epoch[25] Batch [280-300]	Speed: 21000.44 samples/sec	accuracy=nan
2023-03-20 11:44:52,063 Node[0] Epoch[25] Batch [300-320]	Speed: 12013.30 samples/sec	accuracy=nan
2023-03-20 11:44:55,169 Node[0] Epoch[25] Batch [320-340]	Speed: 21018.76 samples/sec	accuracy=nan
2023-03-20 11:44:58,276 Node[0] Epoch[25] Batch [340-360]	Speed: 21012.42 samples/sec	accuracy=nan
2023-03-20 11:45:01,382 Node[0] Epoch[25] Batch [360-380]	Speed: 21014.11 samples/sec	accuracy=nan
2023-03-20 11:45:03,243 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:45:03,244 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:45:03,244 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:45:03,244 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:45:03,244 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:45:03,244 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:45:03,244 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330703245, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-20 11:45:03,246 Node[0] Epoch[25] Time cost=63.331
:::MLLOG {"namespace": "", "time_ms": 1679330703247, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20229.76393644359}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679330703247, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-20 11:45:03,247 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:45:06,507 Node[0] Epoch[26] Batch [0-20]	Speed: 21011.85 samples/sec	accuracy=nan
2023-03-20 11:45:09,612 Node[0] Epoch[26] Batch [20-40]	Speed: 21027.17 samples/sec	accuracy=nan
2023-03-20 11:45:12,719 Node[0] Epoch[26] Batch [40-60]	Speed: 21011.23 samples/sec	accuracy=nan
2023-03-20 11:45:15,823 Node[0] Epoch[26] Batch [60-80]	Speed: 21030.50 samples/sec	accuracy=nan
2023-03-20 11:45:18,924 Node[0] Epoch[26] Batch [80-100]	Speed: 21049.62 samples/sec	accuracy=nan
2023-03-20 11:45:22,026 Node[0] Epoch[26] Batch [100-120]	Speed: 21045.68 samples/sec	accuracy=nan
2023-03-20 11:45:25,129 Node[0] Epoch[26] Batch [120-140]	Speed: 21039.64 samples/sec	accuracy=nan
2023-03-20 11:45:28,237 Node[0] Epoch[26] Batch [140-160]	Speed: 21002.15 samples/sec	accuracy=nan
2023-03-20 11:45:31,349 Node[0] Epoch[26] Batch [160-180]	Speed: 20975.46 samples/sec	accuracy=nan
2023-03-20 11:45:34,455 Node[0] Epoch[26] Batch [180-200]	Speed: 21016.59 samples/sec	accuracy=nan
2023-03-20 11:45:37,563 Node[0] Epoch[26] Batch [200-220]	Speed: 21003.78 samples/sec	accuracy=nan
2023-03-20 11:45:40,675 Node[0] Epoch[26] Batch [220-240]	Speed: 20981.77 samples/sec	accuracy=nan
2023-03-20 11:45:43,783 Node[0] Epoch[26] Batch [240-260]	Speed: 21004.08 samples/sec	accuracy=nan
2023-03-20 11:45:46,891 Node[0] Epoch[26] Batch [260-280]	Speed: 21000.77 samples/sec	accuracy=nan
2023-03-20 11:45:49,998 Node[0] Epoch[26] Batch [280-300]	Speed: 21013.50 samples/sec	accuracy=nan
2023-03-20 11:45:53,110 Node[0] Epoch[26] Batch [300-320]	Speed: 20975.41 samples/sec	accuracy=nan
2023-03-20 11:45:56,214 Node[0] Epoch[26] Batch [320-340]	Speed: 21031.00 samples/sec	accuracy=nan
2023-03-20 11:45:59,315 Node[0] Epoch[26] Batch [340-360]	Speed: 21050.31 samples/sec	accuracy=nan
2023-03-20 11:46:02,416 Node[0] Epoch[26] Batch [360-380]	Speed: 21051.44 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679330764119, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-20 11:46:04,120 Node[0] Epoch[26] Time cost=60.873
:::MLLOG {"namespace": "", "time_ms": 1679330764120, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21046.63544151292}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679330764268, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-20 11:46:05,488 Node[0] Epoch[26] Validation-accuracy=0.715680
2023-03-20 11:46:05,488 Node[0] Epoch[26] Validation-correct-count=4473.000000
2023-03-20 11:46:05,488 Node[0] Epoch[26] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679330765827, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679330765827, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7184, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679330765827, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
2023-03-20 11:46:05,827 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330765827, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-20 11:46:05,827 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:46:05,827 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:46:05,827 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:46:05,827 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:46:05,827 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330765827, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-20 11:46:05,827 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:46:05,827 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:46:08,956 Node[0] Epoch[27] Batch [0-20]	Speed: 20919.25 samples/sec	accuracy=nan
2023-03-20 11:46:12,060 Node[0] Epoch[27] Batch [20-40]	Speed: 21034.01 samples/sec	accuracy=nan
2023-03-20 11:46:15,159 Node[0] Epoch[27] Batch [40-60]	Speed: 21061.73 samples/sec	accuracy=nan
2023-03-20 11:46:18,260 Node[0] Epoch[27] Batch [60-80]	Speed: 21053.77 samples/sec	accuracy=nan
2023-03-20 11:46:21,362 Node[0] Epoch[27] Batch [80-100]	Speed: 21045.05 samples/sec	accuracy=nan
2023-03-20 11:46:24,461 Node[0] Epoch[27] Batch [100-120]	Speed: 21064.06 samples/sec	accuracy=nan
2023-03-20 11:46:27,562 Node[0] Epoch[27] Batch [120-140]	Speed: 21050.17 samples/sec	accuracy=nan
2023-03-20 11:46:30,661 Node[0] Epoch[27] Batch [140-160]	Speed: 21062.36 samples/sec	accuracy=nan
2023-03-20 11:46:33,767 Node[0] Epoch[27] Batch [160-180]	Speed: 21017.97 samples/sec	accuracy=nan
2023-03-20 11:46:36,877 Node[0] Epoch[27] Batch [180-200]	Speed: 20989.74 samples/sec	accuracy=nan
2023-03-20 11:46:39,988 Node[0] Epoch[27] Batch [200-220]	Speed: 20986.49 samples/sec	accuracy=nan
2023-03-20 11:46:43,099 Node[0] Epoch[27] Batch [220-240]	Speed: 20983.09 samples/sec	accuracy=nan
2023-03-20 11:46:46,210 Node[0] Epoch[27] Batch [240-260]	Speed: 20985.52 samples/sec	accuracy=nan
2023-03-20 11:46:49,318 Node[0] Epoch[27] Batch [260-280]	Speed: 21005.77 samples/sec	accuracy=nan
2023-03-20 11:46:52,430 Node[0] Epoch[27] Batch [280-300]	Speed: 20974.09 samples/sec	accuracy=nan
2023-03-20 11:46:59,806 Node[0] Epoch[27] Batch [300-320]	Speed: 8850.76 samples/sec	accuracy=nan
2023-03-20 11:47:02,903 Node[0] Epoch[27] Batch [320-340]	Speed: 21076.06 samples/sec	accuracy=nan
2023-03-20 11:47:06,001 Node[0] Epoch[27] Batch [340-360]	Speed: 21073.04 samples/sec	accuracy=nan
2023-03-20 11:47:09,098 Node[0] Epoch[27] Batch [360-380]	Speed: 21078.44 samples/sec	accuracy=nan
2023-03-20 11:47:10,954 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:47:10,954 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:47:10,954 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:47:10,954 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:47:10,955 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:47:10,955 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:47:10,955 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330830954, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-20 11:47:10,956 Node[0] Epoch[27] Time cost=65.128
:::MLLOG {"namespace": "", "time_ms": 1679330830956, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 19671.4870357266}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679330830956, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-20 11:47:10,956 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:47:14,217 Node[0] Epoch[28] Batch [0-20]	Speed: 21017.91 samples/sec	accuracy=nan
2023-03-20 11:47:17,323 Node[0] Epoch[28] Batch [20-40]	Speed: 21018.32 samples/sec	accuracy=nan
2023-03-20 11:47:20,427 Node[0] Epoch[28] Batch [40-60]	Speed: 21032.90 samples/sec	accuracy=nan
2023-03-20 11:47:23,530 Node[0] Epoch[28] Batch [60-80]	Speed: 21032.61 samples/sec	accuracy=nan
2023-03-20 11:47:26,629 Node[0] Epoch[28] Batch [80-100]	Speed: 21066.25 samples/sec	accuracy=nan
2023-03-20 11:47:29,728 Node[0] Epoch[28] Batch [100-120]	Speed: 21064.04 samples/sec	accuracy=nan
2023-03-20 11:47:32,826 Node[0] Epoch[28] Batch [120-140]	Speed: 21074.83 samples/sec	accuracy=nan
2023-03-20 11:47:35,925 Node[0] Epoch[28] Batch [140-160]	Speed: 21063.47 samples/sec	accuracy=nan
2023-03-20 11:47:39,025 Node[0] Epoch[28] Batch [160-180]	Speed: 21059.53 samples/sec	accuracy=nan
2023-03-20 11:47:42,132 Node[0] Epoch[28] Batch [180-200]	Speed: 21006.23 samples/sec	accuracy=nan
2023-03-20 11:47:45,240 Node[0] Epoch[28] Batch [200-220]	Speed: 21006.85 samples/sec	accuracy=nan
2023-03-20 11:47:48,350 Node[0] Epoch[28] Batch [220-240]	Speed: 20993.10 samples/sec	accuracy=nan
2023-03-20 11:47:51,460 Node[0] Epoch[28] Batch [240-260]	Speed: 20989.06 samples/sec	accuracy=nan
2023-03-20 11:47:54,566 Node[0] Epoch[28] Batch [260-280]	Speed: 21013.80 samples/sec	accuracy=nan
2023-03-20 11:47:57,674 Node[0] Epoch[28] Batch [280-300]	Speed: 21005.30 samples/sec	accuracy=nan
2023-03-20 11:48:02,820 Node[0] Epoch[28] Batch [300-320]	Speed: 12686.64 samples/sec	accuracy=nan
2023-03-20 11:48:05,926 Node[0] Epoch[28] Batch [320-340]	Speed: 21012.41 samples/sec	accuracy=nan
2023-03-20 11:48:09,033 Node[0] Epoch[28] Batch [340-360]	Speed: 21013.26 samples/sec	accuracy=nan
2023-03-20 11:48:12,142 Node[0] Epoch[28] Batch [360-380]	Speed: 20993.49 samples/sec	accuracy=nan
2023-03-20 11:48:13,847 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:48:13,847 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:48:13,848 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:48:13,847 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:48:13,848 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:48:13,848 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:48:13,848 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330893848, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-20 11:48:13,850 Node[0] Epoch[28] Time cost=62.894
:::MLLOG {"namespace": "", "time_ms": 1679330893850, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20370.412240037236}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1679330893850, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-20 11:48:13,850 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:48:17,111 Node[0] Epoch[29] Batch [0-20]	Speed: 21041.01 samples/sec	accuracy=nan
2023-03-20 11:48:20,219 Node[0] Epoch[29] Batch [20-40]	Speed: 21000.08 samples/sec	accuracy=nan
2023-03-20 11:48:23,325 Node[0] Epoch[29] Batch [40-60]	Speed: 21019.03 samples/sec	accuracy=nan
2023-03-20 11:48:26,433 Node[0] Epoch[29] Batch [60-80]	Speed: 21000.81 samples/sec	accuracy=nan
2023-03-20 11:48:29,538 Node[0] Epoch[29] Batch [80-100]	Speed: 21027.27 samples/sec	accuracy=nan
2023-03-20 11:48:32,643 Node[0] Epoch[29] Batch [100-120]	Speed: 21026.71 samples/sec	accuracy=nan
2023-03-20 11:48:35,743 Node[0] Epoch[29] Batch [120-140]	Speed: 21056.70 samples/sec	accuracy=nan
2023-03-20 11:48:38,845 Node[0] Epoch[29] Batch [140-160]	Speed: 21045.66 samples/sec	accuracy=nan
2023-03-20 11:48:41,952 Node[0] Epoch[29] Batch [160-180]	Speed: 21007.94 samples/sec	accuracy=nan
2023-03-20 11:48:45,055 Node[0] Epoch[29] Batch [180-200]	Speed: 21041.56 samples/sec	accuracy=nan
2023-03-20 11:48:48,156 Node[0] Epoch[29] Batch [200-220]	Speed: 21050.74 samples/sec	accuracy=nan
2023-03-20 11:48:51,258 Node[0] Epoch[29] Batch [220-240]	Speed: 21039.94 samples/sec	accuracy=nan
2023-03-20 11:48:56,643 Node[0] Epoch[29] Batch [240-260]	Speed: 12122.42 samples/sec	accuracy=nan
2023-03-20 11:48:59,751 Node[0] Epoch[29] Batch [260-280]	Speed: 21004.40 samples/sec	accuracy=nan
2023-03-20 11:49:02,854 Node[0] Epoch[29] Batch [280-300]	Speed: 21038.49 samples/sec	accuracy=nan
2023-03-20 11:49:05,956 Node[0] Epoch[29] Batch [300-320]	Speed: 21042.39 samples/sec	accuracy=nan
2023-03-20 11:49:09,057 Node[0] Epoch[29] Batch [320-340]	Speed: 21057.79 samples/sec	accuracy=nan
2023-03-20 11:49:12,159 Node[0] Epoch[29] Batch [340-360]	Speed: 21040.93 samples/sec	accuracy=nan
2023-03-20 11:49:15,263 Node[0] Epoch[29] Batch [360-380]	Speed: 21029.46 samples/sec	accuracy=nan
2023-03-20 11:49:17,122 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:49:17,122 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:49:17,122 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:49:17,122 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:49:17,123 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:49:17,123 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679330957122, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-20 11:49:17,123 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:49:17,124 Node[0] Epoch[29] Time cost=63.274
:::MLLOG {"namespace": "", "time_ms": 1679330957124, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20248.03009906542}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679330957124, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-20 11:49:17,124 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:49:20,380 Node[0] Epoch[30] Batch [0-20]	Speed: 21049.36 samples/sec	accuracy=nan
2023-03-20 11:49:23,481 Node[0] Epoch[30] Batch [20-40]	Speed: 21047.32 samples/sec	accuracy=nan
2023-03-20 11:49:26,584 Node[0] Epoch[30] Batch [40-60]	Speed: 21043.29 samples/sec	accuracy=nan
2023-03-20 11:49:29,686 Node[0] Epoch[30] Batch [60-80]	Speed: 21041.13 samples/sec	accuracy=nan
2023-03-20 11:49:32,788 Node[0] Epoch[30] Batch [80-100]	Speed: 21046.15 samples/sec	accuracy=nan
2023-03-20 11:49:35,891 Node[0] Epoch[30] Batch [100-120]	Speed: 21035.28 samples/sec	accuracy=nan
2023-03-20 11:49:38,993 Node[0] Epoch[30] Batch [120-140]	Speed: 21046.80 samples/sec	accuracy=nan
2023-03-20 11:49:42,099 Node[0] Epoch[30] Batch [140-160]	Speed: 21012.25 samples/sec	accuracy=nan
2023-03-20 11:49:45,205 Node[0] Epoch[30] Batch [160-180]	Speed: 21019.44 samples/sec	accuracy=nan
2023-03-20 11:49:48,308 Node[0] Epoch[30] Batch [180-200]	Speed: 21041.43 samples/sec	accuracy=nan
2023-03-20 11:49:51,411 Node[0] Epoch[30] Batch [200-220]	Speed: 21032.66 samples/sec	accuracy=nan
2023-03-20 11:49:54,517 Node[0] Epoch[30] Batch [220-240]	Speed: 21019.31 samples/sec	accuracy=nan
2023-03-20 11:49:57,621 Node[0] Epoch[30] Batch [240-260]	Speed: 21029.86 samples/sec	accuracy=nan
2023-03-20 11:50:00,726 Node[0] Epoch[30] Batch [260-280]	Speed: 21023.87 samples/sec	accuracy=nan
2023-03-20 11:50:03,827 Node[0] Epoch[30] Batch [280-300]	Speed: 21050.30 samples/sec	accuracy=nan
2023-03-20 11:50:06,931 Node[0] Epoch[30] Batch [300-320]	Speed: 21030.54 samples/sec	accuracy=nan
2023-03-20 11:50:10,036 Node[0] Epoch[30] Batch [320-340]	Speed: 21028.58 samples/sec	accuracy=nan
2023-03-20 11:50:13,139 Node[0] Epoch[30] Batch [340-360]	Speed: 21035.16 samples/sec	accuracy=nan
2023-03-20 11:50:16,247 Node[0] Epoch[30] Batch [360-380]	Speed: 21004.06 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679331017955, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-20 11:50:17,956 Node[0] Epoch[30] Time cost=60.832
:::MLLOG {"namespace": "", "time_ms": 1679331017956, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21060.828134900792}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679331018106, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-20 11:50:19,491 Node[0] Epoch[30] Validation-accuracy=0.760320
2023-03-20 11:50:19,491 Node[0] Epoch[30] Validation-correct-count=4752.000000
2023-03-20 11:50:19,491 Node[0] Epoch[30] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679331019685, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679331019685, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.752, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
2023-03-20 11:50:19,685 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:50:19,685 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679331019685, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
2023-03-20 11:50:19,685 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679331019685, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-20 11:50:19,685 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:50:19,685 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:50:19,685 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:50:19,685 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679331019686, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-20 11:50:19,686 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:50:22,812 Node[0] Epoch[31] Batch [0-20]	Speed: 20943.66 samples/sec	accuracy=nan
2023-03-20 11:50:25,920 Node[0] Epoch[31] Batch [20-40]	Speed: 21004.09 samples/sec	accuracy=nan
2023-03-20 11:50:29,020 Node[0] Epoch[31] Batch [40-60]	Speed: 21053.78 samples/sec	accuracy=nan
2023-03-20 11:50:32,123 Node[0] Epoch[31] Batch [60-80]	Speed: 21039.71 samples/sec	accuracy=nan
2023-03-20 11:50:35,223 Node[0] Epoch[31] Batch [80-100]	Speed: 21057.83 samples/sec	accuracy=nan
2023-03-20 11:50:38,328 Node[0] Epoch[31] Batch [100-120]	Speed: 21025.96 samples/sec	accuracy=nan
2023-03-20 11:50:41,434 Node[0] Epoch[31] Batch [120-140]	Speed: 21016.92 samples/sec	accuracy=nan
2023-03-20 11:50:44,541 Node[0] Epoch[31] Batch [140-160]	Speed: 21013.13 samples/sec	accuracy=nan
2023-03-20 11:50:47,646 Node[0] Epoch[31] Batch [160-180]	Speed: 21022.08 samples/sec	accuracy=nan
2023-03-20 11:50:50,750 Node[0] Epoch[31] Batch [180-200]	Speed: 21030.29 samples/sec	accuracy=nan
2023-03-20 11:50:53,854 Node[0] Epoch[31] Batch [200-220]	Speed: 21027.22 samples/sec	accuracy=nan
2023-03-20 11:50:56,957 Node[0] Epoch[31] Batch [220-240]	Speed: 21038.73 samples/sec	accuracy=nan
2023-03-20 11:51:00,061 Node[0] Epoch[31] Batch [240-260]	Speed: 21031.01 samples/sec	accuracy=nan
2023-03-20 11:51:03,165 Node[0] Epoch[31] Batch [260-280]	Speed: 21033.89 samples/sec	accuracy=nan
2023-03-20 11:51:06,270 Node[0] Epoch[31] Batch [280-300]	Speed: 21023.61 samples/sec	accuracy=nan
2023-03-20 11:51:09,374 Node[0] Epoch[31] Batch [300-320]	Speed: 21032.41 samples/sec	accuracy=nan
2023-03-20 11:51:12,478 Node[0] Epoch[31] Batch [320-340]	Speed: 21031.76 samples/sec	accuracy=nan
2023-03-20 11:51:15,589 Node[0] Epoch[31] Batch [340-360]	Speed: 20982.67 samples/sec	accuracy=nan
2023-03-20 11:51:18,697 Node[0] Epoch[31] Batch [360-380]	Speed: 21004.64 samples/sec	accuracy=nan
2023-03-20 11:51:20,556 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:51:20,556 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:51:20,556 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:51:20,556 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:51:20,556 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:51:20,556 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:51:20,557 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679331080557, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-20 11:51:20,558 Node[0] Epoch[31] Time cost=60.872
:::MLLOG {"namespace": "", "time_ms": 1679331080558, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21046.81646535571}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679331080558, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-20 11:51:20,559 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:51:23,824 Node[0] Epoch[32] Batch [0-20]	Speed: 20985.24 samples/sec	accuracy=nan
2023-03-20 11:51:26,930 Node[0] Epoch[32] Batch [20-40]	Speed: 21018.01 samples/sec	accuracy=nan
2023-03-20 11:51:30,033 Node[0] Epoch[32] Batch [40-60]	Speed: 21035.73 samples/sec	accuracy=nan
2023-03-20 11:51:33,135 Node[0] Epoch[32] Batch [60-80]	Speed: 21044.26 samples/sec	accuracy=nan
2023-03-20 11:51:36,240 Node[0] Epoch[32] Batch [80-100]	Speed: 21028.11 samples/sec	accuracy=nan
2023-03-20 11:51:39,341 Node[0] Epoch[32] Batch [100-120]	Speed: 21049.21 samples/sec	accuracy=nan
2023-03-20 11:51:42,445 Node[0] Epoch[32] Batch [120-140]	Speed: 21029.06 samples/sec	accuracy=nan
2023-03-20 11:51:45,550 Node[0] Epoch[32] Batch [140-160]	Speed: 21022.95 samples/sec	accuracy=nan
2023-03-20 11:51:48,655 Node[0] Epoch[32] Batch [160-180]	Speed: 21025.87 samples/sec	accuracy=nan
2023-03-20 11:51:51,758 Node[0] Epoch[32] Batch [180-200]	Speed: 21036.96 samples/sec	accuracy=nan
2023-03-20 11:51:54,862 Node[0] Epoch[32] Batch [200-220]	Speed: 21032.21 samples/sec	accuracy=nan
2023-03-20 11:51:57,971 Node[0] Epoch[32] Batch [220-240]	Speed: 20997.46 samples/sec	accuracy=nan
2023-03-20 11:52:01,081 Node[0] Epoch[32] Batch [240-260]	Speed: 20992.82 samples/sec	accuracy=nan
2023-03-20 11:52:04,188 Node[0] Epoch[32] Batch [260-280]	Speed: 21006.73 samples/sec	accuracy=nan
2023-03-20 11:52:07,297 Node[0] Epoch[32] Batch [280-300]	Speed: 20999.81 samples/sec	accuracy=nan
2023-03-20 11:52:10,404 Node[0] Epoch[32] Batch [300-320]	Speed: 21012.25 samples/sec	accuracy=nan
2023-03-20 11:52:13,505 Node[0] Epoch[32] Batch [320-340]	Speed: 21051.27 samples/sec	accuracy=nan
2023-03-20 11:52:16,608 Node[0] Epoch[32] Batch [340-360]	Speed: 21032.12 samples/sec	accuracy=nan
2023-03-20 11:52:19,709 Node[0] Epoch[32] Batch [360-380]	Speed: 21051.79 samples/sec	accuracy=nan
2023-03-20 11:52:21,414 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:52:21,414 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:52:21,414 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:52:21,414 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:52:21,414 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:52:21,414 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679331141414, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-20 11:52:21,415 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:52:21,416 Node[0] Epoch[32] Time cost=60.857
:::MLLOG {"namespace": "", "time_ms": 1679331141416, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21052.079635600265}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679331141416, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-20 11:52:21,416 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:52:24,673 Node[0] Epoch[33] Batch [0-20]	Speed: 21069.08 samples/sec	accuracy=nan
2023-03-20 11:52:27,773 Node[0] Epoch[33] Batch [20-40]	Speed: 21059.50 samples/sec	accuracy=nan
2023-03-20 11:52:30,878 Node[0] Epoch[33] Batch [40-60]	Speed: 21023.63 samples/sec	accuracy=nan
2023-03-20 11:52:33,982 Node[0] Epoch[33] Batch [60-80]	Speed: 21026.21 samples/sec	accuracy=nan
2023-03-20 11:52:37,086 Node[0] Epoch[33] Batch [80-100]	Speed: 21035.33 samples/sec	accuracy=nan
2023-03-20 11:52:40,185 Node[0] Epoch[33] Batch [100-120]	Speed: 21060.27 samples/sec	accuracy=nan
2023-03-20 11:52:43,289 Node[0] Epoch[33] Batch [120-140]	Speed: 21030.29 samples/sec	accuracy=nan
2023-03-20 11:52:46,391 Node[0] Epoch[33] Batch [140-160]	Speed: 21047.29 samples/sec	accuracy=nan
2023-03-20 11:52:49,495 Node[0] Epoch[33] Batch [160-180]	Speed: 21029.98 samples/sec	accuracy=nan
2023-03-20 11:52:52,598 Node[0] Epoch[33] Batch [180-200]	Speed: 21038.16 samples/sec	accuracy=nan
2023-03-20 11:52:55,704 Node[0] Epoch[33] Batch [200-220]	Speed: 21020.44 samples/sec	accuracy=nan
2023-03-20 11:52:58,808 Node[0] Epoch[33] Batch [220-240]	Speed: 21028.97 samples/sec	accuracy=nan
2023-03-20 11:53:01,911 Node[0] Epoch[33] Batch [240-260]	Speed: 21036.94 samples/sec	accuracy=nan
2023-03-20 11:53:05,018 Node[0] Epoch[33] Batch [260-280]	Speed: 21010.96 samples/sec	accuracy=nan
2023-03-20 11:53:10,461 Node[0] Epoch[33] Batch [280-300]	Speed: 11993.27 samples/sec	accuracy=nan
2023-03-20 11:53:15,547 Node[0] Epoch[33] Batch [300-320]	Speed: 12835.06 samples/sec	accuracy=nan
2023-03-20 11:53:18,652 Node[0] Epoch[33] Batch [320-340]	Speed: 21026.10 samples/sec	accuracy=nan
2023-03-20 11:53:21,758 Node[0] Epoch[33] Batch [340-360]	Speed: 21017.01 samples/sec	accuracy=nan
2023-03-20 11:53:24,863 Node[0] Epoch[33] Batch [360-380]	Speed: 21024.63 samples/sec	accuracy=nan
2023-03-20 11:53:26,724 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:53:26,725 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:53:26,725 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:53:26,724 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:53:26,725 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:53:26,725 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679331206725, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-20 11:53:26,726 Node[0] Epoch[33] Time cost=65.310
2023-03-20 11:53:26,726 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679331206726, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 19616.68885011916}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679331206727, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-20 11:53:26,727 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:53:29,988 Node[0] Epoch[34] Batch [0-20]	Speed: 21004.01 samples/sec	accuracy=nan
2023-03-20 11:53:33,092 Node[0] Epoch[34] Batch [20-40]	Speed: 21033.75 samples/sec	accuracy=nan
2023-03-20 11:53:36,193 Node[0] Epoch[34] Batch [40-60]	Speed: 21051.11 samples/sec	accuracy=nan
2023-03-20 11:53:39,295 Node[0] Epoch[34] Batch [60-80]	Speed: 21041.55 samples/sec	accuracy=nan
2023-03-20 11:53:42,402 Node[0] Epoch[34] Batch [80-100]	Speed: 21015.31 samples/sec	accuracy=nan
2023-03-20 11:53:45,507 Node[0] Epoch[34] Batch [100-120]	Speed: 21021.96 samples/sec	accuracy=nan
2023-03-20 11:53:48,608 Node[0] Epoch[34] Batch [120-140]	Speed: 21049.71 samples/sec	accuracy=nan
2023-03-20 11:53:51,712 Node[0] Epoch[34] Batch [140-160]	Speed: 21030.18 samples/sec	accuracy=nan
2023-03-20 11:53:54,819 Node[0] Epoch[34] Batch [160-180]	Speed: 21013.96 samples/sec	accuracy=nan
2023-03-20 11:53:57,928 Node[0] Epoch[34] Batch [180-200]	Speed: 20999.56 samples/sec	accuracy=nan
2023-03-20 11:54:01,031 Node[0] Epoch[34] Batch [200-220]	Speed: 21037.17 samples/sec	accuracy=nan
2023-03-20 11:54:04,134 Node[0] Epoch[34] Batch [220-240]	Speed: 21031.69 samples/sec	accuracy=nan
2023-03-20 11:54:07,239 Node[0] Epoch[34] Batch [240-260]	Speed: 21028.17 samples/sec	accuracy=nan
2023-03-20 11:54:10,351 Node[0] Epoch[34] Batch [260-280]	Speed: 20975.66 samples/sec	accuracy=nan
2023-03-20 11:54:13,456 Node[0] Epoch[34] Batch [280-300]	Speed: 21022.72 samples/sec	accuracy=nan
2023-03-20 11:54:18,544 Node[0] Epoch[34] Batch [300-320]	Speed: 12831.43 samples/sec	accuracy=nan
2023-03-20 11:54:21,646 Node[0] Epoch[34] Batch [320-340]	Speed: 21043.56 samples/sec	accuracy=nan
2023-03-20 11:54:24,753 Node[0] Epoch[34] Batch [340-360]	Speed: 21009.89 samples/sec	accuracy=nan
2023-03-20 11:54:27,857 Node[0] Epoch[34] Batch [360-380]	Speed: 21030.97 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679331269720, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-20 11:54:29,721 Node[0] Epoch[34] Time cost=62.994
:::MLLOG {"namespace": "", "time_ms": 1679331269721, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20337.916159022134}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679331269870, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-20 11:54:31,088 Node[0] Epoch[34] Validation-accuracy=0.764800
2023-03-20 11:54:31,088 Node[0] Epoch[34] Validation-correct-count=4780.000000
2023-03-20 11:54:31,088 Node[0] Epoch[34] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679331271506, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679331271507, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76142, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679331271507, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679331271507, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679331287
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 11:54:47 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 11:54:47 AM'
ENDING TIMING RUN AT 2023-03-20 11:54:47 AM
+ result=2303
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2303,root,2023-03-20 11:16:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2303,root,2023-03-20 11:16:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679331287
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 11:54:47 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 11:54:47 AM'
ENDING TIMING RUN AT 2023-03-20 11:54:47 AM
+ result=2303
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2303,root,2023-03-20 11:16:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2303,root,2023-03-20 11:16:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679331287
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 11:54:47 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 11:54:47 AM'
ENDING TIMING RUN AT 2023-03-20 11:54:47 AM
+ result=2303
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2303,root,2023-03-20 11:16:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2303,root,2023-03-20 11:16:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679331288
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 11:54:48 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 11:54:48 AM'
ENDING TIMING RUN AT 2023-03-20 11:54:48 AM
+ result=2304
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2304,root,2023-03-20 11:16:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2304,root,2023-03-20 11:16:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679331288
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 11:54:48 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 11:54:48 AM'
ENDING TIMING RUN AT 2023-03-20 11:54:48 AM
+ result=2304
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2304,root,2023-03-20 11:16:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2304,root,2023-03-20 11:16:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679331288
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 11:54:48 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 11:54:48 AM'
ENDING TIMING RUN AT 2023-03-20 11:54:48 AM
+ result=2304
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2304,root,2023-03-20 11:16:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2304,root,2023-03-20 11:16:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679331288
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 11:54:48 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 11:54:48 AM'
ENDING TIMING RUN AT 2023-03-20 11:54:48 AM
+ result=2304
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2304,root,2023-03-20 11:16:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2304,root,2023-03-20 11:16:24 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679331289
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 11:54:49 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 11:54:49 AM'
ENDING TIMING RUN AT 2023-03-20 11:54:49 AM
+ result=2305
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2305,root,2023-03-20 11:16:24 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2305,root,2023-03-20 11:16:24 AM'
+ export PROFILE=0
+ PROFILE=0
