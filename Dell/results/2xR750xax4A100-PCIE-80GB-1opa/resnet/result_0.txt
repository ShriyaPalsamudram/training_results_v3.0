+ echo 'Beginning trial 1 of 5'
Beginning trial 1 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node041 node046 '
+ echo 'hosts=node041 node046 '
hosts=node041 node046 
+ for node in $hosts
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679319474041, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679319474070, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679319474071, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679319474072, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679319474073, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node041 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node041
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679319485445, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679319490731, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679319490759, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679319490761, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679319490762, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679319490763, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node046 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node046
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679319501221, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=5795
+ SEED=5795
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node041: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node046: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
+++ export 'OMPI_MCA_btl=^openib'
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
+++ DALI_DONT_USE_MMAP=0
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
+++ export DGXNGPU=4
+++ DGXNGPU=4
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
+++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
++ export DGXNNODES=2
++ DGXNNODES=2
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ sed 's/^config_//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ date +%s
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679319502
+ start=1679319502
+ start=1679319502
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 08:38:22 AM'
+ start_fmt='2023-03-20 08:38:22 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 08:38:22 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 08:38:22 AM'
+ readonly global_rank=0
+ global_rank=0
STARTING TIMING RUN AT 2023-03-20 08:38:22 AM
STARTING TIMING RUN AT 2023-03-20 08:38:22 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ SLURM_NTASKS_PER_NODE=4
+ BATCHSIZE=408
+ OPTIMIZER=sgdwfastlars
+ INPUT_BATCH_MULTIPLIER=1
+ BATCHSIZE=408
+ KVSTORE=horovod
+ LR=12.5
+ INPUT_BATCH_MULTIPLIER=1
+ MOM=0.9
+ KVSTORE=horovod
+ LRSCHED=pow2
+ LR=12.5
+ WARMUP_EPOCHS=2
+ MOM=0.9
+ start_fmt='2023-03-20 08:38:22 AM'
+ LARSETA=0.001
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ DALI_HW_DECODER_LOAD=0
+ LARSETA=0.001
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ DALI_HW_DECODER_LOAD=0
+ echo 'STARTING TIMING RUN AT 2023-03-20 08:38:22 AM'
+ SEED=5795
+ EVAL_OFFSET=2
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
STARTING TIMING RUN AT 2023-03-20 08:38:22 AM
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ SEED=5795
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_THREADS=6
+ readonly global_rank=0
+ global_rank=0
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_THREADS=6
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_CACHE_SIZE=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_ROI_DECODE=1
+ readonly local_rank=0
+ local_rank=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ SLURM_NTASKS_PER_NODE=4
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ OPTIMIZER=sgdwfastlars
+ DALI_DONT_USE_MMAP=0
+ DALI_CROP_BUFFER_HINT=165581
+ BATCHSIZE=408
+ NUMEPOCHS=37
+ INPUT_BATCH_MULTIPLIER=1
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ KVSTORE=horovod
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ LR=12.5
+ MOM=0.9
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NETWORK=resnet-v1b-stats-fl
+ NODALI=0
+ LRSCHED=pow2
+ BN_GROUP=1
+ WARMUP_EPOCHS=2
+ NUMEXAMPLES=
+ PROFILE=0
+ PROFILE_EXCEL=0
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ LARSETA=0.001
+ NODALI=0
+ NUMEXAMPLES=
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ PROFILE_ALL_LOCAL_RANKS=0
+ [[ 0 == 1 ]]
+ LABELSMOOTHING=0.1
+ THR=0.759
+ DATAROOT=/data
+ SEED=5795
running benchmark
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ [[ 0 -ge 1 ]]
running benchmark
+ DALI_ROI_DECODE=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ [[ 0 -ge 1 ]]
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679319502
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 08:38:22 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 08:38:22 AM'
STARTING TIMING RUN AT 2023-03-20 08:38:22 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=5795
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ date +%s
++ date +%s
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ date +%s
+ start=1679319502
+ start=1679319502
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 08:38:22 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 08:38:22 AM'
STARTING TIMING RUN AT 2023-03-20 08:38:22 AM
+ readonly global_rank=0
+ global_rank=0
+ start_fmt='2023-03-20 08:38:22 AM'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ echo 'STARTING TIMING RUN AT 2023-03-20 08:38:22 AM'
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
STARTING TIMING RUN AT 2023-03-20 08:38:22 AM
+ readonly global_rank=0
+ global_rank=0
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ readonly local_rank=0
+ local_rank=0
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=5795
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=5795
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
+ start=1679319502
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
+ start=1679319502
++ sed 's/,$//'
++ sed 's/,$//'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 08:38:22 AM'
STARTING TIMING RUN AT 2023-03-20 08:38:22 AM
+ echo 'STARTING TIMING RUN AT 2023-03-20 08:38:22 AM'
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ start_fmt='2023-03-20 08:38:22 AM'
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ echo 'STARTING TIMING RUN AT 2023-03-20 08:38:22 AM'
+ SEED=5795
+ EVAL_OFFSET=2
STARTING TIMING RUN AT 2023-03-20 08:38:22 AM
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ readonly global_rank=0
+ global_rank=0
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ readonly local_rank=0
+ local_rank=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ THR=0.759
+ [[ 0 == 1 ]]
+ SEED=5795
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ [[ 0 -ge 1 ]]
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 5795 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node041:881579] MCW rank 3 is not bound (or bound to all available processors)
[node041:881580] MCW rank 1 is not bound (or bound to all available processors)
[node041:881596] MCW rank 0 is not bound (or bound to all available processors)
[node041:881581] MCW rank 2 is not bound (or bound to all available processors)
[node046:1054403] MCW rank 4 is not bound (or bound to all available processors)
[node046:1054401] MCW rank 5 is not bound (or bound to all available processors)
[node046:1054400] MCW rank 7 is not bound (or bound to all available processors)
[node046:1054402] MCW rank 6 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679319507621, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[08:38:34] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[08:38:34] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[08:38:34] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[08:38:34] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679319514640, "event_type": "POINT_IN_TIME", "key": "seed", "value": 5795, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[08:38:35] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[08:38:35] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[08:38:35] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[08:38:35] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679319516934, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 408, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[08:38:41] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[08:38:41] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[08:38:41] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[08:38:41] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679319521445, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521446, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521446, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521447, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521447, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521447, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521447, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521448, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521448, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521448, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521448, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521448, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521449, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521449, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521449, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521449, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521449, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521450, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521450, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521450, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521450, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521450, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521451, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521451, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521451, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521451, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521451, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521452, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521452, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521452, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521452, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521452, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521453, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521453, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521453, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521453, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521453, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521454, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521454, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521454, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521454, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521454, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521455, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521455, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521455, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521455, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521455, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521456, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521456, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521456, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521456, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521456, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521457, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521457, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521457, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521457, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521457, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521457, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521458, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521458, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521458, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521458, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521459, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521459, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521459, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521459, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521459, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521459, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521460, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521460, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521460, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521460, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521460, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521461, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521461, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521461, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521461, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521461, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521462, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521462, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521462, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521462, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521463, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521463, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521463, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521463, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521463, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521464, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521464, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521464, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521464, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521464, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521465, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521465, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521465, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521465, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521465, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521466, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521466, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521466, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521466, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521466, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521467, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521467, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521467, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521467, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521468, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521468, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521468, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521468, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521468, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521469, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521469, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521469, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521469, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521470, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521470, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521470, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521470, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521470, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521471, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521471, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521471, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521471, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521471, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521472, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521472, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521472, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521472, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521472, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521473, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521473, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521473, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521473, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521473, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521474, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521474, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521474, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521474, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521474, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521475, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521475, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521475, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521475, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521475, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521476, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521476, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521476, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521476, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521476, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521477, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521477, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521477, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521477, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521477, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521478, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521478, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521478, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521478, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521478, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679319521479, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[08:38:42] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[08:38:42] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[08:38:42] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[08:38:42] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 08:38:43,963 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=63871, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 08:38:43,966 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=40370, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 08:38:43,966 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=14608, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 08:38:43,966 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=10575, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 08:38:43,967 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=44410, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 08:38:43,967 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=25832, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 08:38:43,967 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=49154, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 08:38:43,967 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=7076, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679319523966, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679319523968, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679319523968, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679319523968, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679319523968, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 408, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679319523968, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679319523968, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679319523968, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679319523968, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679319523968, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679319523969, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679319523969, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679319523969, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679319523969, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679319523969, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679319523969, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679319523969, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679319523969, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 12.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679319523969, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679319523969, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679319611583, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679319611584, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679319611585, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679319612140, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679319612274, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679319612275, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-20 08:40:15,520 Node[0] Epoch[0] Batch [0-20]	Speed: 20239.80 samples/sec	accuracy=nan
2023-03-20 08:40:18,613 Node[0] Epoch[0] Batch [20-40]	Speed: 21110.99 samples/sec	accuracy=nan
2023-03-20 08:40:21,706 Node[0] Epoch[0] Batch [40-60]	Speed: 21103.83 samples/sec	accuracy=nan
2023-03-20 08:40:24,795 Node[0] Epoch[0] Batch [60-80]	Speed: 21132.74 samples/sec	accuracy=nan
2023-03-20 08:40:27,888 Node[0] Epoch[0] Batch [80-100]	Speed: 21106.01 samples/sec	accuracy=nan
2023-03-20 08:40:30,976 Node[0] Epoch[0] Batch [100-120]	Speed: 21138.08 samples/sec	accuracy=nan
2023-03-20 08:40:34,064 Node[0] Epoch[0] Batch [120-140]	Speed: 21138.36 samples/sec	accuracy=nan
2023-03-20 08:40:37,154 Node[0] Epoch[0] Batch [140-160]	Speed: 21129.51 samples/sec	accuracy=nan
2023-03-20 08:40:40,259 Node[0] Epoch[0] Batch [160-180]	Speed: 21024.00 samples/sec	accuracy=nan
2023-03-20 08:40:43,356 Node[0] Epoch[0] Batch [180-200]	Speed: 21074.92 samples/sec	accuracy=nan
2023-03-20 08:40:46,456 Node[0] Epoch[0] Batch [200-220]	Speed: 21063.36 samples/sec	accuracy=nan
2023-03-20 08:40:55,844 Node[0] Epoch[0] Batch [220-240]	Speed: 6952.88 samples/sec	accuracy=nan
2023-03-20 08:41:05,612 Node[0] Epoch[0] Batch [240-260]	Speed: 6683.06 samples/sec	accuracy=nan
2023-03-20 08:41:13,214 Node[0] Epoch[0] Batch [260-280]	Speed: 8588.00 samples/sec	accuracy=nan
2023-03-20 08:41:16,322 Node[0] Epoch[0] Batch [280-300]	Speed: 21003.18 samples/sec	accuracy=nan
2023-03-20 08:41:19,431 Node[0] Epoch[0] Batch [300-320]	Speed: 20997.81 samples/sec	accuracy=nan
2023-03-20 08:41:22,541 Node[0] Epoch[0] Batch [320-340]	Speed: 20988.49 samples/sec	accuracy=nan
2023-03-20 08:41:25,651 Node[0] Epoch[0] Batch [340-360]	Speed: 20989.60 samples/sec	accuracy=nan
2023-03-20 08:41:28,761 Node[0] Epoch[0] Batch [360-380]	Speed: 20990.25 samples/sec	accuracy=nan
2023-03-20 08:41:30,627 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:41:30,627 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:41:30,627 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:41:30,627 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:41:30,627 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679319690627, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-20 08:41:30,628 Node[0] Epoch[0] Time cost=78.353
2023-03-20 08:41:30,627 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679319690628, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 16351.276483338832}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-20 08:41:30,628 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679319690629, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-20 08:41:30,629 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:41:33,898 Node[0] Epoch[1] Batch [0-20]	Speed: 20954.64 samples/sec	accuracy=nan
2023-03-20 08:41:37,015 Node[0] Epoch[1] Batch [20-40]	Speed: 20942.82 samples/sec	accuracy=nan
2023-03-20 08:41:40,135 Node[0] Epoch[1] Batch [40-60]	Speed: 20929.61 samples/sec	accuracy=nan
2023-03-20 08:41:43,255 Node[0] Epoch[1] Batch [60-80]	Speed: 20923.10 samples/sec	accuracy=nan
2023-03-20 08:41:46,377 Node[0] Epoch[1] Batch [80-100]	Speed: 20905.48 samples/sec	accuracy=nan
2023-03-20 08:41:49,504 Node[0] Epoch[1] Batch [100-120]	Speed: 20880.23 samples/sec	accuracy=nan
2023-03-20 08:41:52,626 Node[0] Epoch[1] Batch [120-140]	Speed: 20904.17 samples/sec	accuracy=nan
2023-03-20 08:41:55,751 Node[0] Epoch[1] Batch [140-160]	Speed: 20889.83 samples/sec	accuracy=nan
2023-03-20 08:41:58,875 Node[0] Epoch[1] Batch [160-180]	Speed: 20899.35 samples/sec	accuracy=nan
2023-03-20 08:42:02,006 Node[0] Epoch[1] Batch [180-200]	Speed: 20847.40 samples/sec	accuracy=nan
2023-03-20 08:42:05,134 Node[0] Epoch[1] Batch [200-220]	Speed: 20868.00 samples/sec	accuracy=nan
2023-03-20 08:42:08,259 Node[0] Epoch[1] Batch [220-240]	Speed: 20892.36 samples/sec	accuracy=nan
2023-03-20 08:42:11,383 Node[0] Epoch[1] Batch [240-260]	Speed: 20897.43 samples/sec	accuracy=nan
2023-03-20 08:42:14,508 Node[0] Epoch[1] Batch [260-280]	Speed: 20885.73 samples/sec	accuracy=nan
2023-03-20 08:42:17,637 Node[0] Epoch[1] Batch [280-300]	Speed: 20867.44 samples/sec	accuracy=nan
2023-03-20 08:42:20,761 Node[0] Epoch[1] Batch [300-320]	Speed: 20894.26 samples/sec	accuracy=nan
2023-03-20 08:42:23,886 Node[0] Epoch[1] Batch [320-340]	Speed: 20893.00 samples/sec	accuracy=nan
2023-03-20 08:42:27,009 Node[0] Epoch[1] Batch [340-360]	Speed: 20902.38 samples/sec	accuracy=nan
2023-03-20 08:42:30,134 Node[0] Epoch[1] Batch [360-380]	Speed: 20889.12 samples/sec	accuracy=nan
2023-03-20 08:42:32,004 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:42:32,004 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:42:32,004 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:42:32,004 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:42:32,004 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:42:32,004 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:42:32,005 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679319752004, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-20 08:42:32,005 Node[0] Epoch[1] Time cost=61.377
:::MLLOG {"namespace": "", "time_ms": 1679319752005, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20873.83147169884}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679319752006, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-20 08:42:32,006 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:42:35,283 Node[0] Epoch[2] Batch [0-20]	Speed: 20906.70 samples/sec	accuracy=nan
2023-03-20 08:42:38,403 Node[0] Epoch[2] Batch [20-40]	Speed: 20927.07 samples/sec	accuracy=nan
2023-03-20 08:42:41,523 Node[0] Epoch[2] Batch [40-60]	Speed: 20921.34 samples/sec	accuracy=nan
2023-03-20 08:42:44,644 Node[0] Epoch[2] Batch [60-80]	Speed: 20914.07 samples/sec	accuracy=nan
2023-03-20 08:42:47,766 Node[0] Epoch[2] Batch [80-100]	Speed: 20913.12 samples/sec	accuracy=nan
2023-03-20 08:42:50,883 Node[0] Epoch[2] Batch [100-120]	Speed: 20943.39 samples/sec	accuracy=nan
2023-03-20 08:42:54,002 Node[0] Epoch[2] Batch [120-140]	Speed: 20932.59 samples/sec	accuracy=nan
2023-03-20 08:42:57,117 Node[0] Epoch[2] Batch [140-160]	Speed: 20951.91 samples/sec	accuracy=nan
2023-03-20 08:43:00,236 Node[0] Epoch[2] Batch [160-180]	Speed: 20931.57 samples/sec	accuracy=nan
2023-03-20 08:43:03,353 Node[0] Epoch[2] Batch [180-200]	Speed: 20939.87 samples/sec	accuracy=nan
2023-03-20 08:43:06,472 Node[0] Epoch[2] Batch [200-220]	Speed: 20935.75 samples/sec	accuracy=nan
2023-03-20 08:43:09,589 Node[0] Epoch[2] Batch [220-240]	Speed: 20940.29 samples/sec	accuracy=nan
2023-03-20 08:43:12,704 Node[0] Epoch[2] Batch [240-260]	Speed: 20956.92 samples/sec	accuracy=nan
2023-03-20 08:43:15,822 Node[0] Epoch[2] Batch [260-280]	Speed: 20934.31 samples/sec	accuracy=nan
2023-03-20 08:43:18,936 Node[0] Epoch[2] Batch [280-300]	Speed: 20966.88 samples/sec	accuracy=nan
2023-03-20 08:43:22,051 Node[0] Epoch[2] Batch [300-320]	Speed: 20953.23 samples/sec	accuracy=nan
2023-03-20 08:43:25,163 Node[0] Epoch[2] Batch [320-340]	Speed: 20977.61 samples/sec	accuracy=nan
2023-03-20 08:43:28,279 Node[0] Epoch[2] Batch [340-360]	Speed: 20948.02 samples/sec	accuracy=nan
2023-03-20 08:43:31,394 Node[0] Epoch[2] Batch [360-380]	Speed: 20957.97 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679319813108, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-20 08:43:33,109 Node[0] Epoch[2] Time cost=61.103
:::MLLOG {"namespace": "", "time_ms": 1679319813109, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20967.18840966687}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
2023-03-20 08:43:33,260 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:43:33,260 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:43:33,260 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:43:33,260 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:43:33,260 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:43:33,260 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679319813260, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-20 08:43:33,260 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:43:33,261 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:43:34,418 Node[0] Epoch[2] Validation-accuracy=0.280800
2023-03-20 08:43:34,418 Node[0] Epoch[2] Validation-correct-count=1755.000000
2023-03-20 08:43:34,418 Node[0] Epoch[2] Validation-total-count=6250.000000
2023-03-20 08:43:34,847 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:43:34,847 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679319814847, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679319814848, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.28472, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-20 08:43:34,847 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:43:34,848 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679319814848, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-20 08:43:34,847 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679319814848, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-20 08:43:34,848 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:43:34,848 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679319814848, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-20 08:43:34,848 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:43:37,990 Node[0] Epoch[3] Batch [0-20]	Speed: 20834.24 samples/sec	accuracy=nan
2023-03-20 08:43:41,102 Node[0] Epoch[3] Batch [20-40]	Speed: 20980.03 samples/sec	accuracy=nan
2023-03-20 08:43:44,209 Node[0] Epoch[3] Batch [40-60]	Speed: 21006.44 samples/sec	accuracy=nan
2023-03-20 08:43:47,318 Node[0] Epoch[3] Batch [60-80]	Speed: 20997.45 samples/sec	accuracy=nan
2023-03-20 08:43:50,429 Node[0] Epoch[3] Batch [80-100]	Speed: 20986.19 samples/sec	accuracy=nan
2023-03-20 08:43:53,536 Node[0] Epoch[3] Batch [100-120]	Speed: 21010.37 samples/sec	accuracy=nan
2023-03-20 08:43:56,645 Node[0] Epoch[3] Batch [120-140]	Speed: 20997.67 samples/sec	accuracy=nan
2023-03-20 08:43:59,755 Node[0] Epoch[3] Batch [140-160]	Speed: 20986.77 samples/sec	accuracy=nan
2023-03-20 08:44:02,863 Node[0] Epoch[3] Batch [160-180]	Speed: 21006.78 samples/sec	accuracy=nan
2023-03-20 08:44:05,964 Node[0] Epoch[3] Batch [180-200]	Speed: 21053.31 samples/sec	accuracy=nan
2023-03-20 08:44:09,069 Node[0] Epoch[3] Batch [200-220]	Speed: 21022.64 samples/sec	accuracy=nan
2023-03-20 08:44:12,172 Node[0] Epoch[3] Batch [220-240]	Speed: 21034.32 samples/sec	accuracy=nan
2023-03-20 08:44:15,274 Node[0] Epoch[3] Batch [240-260]	Speed: 21044.40 samples/sec	accuracy=nan
2023-03-20 08:44:18,375 Node[0] Epoch[3] Batch [260-280]	Speed: 21051.58 samples/sec	accuracy=nan
2023-03-20 08:44:21,476 Node[0] Epoch[3] Batch [280-300]	Speed: 21054.26 samples/sec	accuracy=nan
2023-03-20 08:44:24,579 Node[0] Epoch[3] Batch [300-320]	Speed: 21038.28 samples/sec	accuracy=nan
2023-03-20 08:44:27,678 Node[0] Epoch[3] Batch [320-340]	Speed: 21064.17 samples/sec	accuracy=nan
2023-03-20 08:44:30,780 Node[0] Epoch[3] Batch [340-360]	Speed: 21044.92 samples/sec	accuracy=nan
2023-03-20 08:44:33,881 Node[0] Epoch[3] Batch [360-380]	Speed: 21047.69 samples/sec	accuracy=nan
2023-03-20 08:44:35,740 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:44:35,741 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:44:35,741 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:44:35,741 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:44:35,741 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:44:35,741 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:44:35,741 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679319875741, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-20 08:44:35,742 Node[0] Epoch[3] Time cost=60.894
:::MLLOG {"namespace": "", "time_ms": 1679319875742, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21039.267957914133}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679319875743, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-20 08:44:35,743 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:44:39,004 Node[0] Epoch[4] Batch [0-20]	Speed: 21009.76 samples/sec	accuracy=nan
2023-03-20 08:44:42,108 Node[0] Epoch[4] Batch [20-40]	Speed: 21031.53 samples/sec	accuracy=nan
2023-03-20 08:44:45,209 Node[0] Epoch[4] Batch [40-60]	Speed: 21050.72 samples/sec	accuracy=nan
2023-03-20 08:44:48,311 Node[0] Epoch[4] Batch [60-80]	Speed: 21044.08 samples/sec	accuracy=nan
2023-03-20 08:44:51,412 Node[0] Epoch[4] Batch [80-100]	Speed: 21049.39 samples/sec	accuracy=nan
2023-03-20 08:44:54,515 Node[0] Epoch[4] Batch [100-120]	Speed: 21042.44 samples/sec	accuracy=nan
2023-03-20 08:44:57,617 Node[0] Epoch[4] Batch [120-140]	Speed: 21041.72 samples/sec	accuracy=nan
2023-03-20 08:45:00,718 Node[0] Epoch[4] Batch [140-160]	Speed: 21048.93 samples/sec	accuracy=nan
2023-03-20 08:45:03,828 Node[0] Epoch[4] Batch [160-180]	Speed: 20991.47 samples/sec	accuracy=nan
2023-03-20 08:45:06,931 Node[0] Epoch[4] Batch [180-200]	Speed: 21039.32 samples/sec	accuracy=nan
2023-03-20 08:45:10,038 Node[0] Epoch[4] Batch [200-220]	Speed: 21011.78 samples/sec	accuracy=nan
2023-03-20 08:45:13,138 Node[0] Epoch[4] Batch [220-240]	Speed: 21059.46 samples/sec	accuracy=nan
2023-03-20 08:45:16,238 Node[0] Epoch[4] Batch [240-260]	Speed: 21053.40 samples/sec	accuracy=nan
2023-03-20 08:45:19,341 Node[0] Epoch[4] Batch [260-280]	Speed: 21041.41 samples/sec	accuracy=nan
2023-03-20 08:45:22,445 Node[0] Epoch[4] Batch [280-300]	Speed: 21033.10 samples/sec	accuracy=nan
2023-03-20 08:45:25,549 Node[0] Epoch[4] Batch [300-320]	Speed: 21029.30 samples/sec	accuracy=nan
2023-03-20 08:45:28,649 Node[0] Epoch[4] Batch [320-340]	Speed: 21058.99 samples/sec	accuracy=nan
2023-03-20 08:45:31,751 Node[0] Epoch[4] Batch [340-360]	Speed: 21045.24 samples/sec	accuracy=nan
2023-03-20 08:45:34,849 Node[0] Epoch[4] Batch [360-380]	Speed: 21064.85 samples/sec	accuracy=nan
2023-03-20 08:45:36,554 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:45:36,554 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:45:36,555 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:45:36,555 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:45:36,555 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:45:36,555 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:45:36,555 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679319936555, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-20 08:45:36,556 Node[0] Epoch[4] Time cost=60.813
:::MLLOG {"namespace": "", "time_ms": 1679319936556, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21067.2188926179}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1679319936556, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-20 08:45:36,556 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:45:39,817 Node[0] Epoch[5] Batch [0-20]	Speed: 21055.93 samples/sec	accuracy=nan
2023-03-20 08:45:42,920 Node[0] Epoch[5] Batch [20-40]	Speed: 21033.49 samples/sec	accuracy=nan
2023-03-20 08:45:46,021 Node[0] Epoch[5] Batch [40-60]	Speed: 21054.15 samples/sec	accuracy=nan
2023-03-20 08:45:49,122 Node[0] Epoch[5] Batch [60-80]	Speed: 21052.84 samples/sec	accuracy=nan
2023-03-20 08:45:52,221 Node[0] Epoch[5] Batch [80-100]	Speed: 21059.89 samples/sec	accuracy=nan
2023-03-20 08:45:55,322 Node[0] Epoch[5] Batch [100-120]	Speed: 21055.86 samples/sec	accuracy=nan
2023-03-20 08:45:58,425 Node[0] Epoch[5] Batch [120-140]	Speed: 21036.32 samples/sec	accuracy=nan
2023-03-20 08:46:01,527 Node[0] Epoch[5] Batch [140-160]	Speed: 21040.54 samples/sec	accuracy=nan
2023-03-20 08:46:04,625 Node[0] Epoch[5] Batch [160-180]	Speed: 21074.64 samples/sec	accuracy=nan
2023-03-20 08:46:07,728 Node[0] Epoch[5] Batch [180-200]	Speed: 21037.07 samples/sec	accuracy=nan
2023-03-20 08:46:10,833 Node[0] Epoch[5] Batch [200-220]	Speed: 21027.44 samples/sec	accuracy=nan
2023-03-20 08:46:13,935 Node[0] Epoch[5] Batch [220-240]	Speed: 21041.66 samples/sec	accuracy=nan
2023-03-20 08:46:17,038 Node[0] Epoch[5] Batch [240-260]	Speed: 21036.89 samples/sec	accuracy=nan
2023-03-20 08:46:20,139 Node[0] Epoch[5] Batch [260-280]	Speed: 21050.98 samples/sec	accuracy=nan
2023-03-20 08:46:23,241 Node[0] Epoch[5] Batch [280-300]	Speed: 21042.67 samples/sec	accuracy=nan
2023-03-20 08:46:26,346 Node[0] Epoch[5] Batch [300-320]	Speed: 21029.03 samples/sec	accuracy=nan
2023-03-20 08:46:29,445 Node[0] Epoch[5] Batch [320-340]	Speed: 21063.00 samples/sec	accuracy=nan
2023-03-20 08:46:32,547 Node[0] Epoch[5] Batch [340-360]	Speed: 21044.74 samples/sec	accuracy=nan
2023-03-20 08:46:35,648 Node[0] Epoch[5] Batch [360-380]	Speed: 21050.43 samples/sec	accuracy=nan
2023-03-20 08:46:37,505 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:46:37,505 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:46:37,505 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:46:37,505 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:46:37,506 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:46:37,506 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:46:37,506 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679319997506, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-20 08:46:37,507 Node[0] Epoch[5] Time cost=60.951
:::MLLOG {"namespace": "", "time_ms": 1679319997507, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21019.79392530584}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679319997507, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-20 08:46:37,507 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:46:40,766 Node[0] Epoch[6] Batch [0-20]	Speed: 21021.15 samples/sec	accuracy=nan
2023-03-20 08:46:43,865 Node[0] Epoch[6] Batch [20-40]	Speed: 21070.93 samples/sec	accuracy=nan
2023-03-20 08:46:46,963 Node[0] Epoch[6] Batch [40-60]	Speed: 21067.96 samples/sec	accuracy=nan
2023-03-20 08:46:50,061 Node[0] Epoch[6] Batch [60-80]	Speed: 21073.80 samples/sec	accuracy=nan
2023-03-20 08:46:53,159 Node[0] Epoch[6] Batch [80-100]	Speed: 21070.54 samples/sec	accuracy=nan
2023-03-20 08:46:56,263 Node[0] Epoch[6] Batch [100-120]	Speed: 21032.56 samples/sec	accuracy=nan
2023-03-20 08:46:59,363 Node[0] Epoch[6] Batch [120-140]	Speed: 21055.40 samples/sec	accuracy=nan
2023-03-20 08:47:02,462 Node[0] Epoch[6] Batch [140-160]	Speed: 21069.04 samples/sec	accuracy=nan
2023-03-20 08:47:05,560 Node[0] Epoch[6] Batch [160-180]	Speed: 21070.94 samples/sec	accuracy=nan
2023-03-20 08:47:08,658 Node[0] Epoch[6] Batch [180-200]	Speed: 21066.12 samples/sec	accuracy=nan
2023-03-20 08:47:11,762 Node[0] Epoch[6] Batch [200-220]	Speed: 21035.73 samples/sec	accuracy=nan
2023-03-20 08:47:14,858 Node[0] Epoch[6] Batch [220-240]	Speed: 21081.74 samples/sec	accuracy=nan
2023-03-20 08:47:17,954 Node[0] Epoch[6] Batch [240-260]	Speed: 21086.85 samples/sec	accuracy=nan
2023-03-20 08:47:21,051 Node[0] Epoch[6] Batch [260-280]	Speed: 21077.30 samples/sec	accuracy=nan
2023-03-20 08:47:24,148 Node[0] Epoch[6] Batch [280-300]	Speed: 21081.60 samples/sec	accuracy=nan
2023-03-20 08:47:27,247 Node[0] Epoch[6] Batch [300-320]	Speed: 21065.41 samples/sec	accuracy=nan
2023-03-20 08:47:30,345 Node[0] Epoch[6] Batch [320-340]	Speed: 21069.87 samples/sec	accuracy=nan
2023-03-20 08:47:33,444 Node[0] Epoch[6] Batch [340-360]	Speed: 21066.04 samples/sec	accuracy=nan
2023-03-20 08:47:36,544 Node[0] Epoch[6] Batch [360-380]	Speed: 21056.32 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679320058245, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-20 08:47:38,246 Node[0] Epoch[6] Time cost=60.738
:::MLLOG {"namespace": "", "time_ms": 1679320058246, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21093.187708670488}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679320058396, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-20 08:47:39,589 Node[0] Epoch[6] Validation-accuracy=0.388960
2023-03-20 08:47:39,589 Node[0] Epoch[6] Validation-correct-count=2431.000000
2023-03-20 08:47:39,590 Node[0] Epoch[6] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679320060055, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679320060055, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.38502, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679320060055, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
2023-03-20 08:47:40,055 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:47:40,055 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320060055, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-20 08:47:40,055 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:47:40,055 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:47:40,055 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:47:40,055 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320060055, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-20 08:47:40,055 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:47:40,056 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:47:43,182 Node[0] Epoch[7] Batch [0-20]	Speed: 20940.54 samples/sec	accuracy=nan
2023-03-20 08:47:46,285 Node[0] Epoch[7] Batch [20-40]	Speed: 21032.52 samples/sec	accuracy=nan
2023-03-20 08:47:49,386 Node[0] Epoch[7] Batch [40-60]	Speed: 21050.56 samples/sec	accuracy=nan
2023-03-20 08:47:52,486 Node[0] Epoch[7] Batch [60-80]	Speed: 21060.06 samples/sec	accuracy=nan
2023-03-20 08:47:55,588 Node[0] Epoch[7] Batch [80-100]	Speed: 21044.22 samples/sec	accuracy=nan
2023-03-20 08:47:58,689 Node[0] Epoch[7] Batch [100-120]	Speed: 21051.51 samples/sec	accuracy=nan
2023-03-20 08:48:01,793 Node[0] Epoch[7] Batch [120-140]	Speed: 21035.09 samples/sec	accuracy=nan
2023-03-20 08:48:04,896 Node[0] Epoch[7] Batch [140-160]	Speed: 21035.90 samples/sec	accuracy=nan
2023-03-20 08:48:08,001 Node[0] Epoch[7] Batch [160-180]	Speed: 21019.29 samples/sec	accuracy=nan
2023-03-20 08:48:11,109 Node[0] Epoch[7] Batch [180-200]	Speed: 21009.77 samples/sec	accuracy=nan
2023-03-20 08:48:14,211 Node[0] Epoch[7] Batch [200-220]	Speed: 21042.39 samples/sec	accuracy=nan
2023-03-20 08:48:17,315 Node[0] Epoch[7] Batch [220-240]	Speed: 21028.03 samples/sec	accuracy=nan
2023-03-20 08:48:20,417 Node[0] Epoch[7] Batch [240-260]	Speed: 21050.14 samples/sec	accuracy=nan
2023-03-20 08:48:23,516 Node[0] Epoch[7] Batch [260-280]	Speed: 21060.66 samples/sec	accuracy=nan
2023-03-20 08:48:26,617 Node[0] Epoch[7] Batch [280-300]	Speed: 21050.10 samples/sec	accuracy=nan
2023-03-20 08:48:29,716 Node[0] Epoch[7] Batch [300-320]	Speed: 21066.79 samples/sec	accuracy=nan
2023-03-20 08:48:32,816 Node[0] Epoch[7] Batch [320-340]	Speed: 21056.73 samples/sec	accuracy=nan
2023-03-20 08:48:35,916 Node[0] Epoch[7] Batch [340-360]	Speed: 21061.99 samples/sec	accuracy=nan
2023-03-20 08:48:39,011 Node[0] Epoch[7] Batch [360-380]	Speed: 21089.63 samples/sec	accuracy=nan
2023-03-20 08:48:40,869 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:48:40,869 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:48:40,870 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:48:40,870 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:48:40,870 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:48:40,870 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:48:40,870 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320120870, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-20 08:48:40,871 Node[0] Epoch[7] Time cost=60.816
:::MLLOG {"namespace": "", "time_ms": 1679320120871, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21066.45145665394}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679320120871, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-20 08:48:40,872 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:48:44,133 Node[0] Epoch[8] Batch [0-20]	Speed: 21009.48 samples/sec	accuracy=nan
2023-03-20 08:48:47,240 Node[0] Epoch[8] Batch [20-40]	Speed: 21010.01 samples/sec	accuracy=nan
2023-03-20 08:48:50,346 Node[0] Epoch[8] Batch [40-60]	Speed: 21020.21 samples/sec	accuracy=nan
2023-03-20 08:48:53,452 Node[0] Epoch[8] Batch [60-80]	Speed: 21016.12 samples/sec	accuracy=nan
2023-03-20 08:48:56,562 Node[0] Epoch[8] Batch [80-100]	Speed: 20992.20 samples/sec	accuracy=nan
2023-03-20 08:48:59,669 Node[0] Epoch[8] Batch [100-120]	Speed: 21010.51 samples/sec	accuracy=nan
2023-03-20 08:49:02,772 Node[0] Epoch[8] Batch [120-140]	Speed: 21038.27 samples/sec	accuracy=nan
2023-03-20 08:49:05,872 Node[0] Epoch[8] Batch [140-160]	Speed: 21060.76 samples/sec	accuracy=nan
2023-03-20 08:49:08,976 Node[0] Epoch[8] Batch [160-180]	Speed: 21028.37 samples/sec	accuracy=nan
2023-03-20 08:49:12,080 Node[0] Epoch[8] Batch [180-200]	Speed: 21032.49 samples/sec	accuracy=nan
2023-03-20 08:49:15,180 Node[0] Epoch[8] Batch [200-220]	Speed: 21054.06 samples/sec	accuracy=nan
2023-03-20 08:49:18,278 Node[0] Epoch[8] Batch [220-240]	Speed: 21073.56 samples/sec	accuracy=nan
2023-03-20 08:49:21,377 Node[0] Epoch[8] Batch [240-260]	Speed: 21065.18 samples/sec	accuracy=nan
2023-03-20 08:49:24,472 Node[0] Epoch[8] Batch [260-280]	Speed: 21088.84 samples/sec	accuracy=nan
2023-03-20 08:49:27,573 Node[0] Epoch[8] Batch [280-300]	Speed: 21056.53 samples/sec	accuracy=nan
2023-03-20 08:49:30,673 Node[0] Epoch[8] Batch [300-320]	Speed: 21052.64 samples/sec	accuracy=nan
2023-03-20 08:49:33,772 Node[0] Epoch[8] Batch [320-340]	Speed: 21069.68 samples/sec	accuracy=nan
2023-03-20 08:49:36,870 Node[0] Epoch[8] Batch [340-360]	Speed: 21068.34 samples/sec	accuracy=nan
2023-03-20 08:49:39,974 Node[0] Epoch[8] Batch [360-380]	Speed: 21032.56 samples/sec	accuracy=nan
2023-03-20 08:49:41,679 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:49:41,679 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:49:41,680 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:49:41,679 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:49:41,679 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:49:41,680 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320181679, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-20 08:49:41,681 Node[0] Epoch[8] Time cost=60.809
:::MLLOG {"namespace": "", "time_ms": 1679320181681, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21068.634484575476}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679320181681, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-20 08:49:41,681 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:49:41,681 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:49:44,938 Node[0] Epoch[9] Batch [0-20]	Speed: 21068.68 samples/sec	accuracy=nan
2023-03-20 08:49:48,039 Node[0] Epoch[9] Batch [20-40]	Speed: 21046.93 samples/sec	accuracy=nan
2023-03-20 08:49:51,141 Node[0] Epoch[9] Batch [40-60]	Speed: 21044.65 samples/sec	accuracy=nan
2023-03-20 08:49:54,239 Node[0] Epoch[9] Batch [60-80]	Speed: 21070.36 samples/sec	accuracy=nan
2023-03-20 08:49:57,339 Node[0] Epoch[9] Batch [80-100]	Speed: 21061.85 samples/sec	accuracy=nan
2023-03-20 08:50:00,443 Node[0] Epoch[9] Batch [100-120]	Speed: 21026.29 samples/sec	accuracy=nan
2023-03-20 08:50:03,548 Node[0] Epoch[9] Batch [120-140]	Speed: 21027.75 samples/sec	accuracy=nan
2023-03-20 08:50:06,651 Node[0] Epoch[9] Batch [140-160]	Speed: 21036.47 samples/sec	accuracy=nan
2023-03-20 08:50:09,763 Node[0] Epoch[9] Batch [160-180]	Speed: 20977.76 samples/sec	accuracy=nan
2023-03-20 08:50:12,868 Node[0] Epoch[9] Batch [180-200]	Speed: 21021.04 samples/sec	accuracy=nan
2023-03-20 08:50:15,976 Node[0] Epoch[9] Batch [200-220]	Speed: 21004.76 samples/sec	accuracy=nan
2023-03-20 08:50:19,081 Node[0] Epoch[9] Batch [220-240]	Speed: 21027.75 samples/sec	accuracy=nan
2023-03-20 08:50:22,188 Node[0] Epoch[9] Batch [240-260]	Speed: 21011.38 samples/sec	accuracy=nan
2023-03-20 08:50:25,294 Node[0] Epoch[9] Batch [260-280]	Speed: 21017.14 samples/sec	accuracy=nan
2023-03-20 08:50:28,402 Node[0] Epoch[9] Batch [280-300]	Speed: 21001.49 samples/sec	accuracy=nan
2023-03-20 08:50:31,509 Node[0] Epoch[9] Batch [300-320]	Speed: 21009.54 samples/sec	accuracy=nan
2023-03-20 08:50:34,617 Node[0] Epoch[9] Batch [320-340]	Speed: 21006.21 samples/sec	accuracy=nan
2023-03-20 08:50:37,719 Node[0] Epoch[9] Batch [340-360]	Speed: 21044.43 samples/sec	accuracy=nan
2023-03-20 08:50:40,823 Node[0] Epoch[9] Batch [360-380]	Speed: 21031.09 samples/sec	accuracy=nan
2023-03-20 08:50:42,680 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:50:42,680 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:50:42,680 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:50:42,680 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:50:42,680 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:50:42,681 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320242680, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-20 08:50:42,682 Node[0] Epoch[9] Time cost=61.000
:::MLLOG {"namespace": "", "time_ms": 1679320242682, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21002.628280547808}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
2023-03-20 08:50:42,681 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320242682, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-20 08:50:42,682 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:50:45,941 Node[0] Epoch[10] Batch [0-20]	Speed: 21036.86 samples/sec	accuracy=nan
2023-03-20 08:50:49,046 Node[0] Epoch[10] Batch [20-40]	Speed: 21027.21 samples/sec	accuracy=nan
2023-03-20 08:50:52,154 Node[0] Epoch[10] Batch [40-60]	Speed: 21000.14 samples/sec	accuracy=nan
2023-03-20 08:50:55,261 Node[0] Epoch[10] Batch [60-80]	Speed: 21010.73 samples/sec	accuracy=nan
2023-03-20 08:50:58,370 Node[0] Epoch[10] Batch [80-100]	Speed: 21000.97 samples/sec	accuracy=nan
2023-03-20 08:51:01,476 Node[0] Epoch[10] Batch [100-120]	Speed: 21015.96 samples/sec	accuracy=nan
2023-03-20 08:51:04,582 Node[0] Epoch[10] Batch [120-140]	Speed: 21019.24 samples/sec	accuracy=nan
2023-03-20 08:51:07,687 Node[0] Epoch[10] Batch [140-160]	Speed: 21019.91 samples/sec	accuracy=nan
2023-03-20 08:51:10,794 Node[0] Epoch[10] Batch [160-180]	Speed: 21014.74 samples/sec	accuracy=nan
2023-03-20 08:51:13,905 Node[0] Epoch[10] Batch [180-200]	Speed: 20985.79 samples/sec	accuracy=nan
2023-03-20 08:51:17,010 Node[0] Epoch[10] Batch [200-220]	Speed: 21019.80 samples/sec	accuracy=nan
2023-03-20 08:51:20,114 Node[0] Epoch[10] Batch [220-240]	Speed: 21032.00 samples/sec	accuracy=nan
2023-03-20 08:51:23,219 Node[0] Epoch[10] Batch [240-260]	Speed: 21022.31 samples/sec	accuracy=nan
2023-03-20 08:51:26,324 Node[0] Epoch[10] Batch [260-280]	Speed: 21025.71 samples/sec	accuracy=nan
2023-03-20 08:51:29,429 Node[0] Epoch[10] Batch [280-300]	Speed: 21027.40 samples/sec	accuracy=nan
2023-03-20 08:51:32,535 Node[0] Epoch[10] Batch [300-320]	Speed: 21011.72 samples/sec	accuracy=nan
2023-03-20 08:51:35,642 Node[0] Epoch[10] Batch [320-340]	Speed: 21013.52 samples/sec	accuracy=nan
2023-03-20 08:51:38,745 Node[0] Epoch[10] Batch [340-360]	Speed: 21035.90 samples/sec	accuracy=nan
2023-03-20 08:51:41,850 Node[0] Epoch[10] Batch [360-380]	Speed: 21028.74 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679320303557, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-20 08:51:43,558 Node[0] Epoch[10] Time cost=60.876
:::MLLOG {"namespace": "", "time_ms": 1679320303558, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21045.648767934148}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679320303708, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-20 08:51:44,980 Node[0] Epoch[10] Validation-accuracy=0.483360
2023-03-20 08:51:44,980 Node[0] Epoch[10] Validation-correct-count=3021.000000
2023-03-20 08:51:44,980 Node[0] Epoch[10] Validation-total-count=6250.000000
2023-03-20 08:51:45,352 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320305352, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
2023-03-20 08:51:45,352 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:51:45,352 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320305352, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.48408, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679320305352, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-20 08:51:45,352 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:51:45,352 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:51:45,352 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320305352, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-20 08:51:45,352 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320305353, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-20 08:51:45,353 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:51:48,478 Node[0] Epoch[11] Batch [0-20]	Speed: 20979.18 samples/sec	accuracy=nan
2023-03-20 08:51:51,575 Node[0] Epoch[11] Batch [20-40]	Speed: 21078.88 samples/sec	accuracy=nan
2023-03-20 08:51:54,674 Node[0] Epoch[11] Batch [40-60]	Speed: 21068.18 samples/sec	accuracy=nan
2023-03-20 08:51:57,777 Node[0] Epoch[11] Batch [60-80]	Speed: 21038.87 samples/sec	accuracy=nan
2023-03-20 08:52:00,874 Node[0] Epoch[11] Batch [80-100]	Speed: 21078.82 samples/sec	accuracy=nan
2023-03-20 08:52:03,971 Node[0] Epoch[11] Batch [100-120]	Speed: 21074.90 samples/sec	accuracy=nan
2023-03-20 08:52:07,071 Node[0] Epoch[11] Batch [120-140]	Speed: 21060.22 samples/sec	accuracy=nan
2023-03-20 08:52:10,173 Node[0] Epoch[11] Batch [140-160]	Speed: 21040.66 samples/sec	accuracy=nan
2023-03-20 08:52:13,275 Node[0] Epoch[11] Batch [160-180]	Speed: 21047.27 samples/sec	accuracy=nan
2023-03-20 08:52:16,379 Node[0] Epoch[11] Batch [180-200]	Speed: 21027.40 samples/sec	accuracy=nan
2023-03-20 08:52:19,485 Node[0] Epoch[11] Batch [200-220]	Speed: 21022.21 samples/sec	accuracy=nan
2023-03-20 08:52:22,589 Node[0] Epoch[11] Batch [220-240]	Speed: 21028.12 samples/sec	accuracy=nan
2023-03-20 08:52:25,696 Node[0] Epoch[11] Batch [240-260]	Speed: 21012.53 samples/sec	accuracy=nan
2023-03-20 08:52:28,798 Node[0] Epoch[11] Batch [260-280]	Speed: 21042.77 samples/sec	accuracy=nan
2023-03-20 08:52:31,905 Node[0] Epoch[11] Batch [280-300]	Speed: 21009.73 samples/sec	accuracy=nan
2023-03-20 08:52:35,011 Node[0] Epoch[11] Batch [300-320]	Speed: 21016.16 samples/sec	accuracy=nan
2023-03-20 08:52:38,117 Node[0] Epoch[11] Batch [320-340]	Speed: 21018.80 samples/sec	accuracy=nan
2023-03-20 08:52:41,220 Node[0] Epoch[11] Batch [340-360]	Speed: 21039.17 samples/sec	accuracy=nan
2023-03-20 08:52:44,324 Node[0] Epoch[11] Batch [360-380]	Speed: 21030.10 samples/sec	accuracy=nan
2023-03-20 08:52:46,183 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:52:46,184 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:52:46,184 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:52:46,184 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:52:46,184 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:52:46,184 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320366184, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-20 08:52:46,185 Node[0] Epoch[11] Time cost=60.832
:::MLLOG {"namespace": "", "time_ms": 1679320366185, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21060.631847220513}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
2023-03-20 08:52:46,185 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320366185, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-20 08:52:46,186 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:52:49,449 Node[0] Epoch[12] Batch [0-20]	Speed: 21004.16 samples/sec	accuracy=nan
2023-03-20 08:52:52,557 Node[0] Epoch[12] Batch [20-40]	Speed: 21002.26 samples/sec	accuracy=nan
2023-03-20 08:52:55,661 Node[0] Epoch[12] Batch [40-60]	Speed: 21029.15 samples/sec	accuracy=nan
2023-03-20 08:52:58,765 Node[0] Epoch[12] Batch [60-80]	Speed: 21031.11 samples/sec	accuracy=nan
2023-03-20 08:53:01,869 Node[0] Epoch[12] Batch [80-100]	Speed: 21032.16 samples/sec	accuracy=nan
2023-03-20 08:53:04,975 Node[0] Epoch[12] Batch [100-120]	Speed: 21020.83 samples/sec	accuracy=nan
2023-03-20 08:53:08,077 Node[0] Epoch[12] Batch [120-140]	Speed: 21040.50 samples/sec	accuracy=nan
2023-03-20 08:53:11,181 Node[0] Epoch[12] Batch [140-160]	Speed: 21031.70 samples/sec	accuracy=nan
2023-03-20 08:53:14,285 Node[0] Epoch[12] Batch [160-180]	Speed: 21028.41 samples/sec	accuracy=nan
2023-03-20 08:53:17,386 Node[0] Epoch[12] Batch [180-200]	Speed: 21052.69 samples/sec	accuracy=nan
2023-03-20 08:53:20,487 Node[0] Epoch[12] Batch [200-220]	Speed: 21050.94 samples/sec	accuracy=nan
2023-03-20 08:53:23,586 Node[0] Epoch[12] Batch [220-240]	Speed: 21063.39 samples/sec	accuracy=nan
2023-03-20 08:53:26,683 Node[0] Epoch[12] Batch [240-260]	Speed: 21083.21 samples/sec	accuracy=nan
2023-03-20 08:53:29,786 Node[0] Epoch[12] Batch [260-280]	Speed: 21035.00 samples/sec	accuracy=nan
2023-03-20 08:53:32,891 Node[0] Epoch[12] Batch [280-300]	Speed: 21026.39 samples/sec	accuracy=nan
2023-03-20 08:53:35,994 Node[0] Epoch[12] Batch [300-320]	Speed: 21036.87 samples/sec	accuracy=nan
2023-03-20 08:53:39,097 Node[0] Epoch[12] Batch [320-340]	Speed: 21034.65 samples/sec	accuracy=nan
2023-03-20 08:53:42,202 Node[0] Epoch[12] Batch [340-360]	Speed: 21029.36 samples/sec	accuracy=nan
2023-03-20 08:53:45,307 Node[0] Epoch[12] Batch [360-380]	Speed: 21022.13 samples/sec	accuracy=nan
2023-03-20 08:53:47,014 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:53:47,014 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:53:47,015 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:53:47,015 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:53:47,015 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:53:47,015 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320427015, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-20 08:53:47,016 Node[0] Epoch[12] Time cost=60.830
:::MLLOG {"namespace": "", "time_ms": 1679320427016, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21061.311605905863}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1679320427016, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-20 08:53:47,016 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:53:47,016 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:53:50,276 Node[0] Epoch[13] Batch [0-20]	Speed: 21046.35 samples/sec	accuracy=nan
2023-03-20 08:53:53,379 Node[0] Epoch[13] Batch [20-40]	Speed: 21039.17 samples/sec	accuracy=nan
2023-03-20 08:53:56,483 Node[0] Epoch[13] Batch [40-60]	Speed: 21029.95 samples/sec	accuracy=nan
2023-03-20 08:53:59,586 Node[0] Epoch[13] Batch [60-80]	Speed: 21041.98 samples/sec	accuracy=nan
2023-03-20 08:54:02,687 Node[0] Epoch[13] Batch [80-100]	Speed: 21049.00 samples/sec	accuracy=nan
2023-03-20 08:54:05,790 Node[0] Epoch[13] Batch [100-120]	Speed: 21037.19 samples/sec	accuracy=nan
2023-03-20 08:54:08,893 Node[0] Epoch[13] Batch [120-140]	Speed: 21040.13 samples/sec	accuracy=nan
2023-03-20 08:54:11,996 Node[0] Epoch[13] Batch [140-160]	Speed: 21039.33 samples/sec	accuracy=nan
2023-03-20 08:54:15,097 Node[0] Epoch[13] Batch [160-180]	Speed: 21049.65 samples/sec	accuracy=nan
2023-03-20 08:54:18,202 Node[0] Epoch[13] Batch [180-200]	Speed: 21025.08 samples/sec	accuracy=nan
2023-03-20 08:54:21,302 Node[0] Epoch[13] Batch [200-220]	Speed: 21056.58 samples/sec	accuracy=nan
2023-03-20 08:54:24,406 Node[0] Epoch[13] Batch [220-240]	Speed: 21028.40 samples/sec	accuracy=nan
2023-03-20 08:54:27,513 Node[0] Epoch[13] Batch [240-260]	Speed: 21015.74 samples/sec	accuracy=nan
2023-03-20 08:54:30,617 Node[0] Epoch[13] Batch [260-280]	Speed: 21030.86 samples/sec	accuracy=nan
2023-03-20 08:54:33,720 Node[0] Epoch[13] Batch [280-300]	Speed: 21033.81 samples/sec	accuracy=nan
2023-03-20 08:54:36,830 Node[0] Epoch[13] Batch [300-320]	Speed: 20991.08 samples/sec	accuracy=nan
2023-03-20 08:54:39,937 Node[0] Epoch[13] Batch [320-340]	Speed: 21012.38 samples/sec	accuracy=nan
2023-03-20 08:54:43,043 Node[0] Epoch[13] Batch [340-360]	Speed: 21015.48 samples/sec	accuracy=nan
2023-03-20 08:54:46,148 Node[0] Epoch[13] Batch [360-380]	Speed: 21026.60 samples/sec	accuracy=nan
2023-03-20 08:54:48,007 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:54:48,007 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:54:48,007 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:54:48,007 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:54:48,007 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:54:48,007 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320488007, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-20 08:54:48,009 Node[0] Epoch[13] Time cost=60.992
:::MLLOG {"namespace": "", "time_ms": 1679320488009, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21005.452746603645}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
2023-03-20 08:54:48,008 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320488009, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-20 08:54:48,009 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:54:51,268 Node[0] Epoch[14] Batch [0-20]	Speed: 21028.46 samples/sec	accuracy=nan
2023-03-20 08:54:54,371 Node[0] Epoch[14] Batch [20-40]	Speed: 21039.76 samples/sec	accuracy=nan
2023-03-20 08:54:57,474 Node[0] Epoch[14] Batch [40-60]	Speed: 21033.71 samples/sec	accuracy=nan
2023-03-20 08:55:00,574 Node[0] Epoch[14] Batch [60-80]	Speed: 21060.87 samples/sec	accuracy=nan
2023-03-20 08:55:03,676 Node[0] Epoch[14] Batch [80-100]	Speed: 21042.78 samples/sec	accuracy=nan
2023-03-20 08:55:06,780 Node[0] Epoch[14] Batch [100-120]	Speed: 21032.61 samples/sec	accuracy=nan
2023-03-20 08:55:09,885 Node[0] Epoch[14] Batch [120-140]	Speed: 21022.16 samples/sec	accuracy=nan
2023-03-20 08:55:12,986 Node[0] Epoch[14] Batch [140-160]	Speed: 21056.91 samples/sec	accuracy=nan
2023-03-20 08:55:16,083 Node[0] Epoch[14] Batch [160-180]	Speed: 21075.30 samples/sec	accuracy=nan
2023-03-20 08:55:19,186 Node[0] Epoch[14] Batch [180-200]	Speed: 21040.16 samples/sec	accuracy=nan
2023-03-20 08:55:22,295 Node[0] Epoch[14] Batch [200-220]	Speed: 20993.74 samples/sec	accuracy=nan
2023-03-20 08:55:25,402 Node[0] Epoch[14] Batch [220-240]	Speed: 21015.08 samples/sec	accuracy=nan
2023-03-20 08:55:28,507 Node[0] Epoch[14] Batch [240-260]	Speed: 21018.44 samples/sec	accuracy=nan
2023-03-20 08:55:31,614 Node[0] Epoch[14] Batch [260-280]	Speed: 21015.00 samples/sec	accuracy=nan
2023-03-20 08:55:34,720 Node[0] Epoch[14] Batch [280-300]	Speed: 21012.83 samples/sec	accuracy=nan
2023-03-20 08:55:37,829 Node[0] Epoch[14] Batch [300-320]	Speed: 21000.30 samples/sec	accuracy=nan
2023-03-20 08:55:40,933 Node[0] Epoch[14] Batch [320-340]	Speed: 21030.61 samples/sec	accuracy=nan
2023-03-20 08:55:44,039 Node[0] Epoch[14] Batch [340-360]	Speed: 21019.82 samples/sec	accuracy=nan
2023-03-20 08:55:47,146 Node[0] Epoch[14] Batch [360-380]	Speed: 21007.41 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679320548852, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-20 08:55:48,853 Node[0] Epoch[14] Time cost=60.844
:::MLLOG {"namespace": "", "time_ms": 1679320548853, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21056.482432536388}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679320549004, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-20 08:55:50,251 Node[0] Epoch[14] Validation-accuracy=0.571680
2023-03-20 08:55:50,251 Node[0] Epoch[14] Validation-correct-count=3573.000000
2023-03-20 08:55:50,252 Node[0] Epoch[14] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679320550653, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679320550654, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.57102, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679320550654, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
2023-03-20 08:55:50,654 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320550654, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-20 08:55:50,654 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:55:50,654 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:55:50,654 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:55:50,654 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:55:50,654 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:55:50,654 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320550654, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-20 08:55:50,654 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:55:53,793 Node[0] Epoch[15] Batch [0-20]	Speed: 20870.08 samples/sec	accuracy=nan
2023-03-20 08:55:56,896 Node[0] Epoch[15] Batch [20-40]	Speed: 21035.78 samples/sec	accuracy=nan
2023-03-20 08:55:59,999 Node[0] Epoch[15] Batch [40-60]	Speed: 21040.27 samples/sec	accuracy=nan
2023-03-20 08:56:03,101 Node[0] Epoch[15] Batch [60-80]	Speed: 21040.84 samples/sec	accuracy=nan
2023-03-20 08:56:06,203 Node[0] Epoch[15] Batch [80-100]	Speed: 21044.15 samples/sec	accuracy=nan
2023-03-20 08:56:09,301 Node[0] Epoch[15] Batch [100-120]	Speed: 21072.40 samples/sec	accuracy=nan
2023-03-20 08:56:12,406 Node[0] Epoch[15] Batch [120-140]	Speed: 21028.03 samples/sec	accuracy=nan
2023-03-20 08:56:15,508 Node[0] Epoch[15] Batch [140-160]	Speed: 21039.87 samples/sec	accuracy=nan
2023-03-20 08:56:18,615 Node[0] Epoch[15] Batch [160-180]	Speed: 21012.27 samples/sec	accuracy=nan
2023-03-20 08:56:21,722 Node[0] Epoch[15] Batch [180-200]	Speed: 21008.59 samples/sec	accuracy=nan
2023-03-20 08:56:24,824 Node[0] Epoch[15] Batch [200-220]	Speed: 21047.27 samples/sec	accuracy=nan
2023-03-20 08:56:27,920 Node[0] Epoch[15] Batch [220-240]	Speed: 21084.14 samples/sec	accuracy=nan
2023-03-20 08:56:31,019 Node[0] Epoch[15] Batch [240-260]	Speed: 21066.72 samples/sec	accuracy=nan
2023-03-20 08:56:34,113 Node[0] Epoch[15] Batch [260-280]	Speed: 21099.38 samples/sec	accuracy=nan
2023-03-20 08:56:37,208 Node[0] Epoch[15] Batch [280-300]	Speed: 21088.48 samples/sec	accuracy=nan
2023-03-20 08:56:40,312 Node[0] Epoch[15] Batch [300-320]	Speed: 21032.46 samples/sec	accuracy=nan
2023-03-20 08:56:43,422 Node[0] Epoch[15] Batch [320-340]	Speed: 20993.40 samples/sec	accuracy=nan
2023-03-20 08:56:46,533 Node[0] Epoch[15] Batch [340-360]	Speed: 20983.22 samples/sec	accuracy=nan
2023-03-20 08:56:49,632 Node[0] Epoch[15] Batch [360-380]	Speed: 21064.39 samples/sec	accuracy=nan
2023-03-20 08:56:51,488 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:56:51,488 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:56:51,488 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:56:51,488 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:56:51,488 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:56:51,488 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:56:51,489 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320611489, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-20 08:56:51,490 Node[0] Epoch[15] Time cost=60.836
:::MLLOG {"namespace": "", "time_ms": 1679320611490, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21059.317111251472}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679320611491, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-20 08:56:51,491 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:56:54,742 Node[0] Epoch[16] Batch [0-20]	Speed: 21071.02 samples/sec	accuracy=nan
2023-03-20 08:56:57,840 Node[0] Epoch[16] Batch [20-40]	Speed: 21070.67 samples/sec	accuracy=nan
2023-03-20 08:57:00,934 Node[0] Epoch[16] Batch [40-60]	Speed: 21102.31 samples/sec	accuracy=nan
2023-03-20 08:57:04,030 Node[0] Epoch[16] Batch [60-80]	Speed: 21087.49 samples/sec	accuracy=nan
2023-03-20 08:57:07,130 Node[0] Epoch[16] Batch [80-100]	Speed: 21052.52 samples/sec	accuracy=nan
2023-03-20 08:57:10,232 Node[0] Epoch[16] Batch [100-120]	Speed: 21046.13 samples/sec	accuracy=nan
2023-03-20 08:57:13,330 Node[0] Epoch[16] Batch [120-140]	Speed: 21071.08 samples/sec	accuracy=nan
2023-03-20 08:57:16,432 Node[0] Epoch[16] Batch [140-160]	Speed: 21048.44 samples/sec	accuracy=nan
2023-03-20 08:57:19,528 Node[0] Epoch[16] Batch [160-180]	Speed: 21082.21 samples/sec	accuracy=nan
2023-03-20 08:57:22,623 Node[0] Epoch[16] Batch [180-200]	Speed: 21094.47 samples/sec	accuracy=nan
2023-03-20 08:57:25,723 Node[0] Epoch[16] Batch [200-220]	Speed: 21057.95 samples/sec	accuracy=nan
2023-03-20 08:57:28,821 Node[0] Epoch[16] Batch [220-240]	Speed: 21072.07 samples/sec	accuracy=nan
2023-03-20 08:57:31,928 Node[0] Epoch[16] Batch [240-260]	Speed: 21010.03 samples/sec	accuracy=nan
2023-03-20 08:57:35,027 Node[0] Epoch[16] Batch [260-280]	Speed: 21060.25 samples/sec	accuracy=nan
2023-03-20 08:57:38,126 Node[0] Epoch[16] Batch [280-300]	Speed: 21064.52 samples/sec	accuracy=nan
2023-03-20 08:57:41,227 Node[0] Epoch[16] Batch [300-320]	Speed: 21057.16 samples/sec	accuracy=nan
2023-03-20 08:57:44,327 Node[0] Epoch[16] Batch [320-340]	Speed: 21053.46 samples/sec	accuracy=nan
2023-03-20 08:57:47,425 Node[0] Epoch[16] Batch [340-360]	Speed: 21072.84 samples/sec	accuracy=nan
2023-03-20 08:57:50,524 Node[0] Epoch[16] Batch [360-380]	Speed: 21067.92 samples/sec	accuracy=nan
2023-03-20 08:57:52,226 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:57:52,226 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:57:52,227 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:57:52,227 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:57:52,227 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320672227, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-20 08:57:52,228 Node[0] Epoch[16] Time cost=60.737
:::MLLOG {"namespace": "", "time_ms": 1679320672228, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21093.58042593771}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
2023-03-20 08:57:52,228 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:57:52,228 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320672228, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-20 08:57:52,229 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:57:55,482 Node[0] Epoch[17] Batch [0-20]	Speed: 21086.84 samples/sec	accuracy=nan
2023-03-20 08:57:58,582 Node[0] Epoch[17] Batch [20-40]	Speed: 21058.07 samples/sec	accuracy=nan
2023-03-20 08:58:01,681 Node[0] Epoch[17] Batch [40-60]	Speed: 21068.59 samples/sec	accuracy=nan
2023-03-20 08:58:04,781 Node[0] Epoch[17] Batch [60-80]	Speed: 21059.05 samples/sec	accuracy=nan
2023-03-20 08:58:07,879 Node[0] Epoch[17] Batch [80-100]	Speed: 21067.74 samples/sec	accuracy=nan
2023-03-20 08:58:10,985 Node[0] Epoch[17] Batch [100-120]	Speed: 21019.97 samples/sec	accuracy=nan
2023-03-20 08:58:14,090 Node[0] Epoch[17] Batch [120-140]	Speed: 21021.17 samples/sec	accuracy=nan
2023-03-20 08:58:17,194 Node[0] Epoch[17] Batch [140-160]	Speed: 21031.75 samples/sec	accuracy=nan
2023-03-20 08:58:20,298 Node[0] Epoch[17] Batch [160-180]	Speed: 21034.11 samples/sec	accuracy=nan
2023-03-20 08:58:23,404 Node[0] Epoch[17] Batch [180-200]	Speed: 21013.96 samples/sec	accuracy=nan
2023-03-20 08:58:26,508 Node[0] Epoch[17] Batch [200-220]	Speed: 21029.09 samples/sec	accuracy=nan
2023-03-20 08:58:29,613 Node[0] Epoch[17] Batch [220-240]	Speed: 21026.13 samples/sec	accuracy=nan
2023-03-20 08:58:32,714 Node[0] Epoch[17] Batch [240-260]	Speed: 21050.06 samples/sec	accuracy=nan
2023-03-20 08:58:35,816 Node[0] Epoch[17] Batch [260-280]	Speed: 21045.38 samples/sec	accuracy=nan
2023-03-20 08:58:38,919 Node[0] Epoch[17] Batch [280-300]	Speed: 21037.74 samples/sec	accuracy=nan
2023-03-20 08:58:42,024 Node[0] Epoch[17] Batch [300-320]	Speed: 21027.47 samples/sec	accuracy=nan
2023-03-20 08:58:45,125 Node[0] Epoch[17] Batch [320-340]	Speed: 21052.98 samples/sec	accuracy=nan
2023-03-20 08:58:48,228 Node[0] Epoch[17] Batch [340-360]	Speed: 21032.13 samples/sec	accuracy=nan
2023-03-20 08:58:51,336 Node[0] Epoch[17] Batch [360-380]	Speed: 21007.21 samples/sec	accuracy=nan
2023-03-20 08:58:53,192 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:58:53,192 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:58:53,193 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:58:53,193 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:58:53,193 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:58:53,193 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320733193, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-20 08:58:53,194 Node[0] Epoch[17] Time cost=60.966
:::MLLOG {"namespace": "", "time_ms": 1679320733194, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21014.61065707563}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679320733194, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-20 08:58:53,194 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:58:53,195 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:58:56,449 Node[0] Epoch[18] Batch [0-20]	Speed: 21053.38 samples/sec	accuracy=nan
2023-03-20 08:58:59,552 Node[0] Epoch[18] Batch [20-40]	Speed: 21042.44 samples/sec	accuracy=nan
2023-03-20 08:59:02,651 Node[0] Epoch[18] Batch [40-60]	Speed: 21064.42 samples/sec	accuracy=nan
2023-03-20 08:59:05,750 Node[0] Epoch[18] Batch [60-80]	Speed: 21062.11 samples/sec	accuracy=nan
2023-03-20 08:59:08,850 Node[0] Epoch[18] Batch [80-100]	Speed: 21055.66 samples/sec	accuracy=nan
2023-03-20 08:59:11,954 Node[0] Epoch[18] Batch [100-120]	Speed: 21033.51 samples/sec	accuracy=nan
2023-03-20 08:59:15,059 Node[0] Epoch[18] Batch [120-140]	Speed: 21027.76 samples/sec	accuracy=nan
2023-03-20 08:59:18,161 Node[0] Epoch[18] Batch [140-160]	Speed: 21040.41 samples/sec	accuracy=nan
2023-03-20 08:59:21,265 Node[0] Epoch[18] Batch [160-180]	Speed: 21033.29 samples/sec	accuracy=nan
2023-03-20 08:59:24,373 Node[0] Epoch[18] Batch [180-200]	Speed: 21002.51 samples/sec	accuracy=nan
2023-03-20 08:59:27,481 Node[0] Epoch[18] Batch [200-220]	Speed: 21006.95 samples/sec	accuracy=nan
2023-03-20 08:59:30,585 Node[0] Epoch[18] Batch [220-240]	Speed: 21027.40 samples/sec	accuracy=nan
2023-03-20 08:59:33,690 Node[0] Epoch[18] Batch [240-260]	Speed: 21025.99 samples/sec	accuracy=nan
2023-03-20 08:59:36,795 Node[0] Epoch[18] Batch [260-280]	Speed: 21020.50 samples/sec	accuracy=nan
2023-03-20 08:59:39,903 Node[0] Epoch[18] Batch [280-300]	Speed: 21007.58 samples/sec	accuracy=nan
2023-03-20 08:59:43,006 Node[0] Epoch[18] Batch [300-320]	Speed: 21033.44 samples/sec	accuracy=nan
2023-03-20 08:59:46,111 Node[0] Epoch[18] Batch [320-340]	Speed: 21029.57 samples/sec	accuracy=nan
2023-03-20 08:59:49,217 Node[0] Epoch[18] Batch [340-360]	Speed: 21014.84 samples/sec	accuracy=nan
2023-03-20 08:59:52,323 Node[0] Epoch[18] Batch [360-380]	Speed: 21019.88 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679320794030, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-20 08:59:54,031 Node[0] Epoch[18] Time cost=60.836
:::MLLOG {"namespace": "", "time_ms": 1679320794031, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21059.3051441031}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679320794181, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-20 08:59:55,499 Node[0] Epoch[18] Validation-accuracy=0.580640
2023-03-20 08:59:55,499 Node[0] Epoch[18] Validation-correct-count=3629.000000
2023-03-20 08:59:55,499 Node[0] Epoch[18] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679320795701, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679320795701, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.58308, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679320795701, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-20 08:59:55,701 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320795701, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-20 08:59:55,701 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:59:55,701 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:59:55,701 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:59:55,701 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:59:55,701 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320795702, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-20 08:59:55,701 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:59:55,702 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 08:59:58,831 Node[0] Epoch[19] Batch [0-20]	Speed: 20922.17 samples/sec	accuracy=nan
2023-03-20 09:00:01,932 Node[0] Epoch[19] Batch [20-40]	Speed: 21048.82 samples/sec	accuracy=nan
2023-03-20 09:00:05,034 Node[0] Epoch[19] Batch [40-60]	Speed: 21045.85 samples/sec	accuracy=nan
2023-03-20 09:00:08,138 Node[0] Epoch[19] Batch [60-80]	Speed: 21027.40 samples/sec	accuracy=nan
2023-03-20 09:00:11,246 Node[0] Epoch[19] Batch [80-100]	Speed: 21006.90 samples/sec	accuracy=nan
2023-03-20 09:00:14,348 Node[0] Epoch[19] Batch [100-120]	Speed: 21044.52 samples/sec	accuracy=nan
2023-03-20 09:00:17,452 Node[0] Epoch[19] Batch [120-140]	Speed: 21032.73 samples/sec	accuracy=nan
2023-03-20 09:00:20,558 Node[0] Epoch[19] Batch [140-160]	Speed: 21014.23 samples/sec	accuracy=nan
2023-03-20 09:00:23,665 Node[0] Epoch[19] Batch [160-180]	Speed: 21013.03 samples/sec	accuracy=nan
2023-03-20 09:00:26,775 Node[0] Epoch[19] Batch [180-200]	Speed: 20991.57 samples/sec	accuracy=nan
2023-03-20 09:00:29,880 Node[0] Epoch[19] Batch [200-220]	Speed: 21023.08 samples/sec	accuracy=nan
2023-03-20 09:00:32,984 Node[0] Epoch[19] Batch [220-240]	Speed: 21029.74 samples/sec	accuracy=nan
2023-03-20 09:00:36,092 Node[0] Epoch[19] Batch [240-260]	Speed: 21003.98 samples/sec	accuracy=nan
2023-03-20 09:00:39,196 Node[0] Epoch[19] Batch [260-280]	Speed: 21028.81 samples/sec	accuracy=nan
2023-03-20 09:00:42,300 Node[0] Epoch[19] Batch [280-300]	Speed: 21033.82 samples/sec	accuracy=nan
2023-03-20 09:00:45,405 Node[0] Epoch[19] Batch [300-320]	Speed: 21020.37 samples/sec	accuracy=nan
2023-03-20 09:00:48,511 Node[0] Epoch[19] Batch [320-340]	Speed: 21018.99 samples/sec	accuracy=nan
2023-03-20 09:00:51,617 Node[0] Epoch[19] Batch [340-360]	Speed: 21020.70 samples/sec	accuracy=nan
2023-03-20 09:00:54,724 Node[0] Epoch[19] Batch [360-380]	Speed: 21008.14 samples/sec	accuracy=nan
2023-03-20 09:00:56,584 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:00:56,584 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:00:56,584 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:00:56,584 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:00:56,584 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:00:56,584 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:00:56,584 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320856584, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-20 09:00:56,586 Node[0] Epoch[19] Time cost=60.884
:::MLLOG {"namespace": "", "time_ms": 1679320856586, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21042.72860793154}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679320856586, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-20 09:00:56,586 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:00:59,843 Node[0] Epoch[20] Batch [0-20]	Speed: 21038.41 samples/sec	accuracy=nan
2023-03-20 09:01:02,944 Node[0] Epoch[20] Batch [20-40]	Speed: 21050.42 samples/sec	accuracy=nan
2023-03-20 09:01:06,048 Node[0] Epoch[20] Batch [40-60]	Speed: 21035.77 samples/sec	accuracy=nan
2023-03-20 09:01:09,152 Node[0] Epoch[20] Batch [60-80]	Speed: 21025.42 samples/sec	accuracy=nan
2023-03-20 09:01:12,256 Node[0] Epoch[20] Batch [80-100]	Speed: 21032.64 samples/sec	accuracy=nan
2023-03-20 09:01:15,358 Node[0] Epoch[20] Batch [100-120]	Speed: 21045.39 samples/sec	accuracy=nan
2023-03-20 09:01:18,464 Node[0] Epoch[20] Batch [120-140]	Speed: 21019.69 samples/sec	accuracy=nan
2023-03-20 09:01:21,569 Node[0] Epoch[20] Batch [140-160]	Speed: 21026.61 samples/sec	accuracy=nan
2023-03-20 09:01:24,674 Node[0] Epoch[20] Batch [160-180]	Speed: 21020.65 samples/sec	accuracy=nan
2023-03-20 09:01:27,780 Node[0] Epoch[20] Batch [180-200]	Speed: 21018.81 samples/sec	accuracy=nan
2023-03-20 09:01:30,882 Node[0] Epoch[20] Batch [200-220]	Speed: 21040.81 samples/sec	accuracy=nan
2023-03-20 09:01:33,988 Node[0] Epoch[20] Batch [220-240]	Speed: 21022.22 samples/sec	accuracy=nan
2023-03-20 09:01:37,096 Node[0] Epoch[20] Batch [240-260]	Speed: 20998.62 samples/sec	accuracy=nan
2023-03-20 09:01:40,205 Node[0] Epoch[20] Batch [260-280]	Speed: 21002.22 samples/sec	accuracy=nan
2023-03-20 09:01:43,311 Node[0] Epoch[20] Batch [280-300]	Speed: 21011.00 samples/sec	accuracy=nan
2023-03-20 09:01:46,421 Node[0] Epoch[20] Batch [300-320]	Speed: 20991.93 samples/sec	accuracy=nan
2023-03-20 09:01:49,526 Node[0] Epoch[20] Batch [320-340]	Speed: 21024.23 samples/sec	accuracy=nan
2023-03-20 09:01:52,632 Node[0] Epoch[20] Batch [340-360]	Speed: 21021.99 samples/sec	accuracy=nan
2023-03-20 09:01:55,737 Node[0] Epoch[20] Batch [360-380]	Speed: 21019.75 samples/sec	accuracy=nan
2023-03-20 09:01:57,445 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:01:57,445 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:01:57,445 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:01:57,445 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:01:57,445 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:01:57,445 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:01:57,445 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320917445, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-20 09:01:57,446 Node[0] Epoch[20] Time cost=60.860
:::MLLOG {"namespace": "", "time_ms": 1679320917446, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21050.999016081183}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1679320917447, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-20 09:01:57,447 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:02:00,711 Node[0] Epoch[21] Batch [0-20]	Speed: 21022.20 samples/sec	accuracy=nan
2023-03-20 09:02:03,818 Node[0] Epoch[21] Batch [20-40]	Speed: 21009.73 samples/sec	accuracy=nan
2023-03-20 09:02:06,923 Node[0] Epoch[21] Batch [40-60]	Speed: 21022.04 samples/sec	accuracy=nan
2023-03-20 09:02:10,029 Node[0] Epoch[21] Batch [60-80]	Speed: 21017.38 samples/sec	accuracy=nan
2023-03-20 09:02:13,136 Node[0] Epoch[21] Batch [80-100]	Speed: 21007.97 samples/sec	accuracy=nan
2023-03-20 09:02:16,244 Node[0] Epoch[21] Batch [100-120]	Speed: 21004.02 samples/sec	accuracy=nan
2023-03-20 09:02:19,351 Node[0] Epoch[21] Batch [120-140]	Speed: 21016.37 samples/sec	accuracy=nan
2023-03-20 09:02:22,454 Node[0] Epoch[21] Batch [140-160]	Speed: 21035.78 samples/sec	accuracy=nan
2023-03-20 09:02:25,566 Node[0] Epoch[21] Batch [160-180]	Speed: 20975.41 samples/sec	accuracy=nan
2023-03-20 09:02:28,669 Node[0] Epoch[21] Batch [180-200]	Speed: 21037.59 samples/sec	accuracy=nan
2023-03-20 09:02:31,777 Node[0] Epoch[21] Batch [200-220]	Speed: 21003.94 samples/sec	accuracy=nan
2023-03-20 09:02:34,883 Node[0] Epoch[21] Batch [220-240]	Speed: 21014.97 samples/sec	accuracy=nan
2023-03-20 09:02:37,985 Node[0] Epoch[21] Batch [240-260]	Speed: 21044.44 samples/sec	accuracy=nan
2023-03-20 09:02:41,091 Node[0] Epoch[21] Batch [260-280]	Speed: 21020.60 samples/sec	accuracy=nan
2023-03-20 09:02:44,198 Node[0] Epoch[21] Batch [280-300]	Speed: 21006.57 samples/sec	accuracy=nan
2023-03-20 09:02:49,713 Node[0] Epoch[21] Batch [300-320]	Speed: 11838.81 samples/sec	accuracy=nan
2023-03-20 09:02:52,814 Node[0] Epoch[21] Batch [320-340]	Speed: 21048.51 samples/sec	accuracy=nan
2023-03-20 09:02:55,915 Node[0] Epoch[21] Batch [340-360]	Speed: 21052.89 samples/sec	accuracy=nan
2023-03-20 09:02:59,018 Node[0] Epoch[21] Batch [360-380]	Speed: 21036.88 samples/sec	accuracy=nan
2023-03-20 09:03:00,878 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:03:00,878 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:03:00,878 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:03:00,878 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:03:00,878 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:03:00,878 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:03:00,879 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679320980878, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-20 09:03:00,880 Node[0] Epoch[21] Time cost=63.433
:::MLLOG {"namespace": "", "time_ms": 1679320980880, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20197.18473175421}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679320980880, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-20 09:03:00,880 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:03:04,142 Node[0] Epoch[22] Batch [0-20]	Speed: 21009.55 samples/sec	accuracy=nan
2023-03-20 09:03:07,247 Node[0] Epoch[22] Batch [20-40]	Speed: 21026.95 samples/sec	accuracy=nan
2023-03-20 09:03:10,363 Node[0] Epoch[22] Batch [40-60]	Speed: 20949.53 samples/sec	accuracy=nan
2023-03-20 09:03:13,470 Node[0] Epoch[22] Batch [60-80]	Speed: 21011.67 samples/sec	accuracy=nan
2023-03-20 09:03:16,576 Node[0] Epoch[22] Batch [80-100]	Speed: 21011.76 samples/sec	accuracy=nan
2023-03-20 09:03:19,684 Node[0] Epoch[22] Batch [100-120]	Speed: 21009.23 samples/sec	accuracy=nan
2023-03-20 09:03:22,791 Node[0] Epoch[22] Batch [120-140]	Speed: 21011.65 samples/sec	accuracy=nan
2023-03-20 09:03:25,900 Node[0] Epoch[22] Batch [140-160]	Speed: 20994.37 samples/sec	accuracy=nan
2023-03-20 09:03:29,006 Node[0] Epoch[22] Batch [160-180]	Speed: 21017.07 samples/sec	accuracy=nan
2023-03-20 09:03:32,113 Node[0] Epoch[22] Batch [180-200]	Speed: 21011.81 samples/sec	accuracy=nan
2023-03-20 09:03:35,221 Node[0] Epoch[22] Batch [200-220]	Speed: 21001.50 samples/sec	accuracy=nan
2023-03-20 09:03:38,327 Node[0] Epoch[22] Batch [220-240]	Speed: 21017.95 samples/sec	accuracy=nan
2023-03-20 09:03:41,429 Node[0] Epoch[22] Batch [240-260]	Speed: 21042.35 samples/sec	accuracy=nan
2023-03-20 09:03:44,530 Node[0] Epoch[22] Batch [260-280]	Speed: 21056.40 samples/sec	accuracy=nan
2023-03-20 09:03:47,630 Node[0] Epoch[22] Batch [280-300]	Speed: 21055.55 samples/sec	accuracy=nan
2023-03-20 09:03:50,732 Node[0] Epoch[22] Batch [300-320]	Speed: 21044.53 samples/sec	accuracy=nan
2023-03-20 09:03:53,832 Node[0] Epoch[22] Batch [320-340]	Speed: 21056.84 samples/sec	accuracy=nan
2023-03-20 09:03:56,931 Node[0] Epoch[22] Batch [340-360]	Speed: 21067.66 samples/sec	accuracy=nan
2023-03-20 09:04:00,028 Node[0] Epoch[22] Batch [360-380]	Speed: 21075.91 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679321041729, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-20 09:04:01,730 Node[0] Epoch[22] Time cost=60.850
:::MLLOG {"namespace": "", "time_ms": 1679321041730, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21054.56375743292}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679321041880, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-20 09:04:03,159 Node[0] Epoch[22] Validation-accuracy=0.687040
2023-03-20 09:04:03,159 Node[0] Epoch[22] Validation-correct-count=4294.000000
2023-03-20 09:04:03,159 Node[0] Epoch[22] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679321043448, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679321043449, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.68568, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679321043449, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679321043449, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-20 09:04:03,449 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:04:03,449 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:04:03,449 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:04:03,449 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:04:03,449 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:04:03,449 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679321043449, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-20 09:04:03,449 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:04:03,449 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:04:06,579 Node[0] Epoch[23] Batch [0-20]	Speed: 20920.20 samples/sec	accuracy=nan
2023-03-20 09:04:09,685 Node[0] Epoch[23] Batch [20-40]	Speed: 21017.07 samples/sec	accuracy=nan
2023-03-20 09:04:12,787 Node[0] Epoch[23] Batch [40-60]	Speed: 21044.17 samples/sec	accuracy=nan
2023-03-20 09:04:15,892 Node[0] Epoch[23] Batch [60-80]	Speed: 21023.45 samples/sec	accuracy=nan
2023-03-20 09:04:18,994 Node[0] Epoch[23] Batch [80-100]	Speed: 21044.83 samples/sec	accuracy=nan
2023-03-20 09:04:22,093 Node[0] Epoch[23] Batch [100-120]	Speed: 21064.72 samples/sec	accuracy=nan
2023-03-20 09:04:25,191 Node[0] Epoch[23] Batch [120-140]	Speed: 21069.41 samples/sec	accuracy=nan
2023-03-20 09:04:28,292 Node[0] Epoch[23] Batch [140-160]	Speed: 21053.80 samples/sec	accuracy=nan
2023-03-20 09:04:31,405 Node[0] Epoch[23] Batch [160-180]	Speed: 20969.77 samples/sec	accuracy=nan
2023-03-20 09:04:34,511 Node[0] Epoch[23] Batch [180-200]	Speed: 21018.74 samples/sec	accuracy=nan
2023-03-20 09:04:37,617 Node[0] Epoch[23] Batch [200-220]	Speed: 21016.13 samples/sec	accuracy=nan
2023-03-20 09:04:40,728 Node[0] Epoch[23] Batch [220-240]	Speed: 20982.51 samples/sec	accuracy=nan
2023-03-20 09:04:43,835 Node[0] Epoch[23] Batch [240-260]	Speed: 21012.19 samples/sec	accuracy=nan
2023-03-20 09:04:46,936 Node[0] Epoch[23] Batch [260-280]	Speed: 21053.55 samples/sec	accuracy=nan
2023-03-20 09:04:50,042 Node[0] Epoch[23] Batch [280-300]	Speed: 21013.90 samples/sec	accuracy=nan
2023-03-20 09:04:53,152 Node[0] Epoch[23] Batch [300-320]	Speed: 20992.43 samples/sec	accuracy=nan
2023-03-20 09:04:56,259 Node[0] Epoch[23] Batch [320-340]	Speed: 21011.16 samples/sec	accuracy=nan
2023-03-20 09:04:59,364 Node[0] Epoch[23] Batch [340-360]	Speed: 21025.57 samples/sec	accuracy=nan
2023-03-20 09:05:02,469 Node[0] Epoch[23] Batch [360-380]	Speed: 21024.25 samples/sec	accuracy=nan
2023-03-20 09:05:04,331 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:05:04,331 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:05:04,331 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:05:04,331 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:05:04,331 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:05:04,331 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:05:04,331 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679321104331, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-20 09:05:04,332 Node[0] Epoch[23] Time cost=60.883
:::MLLOG {"namespace": "", "time_ms": 1679321104333, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21043.008696513625}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679321104333, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-20 09:05:04,333 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:05:07,594 Node[0] Epoch[24] Batch [0-20]	Speed: 21014.65 samples/sec	accuracy=nan
2023-03-20 09:05:10,704 Node[0] Epoch[24] Batch [20-40]	Speed: 20992.91 samples/sec	accuracy=nan
2023-03-20 09:05:13,815 Node[0] Epoch[24] Batch [40-60]	Speed: 20983.84 samples/sec	accuracy=nan
2023-03-20 09:05:16,925 Node[0] Epoch[24] Batch [60-80]	Speed: 20988.89 samples/sec	accuracy=nan
2023-03-20 09:05:20,025 Node[0] Epoch[24] Batch [80-100]	Speed: 21057.11 samples/sec	accuracy=nan
2023-03-20 09:05:23,128 Node[0] Epoch[24] Batch [100-120]	Speed: 21037.29 samples/sec	accuracy=nan
2023-03-20 09:05:26,230 Node[0] Epoch[24] Batch [120-140]	Speed: 21045.49 samples/sec	accuracy=nan
2023-03-20 09:05:29,333 Node[0] Epoch[24] Batch [140-160]	Speed: 21038.10 samples/sec	accuracy=nan
2023-03-20 09:05:32,437 Node[0] Epoch[24] Batch [160-180]	Speed: 21029.08 samples/sec	accuracy=nan
2023-03-20 09:05:35,544 Node[0] Epoch[24] Batch [180-200]	Speed: 21007.52 samples/sec	accuracy=nan
2023-03-20 09:05:38,651 Node[0] Epoch[24] Batch [200-220]	Speed: 21013.77 samples/sec	accuracy=nan
2023-03-20 09:05:41,758 Node[0] Epoch[24] Batch [220-240]	Speed: 21009.93 samples/sec	accuracy=nan
2023-03-20 09:05:44,863 Node[0] Epoch[24] Batch [240-260]	Speed: 21025.82 samples/sec	accuracy=nan
2023-03-20 09:05:47,971 Node[0] Epoch[24] Batch [260-280]	Speed: 20999.88 samples/sec	accuracy=nan
2023-03-20 09:05:51,074 Node[0] Epoch[24] Batch [280-300]	Speed: 21039.50 samples/sec	accuracy=nan
2023-03-20 09:05:54,181 Node[0] Epoch[24] Batch [300-320]	Speed: 21014.49 samples/sec	accuracy=nan
2023-03-20 09:05:57,288 Node[0] Epoch[24] Batch [320-340]	Speed: 21004.90 samples/sec	accuracy=nan
2023-03-20 09:06:00,394 Node[0] Epoch[24] Batch [340-360]	Speed: 21021.88 samples/sec	accuracy=nan
2023-03-20 09:06:03,500 Node[0] Epoch[24] Batch [360-380]	Speed: 21013.35 samples/sec	accuracy=nan
2023-03-20 09:06:05,205 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:06:05,205 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:06:05,205 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:06:05,205 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:06:05,205 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:06:05,205 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:06:05,205 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679321165205, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-20 09:06:05,206 Node[0] Epoch[24] Time cost=60.874
:::MLLOG {"namespace": "", "time_ms": 1679321165207, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21046.374132987712}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679321165207, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-20 09:06:05,207 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:06:08,475 Node[0] Epoch[25] Batch [0-20]	Speed: 20993.13 samples/sec	accuracy=nan
2023-03-20 09:06:11,580 Node[0] Epoch[25] Batch [20-40]	Speed: 21021.52 samples/sec	accuracy=nan
2023-03-20 09:06:14,690 Node[0] Epoch[25] Batch [40-60]	Speed: 20989.17 samples/sec	accuracy=nan
2023-03-20 09:06:17,798 Node[0] Epoch[25] Batch [60-80]	Speed: 21006.75 samples/sec	accuracy=nan
2023-03-20 09:06:20,906 Node[0] Epoch[25] Batch [80-100]	Speed: 21003.64 samples/sec	accuracy=nan
2023-03-20 09:06:24,013 Node[0] Epoch[25] Batch [100-120]	Speed: 21007.44 samples/sec	accuracy=nan
2023-03-20 09:06:27,122 Node[0] Epoch[25] Batch [120-140]	Speed: 20995.85 samples/sec	accuracy=nan
2023-03-20 09:06:30,227 Node[0] Epoch[25] Batch [140-160]	Speed: 21029.32 samples/sec	accuracy=nan
2023-03-20 09:06:33,332 Node[0] Epoch[25] Batch [160-180]	Speed: 21023.17 samples/sec	accuracy=nan
2023-03-20 09:06:36,440 Node[0] Epoch[25] Batch [180-200]	Speed: 20999.73 samples/sec	accuracy=nan
2023-03-20 09:06:39,549 Node[0] Epoch[25] Batch [200-220]	Speed: 21000.72 samples/sec	accuracy=nan
2023-03-20 09:06:42,651 Node[0] Epoch[25] Batch [220-240]	Speed: 21041.68 samples/sec	accuracy=nan
2023-03-20 09:06:45,754 Node[0] Epoch[25] Batch [240-260]	Speed: 21039.14 samples/sec	accuracy=nan
2023-03-20 09:06:48,858 Node[0] Epoch[25] Batch [260-280]	Speed: 21027.91 samples/sec	accuracy=nan
2023-03-20 09:06:51,964 Node[0] Epoch[25] Batch [280-300]	Speed: 21019.25 samples/sec	accuracy=nan
2023-03-20 09:06:55,068 Node[0] Epoch[25] Batch [300-320]	Speed: 21036.02 samples/sec	accuracy=nan
2023-03-20 09:06:58,170 Node[0] Epoch[25] Batch [320-340]	Speed: 21041.97 samples/sec	accuracy=nan
2023-03-20 09:07:01,275 Node[0] Epoch[25] Batch [340-360]	Speed: 21025.90 samples/sec	accuracy=nan
2023-03-20 09:07:04,383 Node[0] Epoch[25] Batch [360-380]	Speed: 21001.32 samples/sec	accuracy=nan
2023-03-20 09:07:06,245 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:07:06,245 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:07:06,245 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:07:06,245 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:07:06,245 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:07:06,246 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:07:06,246 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679321226246, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-20 09:07:06,247 Node[0] Epoch[25] Time cost=61.040
:::MLLOG {"namespace": "", "time_ms": 1679321226247, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20989.009626302974}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679321226247, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-20 09:07:06,247 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:07:09,510 Node[0] Epoch[26] Batch [0-20]	Speed: 21001.95 samples/sec	accuracy=nan
2023-03-20 09:07:12,618 Node[0] Epoch[26] Batch [20-40]	Speed: 21002.83 samples/sec	accuracy=nan
2023-03-20 09:07:15,727 Node[0] Epoch[26] Batch [40-60]	Speed: 20995.25 samples/sec	accuracy=nan
2023-03-20 09:07:18,837 Node[0] Epoch[26] Batch [60-80]	Speed: 20991.38 samples/sec	accuracy=nan
2023-03-20 09:07:21,945 Node[0] Epoch[26] Batch [80-100]	Speed: 21004.89 samples/sec	accuracy=nan
2023-03-20 09:07:25,054 Node[0] Epoch[26] Batch [100-120]	Speed: 20999.80 samples/sec	accuracy=nan
2023-03-20 09:07:28,162 Node[0] Epoch[26] Batch [120-140]	Speed: 21003.06 samples/sec	accuracy=nan
2023-03-20 09:07:31,270 Node[0] Epoch[26] Batch [140-160]	Speed: 20999.37 samples/sec	accuracy=nan
2023-03-20 09:07:34,376 Node[0] Epoch[26] Batch [160-180]	Speed: 21017.37 samples/sec	accuracy=nan
2023-03-20 09:07:37,486 Node[0] Epoch[26] Batch [180-200]	Speed: 20992.02 samples/sec	accuracy=nan
2023-03-20 09:07:40,597 Node[0] Epoch[26] Batch [200-220]	Speed: 20985.14 samples/sec	accuracy=nan
2023-03-20 09:07:43,699 Node[0] Epoch[26] Batch [220-240]	Speed: 21043.94 samples/sec	accuracy=nan
2023-03-20 09:07:46,799 Node[0] Epoch[26] Batch [240-260]	Speed: 21059.48 samples/sec	accuracy=nan
2023-03-20 09:07:49,903 Node[0] Epoch[26] Batch [260-280]	Speed: 21032.53 samples/sec	accuracy=nan
2023-03-20 09:07:53,004 Node[0] Epoch[26] Batch [280-300]	Speed: 21046.57 samples/sec	accuracy=nan
2023-03-20 09:07:58,262 Node[0] Epoch[26] Batch [300-320]	Speed: 12416.51 samples/sec	accuracy=nan
2023-03-20 09:08:01,367 Node[0] Epoch[26] Batch [320-340]	Speed: 21020.91 samples/sec	accuracy=nan
2023-03-20 09:08:04,474 Node[0] Epoch[26] Batch [340-360]	Speed: 21014.26 samples/sec	accuracy=nan
2023-03-20 09:08:07,579 Node[0] Epoch[26] Batch [360-380]	Speed: 21020.57 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679321289286, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-20 09:08:09,287 Node[0] Epoch[26] Time cost=63.040
:::MLLOG {"namespace": "", "time_ms": 1679321289287, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20323.132555108492}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679321289440, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-20 09:08:10,681 Node[0] Epoch[26] Validation-accuracy=0.716160
2023-03-20 09:08:10,681 Node[0] Epoch[26] Validation-correct-count=4476.000000
2023-03-20 09:08:10,681 Node[0] Epoch[26] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679321291003, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679321291003, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72306, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679321291003, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679321291004, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-20 09:08:11,003 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:08:11,003 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:08:11,004 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:08:11,003 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:08:11,003 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:08:11,003 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679321291004, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-20 09:08:11,004 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:08:11,004 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:08:14,137 Node[0] Epoch[27] Batch [0-20]	Speed: 20895.12 samples/sec	accuracy=nan
2023-03-20 09:08:17,240 Node[0] Epoch[27] Batch [20-40]	Speed: 21039.24 samples/sec	accuracy=nan
2023-03-20 09:08:20,346 Node[0] Epoch[27] Batch [40-60]	Speed: 21015.17 samples/sec	accuracy=nan
2023-03-20 09:08:23,452 Node[0] Epoch[27] Batch [60-80]	Speed: 21015.26 samples/sec	accuracy=nan
2023-03-20 09:08:26,560 Node[0] Epoch[27] Batch [80-100]	Speed: 21009.39 samples/sec	accuracy=nan
2023-03-20 09:08:29,665 Node[0] Epoch[27] Batch [100-120]	Speed: 21020.69 samples/sec	accuracy=nan
2023-03-20 09:08:32,773 Node[0] Epoch[27] Batch [120-140]	Speed: 21007.45 samples/sec	accuracy=nan
2023-03-20 09:08:35,878 Node[0] Epoch[27] Batch [140-160]	Speed: 21018.24 samples/sec	accuracy=nan
2023-03-20 09:08:38,995 Node[0] Epoch[27] Batch [160-180]	Speed: 20949.42 samples/sec	accuracy=nan
2023-03-20 09:08:42,105 Node[0] Epoch[27] Batch [180-200]	Speed: 20985.91 samples/sec	accuracy=nan
2023-03-20 09:08:45,213 Node[0] Epoch[27] Batch [200-220]	Speed: 21007.93 samples/sec	accuracy=nan
2023-03-20 09:08:48,313 Node[0] Epoch[27] Batch [220-240]	Speed: 21053.63 samples/sec	accuracy=nan
2023-03-20 09:08:51,411 Node[0] Epoch[27] Batch [240-260]	Speed: 21070.44 samples/sec	accuracy=nan
2023-03-20 09:08:54,512 Node[0] Epoch[27] Batch [260-280]	Speed: 21054.06 samples/sec	accuracy=nan
2023-03-20 09:08:57,614 Node[0] Epoch[27] Batch [280-300]	Speed: 21047.24 samples/sec	accuracy=nan
2023-03-20 09:09:00,718 Node[0] Epoch[27] Batch [300-320]	Speed: 21026.38 samples/sec	accuracy=nan
2023-03-20 09:09:03,817 Node[0] Epoch[27] Batch [320-340]	Speed: 21065.67 samples/sec	accuracy=nan
2023-03-20 09:09:06,918 Node[0] Epoch[27] Batch [340-360]	Speed: 21052.58 samples/sec	accuracy=nan
2023-03-20 09:09:10,021 Node[0] Epoch[27] Batch [360-380]	Speed: 21037.65 samples/sec	accuracy=nan
2023-03-20 09:09:11,882 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:09:11,882 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:09:11,882 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:09:11,882 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:09:11,882 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:09:11,883 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679321351882, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-20 09:09:11,883 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:09:11,883 Node[0] Epoch[27] Time cost=60.879
:::MLLOG {"namespace": "", "time_ms": 1679321351883, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21044.408179875987}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679321351883, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-20 09:09:11,884 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:09:15,143 Node[0] Epoch[28] Batch [0-20]	Speed: 21033.18 samples/sec	accuracy=nan
2023-03-20 09:09:18,253 Node[0] Epoch[28] Batch [20-40]	Speed: 20986.54 samples/sec	accuracy=nan
2023-03-20 09:09:21,365 Node[0] Epoch[28] Batch [40-60]	Speed: 20978.69 samples/sec	accuracy=nan
2023-03-20 09:09:24,474 Node[0] Epoch[28] Batch [60-80]	Speed: 21001.09 samples/sec	accuracy=nan
2023-03-20 09:09:27,581 Node[0] Epoch[28] Batch [80-100]	Speed: 21009.73 samples/sec	accuracy=nan
2023-03-20 09:09:30,692 Node[0] Epoch[28] Batch [100-120]	Speed: 20984.49 samples/sec	accuracy=nan
2023-03-20 09:09:33,804 Node[0] Epoch[28] Batch [120-140]	Speed: 20973.92 samples/sec	accuracy=nan
2023-03-20 09:09:36,910 Node[0] Epoch[28] Batch [140-160]	Speed: 21016.12 samples/sec	accuracy=nan
2023-03-20 09:09:40,026 Node[0] Epoch[28] Batch [160-180]	Speed: 20950.40 samples/sec	accuracy=nan
2023-03-20 09:09:43,137 Node[0] Epoch[28] Batch [180-200]	Speed: 20984.33 samples/sec	accuracy=nan
2023-03-20 09:09:46,245 Node[0] Epoch[28] Batch [200-220]	Speed: 21001.62 samples/sec	accuracy=nan
2023-03-20 09:09:49,360 Node[0] Epoch[28] Batch [220-240]	Speed: 20956.46 samples/sec	accuracy=nan
2023-03-20 09:09:52,468 Node[0] Epoch[28] Batch [240-260]	Speed: 21008.87 samples/sec	accuracy=nan
2023-03-20 09:09:55,574 Node[0] Epoch[28] Batch [260-280]	Speed: 21013.30 samples/sec	accuracy=nan
2023-03-20 09:09:58,680 Node[0] Epoch[28] Batch [280-300]	Speed: 21020.20 samples/sec	accuracy=nan
2023-03-20 09:10:01,789 Node[0] Epoch[28] Batch [300-320]	Speed: 20994.51 samples/sec	accuracy=nan
2023-03-20 09:10:04,906 Node[0] Epoch[28] Batch [320-340]	Speed: 20948.40 samples/sec	accuracy=nan
2023-03-20 09:10:08,015 Node[0] Epoch[28] Batch [340-360]	Speed: 20996.93 samples/sec	accuracy=nan
2023-03-20 09:10:11,129 Node[0] Epoch[28] Batch [360-380]	Speed: 20961.13 samples/sec	accuracy=nan
2023-03-20 09:10:12,837 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:10:12,837 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:10:12,837 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:10:12,837 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:10:12,837 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:10:12,837 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:10:12,838 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679321412837, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-20 09:10:12,838 Node[0] Epoch[28] Time cost=60.955
:::MLLOG {"namespace": "", "time_ms": 1679321412839, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21018.274396879104}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1679321412839, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-20 09:10:12,839 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:10:16,103 Node[0] Epoch[29] Batch [0-20]	Speed: 21020.42 samples/sec	accuracy=nan
2023-03-20 09:10:19,213 Node[0] Epoch[29] Batch [20-40]	Speed: 20990.00 samples/sec	accuracy=nan
2023-03-20 09:10:22,325 Node[0] Epoch[29] Batch [40-60]	Speed: 20980.58 samples/sec	accuracy=nan
2023-03-20 09:10:25,436 Node[0] Epoch[29] Batch [60-80]	Speed: 20983.92 samples/sec	accuracy=nan
2023-03-20 09:10:28,544 Node[0] Epoch[29] Batch [80-100]	Speed: 21005.07 samples/sec	accuracy=nan
2023-03-20 09:10:31,649 Node[0] Epoch[29] Batch [100-120]	Speed: 21018.65 samples/sec	accuracy=nan
2023-03-20 09:10:34,759 Node[0] Epoch[29] Batch [120-140]	Speed: 20994.54 samples/sec	accuracy=nan
2023-03-20 09:10:37,866 Node[0] Epoch[29] Batch [140-160]	Speed: 21009.74 samples/sec	accuracy=nan
2023-03-20 09:10:40,975 Node[0] Epoch[29] Batch [160-180]	Speed: 20998.82 samples/sec	accuracy=nan
2023-03-20 09:10:44,084 Node[0] Epoch[29] Batch [180-200]	Speed: 20991.18 samples/sec	accuracy=nan
2023-03-20 09:10:47,192 Node[0] Epoch[29] Batch [200-220]	Speed: 21009.16 samples/sec	accuracy=nan
2023-03-20 09:10:50,298 Node[0] Epoch[29] Batch [220-240]	Speed: 21014.69 samples/sec	accuracy=nan
2023-03-20 09:10:53,407 Node[0] Epoch[29] Batch [240-260]	Speed: 21000.33 samples/sec	accuracy=nan
2023-03-20 09:10:56,514 Node[0] Epoch[29] Batch [260-280]	Speed: 21006.41 samples/sec	accuracy=nan
2023-03-20 09:10:59,621 Node[0] Epoch[29] Batch [280-300]	Speed: 21009.35 samples/sec	accuracy=nan
2023-03-20 09:11:04,678 Node[0] Epoch[29] Batch [300-320]	Speed: 12909.07 samples/sec	accuracy=nan
2023-03-20 09:11:07,780 Node[0] Epoch[29] Batch [320-340]	Speed: 21045.83 samples/sec	accuracy=nan
2023-03-20 09:11:10,886 Node[0] Epoch[29] Batch [340-360]	Speed: 21021.37 samples/sec	accuracy=nan
2023-03-20 09:11:13,988 Node[0] Epoch[29] Batch [360-380]	Speed: 21043.91 samples/sec	accuracy=nan
2023-03-20 09:11:15,843 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:11:15,844 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:11:15,844 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:11:15,844 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:11:15,844 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:11:15,844 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:11:15,844 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679321475844, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-20 09:11:15,845 Node[0] Epoch[29] Time cost=63.006
:::MLLOG {"namespace": "", "time_ms": 1679321475845, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20334.007833794232}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679321475845, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-20 09:11:15,846 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:11:19,105 Node[0] Epoch[30] Batch [0-20]	Speed: 21024.72 samples/sec	accuracy=nan
2023-03-20 09:11:22,216 Node[0] Epoch[30] Batch [20-40]	Speed: 20981.22 samples/sec	accuracy=nan
2023-03-20 09:11:25,320 Node[0] Epoch[30] Batch [40-60]	Speed: 21037.39 samples/sec	accuracy=nan
2023-03-20 09:11:28,423 Node[0] Epoch[30] Batch [60-80]	Speed: 21030.93 samples/sec	accuracy=nan
2023-03-20 09:11:31,524 Node[0] Epoch[30] Batch [80-100]	Speed: 21050.99 samples/sec	accuracy=nan
2023-03-20 09:11:34,625 Node[0] Epoch[30] Batch [100-120]	Speed: 21051.51 samples/sec	accuracy=nan
2023-03-20 09:11:37,730 Node[0] Epoch[30] Batch [120-140]	Speed: 21029.14 samples/sec	accuracy=nan
2023-03-20 09:11:40,834 Node[0] Epoch[30] Batch [140-160]	Speed: 21028.08 samples/sec	accuracy=nan
2023-03-20 09:11:43,935 Node[0] Epoch[30] Batch [160-180]	Speed: 21051.97 samples/sec	accuracy=nan
2023-03-20 09:11:47,042 Node[0] Epoch[30] Batch [180-200]	Speed: 21012.51 samples/sec	accuracy=nan
2023-03-20 09:11:50,147 Node[0] Epoch[30] Batch [200-220]	Speed: 21024.36 samples/sec	accuracy=nan
2023-03-20 09:11:53,248 Node[0] Epoch[30] Batch [220-240]	Speed: 21048.48 samples/sec	accuracy=nan
2023-03-20 09:11:56,351 Node[0] Epoch[30] Batch [240-260]	Speed: 21038.76 samples/sec	accuracy=nan
2023-03-20 09:11:59,455 Node[0] Epoch[30] Batch [260-280]	Speed: 21028.51 samples/sec	accuracy=nan
2023-03-20 09:12:02,560 Node[0] Epoch[30] Batch [280-300]	Speed: 21029.42 samples/sec	accuracy=nan
2023-03-20 09:12:07,927 Node[0] Epoch[30] Batch [300-320]	Speed: 12162.72 samples/sec	accuracy=nan
2023-03-20 09:12:11,035 Node[0] Epoch[30] Batch [320-340]	Speed: 21004.37 samples/sec	accuracy=nan
2023-03-20 09:12:14,143 Node[0] Epoch[30] Batch [340-360]	Speed: 21003.98 samples/sec	accuracy=nan
2023-03-20 09:12:17,245 Node[0] Epoch[30] Batch [360-380]	Speed: 21043.72 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679321538948, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-20 09:12:18,949 Node[0] Epoch[30] Time cost=63.104
:::MLLOG {"namespace": "", "time_ms": 1679321538949, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20302.619179815658}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679321539100, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-20 09:12:20,487 Node[0] Epoch[30] Validation-accuracy=0.755360
2023-03-20 09:12:20,487 Node[0] Epoch[30] Validation-correct-count=4721.000000
2023-03-20 09:12:20,487 Node[0] Epoch[30] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679321540652, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679321540652, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.74808, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679321540652, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679321540652, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-20 09:12:20,652 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:12:20,652 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:12:20,652 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679321540652, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-20 09:12:20,652 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:12:20,652 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:12:20,652 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:12:20,652 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:12:20,652 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:12:23,774 Node[0] Epoch[31] Batch [0-20]	Speed: 20971.55 samples/sec	accuracy=nan
2023-03-20 09:12:26,874 Node[0] Epoch[31] Batch [20-40]	Speed: 21055.27 samples/sec	accuracy=nan
2023-03-20 09:12:29,969 Node[0] Epoch[31] Batch [40-60]	Speed: 21091.62 samples/sec	accuracy=nan
2023-03-20 09:12:33,071 Node[0] Epoch[31] Batch [60-80]	Speed: 21046.88 samples/sec	accuracy=nan
2023-03-20 09:12:36,170 Node[0] Epoch[31] Batch [80-100]	Speed: 21064.40 samples/sec	accuracy=nan
2023-03-20 09:12:39,274 Node[0] Epoch[31] Batch [100-120]	Speed: 21029.54 samples/sec	accuracy=nan
2023-03-20 09:12:42,375 Node[0] Epoch[31] Batch [120-140]	Speed: 21052.76 samples/sec	accuracy=nan
2023-03-20 09:12:45,476 Node[0] Epoch[31] Batch [140-160]	Speed: 21049.82 samples/sec	accuracy=nan
2023-03-20 09:12:48,579 Node[0] Epoch[31] Batch [160-180]	Speed: 21042.16 samples/sec	accuracy=nan
2023-03-20 09:12:51,680 Node[0] Epoch[31] Batch [180-200]	Speed: 21046.75 samples/sec	accuracy=nan
2023-03-20 09:12:54,782 Node[0] Epoch[31] Batch [200-220]	Speed: 21045.54 samples/sec	accuracy=nan
2023-03-20 09:12:57,884 Node[0] Epoch[31] Batch [220-240]	Speed: 21049.46 samples/sec	accuracy=nan
2023-03-20 09:13:00,984 Node[0] Epoch[31] Batch [240-260]	Speed: 21051.05 samples/sec	accuracy=nan
2023-03-20 09:13:04,085 Node[0] Epoch[31] Batch [260-280]	Speed: 21053.79 samples/sec	accuracy=nan
2023-03-20 09:13:07,189 Node[0] Epoch[31] Batch [280-300]	Speed: 21031.21 samples/sec	accuracy=nan
2023-03-20 09:13:14,833 Node[0] Epoch[31] Batch [300-320]	Speed: 8539.90 samples/sec	accuracy=nan
2023-03-20 09:13:17,938 Node[0] Epoch[31] Batch [320-340]	Speed: 21023.08 samples/sec	accuracy=nan
2023-03-20 09:13:21,044 Node[0] Epoch[31] Batch [340-360]	Speed: 21017.48 samples/sec	accuracy=nan
2023-03-20 09:13:24,149 Node[0] Epoch[31] Batch [360-380]	Speed: 21027.57 samples/sec	accuracy=nan
2023-03-20 09:13:26,009 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:13:26,009 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:13:26,009 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:13:26,010 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:13:26,010 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:13:26,010 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:13:26,010 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679321606010, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-20 09:13:26,011 Node[0] Epoch[31] Time cost=65.358
:::MLLOG {"namespace": "", "time_ms": 1679321606011, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 19602.17961360344}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679321606011, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-20 09:13:26,011 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:13:29,270 Node[0] Epoch[32] Batch [0-20]	Speed: 21038.14 samples/sec	accuracy=nan
2023-03-20 09:13:32,374 Node[0] Epoch[32] Batch [20-40]	Speed: 21031.42 samples/sec	accuracy=nan
2023-03-20 09:13:35,483 Node[0] Epoch[32] Batch [40-60]	Speed: 20993.56 samples/sec	accuracy=nan
2023-03-20 09:13:38,589 Node[0] Epoch[32] Batch [60-80]	Speed: 21021.52 samples/sec	accuracy=nan
2023-03-20 09:13:41,697 Node[0] Epoch[32] Batch [80-100]	Speed: 21002.10 samples/sec	accuracy=nan
2023-03-20 09:13:44,804 Node[0] Epoch[32] Batch [100-120]	Speed: 21007.70 samples/sec	accuracy=nan
2023-03-20 09:13:47,912 Node[0] Epoch[32] Batch [120-140]	Speed: 21009.12 samples/sec	accuracy=nan
2023-03-20 09:13:51,015 Node[0] Epoch[32] Batch [140-160]	Speed: 21036.96 samples/sec	accuracy=nan
2023-03-20 09:13:54,115 Node[0] Epoch[32] Batch [160-180]	Speed: 21054.19 samples/sec	accuracy=nan
2023-03-20 09:13:57,216 Node[0] Epoch[32] Batch [180-200]	Speed: 21052.96 samples/sec	accuracy=nan
2023-03-20 09:14:00,318 Node[0] Epoch[32] Batch [200-220]	Speed: 21046.70 samples/sec	accuracy=nan
2023-03-20 09:14:03,419 Node[0] Epoch[32] Batch [220-240]	Speed: 21049.94 samples/sec	accuracy=nan
2023-03-20 09:14:06,521 Node[0] Epoch[32] Batch [240-260]	Speed: 21042.41 samples/sec	accuracy=nan
2023-03-20 09:14:09,627 Node[0] Epoch[32] Batch [260-280]	Speed: 21017.81 samples/sec	accuracy=nan
2023-03-20 09:14:12,737 Node[0] Epoch[32] Batch [280-300]	Speed: 20990.87 samples/sec	accuracy=nan
2023-03-20 09:14:20,057 Node[0] Epoch[32] Batch [300-320]	Speed: 8918.14 samples/sec	accuracy=nan
2023-03-20 09:14:23,158 Node[0] Epoch[32] Batch [320-340]	Speed: 21054.58 samples/sec	accuracy=nan
2023-03-20 09:14:26,264 Node[0] Epoch[32] Batch [340-360]	Speed: 21016.19 samples/sec	accuracy=nan
2023-03-20 09:14:29,372 Node[0] Epoch[32] Batch [360-380]	Speed: 20998.99 samples/sec	accuracy=nan
2023-03-20 09:14:31,080 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:14:31,081 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:14:31,081 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:14:31,081 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:14:31,081 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:14:31,081 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:14:31,082 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679321671081, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-20 09:14:31,082 Node[0] Epoch[32] Time cost=65.071
:::MLLOG {"namespace": "", "time_ms": 1679321671082, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 19688.77019019164}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679321671083, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-20 09:14:31,083 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:14:34,340 Node[0] Epoch[33] Batch [0-20]	Speed: 21064.39 samples/sec	accuracy=nan
2023-03-20 09:14:37,441 Node[0] Epoch[33] Batch [20-40]	Speed: 21049.75 samples/sec	accuracy=nan
2023-03-20 09:14:40,547 Node[0] Epoch[33] Batch [40-60]	Speed: 21016.75 samples/sec	accuracy=nan
2023-03-20 09:14:43,650 Node[0] Epoch[33] Batch [60-80]	Speed: 21041.28 samples/sec	accuracy=nan
2023-03-20 09:14:46,753 Node[0] Epoch[33] Batch [80-100]	Speed: 21039.51 samples/sec	accuracy=nan
2023-03-20 09:14:49,859 Node[0] Epoch[33] Batch [100-120]	Speed: 21015.90 samples/sec	accuracy=nan
2023-03-20 09:14:52,968 Node[0] Epoch[33] Batch [120-140]	Speed: 20995.02 samples/sec	accuracy=nan
2023-03-20 09:14:56,073 Node[0] Epoch[33] Batch [140-160]	Speed: 21024.71 samples/sec	accuracy=nan
2023-03-20 09:14:59,179 Node[0] Epoch[33] Batch [160-180]	Speed: 21020.01 samples/sec	accuracy=nan
2023-03-20 09:15:02,282 Node[0] Epoch[33] Batch [180-200]	Speed: 21035.15 samples/sec	accuracy=nan
2023-03-20 09:15:05,389 Node[0] Epoch[33] Batch [200-220]	Speed: 21012.01 samples/sec	accuracy=nan
2023-03-20 09:15:08,496 Node[0] Epoch[33] Batch [220-240]	Speed: 21006.06 samples/sec	accuracy=nan
2023-03-20 09:15:11,603 Node[0] Epoch[33] Batch [240-260]	Speed: 21016.57 samples/sec	accuracy=nan
2023-03-20 09:15:14,706 Node[0] Epoch[33] Batch [260-280]	Speed: 21031.66 samples/sec	accuracy=nan
2023-03-20 09:15:17,811 Node[0] Epoch[33] Batch [280-300]	Speed: 21024.54 samples/sec	accuracy=nan
2023-03-20 09:15:20,916 Node[0] Epoch[33] Batch [300-320]	Speed: 21028.08 samples/sec	accuracy=nan
2023-03-20 09:15:24,023 Node[0] Epoch[33] Batch [320-340]	Speed: 21009.62 samples/sec	accuracy=nan
2023-03-20 09:15:27,129 Node[0] Epoch[33] Batch [340-360]	Speed: 21016.67 samples/sec	accuracy=nan
2023-03-20 09:15:30,235 Node[0] Epoch[33] Batch [360-380]	Speed: 21018.98 samples/sec	accuracy=nan
2023-03-20 09:15:32,094 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:15:32,095 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:15:32,095 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:15:32,095 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:15:32,095 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:15:32,095 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:15:32,095 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679321732095, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-20 09:15:32,096 Node[0] Epoch[33] Time cost=61.014
:::MLLOG {"namespace": "", "time_ms": 1679321732096, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20998.03315816658}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679321732097, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-20 09:15:32,097 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:15:35,359 Node[0] Epoch[34] Batch [0-20]	Speed: 21004.38 samples/sec	accuracy=nan
2023-03-20 09:15:38,462 Node[0] Epoch[34] Batch [20-40]	Speed: 21038.18 samples/sec	accuracy=nan
2023-03-20 09:15:41,573 Node[0] Epoch[34] Batch [40-60]	Speed: 20986.27 samples/sec	accuracy=nan
2023-03-20 09:15:44,679 Node[0] Epoch[34] Batch [60-80]	Speed: 21016.71 samples/sec	accuracy=nan
2023-03-20 09:15:47,789 Node[0] Epoch[34] Batch [80-100]	Speed: 20989.43 samples/sec	accuracy=nan
2023-03-20 09:15:50,897 Node[0] Epoch[34] Batch [100-120]	Speed: 21004.38 samples/sec	accuracy=nan
2023-03-20 09:15:53,999 Node[0] Epoch[34] Batch [120-140]	Speed: 21041.85 samples/sec	accuracy=nan
2023-03-20 09:15:57,107 Node[0] Epoch[34] Batch [140-160]	Speed: 21006.10 samples/sec	accuracy=nan
2023-03-20 09:16:00,220 Node[0] Epoch[34] Batch [160-180]	Speed: 20969.79 samples/sec	accuracy=nan
2023-03-20 09:16:03,327 Node[0] Epoch[34] Batch [180-200]	Speed: 21013.97 samples/sec	accuracy=nan
2023-03-20 09:16:06,433 Node[0] Epoch[34] Batch [200-220]	Speed: 21012.17 samples/sec	accuracy=nan
2023-03-20 09:16:09,541 Node[0] Epoch[34] Batch [220-240]	Speed: 21003.89 samples/sec	accuracy=nan
2023-03-20 09:16:12,646 Node[0] Epoch[34] Batch [240-260]	Speed: 21024.38 samples/sec	accuracy=nan
2023-03-20 09:16:15,751 Node[0] Epoch[34] Batch [260-280]	Speed: 21023.26 samples/sec	accuracy=nan
2023-03-20 09:16:18,857 Node[0] Epoch[34] Batch [280-300]	Speed: 21020.25 samples/sec	accuracy=nan
2023-03-20 09:16:21,964 Node[0] Epoch[34] Batch [300-320]	Speed: 21010.90 samples/sec	accuracy=nan
2023-03-20 09:16:25,062 Node[0] Epoch[34] Batch [320-340]	Speed: 21074.44 samples/sec	accuracy=nan
2023-03-20 09:16:28,166 Node[0] Epoch[34] Batch [340-360]	Speed: 21029.36 samples/sec	accuracy=nan
2023-03-20 09:16:31,268 Node[0] Epoch[34] Batch [360-380]	Speed: 21040.56 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679321793130, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-20 09:16:33,131 Node[0] Epoch[34] Time cost=61.034
:::MLLOG {"namespace": "", "time_ms": 1679321793131, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20990.92949124287}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679321793281, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-20 09:16:34,513 Node[0] Epoch[34] Validation-accuracy=0.760480
2023-03-20 09:16:34,513 Node[0] Epoch[34] Validation-correct-count=4753.000000
2023-03-20 09:16:34,513 Node[0] Epoch[34] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679321794942, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679321794942, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75866, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679321794943, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
2023-03-20 09:16:34,943 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679321794943, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 36, "epoch_count": 2}}
2023-03-20 09:16:34,943 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:16:34,943 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:16:34,942 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:16:34,943 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:16:34,943 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679321794943, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 36}}
2023-03-20 09:16:34,943 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:16:34,943 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:16:38,079 Node[0] Epoch[35] Batch [0-20]	Speed: 20874.06 samples/sec	accuracy=nan
2023-03-20 09:16:41,192 Node[0] Epoch[35] Batch [20-40]	Speed: 20966.86 samples/sec	accuracy=nan
2023-03-20 09:16:44,301 Node[0] Epoch[35] Batch [40-60]	Speed: 20996.47 samples/sec	accuracy=nan
2023-03-20 09:16:47,412 Node[0] Epoch[35] Batch [60-80]	Speed: 20989.66 samples/sec	accuracy=nan
2023-03-20 09:16:50,520 Node[0] Epoch[35] Batch [80-100]	Speed: 21001.34 samples/sec	accuracy=nan
2023-03-20 09:16:53,626 Node[0] Epoch[35] Batch [100-120]	Speed: 21017.57 samples/sec	accuracy=nan
2023-03-20 09:16:56,739 Node[0] Epoch[35] Batch [120-140]	Speed: 20972.37 samples/sec	accuracy=nan
2023-03-20 09:16:59,853 Node[0] Epoch[35] Batch [140-160]	Speed: 20959.33 samples/sec	accuracy=nan
2023-03-20 09:17:02,957 Node[0] Epoch[35] Batch [160-180]	Speed: 21029.87 samples/sec	accuracy=nan
2023-03-20 09:17:06,063 Node[0] Epoch[35] Batch [180-200]	Speed: 21018.10 samples/sec	accuracy=nan
2023-03-20 09:17:09,165 Node[0] Epoch[35] Batch [200-220]	Speed: 21043.75 samples/sec	accuracy=nan
2023-03-20 09:17:12,268 Node[0] Epoch[35] Batch [220-240]	Speed: 21042.17 samples/sec	accuracy=nan
2023-03-20 09:17:15,371 Node[0] Epoch[35] Batch [240-260]	Speed: 21035.37 samples/sec	accuracy=nan
2023-03-20 09:17:18,478 Node[0] Epoch[35] Batch [260-280]	Speed: 21012.49 samples/sec	accuracy=nan
2023-03-20 09:17:21,580 Node[0] Epoch[35] Batch [280-300]	Speed: 21044.16 samples/sec	accuracy=nan
2023-03-20 09:17:24,682 Node[0] Epoch[35] Batch [300-320]	Speed: 21044.69 samples/sec	accuracy=nan
2023-03-20 09:17:27,783 Node[0] Epoch[35] Batch [320-340]	Speed: 21047.08 samples/sec	accuracy=nan
2023-03-20 09:17:30,887 Node[0] Epoch[35] Batch [340-360]	Speed: 21036.19 samples/sec	accuracy=nan
2023-03-20 09:17:33,991 Node[0] Epoch[35] Batch [360-380]	Speed: 21025.70 samples/sec	accuracy=nan
2023-03-20 09:17:35,695 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:17:35,696 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:17:35,696 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:17:35,696 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:17:35,696 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:17:35,696 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:17:35,696 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679321855696, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 36}}
2023-03-20 09:17:35,698 Node[0] Epoch[35] Time cost=60.755
:::MLLOG {"namespace": "", "time_ms": 1679321855698, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21087.580807827297}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 36}}
:::MLLOG {"namespace": "", "time_ms": 1679321855698, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 37}}
2023-03-20 09:17:35,698 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:17:38,961 Node[0] Epoch[36] Batch [0-20]	Speed: 20999.57 samples/sec	accuracy=nan
2023-03-20 09:17:42,067 Node[0] Epoch[36] Batch [20-40]	Speed: 21016.70 samples/sec	accuracy=nan
2023-03-20 09:17:45,168 Node[0] Epoch[36] Batch [40-60]	Speed: 21048.96 samples/sec	accuracy=nan
2023-03-20 09:17:48,272 Node[0] Epoch[36] Batch [60-80]	Speed: 21031.62 samples/sec	accuracy=nan
2023-03-20 09:17:51,374 Node[0] Epoch[36] Batch [80-100]	Speed: 21046.99 samples/sec	accuracy=nan
2023-03-20 09:17:54,476 Node[0] Epoch[36] Batch [100-120]	Speed: 21043.38 samples/sec	accuracy=nan
2023-03-20 09:17:57,582 Node[0] Epoch[36] Batch [120-140]	Speed: 21016.73 samples/sec	accuracy=nan
2023-03-20 09:18:00,683 Node[0] Epoch[36] Batch [140-160]	Speed: 21052.27 samples/sec	accuracy=nan
2023-03-20 09:18:03,781 Node[0] Epoch[36] Batch [160-180]	Speed: 21073.92 samples/sec	accuracy=nan
2023-03-20 09:18:06,883 Node[0] Epoch[36] Batch [180-200]	Speed: 21041.32 samples/sec	accuracy=nan
2023-03-20 09:18:09,993 Node[0] Epoch[36] Batch [200-220]	Speed: 20995.02 samples/sec	accuracy=nan
2023-03-20 09:18:13,093 Node[0] Epoch[36] Batch [220-240]	Speed: 21053.54 samples/sec	accuracy=nan
2023-03-20 09:18:16,198 Node[0] Epoch[36] Batch [240-260]	Speed: 21026.68 samples/sec	accuracy=nan
2023-03-20 09:18:19,301 Node[0] Epoch[36] Batch [260-280]	Speed: 21038.13 samples/sec	accuracy=nan
2023-03-20 09:18:22,405 Node[0] Epoch[36] Batch [280-300]	Speed: 21032.04 samples/sec	accuracy=nan
2023-03-20 09:18:25,506 Node[0] Epoch[36] Batch [300-320]	Speed: 21049.90 samples/sec	accuracy=nan
2023-03-20 09:18:28,609 Node[0] Epoch[36] Batch [320-340]	Speed: 21036.39 samples/sec	accuracy=nan
2023-03-20 09:18:31,708 Node[0] Epoch[36] Batch [340-360]	Speed: 21062.66 samples/sec	accuracy=nan
2023-03-20 09:18:34,811 Node[0] Epoch[36] Batch [360-380]	Speed: 21041.72 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679321916669, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 37}}
2023-03-20 09:18:36,670 Node[0] Epoch[36] Time cost=60.972
:::MLLOG {"namespace": "", "time_ms": 1679321916670, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21012.250571079527}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 37}}
:::MLLOG {"namespace": "", "time_ms": 1679321916671, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "status": "aborted"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679321932
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 09:18:52 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 09:18:52 AM'
ENDING TIMING RUN AT 2023-03-20 09:18:52 AM
+ result=2430
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2430,root,2023-03-20 08:38:22 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2430,root,2023-03-20 08:38:22 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679321932
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 09:18:52 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 09:18:52 AM'
ENDING TIMING RUN AT 2023-03-20 09:18:52 AM
+ result=2430
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2430,root,2023-03-20 08:38:22 AM'
RESULT,IMAGE_CLASSIFICATION,,2430,root,2023-03-20 08:38:22 AM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679321933
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 09:18:53 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 09:18:53 AM'
ENDING TIMING RUN AT 2023-03-20 09:18:53 AM
+ result=2431
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2431,root,2023-03-20 08:38:22 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2431,root,2023-03-20 08:38:22 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679321933
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 09:18:53 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 09:18:53 AM'
ENDING TIMING RUN AT 2023-03-20 09:18:53 AM
+ result=2431
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2431,root,2023-03-20 08:38:22 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2431,root,2023-03-20 08:38:22 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679321933
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 09:18:53 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 09:18:53 AM'
ENDING TIMING RUN AT 2023-03-20 09:18:53 AM
+ result=2431
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2431,root,2023-03-20 08:38:22 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2431,root,2023-03-20 08:38:22 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679321934
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 09:18:54 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 09:18:54 AM'
ENDING TIMING RUN AT 2023-03-20 09:18:54 AM
+ result=2432
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2432,root,2023-03-20 08:38:22 AM'
RESULT,IMAGE_CLASSIFICATION,,2432,root,2023-03-20 08:38:22 AM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679321934
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 09:18:54 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 09:18:54 AM'
ENDING TIMING RUN AT 2023-03-20 09:18:54 AM
+ result=2432
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2432,root,2023-03-20 08:38:22 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2432,root,2023-03-20 08:38:22 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679321935
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 09:18:55 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 09:18:55 AM'
ENDING TIMING RUN AT 2023-03-20 09:18:55 AM
+ result=2433
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2433,root,2023-03-20 08:38:22 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2433,root,2023-03-20 08:38:22 AM'
+ export PROFILE=0
+ PROFILE=0
