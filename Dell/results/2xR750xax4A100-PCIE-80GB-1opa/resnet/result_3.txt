+ echo 'Beginning trial 4 of 5'
Beginning trial 4 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node041 node046 '
+ echo 'hosts=node041 node046 '
hosts=node041 node046 
+ for node in $hosts
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679326616775, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679326616804, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679326616805, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679326616806, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679326616808, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node041 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node041
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679326628302, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679326633552, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679326633580, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679326633582, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679326633583, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679326633584, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node046 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node046
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679326644171, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=10550
+ SEED=10550
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node041: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node046: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ sed 's/^config_//'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ sed 's/\.sh$//'
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
++++ readlink -f ./config_2xR750xax4A100.sh
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export DGXSYSTEM=2xR750xax4A100
++ export WD=5.0e-05
++ WD=5.0e-05
++ DGXSYSTEM=2xR750xax4A100
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export WALLTIME=00:40:00
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ WALLTIME=00:40:00
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DGXSYSTEM=2xR750xax4A100
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ DGXSYSTEM=2xR750xax4A100
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export WALLTIME=00:40:00
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ WALLTIME=00:40:00
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ date +%s
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+ start=1679326645
+ start=1679326645
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 10:37:25 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 10:37:25 AM'
+ start_fmt='2023-03-20 10:37:25 AM'
STARTING TIMING RUN AT 2023-03-20 10:37:25 AM
+ readonly global_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-20 10:37:25 AM'
+ global_rank=0
STARTING TIMING RUN AT 2023-03-20 10:37:25 AM
+ readonly local_rank=0
+ readonly global_rank=0
+ global_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ readonly local_rank=0
+ local_rank=0
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ SLURM_NTASKS_PER_NODE=4
+ KVSTORE=horovod
+ LR=12.5
+ OPTIMIZER=sgdwfastlars
+ MOM=0.9
+ BATCHSIZE=408
+ LRSCHED=pow2
+ INPUT_BATCH_MULTIPLIER=1
+ WARMUP_EPOCHS=2
+ KVSTORE=horovod
+ LARSETA=0.001
+ LR=12.5
+ MOM=0.9
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LRSCHED=pow2
+ LABELSMOOTHING=0.1
+ WARMUP_EPOCHS=2
+ SEED=10550
+ EVAL_OFFSET=2
+ LARSETA=0.001
+ EVAL_PERIOD=4
+ DALI_HW_DECODER_LOAD=0
+ DALI_PREFETCH_QUEUE=5
+ WD=5.0e-05
+ DALI_NVJPEG_MEMPADDING=256
+ LABELSMOOTHING=0.1
+ DALI_THREADS=6
+ SEED=10550
+ DALI_CACHE_SIZE=0
+ EVAL_OFFSET=2
+ DALI_ROI_DECODE=1
+ EVAL_PERIOD=4
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREFETCH_QUEUE=5
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_THREADS=6
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CACHE_SIZE=0
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_TMP_BUFFER_HINT=355568328
+ NETWORK=resnet-v1b-stats-fl
+ DALI_DECODER_BUFFER_HINT=1315942
+ BN_GROUP=1
+ DALI_CROP_BUFFER_HINT=165581
+ PROFILE=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ PROFILE_EXCEL=0
+ DALI_DONT_USE_MMAP=0
+ NODALI=0
+ NUMEPOCHS=37
+ NUMEXAMPLES=
+ NETWORK=resnet-v1b-stats-fl
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ BN_GROUP=1
+ PROFILE=0
+ [[ 0 == 1 ]]
+ PROFILE_EXCEL=0
+ DATAROOT=/data
+ NODALI=0
+ NUMEXAMPLES=
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
running benchmark
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DATAROOT=/data
+ [[ 0 -ge 1 ]]
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679326645
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ start_fmt='2023-03-20 10:37:25 AM'
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo 'STARTING TIMING RUN AT 2023-03-20 10:37:25 AM'
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2023-03-20 10:37:25 AM
+ readonly global_rank=0
+ global_rank=0
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10550
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679326645
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 10:37:25 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 10:37:25 AM'
STARTING TIMING RUN AT 2023-03-20 10:37:25 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10550
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ dirname ./config_2xR750xax4A100.sh
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
+++ dirname ./config_2xR750xax4A100.sh
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++++ readlink -f ./config_2xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ date +%s
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ date +%s
+ start=1679326645
+ start=1679326645
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start=1679326645
+ start=1679326645
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 10:37:25 AM'
STARTING TIMING RUN AT 2023-03-20 10:37:25 AM
+ echo 'STARTING TIMING RUN AT 2023-03-20 10:37:25 AM'
+ readonly global_rank=0
+ global_rank=0
+ start_fmt='2023-03-20 10:37:25 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 10:37:25 AM'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
STARTING TIMING RUN AT 2023-03-20 10:37:25 AM
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ readonly global_rank=0
+ global_rank=0
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ readonly local_rank=0
+ local_rank=0
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ LABELSMOOTHING=0.1
+ SEED=10550
+ EVAL_OFFSET=2
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ KVSTORE=horovod
+ LR=12.5
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ SEED=10550
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ export NGPUS=1
+ NGPUS=1
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-20 10:37:25 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 10:37:25 AM'
+ start_fmt='2023-03-20 10:37:25 AM'
STARTING TIMING RUN AT 2023-03-20 10:37:25 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-20 10:37:25 AM'
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
STARTING TIMING RUN AT 2023-03-20 10:37:25 AM
+ readonly global_rank=0
+ global_rank=0
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ readonly local_rank=0
+ local_rank=0
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=10550
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ SEED=10550
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
++ seq 0 3
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ seq 0 3
++ tr '\n' ,
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
running benchmark
+ [[ 0 -ge 1 ]]
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 10550 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node041:891064] MCW rank 3 is not bound (or bound to all available processors)
[node041:891063] MCW rank 2 is not bound (or bound to all available processors)
[node041:891062] MCW rank 1 is not bound (or bound to all available processors)
[node041:891079] MCW rank 0 is not bound (or bound to all available processors)
[node046:1063216] MCW rank 7 is not bound (or bound to all available processors)
[node046:1063213] MCW rank 6 is not bound (or bound to all available processors)
[node046:1063214] MCW rank 4 is not bound (or bound to all available processors)
[node046:1063215] MCW rank 5 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679326650423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[10:37:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679326657417, "event_type": "POINT_IN_TIME", "key": "seed", "value": 10550, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[10:37:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:37:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:37:37] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:37:38] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:37:38] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:37:38] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[10:37:38] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679326659771, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 408, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[10:37:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:37:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:37:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:37:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679326664267, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664268, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664268, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664268, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664268, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664269, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664269, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664269, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664269, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664269, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664270, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664270, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664270, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664270, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664270, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664271, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664271, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664271, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664271, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664271, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664272, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664272, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664272, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664272, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664272, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664273, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664273, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664273, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664273, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664273, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664274, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664274, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664274, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664274, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664274, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664275, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664275, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664275, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664275, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664275, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664276, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664276, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664276, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664276, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664276, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664277, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664277, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664277, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664277, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664277, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664278, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664278, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664278, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664278, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664278, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664279, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664279, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664279, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664279, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664279, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664280, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664280, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664280, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664280, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664280, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664281, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664281, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664281, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664281, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664281, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664282, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664282, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664282, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664282, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664282, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664282, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664283, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664283, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664283, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664283, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664284, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664284, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664284, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664284, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664284, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664284, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664285, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664285, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664285, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664285, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664285, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664286, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664286, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664286, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664286, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664286, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664287, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664287, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664287, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664287, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664287, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664288, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664288, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664288, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664288, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664288, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664289, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664289, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664289, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664289, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664289, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664290, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664290, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664290, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664290, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664290, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664291, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664291, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664291, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664291, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664291, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664291, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664292, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664292, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664292, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664292, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664292, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664293, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664293, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664293, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664293, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664294, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664294, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664294, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664294, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664294, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664295, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664295, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664295, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664295, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664295, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664296, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664296, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664296, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664296, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664296, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664297, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664297, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664297, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664297, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664297, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664298, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664298, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664298, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664298, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664298, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664299, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664299, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664299, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664299, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679326664299, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[10:37:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:37:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:37:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[10:37:44] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 10:37:46,393 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=37193, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 10:37:46,393 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=51010, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 10:37:46,394 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=14913, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 10:37:46,394 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=31869, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 10:37:46,395 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=13635, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 10:37:46,395 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61937, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 10:37:46,395 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61586, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 10:37:46,395 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=15493, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679326666395, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679326666397, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679326666397, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679326666397, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679326666397, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 408, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679326666397, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679326666397, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679326666397, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679326666397, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679326666397, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679326666397, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679326666397, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679326666397, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679326666397, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679326666397, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679326666397, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679326666398, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679326666398, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 12.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679326666398, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679326666398, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679326754416, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679326754417, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679326754417, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679326754978, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679326755115, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679326755117, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-20 10:39:18,367 Node[0] Epoch[0] Batch [0-20]	Speed: 20218.88 samples/sec	accuracy=nan
2023-03-20 10:39:21,465 Node[0] Epoch[0] Batch [20-40]	Speed: 21066.46 samples/sec	accuracy=nan
2023-03-20 10:39:24,566 Node[0] Epoch[0] Batch [40-60]	Speed: 21057.26 samples/sec	accuracy=nan
2023-03-20 10:39:27,669 Node[0] Epoch[0] Batch [60-80]	Speed: 21033.83 samples/sec	accuracy=nan
2023-03-20 10:39:30,771 Node[0] Epoch[0] Batch [80-100]	Speed: 21044.04 samples/sec	accuracy=nan
2023-03-20 10:39:33,872 Node[0] Epoch[0] Batch [100-120]	Speed: 21050.48 samples/sec	accuracy=nan
2023-03-20 10:39:36,977 Node[0] Epoch[0] Batch [120-140]	Speed: 21025.37 samples/sec	accuracy=nan
2023-03-20 10:39:40,091 Node[0] Epoch[0] Batch [140-160]	Speed: 20961.88 samples/sec	accuracy=nan
2023-03-20 10:39:43,212 Node[0] Epoch[0] Batch [160-180]	Speed: 20921.94 samples/sec	accuracy=nan
2023-03-20 10:39:46,319 Node[0] Epoch[0] Batch [180-200]	Speed: 21005.15 samples/sec	accuracy=nan
2023-03-20 10:39:49,432 Node[0] Epoch[0] Batch [200-220]	Speed: 20971.09 samples/sec	accuracy=nan
2023-03-20 10:39:54,512 Node[0] Epoch[0] Batch [220-240]	Speed: 12851.87 samples/sec	accuracy=nan
2023-03-20 10:40:04,410 Node[0] Epoch[0] Batch [240-260]	Speed: 6594.96 samples/sec	accuracy=nan
2023-03-20 10:40:11,995 Node[0] Epoch[0] Batch [260-280]	Speed: 8606.79 samples/sec	accuracy=nan
2023-03-20 10:40:17,060 Node[0] Epoch[0] Batch [280-300]	Speed: 12888.76 samples/sec	accuracy=nan
2023-03-20 10:40:20,169 Node[0] Epoch[0] Batch [300-320]	Speed: 20993.97 samples/sec	accuracy=nan
2023-03-20 10:40:23,279 Node[0] Epoch[0] Batch [320-340]	Speed: 20989.61 samples/sec	accuracy=nan
2023-03-20 10:40:26,391 Node[0] Epoch[0] Batch [340-360]	Speed: 20977.03 samples/sec	accuracy=nan
2023-03-20 10:40:29,505 Node[0] Epoch[0] Batch [360-380]	Speed: 20968.34 samples/sec	accuracy=nan
2023-03-20 10:40:31,370 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:40:31,370 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:40:31,370 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:40:31,370 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:40:31,370 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:40:31,370 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:40:31,370 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679326831370, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-20 10:40:31,371 Node[0] Epoch[0] Time cost=76.254
:::MLLOG {"namespace": "", "time_ms": 1679326831371, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 16801.35733448146}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
:::MLLOG {"namespace": "", "time_ms": 1679326831372, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-20 10:40:31,372 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:40:34,642 Node[0] Epoch[1] Batch [0-20]	Speed: 20954.24 samples/sec	accuracy=nan
2023-03-20 10:40:37,754 Node[0] Epoch[1] Batch [20-40]	Speed: 20978.44 samples/sec	accuracy=nan
2023-03-20 10:40:40,873 Node[0] Epoch[1] Batch [40-60]	Speed: 20927.98 samples/sec	accuracy=nan
2023-03-20 10:40:43,994 Node[0] Epoch[1] Batch [60-80]	Speed: 20918.53 samples/sec	accuracy=nan
2023-03-20 10:40:47,114 Node[0] Epoch[1] Batch [80-100]	Speed: 20922.37 samples/sec	accuracy=nan
2023-03-20 10:40:50,234 Node[0] Epoch[1] Batch [100-120]	Speed: 20922.05 samples/sec	accuracy=nan
2023-03-20 10:40:53,355 Node[0] Epoch[1] Batch [120-140]	Speed: 20916.94 samples/sec	accuracy=nan
2023-03-20 10:40:56,474 Node[0] Epoch[1] Batch [140-160]	Speed: 20931.00 samples/sec	accuracy=nan
2023-03-20 10:40:59,600 Node[0] Epoch[1] Batch [160-180]	Speed: 20884.62 samples/sec	accuracy=nan
2023-03-20 10:41:02,724 Node[0] Epoch[1] Batch [180-200]	Speed: 20895.72 samples/sec	accuracy=nan
2023-03-20 10:41:05,849 Node[0] Epoch[1] Batch [200-220]	Speed: 20889.60 samples/sec	accuracy=nan
2023-03-20 10:41:08,971 Node[0] Epoch[1] Batch [220-240]	Speed: 20908.11 samples/sec	accuracy=nan
2023-03-20 10:41:12,098 Node[0] Epoch[1] Batch [240-260]	Speed: 20877.50 samples/sec	accuracy=nan
2023-03-20 10:41:15,223 Node[0] Epoch[1] Batch [260-280]	Speed: 20889.56 samples/sec	accuracy=nan
2023-03-20 10:41:18,348 Node[0] Epoch[1] Batch [280-300]	Speed: 20885.46 samples/sec	accuracy=nan
2023-03-20 10:41:21,469 Node[0] Epoch[1] Batch [300-320]	Speed: 20917.65 samples/sec	accuracy=nan
2023-03-20 10:41:24,590 Node[0] Epoch[1] Batch [320-340]	Speed: 20919.33 samples/sec	accuracy=nan
2023-03-20 10:41:27,709 Node[0] Epoch[1] Batch [340-360]	Speed: 20928.70 samples/sec	accuracy=nan
2023-03-20 10:41:30,830 Node[0] Epoch[1] Batch [360-380]	Speed: 20918.87 samples/sec	accuracy=nan
2023-03-20 10:41:32,700 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:41:32,699 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:41:32,700 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:41:32,699 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:41:32,700 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:41:32,700 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:41:32,700 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679326892700, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-20 10:41:32,701 Node[0] Epoch[1] Time cost=61.329
:::MLLOG {"namespace": "", "time_ms": 1679326892701, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20890.03291347181}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679326892701, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-20 10:41:32,702 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:41:35,979 Node[0] Epoch[2] Batch [0-20]	Speed: 20904.21 samples/sec	accuracy=nan
2023-03-20 10:41:39,096 Node[0] Epoch[2] Batch [20-40]	Speed: 20945.20 samples/sec	accuracy=nan
2023-03-20 10:41:42,216 Node[0] Epoch[2] Batch [40-60]	Speed: 20926.12 samples/sec	accuracy=nan
2023-03-20 10:41:45,333 Node[0] Epoch[2] Batch [60-80]	Speed: 20941.14 samples/sec	accuracy=nan
2023-03-20 10:41:48,449 Node[0] Epoch[2] Batch [80-100]	Speed: 20951.98 samples/sec	accuracy=nan
2023-03-20 10:41:51,563 Node[0] Epoch[2] Batch [100-120]	Speed: 20962.47 samples/sec	accuracy=nan
2023-03-20 10:41:54,676 Node[0] Epoch[2] Batch [120-140]	Speed: 20970.65 samples/sec	accuracy=nan
2023-03-20 10:41:57,788 Node[0] Epoch[2] Batch [140-160]	Speed: 20972.19 samples/sec	accuracy=nan
2023-03-20 10:42:00,902 Node[0] Epoch[2] Batch [160-180]	Speed: 20965.35 samples/sec	accuracy=nan
2023-03-20 10:42:04,017 Node[0] Epoch[2] Batch [180-200]	Speed: 20956.13 samples/sec	accuracy=nan
2023-03-20 10:42:07,135 Node[0] Epoch[2] Batch [200-220]	Speed: 20935.45 samples/sec	accuracy=nan
2023-03-20 10:42:10,251 Node[0] Epoch[2] Batch [220-240]	Speed: 20953.32 samples/sec	accuracy=nan
2023-03-20 10:42:13,370 Node[0] Epoch[2] Batch [240-260]	Speed: 20932.11 samples/sec	accuracy=nan
2023-03-20 10:42:16,481 Node[0] Epoch[2] Batch [260-280]	Speed: 20977.04 samples/sec	accuracy=nan
2023-03-20 10:42:19,592 Node[0] Epoch[2] Batch [280-300]	Speed: 20989.82 samples/sec	accuracy=nan
2023-03-20 10:42:22,703 Node[0] Epoch[2] Batch [300-320]	Speed: 20980.39 samples/sec	accuracy=nan
2023-03-20 10:42:25,811 Node[0] Epoch[2] Batch [320-340]	Speed: 21002.97 samples/sec	accuracy=nan
2023-03-20 10:42:28,921 Node[0] Epoch[2] Batch [340-360]	Speed: 20990.17 samples/sec	accuracy=nan
2023-03-20 10:42:32,034 Node[0] Epoch[2] Batch [360-380]	Speed: 20971.08 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679326953742, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-20 10:42:33,743 Node[0] Epoch[2] Time cost=61.041
:::MLLOG {"namespace": "", "time_ms": 1679326953743, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20988.496513820897}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
2023-03-20 10:42:33,893 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:42:33,893 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:42:33,893 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:42:33,893 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679326953893, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-20 10:42:33,893 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:42:33,893 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:42:33,893 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:42:33,894 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:42:35,054 Node[0] Epoch[2] Validation-accuracy=0.264800
2023-03-20 10:42:35,054 Node[0] Epoch[2] Validation-correct-count=1655.000000
2023-03-20 10:42:35,054 Node[0] Epoch[2] Validation-total-count=6250.000000
2023-03-20 10:42:35,451 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679326955451, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-20 10:42:35,451 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679326955451, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.26618, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-20 10:42:35,451 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:42:35,451 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679326955451, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1679326955451, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-20 10:42:35,451 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:42:35,451 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:42:35,451 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679326955452, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-20 10:42:35,452 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:42:38,588 Node[0] Epoch[3] Batch [0-20]	Speed: 20872.73 samples/sec	accuracy=nan
2023-03-20 10:42:41,693 Node[0] Epoch[3] Batch [20-40]	Speed: 21018.30 samples/sec	accuracy=nan
2023-03-20 10:42:44,798 Node[0] Epoch[3] Batch [40-60]	Speed: 21027.49 samples/sec	accuracy=nan
2023-03-20 10:42:47,905 Node[0] Epoch[3] Batch [60-80]	Speed: 21011.34 samples/sec	accuracy=nan
2023-03-20 10:42:51,012 Node[0] Epoch[3] Batch [80-100]	Speed: 21012.19 samples/sec	accuracy=nan
2023-03-20 10:42:54,117 Node[0] Epoch[3] Batch [100-120]	Speed: 21020.45 samples/sec	accuracy=nan
2023-03-20 10:42:57,223 Node[0] Epoch[3] Batch [120-140]	Speed: 21021.17 samples/sec	accuracy=nan
2023-03-20 10:43:00,325 Node[0] Epoch[3] Batch [140-160]	Speed: 21040.44 samples/sec	accuracy=nan
2023-03-20 10:43:03,432 Node[0] Epoch[3] Batch [160-180]	Speed: 21008.37 samples/sec	accuracy=nan
2023-03-20 10:43:06,537 Node[0] Epoch[3] Batch [180-200]	Speed: 21025.32 samples/sec	accuracy=nan
2023-03-20 10:43:09,648 Node[0] Epoch[3] Batch [200-220]	Speed: 20986.86 samples/sec	accuracy=nan
2023-03-20 10:43:12,760 Node[0] Epoch[3] Batch [220-240]	Speed: 20975.07 samples/sec	accuracy=nan
2023-03-20 10:43:15,866 Node[0] Epoch[3] Batch [240-260]	Speed: 21018.12 samples/sec	accuracy=nan
2023-03-20 10:43:18,974 Node[0] Epoch[3] Batch [260-280]	Speed: 21005.16 samples/sec	accuracy=nan
2023-03-20 10:43:22,075 Node[0] Epoch[3] Batch [280-300]	Speed: 21048.76 samples/sec	accuracy=nan
2023-03-20 10:43:25,177 Node[0] Epoch[3] Batch [300-320]	Speed: 21043.84 samples/sec	accuracy=nan
2023-03-20 10:43:28,280 Node[0] Epoch[3] Batch [320-340]	Speed: 21036.91 samples/sec	accuracy=nan
2023-03-20 10:43:31,382 Node[0] Epoch[3] Batch [340-360]	Speed: 21046.46 samples/sec	accuracy=nan
2023-03-20 10:43:34,485 Node[0] Epoch[3] Batch [360-380]	Speed: 21038.38 samples/sec	accuracy=nan
2023-03-20 10:43:36,344 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:43:36,345 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:43:36,345 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:43:36,345 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:43:36,345 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:43:36,345 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:43:36,345 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679327016345, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-20 10:43:36,346 Node[0] Epoch[3] Time cost=60.895
:::MLLOG {"namespace": "", "time_ms": 1679327016346, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21039.06622339273}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679327016347, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-20 10:43:36,347 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:43:39,606 Node[0] Epoch[4] Batch [0-20]	Speed: 21023.91 samples/sec	accuracy=nan
2023-03-20 10:43:42,711 Node[0] Epoch[4] Batch [20-40]	Speed: 21026.09 samples/sec	accuracy=nan
2023-03-20 10:43:45,814 Node[0] Epoch[4] Batch [40-60]	Speed: 21032.91 samples/sec	accuracy=nan
2023-03-20 10:43:48,920 Node[0] Epoch[4] Batch [60-80]	Speed: 21017.75 samples/sec	accuracy=nan
2023-03-20 10:43:52,023 Node[0] Epoch[4] Batch [80-100]	Speed: 21041.53 samples/sec	accuracy=nan
2023-03-20 10:43:55,125 Node[0] Epoch[4] Batch [100-120]	Speed: 21040.32 samples/sec	accuracy=nan
2023-03-20 10:43:58,232 Node[0] Epoch[4] Batch [120-140]	Speed: 21014.74 samples/sec	accuracy=nan
2023-03-20 10:44:01,330 Node[0] Epoch[4] Batch [140-160]	Speed: 21070.74 samples/sec	accuracy=nan
2023-03-20 10:44:04,431 Node[0] Epoch[4] Batch [160-180]	Speed: 21047.51 samples/sec	accuracy=nan
2023-03-20 10:44:07,534 Node[0] Epoch[4] Batch [180-200]	Speed: 21044.24 samples/sec	accuracy=nan
2023-03-20 10:44:10,637 Node[0] Epoch[4] Batch [200-220]	Speed: 21036.29 samples/sec	accuracy=nan
2023-03-20 10:44:13,737 Node[0] Epoch[4] Batch [220-240]	Speed: 21053.19 samples/sec	accuracy=nan
2023-03-20 10:44:16,835 Node[0] Epoch[4] Batch [240-260]	Speed: 21076.04 samples/sec	accuracy=nan
2023-03-20 10:44:19,933 Node[0] Epoch[4] Batch [260-280]	Speed: 21069.07 samples/sec	accuracy=nan
2023-03-20 10:44:23,035 Node[0] Epoch[4] Batch [280-300]	Speed: 21048.51 samples/sec	accuracy=nan
2023-03-20 10:44:26,138 Node[0] Epoch[4] Batch [300-320]	Speed: 21032.79 samples/sec	accuracy=nan
2023-03-20 10:44:29,238 Node[0] Epoch[4] Batch [320-340]	Speed: 21062.00 samples/sec	accuracy=nan
2023-03-20 10:44:32,336 Node[0] Epoch[4] Batch [340-360]	Speed: 21068.08 samples/sec	accuracy=nan
2023-03-20 10:44:35,436 Node[0] Epoch[4] Batch [360-380]	Speed: 21059.59 samples/sec	accuracy=nan
2023-03-20 10:44:37,137 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:44:37,137 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:44:37,137 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:44:37,137 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:44:37,137 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:44:37,138 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:44:37,138 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679327077138, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-20 10:44:37,139 Node[0] Epoch[4] Time cost=60.792
:::MLLOG {"namespace": "", "time_ms": 1679327077139, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21074.67242065154}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1679327077139, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-20 10:44:37,139 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:44:40,399 Node[0] Epoch[5] Batch [0-20]	Speed: 21045.22 samples/sec	accuracy=nan
2023-03-20 10:44:43,497 Node[0] Epoch[5] Batch [20-40]	Speed: 21074.35 samples/sec	accuracy=nan
2023-03-20 10:44:46,593 Node[0] Epoch[5] Batch [40-60]	Speed: 21084.56 samples/sec	accuracy=nan
2023-03-20 10:44:49,693 Node[0] Epoch[5] Batch [60-80]	Speed: 21059.23 samples/sec	accuracy=nan
2023-03-20 10:44:52,791 Node[0] Epoch[5] Batch [80-100]	Speed: 21071.14 samples/sec	accuracy=nan
2023-03-20 10:44:55,889 Node[0] Epoch[5] Batch [100-120]	Speed: 21068.60 samples/sec	accuracy=nan
2023-03-20 10:44:58,988 Node[0] Epoch[5] Batch [120-140]	Speed: 21066.99 samples/sec	accuracy=nan
2023-03-20 10:45:02,090 Node[0] Epoch[5] Batch [140-160]	Speed: 21043.98 samples/sec	accuracy=nan
2023-03-20 10:45:05,187 Node[0] Epoch[5] Batch [160-180]	Speed: 21074.42 samples/sec	accuracy=nan
2023-03-20 10:45:08,286 Node[0] Epoch[5] Batch [180-200]	Speed: 21070.37 samples/sec	accuracy=nan
2023-03-20 10:45:11,385 Node[0] Epoch[5] Batch [200-220]	Speed: 21062.35 samples/sec	accuracy=nan
2023-03-20 10:45:14,483 Node[0] Epoch[5] Batch [220-240]	Speed: 21069.57 samples/sec	accuracy=nan
2023-03-20 10:45:17,583 Node[0] Epoch[5] Batch [240-260]	Speed: 21059.41 samples/sec	accuracy=nan
2023-03-20 10:45:20,682 Node[0] Epoch[5] Batch [260-280]	Speed: 21065.72 samples/sec	accuracy=nan
2023-03-20 10:45:23,782 Node[0] Epoch[5] Batch [280-300]	Speed: 21057.19 samples/sec	accuracy=nan
2023-03-20 10:45:26,881 Node[0] Epoch[5] Batch [300-320]	Speed: 21069.22 samples/sec	accuracy=nan
2023-03-20 10:45:29,977 Node[0] Epoch[5] Batch [320-340]	Speed: 21081.19 samples/sec	accuracy=nan
2023-03-20 10:45:33,078 Node[0] Epoch[5] Batch [340-360]	Speed: 21049.73 samples/sec	accuracy=nan
2023-03-20 10:45:36,173 Node[0] Epoch[5] Batch [360-380]	Speed: 21096.96 samples/sec	accuracy=nan
2023-03-20 10:45:38,027 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:45:38,027 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:45:38,027 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:45:38,027 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:45:38,028 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:45:38,028 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:45:38,029 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679327138028, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-20 10:45:38,030 Node[0] Epoch[5] Time cost=60.891
:::MLLOG {"namespace": "", "time_ms": 1679327138030, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21040.37670190931}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679327138031, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-20 10:45:38,031 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:45:41,285 Node[0] Epoch[6] Batch [0-20]	Speed: 21058.74 samples/sec	accuracy=nan
2023-03-20 10:45:44,381 Node[0] Epoch[6] Batch [20-40]	Speed: 21083.75 samples/sec	accuracy=nan
2023-03-20 10:45:47,478 Node[0] Epoch[6] Batch [40-60]	Speed: 21075.87 samples/sec	accuracy=nan
2023-03-20 10:45:50,576 Node[0] Epoch[6] Batch [60-80]	Speed: 21070.81 samples/sec	accuracy=nan
2023-03-20 10:45:53,674 Node[0] Epoch[6] Batch [80-100]	Speed: 21074.64 samples/sec	accuracy=nan
2023-03-20 10:45:56,773 Node[0] Epoch[6] Batch [100-120]	Speed: 21067.10 samples/sec	accuracy=nan
2023-03-20 10:45:59,873 Node[0] Epoch[6] Batch [120-140]	Speed: 21055.78 samples/sec	accuracy=nan
2023-03-20 10:46:02,970 Node[0] Epoch[6] Batch [140-160]	Speed: 21080.83 samples/sec	accuracy=nan
2023-03-20 10:46:06,068 Node[0] Epoch[6] Batch [160-180]	Speed: 21071.80 samples/sec	accuracy=nan
2023-03-20 10:46:09,165 Node[0] Epoch[6] Batch [180-200]	Speed: 21075.40 samples/sec	accuracy=nan
2023-03-20 10:46:12,266 Node[0] Epoch[6] Batch [200-220]	Speed: 21051.55 samples/sec	accuracy=nan
2023-03-20 10:46:15,368 Node[0] Epoch[6] Batch [220-240]	Speed: 21043.74 samples/sec	accuracy=nan
2023-03-20 10:46:18,478 Node[0] Epoch[6] Batch [240-260]	Speed: 20989.78 samples/sec	accuracy=nan
2023-03-20 10:46:21,583 Node[0] Epoch[6] Batch [260-280]	Speed: 21027.58 samples/sec	accuracy=nan
2023-03-20 10:46:24,687 Node[0] Epoch[6] Batch [280-300]	Speed: 21027.51 samples/sec	accuracy=nan
2023-03-20 10:46:27,789 Node[0] Epoch[6] Batch [300-320]	Speed: 21045.27 samples/sec	accuracy=nan
2023-03-20 10:46:30,889 Node[0] Epoch[6] Batch [320-340]	Speed: 21060.58 samples/sec	accuracy=nan
2023-03-20 10:46:33,990 Node[0] Epoch[6] Batch [340-360]	Speed: 21048.45 samples/sec	accuracy=nan
2023-03-20 10:46:37,089 Node[0] Epoch[6] Batch [360-380]	Speed: 21064.52 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679327198789, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-20 10:46:38,791 Node[0] Epoch[6] Time cost=60.759
:::MLLOG {"namespace": "", "time_ms": 1679327198791, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21085.908320964852}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679327198941, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-20 10:46:40,135 Node[0] Epoch[6] Validation-accuracy=0.422400
2023-03-20 10:46:40,135 Node[0] Epoch[6] Validation-correct-count=2640.000000
2023-03-20 10:46:40,135 Node[0] Epoch[6] Validation-total-count=6250.000000
2023-03-20 10:46:40,604 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:46:40,604 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:46:40,604 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:46:40,604 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:46:40,604 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:46:40,604 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:46:40,604 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679327200604, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679327200605, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.41784, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679327200605, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679327200605, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679327200605, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-20 10:46:40,605 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:46:43,724 Node[0] Epoch[7] Batch [0-20]	Speed: 21000.61 samples/sec	accuracy=nan
2023-03-20 10:46:46,822 Node[0] Epoch[7] Batch [20-40]	Speed: 21073.98 samples/sec	accuracy=nan
2023-03-20 10:46:49,918 Node[0] Epoch[7] Batch [40-60]	Speed: 21085.69 samples/sec	accuracy=nan
2023-03-20 10:46:53,012 Node[0] Epoch[7] Batch [60-80]	Speed: 21098.30 samples/sec	accuracy=nan
2023-03-20 10:46:56,108 Node[0] Epoch[7] Batch [80-100]	Speed: 21087.04 samples/sec	accuracy=nan
2023-03-20 10:46:59,203 Node[0] Epoch[7] Batch [100-120]	Speed: 21088.91 samples/sec	accuracy=nan
2023-03-20 10:47:02,298 Node[0] Epoch[7] Batch [120-140]	Speed: 21093.15 samples/sec	accuracy=nan
2023-03-20 10:47:05,391 Node[0] Epoch[7] Batch [140-160]	Speed: 21104.18 samples/sec	accuracy=nan
2023-03-20 10:47:08,501 Node[0] Epoch[7] Batch [160-180]	Speed: 20993.08 samples/sec	accuracy=nan
2023-03-20 10:47:11,599 Node[0] Epoch[7] Batch [180-200]	Speed: 21072.80 samples/sec	accuracy=nan
2023-03-20 10:47:14,697 Node[0] Epoch[7] Batch [200-220]	Speed: 21067.65 samples/sec	accuracy=nan
2023-03-20 10:47:17,791 Node[0] Epoch[7] Batch [220-240]	Speed: 21100.55 samples/sec	accuracy=nan
2023-03-20 10:47:20,886 Node[0] Epoch[7] Batch [240-260]	Speed: 21092.64 samples/sec	accuracy=nan
2023-03-20 10:47:23,980 Node[0] Epoch[7] Batch [260-280]	Speed: 21098.22 samples/sec	accuracy=nan
2023-03-20 10:47:27,074 Node[0] Epoch[7] Batch [280-300]	Speed: 21097.20 samples/sec	accuracy=nan
2023-03-20 10:47:30,166 Node[0] Epoch[7] Batch [300-320]	Speed: 21111.20 samples/sec	accuracy=nan
2023-03-20 10:47:33,263 Node[0] Epoch[7] Batch [320-340]	Speed: 21083.07 samples/sec	accuracy=nan
2023-03-20 10:47:36,359 Node[0] Epoch[7] Batch [340-360]	Speed: 21084.11 samples/sec	accuracy=nan
2023-03-20 10:47:39,458 Node[0] Epoch[7] Batch [360-380]	Speed: 21063.76 samples/sec	accuracy=nan
2023-03-20 10:47:41,314 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:47:41,315 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:47:41,315 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:47:41,315 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:47:41,315 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:47:41,315 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:47:41,315 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679327261315, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-20 10:47:41,317 Node[0] Epoch[7] Time cost=60.712
:::MLLOG {"namespace": "", "time_ms": 1679327261317, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21102.54105053311}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679327261318, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-20 10:47:41,318 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:47:44,570 Node[0] Epoch[8] Batch [0-20]	Speed: 21064.92 samples/sec	accuracy=nan
2023-03-20 10:47:47,667 Node[0] Epoch[8] Batch [20-40]	Speed: 21079.51 samples/sec	accuracy=nan
2023-03-20 10:47:50,764 Node[0] Epoch[8] Batch [40-60]	Speed: 21076.93 samples/sec	accuracy=nan
2023-03-20 10:47:53,865 Node[0] Epoch[8] Batch [60-80]	Speed: 21052.62 samples/sec	accuracy=nan
2023-03-20 10:47:56,962 Node[0] Epoch[8] Batch [80-100]	Speed: 21080.81 samples/sec	accuracy=nan
2023-03-20 10:48:00,058 Node[0] Epoch[8] Batch [100-120]	Speed: 21081.66 samples/sec	accuracy=nan
2023-03-20 10:48:03,160 Node[0] Epoch[8] Batch [120-140]	Speed: 21048.90 samples/sec	accuracy=nan
2023-03-20 10:48:06,257 Node[0] Epoch[8] Batch [140-160]	Speed: 21076.40 samples/sec	accuracy=nan
2023-03-20 10:48:09,358 Node[0] Epoch[8] Batch [160-180]	Speed: 21047.90 samples/sec	accuracy=nan
2023-03-20 10:48:12,460 Node[0] Epoch[8] Batch [180-200]	Speed: 21046.69 samples/sec	accuracy=nan
2023-03-20 10:48:15,565 Node[0] Epoch[8] Batch [200-220]	Speed: 21023.14 samples/sec	accuracy=nan
2023-03-20 10:48:18,669 Node[0] Epoch[8] Batch [220-240]	Speed: 21030.93 samples/sec	accuracy=nan
2023-03-20 10:48:21,774 Node[0] Epoch[8] Batch [240-260]	Speed: 21026.48 samples/sec	accuracy=nan
2023-03-20 10:48:24,879 Node[0] Epoch[8] Batch [260-280]	Speed: 21022.95 samples/sec	accuracy=nan
2023-03-20 10:48:27,983 Node[0] Epoch[8] Batch [280-300]	Speed: 21031.39 samples/sec	accuracy=nan
2023-03-20 10:48:31,089 Node[0] Epoch[8] Batch [300-320]	Speed: 21019.04 samples/sec	accuracy=nan
2023-03-20 10:48:34,191 Node[0] Epoch[8] Batch [320-340]	Speed: 21041.90 samples/sec	accuracy=nan
2023-03-20 10:48:37,301 Node[0] Epoch[8] Batch [340-360]	Speed: 20994.71 samples/sec	accuracy=nan
2023-03-20 10:48:40,414 Node[0] Epoch[8] Batch [360-380]	Speed: 20969.48 samples/sec	accuracy=nan
2023-03-20 10:48:42,122 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:48:42,123 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:48:42,123 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:48:42,123 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:48:42,123 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:48:42,123 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:48:42,123 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679327322123, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-20 10:48:42,124 Node[0] Epoch[8] Time cost=60.807
:::MLLOG {"namespace": "", "time_ms": 1679327322124, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21069.515174901942}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679327322125, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-20 10:48:42,125 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:48:45,383 Node[0] Epoch[9] Batch [0-20]	Speed: 21048.58 samples/sec	accuracy=nan
2023-03-20 10:48:48,488 Node[0] Epoch[9] Batch [20-40]	Speed: 21022.82 samples/sec	accuracy=nan
2023-03-20 10:48:51,588 Node[0] Epoch[9] Batch [40-60]	Speed: 21058.49 samples/sec	accuracy=nan
2023-03-20 10:48:54,688 Node[0] Epoch[9] Batch [60-80]	Speed: 21056.84 samples/sec	accuracy=nan
2023-03-20 10:48:57,786 Node[0] Epoch[9] Batch [80-100]	Speed: 21072.80 samples/sec	accuracy=nan
2023-03-20 10:49:00,886 Node[0] Epoch[9] Batch [100-120]	Speed: 21061.95 samples/sec	accuracy=nan
2023-03-20 10:49:03,991 Node[0] Epoch[9] Batch [120-140]	Speed: 21020.52 samples/sec	accuracy=nan
2023-03-20 10:49:07,089 Node[0] Epoch[9] Batch [140-160]	Speed: 21072.80 samples/sec	accuracy=nan
2023-03-20 10:49:10,201 Node[0] Epoch[9] Batch [160-180]	Speed: 20978.12 samples/sec	accuracy=nan
2023-03-20 10:49:13,309 Node[0] Epoch[9] Batch [180-200]	Speed: 21004.57 samples/sec	accuracy=nan
2023-03-20 10:49:16,415 Node[0] Epoch[9] Batch [200-220]	Speed: 21017.72 samples/sec	accuracy=nan
2023-03-20 10:49:19,525 Node[0] Epoch[9] Batch [220-240]	Speed: 20989.49 samples/sec	accuracy=nan
2023-03-20 10:49:22,631 Node[0] Epoch[9] Batch [240-260]	Speed: 21016.78 samples/sec	accuracy=nan
2023-03-20 10:49:25,740 Node[0] Epoch[9] Batch [260-280]	Speed: 20994.19 samples/sec	accuracy=nan
2023-03-20 10:49:28,843 Node[0] Epoch[9] Batch [280-300]	Speed: 21037.04 samples/sec	accuracy=nan
2023-03-20 10:49:31,949 Node[0] Epoch[9] Batch [300-320]	Speed: 21017.97 samples/sec	accuracy=nan
2023-03-20 10:49:35,055 Node[0] Epoch[9] Batch [320-340]	Speed: 21023.27 samples/sec	accuracy=nan
2023-03-20 10:49:38,158 Node[0] Epoch[9] Batch [340-360]	Speed: 21031.61 samples/sec	accuracy=nan
2023-03-20 10:49:41,263 Node[0] Epoch[9] Batch [360-380]	Speed: 21030.04 samples/sec	accuracy=nan
2023-03-20 10:49:43,123 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:49:43,123 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:49:43,123 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:49:43,123 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:49:43,123 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:49:43,123 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:49:43,123 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679327383123, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-20 10:49:43,125 Node[0] Epoch[9] Time cost=61.000
:::MLLOG {"namespace": "", "time_ms": 1679327383125, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21002.83801843322}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1679327383125, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-20 10:49:43,125 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:49:46,387 Node[0] Epoch[10] Batch [0-20]	Speed: 21001.66 samples/sec	accuracy=nan
2023-03-20 10:49:49,490 Node[0] Epoch[10] Batch [20-40]	Speed: 21041.03 samples/sec	accuracy=nan
2023-03-20 10:49:52,595 Node[0] Epoch[10] Batch [40-60]	Speed: 21026.95 samples/sec	accuracy=nan
2023-03-20 10:49:55,692 Node[0] Epoch[10] Batch [60-80]	Speed: 21077.89 samples/sec	accuracy=nan
2023-03-20 10:49:58,791 Node[0] Epoch[10] Batch [80-100]	Speed: 21062.53 samples/sec	accuracy=nan
2023-03-20 10:50:01,890 Node[0] Epoch[10] Batch [100-120]	Speed: 21063.07 samples/sec	accuracy=nan
2023-03-20 10:50:04,985 Node[0] Epoch[10] Batch [120-140]	Speed: 21095.31 samples/sec	accuracy=nan
2023-03-20 10:50:08,085 Node[0] Epoch[10] Batch [140-160]	Speed: 21058.73 samples/sec	accuracy=nan
2023-03-20 10:50:11,190 Node[0] Epoch[10] Batch [160-180]	Speed: 21024.42 samples/sec	accuracy=nan
2023-03-20 10:50:14,288 Node[0] Epoch[10] Batch [180-200]	Speed: 21069.31 samples/sec	accuracy=nan
2023-03-20 10:50:17,386 Node[0] Epoch[10] Batch [200-220]	Speed: 21074.19 samples/sec	accuracy=nan
2023-03-20 10:50:20,482 Node[0] Epoch[10] Batch [220-240]	Speed: 21079.90 samples/sec	accuracy=nan
2023-03-20 10:50:23,582 Node[0] Epoch[10] Batch [240-260]	Speed: 21061.28 samples/sec	accuracy=nan
2023-03-20 10:50:26,683 Node[0] Epoch[10] Batch [260-280]	Speed: 21052.90 samples/sec	accuracy=nan
2023-03-20 10:50:29,781 Node[0] Epoch[10] Batch [280-300]	Speed: 21067.12 samples/sec	accuracy=nan
2023-03-20 10:50:32,887 Node[0] Epoch[10] Batch [300-320]	Speed: 21020.75 samples/sec	accuracy=nan
2023-03-20 10:50:35,988 Node[0] Epoch[10] Batch [320-340]	Speed: 21047.01 samples/sec	accuracy=nan
2023-03-20 10:50:39,097 Node[0] Epoch[10] Batch [340-360]	Speed: 20997.99 samples/sec	accuracy=nan
2023-03-20 10:50:42,200 Node[0] Epoch[10] Batch [360-380]	Speed: 21039.11 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679327443906, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-20 10:50:43,907 Node[0] Epoch[10] Time cost=60.781
:::MLLOG {"namespace": "", "time_ms": 1679327443907, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21078.256098657905}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679327444056, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-20 10:50:45,328 Node[0] Epoch[10] Validation-accuracy=0.457600
2023-03-20 10:50:45,328 Node[0] Epoch[10] Validation-correct-count=2860.000000
2023-03-20 10:50:45,328 Node[0] Epoch[10] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679327445701, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679327445702, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.45676, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
2023-03-20 10:50:45,702 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:50:45,702 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679327445702, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-20 10:50:45,702 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679327445702, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-20 10:50:45,702 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:50:45,702 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:50:45,702 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:50:45,702 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679327445702, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-20 10:50:45,702 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:50:48,829 Node[0] Epoch[11] Batch [0-20]	Speed: 20941.23 samples/sec	accuracy=nan
2023-03-20 10:50:51,934 Node[0] Epoch[11] Batch [20-40]	Speed: 21024.92 samples/sec	accuracy=nan
2023-03-20 10:50:55,035 Node[0] Epoch[11] Batch [40-60]	Speed: 21050.74 samples/sec	accuracy=nan
2023-03-20 10:50:58,139 Node[0] Epoch[11] Batch [60-80]	Speed: 21030.69 samples/sec	accuracy=nan
2023-03-20 10:51:01,249 Node[0] Epoch[11] Batch [80-100]	Speed: 20994.08 samples/sec	accuracy=nan
2023-03-20 10:51:04,357 Node[0] Epoch[11] Batch [100-120]	Speed: 21004.22 samples/sec	accuracy=nan
2023-03-20 10:51:07,464 Node[0] Epoch[11] Batch [120-140]	Speed: 21006.14 samples/sec	accuracy=nan
2023-03-20 10:51:10,568 Node[0] Epoch[11] Batch [140-160]	Speed: 21030.71 samples/sec	accuracy=nan
2023-03-20 10:51:13,667 Node[0] Epoch[11] Batch [160-180]	Speed: 21065.75 samples/sec	accuracy=nan
2023-03-20 10:51:16,767 Node[0] Epoch[11] Batch [180-200]	Speed: 21063.12 samples/sec	accuracy=nan
2023-03-20 10:51:19,863 Node[0] Epoch[11] Batch [200-220]	Speed: 21078.80 samples/sec	accuracy=nan
2023-03-20 10:51:22,967 Node[0] Epoch[11] Batch [220-240]	Speed: 21034.37 samples/sec	accuracy=nan
2023-03-20 10:51:26,067 Node[0] Epoch[11] Batch [240-260]	Speed: 21059.08 samples/sec	accuracy=nan
2023-03-20 10:51:29,164 Node[0] Epoch[11] Batch [260-280]	Speed: 21074.78 samples/sec	accuracy=nan
2023-03-20 10:51:32,264 Node[0] Epoch[11] Batch [280-300]	Speed: 21063.47 samples/sec	accuracy=nan
2023-03-20 10:51:35,364 Node[0] Epoch[11] Batch [300-320]	Speed: 21053.65 samples/sec	accuracy=nan
2023-03-20 10:51:38,470 Node[0] Epoch[11] Batch [320-340]	Speed: 21017.94 samples/sec	accuracy=nan
2023-03-20 10:51:41,585 Node[0] Epoch[11] Batch [340-360]	Speed: 20956.73 samples/sec	accuracy=nan
2023-03-20 10:51:44,685 Node[0] Epoch[11] Batch [360-380]	Speed: 21061.06 samples/sec	accuracy=nan
2023-03-20 10:51:46,541 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:51:46,542 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:51:46,542 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:51:46,542 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:51:46,542 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:51:46,542 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:51:46,542 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679327506542, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-20 10:51:46,543 Node[0] Epoch[11] Time cost=60.841
:::MLLOG {"namespace": "", "time_ms": 1679327506543, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21057.639532274174}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679327506543, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-20 10:51:46,544 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:51:49,800 Node[0] Epoch[12] Batch [0-20]	Speed: 21051.59 samples/sec	accuracy=nan
2023-03-20 10:51:52,902 Node[0] Epoch[12] Batch [20-40]	Speed: 21041.87 samples/sec	accuracy=nan
2023-03-20 10:51:56,004 Node[0] Epoch[12] Batch [40-60]	Speed: 21043.43 samples/sec	accuracy=nan
2023-03-20 10:51:59,105 Node[0] Epoch[12] Batch [60-80]	Speed: 21052.12 samples/sec	accuracy=nan
2023-03-20 10:52:02,208 Node[0] Epoch[12] Batch [80-100]	Speed: 21041.17 samples/sec	accuracy=nan
2023-03-20 10:52:05,311 Node[0] Epoch[12] Batch [100-120]	Speed: 21038.76 samples/sec	accuracy=nan
2023-03-20 10:52:08,413 Node[0] Epoch[12] Batch [120-140]	Speed: 21044.75 samples/sec	accuracy=nan
2023-03-20 10:52:11,516 Node[0] Epoch[12] Batch [140-160]	Speed: 21032.17 samples/sec	accuracy=nan
2023-03-20 10:52:14,627 Node[0] Epoch[12] Batch [160-180]	Speed: 20985.52 samples/sec	accuracy=nan
2023-03-20 10:52:17,734 Node[0] Epoch[12] Batch [180-200]	Speed: 21009.19 samples/sec	accuracy=nan
2023-03-20 10:52:20,843 Node[0] Epoch[12] Batch [200-220]	Speed: 21002.67 samples/sec	accuracy=nan
2023-03-20 10:52:23,954 Node[0] Epoch[12] Batch [220-240]	Speed: 20979.04 samples/sec	accuracy=nan
2023-03-20 10:52:27,075 Node[0] Epoch[12] Batch [240-260]	Speed: 20917.15 samples/sec	accuracy=nan
2023-03-20 10:52:30,180 Node[0] Epoch[12] Batch [260-280]	Speed: 21028.49 samples/sec	accuracy=nan
2023-03-20 10:52:33,280 Node[0] Epoch[12] Batch [280-300]	Speed: 21054.74 samples/sec	accuracy=nan
2023-03-20 10:52:36,378 Node[0] Epoch[12] Batch [300-320]	Speed: 21073.59 samples/sec	accuracy=nan
2023-03-20 10:52:39,481 Node[0] Epoch[12] Batch [320-340]	Speed: 21035.91 samples/sec	accuracy=nan
2023-03-20 10:52:42,588 Node[0] Epoch[12] Batch [340-360]	Speed: 21008.34 samples/sec	accuracy=nan
2023-03-20 10:52:45,695 Node[0] Epoch[12] Batch [360-380]	Speed: 21011.21 samples/sec	accuracy=nan
2023-03-20 10:52:47,401 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:52:47,402 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:52:47,402 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:52:47,402 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:52:47,402 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:52:47,402 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679327567402, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-20 10:52:47,403 Node[0] Epoch[12] Time cost=60.859
:::MLLOG {"namespace": "", "time_ms": 1679327567403, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21051.23908002234}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-20 10:52:47,403 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679327567403, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-20 10:52:47,404 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:52:50,664 Node[0] Epoch[13] Batch [0-20]	Speed: 21045.82 samples/sec	accuracy=nan
2023-03-20 10:52:53,768 Node[0] Epoch[13] Batch [20-40]	Speed: 21029.65 samples/sec	accuracy=nan
2023-03-20 10:52:56,871 Node[0] Epoch[13] Batch [40-60]	Speed: 21040.45 samples/sec	accuracy=nan
2023-03-20 10:52:59,980 Node[0] Epoch[13] Batch [60-80]	Speed: 20997.56 samples/sec	accuracy=nan
2023-03-20 10:53:03,084 Node[0] Epoch[13] Batch [80-100]	Speed: 21030.82 samples/sec	accuracy=nan
2023-03-20 10:53:06,189 Node[0] Epoch[13] Batch [100-120]	Speed: 21022.65 samples/sec	accuracy=nan
2023-03-20 10:53:09,296 Node[0] Epoch[13] Batch [120-140]	Speed: 21007.76 samples/sec	accuracy=nan
2023-03-20 10:53:12,401 Node[0] Epoch[13] Batch [140-160]	Speed: 21022.53 samples/sec	accuracy=nan
2023-03-20 10:53:15,507 Node[0] Epoch[13] Batch [160-180]	Speed: 21020.18 samples/sec	accuracy=nan
2023-03-20 10:53:18,609 Node[0] Epoch[13] Batch [180-200]	Speed: 21043.72 samples/sec	accuracy=nan
2023-03-20 10:53:21,712 Node[0] Epoch[13] Batch [200-220]	Speed: 21038.21 samples/sec	accuracy=nan
2023-03-20 10:53:24,815 Node[0] Epoch[13] Batch [220-240]	Speed: 21040.92 samples/sec	accuracy=nan
2023-03-20 10:53:27,918 Node[0] Epoch[13] Batch [240-260]	Speed: 21035.55 samples/sec	accuracy=nan
2023-03-20 10:53:31,017 Node[0] Epoch[13] Batch [260-280]	Speed: 21064.19 samples/sec	accuracy=nan
2023-03-20 10:53:34,120 Node[0] Epoch[13] Batch [280-300]	Speed: 21040.89 samples/sec	accuracy=nan
2023-03-20 10:53:37,222 Node[0] Epoch[13] Batch [300-320]	Speed: 21044.21 samples/sec	accuracy=nan
2023-03-20 10:53:40,326 Node[0] Epoch[13] Batch [320-340]	Speed: 21026.13 samples/sec	accuracy=nan
2023-03-20 10:53:43,425 Node[0] Epoch[13] Batch [340-360]	Speed: 21065.51 samples/sec	accuracy=nan
2023-03-20 10:53:46,527 Node[0] Epoch[13] Batch [360-380]	Speed: 21045.84 samples/sec	accuracy=nan
2023-03-20 10:53:48,384 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:53:48,385 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:53:48,385 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:53:48,385 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:53:48,385 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:53:48,385 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:53:48,385 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679327628385, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-20 10:53:48,386 Node[0] Epoch[13] Time cost=60.983
:::MLLOG {"namespace": "", "time_ms": 1679327628387, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21008.622606236688}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679327628387, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-20 10:53:48,387 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:53:51,644 Node[0] Epoch[14] Batch [0-20]	Speed: 21032.86 samples/sec	accuracy=nan
2023-03-20 10:53:54,744 Node[0] Epoch[14] Batch [20-40]	Speed: 21056.93 samples/sec	accuracy=nan
2023-03-20 10:53:57,847 Node[0] Epoch[14] Batch [40-60]	Speed: 21042.64 samples/sec	accuracy=nan
2023-03-20 10:54:00,949 Node[0] Epoch[14] Batch [60-80]	Speed: 21042.86 samples/sec	accuracy=nan
2023-03-20 10:54:04,051 Node[0] Epoch[14] Batch [80-100]	Speed: 21043.80 samples/sec	accuracy=nan
2023-03-20 10:54:07,150 Node[0] Epoch[14] Batch [100-120]	Speed: 21063.50 samples/sec	accuracy=nan
2023-03-20 10:54:10,255 Node[0] Epoch[14] Batch [120-140]	Speed: 21027.00 samples/sec	accuracy=nan
2023-03-20 10:54:13,355 Node[0] Epoch[14] Batch [140-160]	Speed: 21055.26 samples/sec	accuracy=nan
2023-03-20 10:54:16,458 Node[0] Epoch[14] Batch [160-180]	Speed: 21039.71 samples/sec	accuracy=nan
2023-03-20 10:54:19,560 Node[0] Epoch[14] Batch [180-200]	Speed: 21045.58 samples/sec	accuracy=nan
2023-03-20 10:54:22,662 Node[0] Epoch[14] Batch [200-220]	Speed: 21043.96 samples/sec	accuracy=nan
2023-03-20 10:54:25,763 Node[0] Epoch[14] Batch [220-240]	Speed: 21048.30 samples/sec	accuracy=nan
2023-03-20 10:54:28,865 Node[0] Epoch[14] Batch [240-260]	Speed: 21046.56 samples/sec	accuracy=nan
2023-03-20 10:54:31,965 Node[0] Epoch[14] Batch [260-280]	Speed: 21060.55 samples/sec	accuracy=nan
2023-03-20 10:54:35,064 Node[0] Epoch[14] Batch [280-300]	Speed: 21062.53 samples/sec	accuracy=nan
2023-03-20 10:54:38,165 Node[0] Epoch[14] Batch [300-320]	Speed: 21052.26 samples/sec	accuracy=nan
2023-03-20 10:54:41,264 Node[0] Epoch[14] Batch [320-340]	Speed: 21064.77 samples/sec	accuracy=nan
2023-03-20 10:54:44,366 Node[0] Epoch[14] Batch [340-360]	Speed: 21041.41 samples/sec	accuracy=nan
2023-03-20 10:54:47,469 Node[0] Epoch[14] Batch [360-380]	Speed: 21042.36 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679327689174, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-20 10:54:49,175 Node[0] Epoch[14] Time cost=60.788
:::MLLOG {"namespace": "", "time_ms": 1679327689175, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21075.886573234042}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679327689325, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-20 10:54:50,572 Node[0] Epoch[14] Validation-accuracy=0.564160
2023-03-20 10:54:50,572 Node[0] Epoch[14] Validation-correct-count=3526.000000
2023-03-20 10:54:50,572 Node[0] Epoch[14] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679327690971, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679327690971, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.56244, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679327690971, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679327690971, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-20 10:54:50,971 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:54:50,971 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:54:50,971 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679327690971, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-20 10:54:50,971 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:54:50,971 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:54:50,971 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:54:50,971 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:54:50,971 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:54:54,105 Node[0] Epoch[15] Batch [0-20]	Speed: 20896.52 samples/sec	accuracy=nan
2023-03-20 10:54:57,205 Node[0] Epoch[15] Batch [20-40]	Speed: 21057.28 samples/sec	accuracy=nan
2023-03-20 10:55:00,303 Node[0] Epoch[15] Batch [40-60]	Speed: 21071.11 samples/sec	accuracy=nan
2023-03-20 10:55:03,406 Node[0] Epoch[15] Batch [60-80]	Speed: 21035.16 samples/sec	accuracy=nan
2023-03-20 10:55:06,504 Node[0] Epoch[15] Batch [80-100]	Speed: 21072.22 samples/sec	accuracy=nan
2023-03-20 10:55:09,614 Node[0] Epoch[15] Batch [100-120]	Speed: 20991.33 samples/sec	accuracy=nan
2023-03-20 10:55:12,713 Node[0] Epoch[15] Batch [120-140]	Speed: 21061.54 samples/sec	accuracy=nan
2023-03-20 10:55:15,812 Node[0] Epoch[15] Batch [140-160]	Speed: 21070.00 samples/sec	accuracy=nan
2023-03-20 10:55:18,914 Node[0] Epoch[15] Batch [160-180]	Speed: 21039.55 samples/sec	accuracy=nan
2023-03-20 10:55:22,015 Node[0] Epoch[15] Batch [180-200]	Speed: 21056.23 samples/sec	accuracy=nan
2023-03-20 10:55:25,117 Node[0] Epoch[15] Batch [200-220]	Speed: 21043.99 samples/sec	accuracy=nan
2023-03-20 10:55:28,216 Node[0] Epoch[15] Batch [220-240]	Speed: 21064.43 samples/sec	accuracy=nan
2023-03-20 10:55:31,312 Node[0] Epoch[15] Batch [240-260]	Speed: 21086.55 samples/sec	accuracy=nan
2023-03-20 10:55:34,413 Node[0] Epoch[15] Batch [260-280]	Speed: 21049.94 samples/sec	accuracy=nan
2023-03-20 10:55:37,521 Node[0] Epoch[15] Batch [280-300]	Speed: 21001.71 samples/sec	accuracy=nan
2023-03-20 10:55:40,629 Node[0] Epoch[15] Batch [300-320]	Speed: 21006.74 samples/sec	accuracy=nan
2023-03-20 10:55:43,741 Node[0] Epoch[15] Batch [320-340]	Speed: 20978.32 samples/sec	accuracy=nan
2023-03-20 10:55:46,849 Node[0] Epoch[15] Batch [340-360]	Speed: 20998.86 samples/sec	accuracy=nan
2023-03-20 10:55:49,956 Node[0] Epoch[15] Batch [360-380]	Speed: 21010.47 samples/sec	accuracy=nan
2023-03-20 10:55:51,814 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:55:51,815 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:55:51,815 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:55:51,815 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:55:51,815 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:55:51,815 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:55:51,816 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679327751815, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-20 10:55:51,817 Node[0] Epoch[15] Time cost=60.845
:::MLLOG {"namespace": "", "time_ms": 1679327751817, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21056.09241552112}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679327751817, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-20 10:55:51,817 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:55:55,072 Node[0] Epoch[16] Batch [0-20]	Speed: 21055.02 samples/sec	accuracy=nan
2023-03-20 10:55:58,172 Node[0] Epoch[16] Batch [20-40]	Speed: 21062.34 samples/sec	accuracy=nan
2023-03-20 10:56:01,269 Node[0] Epoch[16] Batch [40-60]	Speed: 21074.77 samples/sec	accuracy=nan
2023-03-20 10:56:04,368 Node[0] Epoch[16] Batch [60-80]	Speed: 21065.98 samples/sec	accuracy=nan
2023-03-20 10:56:07,466 Node[0] Epoch[16] Batch [80-100]	Speed: 21072.85 samples/sec	accuracy=nan
2023-03-20 10:56:10,566 Node[0] Epoch[16] Batch [100-120]	Speed: 21057.60 samples/sec	accuracy=nan
2023-03-20 10:56:13,661 Node[0] Epoch[16] Batch [120-140]	Speed: 21089.40 samples/sec	accuracy=nan
2023-03-20 10:56:16,762 Node[0] Epoch[16] Batch [140-160]	Speed: 21051.42 samples/sec	accuracy=nan
2023-03-20 10:56:19,863 Node[0] Epoch[16] Batch [160-180]	Speed: 21053.31 samples/sec	accuracy=nan
2023-03-20 10:56:22,965 Node[0] Epoch[16] Batch [180-200]	Speed: 21043.16 samples/sec	accuracy=nan
2023-03-20 10:56:26,068 Node[0] Epoch[16] Batch [200-220]	Speed: 21038.14 samples/sec	accuracy=nan
2023-03-20 10:56:29,165 Node[0] Epoch[16] Batch [220-240]	Speed: 21078.99 samples/sec	accuracy=nan
2023-03-20 10:56:32,264 Node[0] Epoch[16] Batch [240-260]	Speed: 21062.79 samples/sec	accuracy=nan
2023-03-20 10:56:35,367 Node[0] Epoch[16] Batch [260-280]	Speed: 21037.72 samples/sec	accuracy=nan
2023-03-20 10:56:38,472 Node[0] Epoch[16] Batch [280-300]	Speed: 21026.23 samples/sec	accuracy=nan
2023-03-20 10:56:41,578 Node[0] Epoch[16] Batch [300-320]	Speed: 21019.88 samples/sec	accuracy=nan
2023-03-20 10:56:44,679 Node[0] Epoch[16] Batch [320-340]	Speed: 21047.94 samples/sec	accuracy=nan
2023-03-20 10:56:47,777 Node[0] Epoch[16] Batch [340-360]	Speed: 21070.94 samples/sec	accuracy=nan
2023-03-20 10:56:50,876 Node[0] Epoch[16] Batch [360-380]	Speed: 21063.56 samples/sec	accuracy=nan
2023-03-20 10:56:52,578 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:56:52,579 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:56:52,579 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:56:52,579 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:56:52,579 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:56:52,579 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:56:52,579 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679327812579, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-20 10:56:52,581 Node[0] Epoch[16] Time cost=60.763
:::MLLOG {"namespace": "", "time_ms": 1679327812581, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21084.547904073224}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1679327812581, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-20 10:56:52,581 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:56:55,837 Node[0] Epoch[17] Batch [0-20]	Speed: 21060.62 samples/sec	accuracy=nan
2023-03-20 10:56:58,936 Node[0] Epoch[17] Batch [20-40]	Speed: 21068.05 samples/sec	accuracy=nan
2023-03-20 10:57:02,039 Node[0] Epoch[17] Batch [40-60]	Speed: 21039.94 samples/sec	accuracy=nan
2023-03-20 10:57:05,144 Node[0] Epoch[17] Batch [60-80]	Speed: 21021.44 samples/sec	accuracy=nan
2023-03-20 10:57:08,252 Node[0] Epoch[17] Batch [80-100]	Speed: 21003.89 samples/sec	accuracy=nan
2023-03-20 10:57:11,359 Node[0] Epoch[17] Batch [100-120]	Speed: 21012.86 samples/sec	accuracy=nan
2023-03-20 10:57:14,465 Node[0] Epoch[17] Batch [120-140]	Speed: 21014.74 samples/sec	accuracy=nan
2023-03-20 10:57:17,569 Node[0] Epoch[17] Batch [140-160]	Speed: 21028.74 samples/sec	accuracy=nan
2023-03-20 10:57:20,676 Node[0] Epoch[17] Batch [160-180]	Speed: 21012.70 samples/sec	accuracy=nan
2023-03-20 10:57:23,780 Node[0] Epoch[17] Batch [180-200]	Speed: 21032.83 samples/sec	accuracy=nan
2023-03-20 10:57:26,885 Node[0] Epoch[17] Batch [200-220]	Speed: 21020.69 samples/sec	accuracy=nan
2023-03-20 10:57:29,990 Node[0] Epoch[17] Batch [220-240]	Speed: 21026.01 samples/sec	accuracy=nan
2023-03-20 10:57:33,096 Node[0] Epoch[17] Batch [240-260]	Speed: 21017.78 samples/sec	accuracy=nan
2023-03-20 10:57:36,202 Node[0] Epoch[17] Batch [260-280]	Speed: 21016.00 samples/sec	accuracy=nan
2023-03-20 10:57:39,309 Node[0] Epoch[17] Batch [280-300]	Speed: 21012.57 samples/sec	accuracy=nan
2023-03-20 10:57:42,416 Node[0] Epoch[17] Batch [300-320]	Speed: 21013.74 samples/sec	accuracy=nan
2023-03-20 10:57:45,521 Node[0] Epoch[17] Batch [320-340]	Speed: 21020.56 samples/sec	accuracy=nan
2023-03-20 10:57:48,627 Node[0] Epoch[17] Batch [340-360]	Speed: 21015.97 samples/sec	accuracy=nan
2023-03-20 10:57:51,736 Node[0] Epoch[17] Batch [360-380]	Speed: 20996.87 samples/sec	accuracy=nan
2023-03-20 10:57:53,595 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:57:53,595 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:57:53,596 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:57:53,595 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:57:53,596 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:57:53,596 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:57:53,596 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679327873596, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-20 10:57:53,597 Node[0] Epoch[17] Time cost=61.016
:::MLLOG {"namespace": "", "time_ms": 1679327873597, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20997.223249611172}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679327873597, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-20 10:57:53,598 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:57:56,858 Node[0] Epoch[18] Batch [0-20]	Speed: 21024.39 samples/sec	accuracy=nan
2023-03-20 10:57:59,955 Node[0] Epoch[18] Batch [20-40]	Speed: 21077.92 samples/sec	accuracy=nan
2023-03-20 10:58:03,056 Node[0] Epoch[18] Batch [40-60]	Speed: 21050.72 samples/sec	accuracy=nan
2023-03-20 10:58:06,155 Node[0] Epoch[18] Batch [60-80]	Speed: 21070.60 samples/sec	accuracy=nan
2023-03-20 10:58:09,255 Node[0] Epoch[18] Batch [80-100]	Speed: 21052.16 samples/sec	accuracy=nan
2023-03-20 10:58:12,354 Node[0] Epoch[18] Batch [100-120]	Speed: 21067.82 samples/sec	accuracy=nan
2023-03-20 10:58:15,457 Node[0] Epoch[18] Batch [120-140]	Speed: 21039.14 samples/sec	accuracy=nan
2023-03-20 10:58:18,562 Node[0] Epoch[18] Batch [140-160]	Speed: 21020.81 samples/sec	accuracy=nan
2023-03-20 10:58:21,665 Node[0] Epoch[18] Batch [160-180]	Speed: 21037.30 samples/sec	accuracy=nan
2023-03-20 10:58:24,770 Node[0] Epoch[18] Batch [180-200]	Speed: 21028.03 samples/sec	accuracy=nan
2023-03-20 10:58:27,874 Node[0] Epoch[18] Batch [200-220]	Speed: 21027.18 samples/sec	accuracy=nan
2023-03-20 10:58:30,977 Node[0] Epoch[18] Batch [220-240]	Speed: 21041.27 samples/sec	accuracy=nan
2023-03-20 10:58:34,084 Node[0] Epoch[18] Batch [240-260]	Speed: 21011.55 samples/sec	accuracy=nan
2023-03-20 10:58:37,192 Node[0] Epoch[18] Batch [260-280]	Speed: 21001.43 samples/sec	accuracy=nan
2023-03-20 10:58:40,298 Node[0] Epoch[18] Batch [280-300]	Speed: 21016.02 samples/sec	accuracy=nan
2023-03-20 10:58:43,405 Node[0] Epoch[18] Batch [300-320]	Speed: 21008.48 samples/sec	accuracy=nan
2023-03-20 10:58:46,513 Node[0] Epoch[18] Batch [320-340]	Speed: 21007.78 samples/sec	accuracy=nan
2023-03-20 10:58:49,618 Node[0] Epoch[18] Batch [340-360]	Speed: 21020.33 samples/sec	accuracy=nan
2023-03-20 10:58:52,723 Node[0] Epoch[18] Batch [360-380]	Speed: 21027.26 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679327934427, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-20 10:58:54,429 Node[0] Epoch[18] Time cost=60.831
:::MLLOG {"namespace": "", "time_ms": 1679327934429, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21061.07667766301}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679327934578, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-20 10:58:55,930 Node[0] Epoch[18] Validation-accuracy=0.615680
2023-03-20 10:58:55,930 Node[0] Epoch[18] Validation-correct-count=3848.000000
2023-03-20 10:58:55,930 Node[0] Epoch[18] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679327936086, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679327936086, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.6168, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679327936086, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679327936086, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-20 10:58:56,086 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:58:56,086 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:58:56,086 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679327936086, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-20 10:58:56,086 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:58:56,087 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:58:56,086 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:58:56,086 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:58:56,086 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:58:59,217 Node[0] Epoch[19] Batch [0-20]	Speed: 20907.10 samples/sec	accuracy=nan
2023-03-20 10:59:02,323 Node[0] Epoch[19] Batch [20-40]	Speed: 21022.33 samples/sec	accuracy=nan
2023-03-20 10:59:05,428 Node[0] Epoch[19] Batch [40-60]	Speed: 21023.32 samples/sec	accuracy=nan
2023-03-20 10:59:08,528 Node[0] Epoch[19] Batch [60-80]	Speed: 21056.92 samples/sec	accuracy=nan
2023-03-20 10:59:11,634 Node[0] Epoch[19] Batch [80-100]	Speed: 21014.15 samples/sec	accuracy=nan
2023-03-20 10:59:14,732 Node[0] Epoch[19] Batch [100-120]	Speed: 21074.01 samples/sec	accuracy=nan
2023-03-20 10:59:17,831 Node[0] Epoch[19] Batch [120-140]	Speed: 21063.80 samples/sec	accuracy=nan
2023-03-20 10:59:20,932 Node[0] Epoch[19] Batch [140-160]	Speed: 21053.42 samples/sec	accuracy=nan
2023-03-20 10:59:24,033 Node[0] Epoch[19] Batch [160-180]	Speed: 21052.34 samples/sec	accuracy=nan
2023-03-20 10:59:27,135 Node[0] Epoch[19] Batch [180-200]	Speed: 21042.11 samples/sec	accuracy=nan
2023-03-20 10:59:30,238 Node[0] Epoch[19] Batch [200-220]	Speed: 21040.82 samples/sec	accuracy=nan
2023-03-20 10:59:33,337 Node[0] Epoch[19] Batch [220-240]	Speed: 21063.70 samples/sec	accuracy=nan
2023-03-20 10:59:36,435 Node[0] Epoch[19] Batch [240-260]	Speed: 21069.82 samples/sec	accuracy=nan
2023-03-20 10:59:39,533 Node[0] Epoch[19] Batch [260-280]	Speed: 21071.27 samples/sec	accuracy=nan
2023-03-20 10:59:42,634 Node[0] Epoch[19] Batch [280-300]	Speed: 21056.36 samples/sec	accuracy=nan
2023-03-20 10:59:45,740 Node[0] Epoch[19] Batch [300-320]	Speed: 21013.86 samples/sec	accuracy=nan
2023-03-20 10:59:48,842 Node[0] Epoch[19] Batch [320-340]	Speed: 21045.22 samples/sec	accuracy=nan
2023-03-20 10:59:51,941 Node[0] Epoch[19] Batch [340-360]	Speed: 21061.56 samples/sec	accuracy=nan
2023-03-20 10:59:55,043 Node[0] Epoch[19] Batch [360-380]	Speed: 21045.24 samples/sec	accuracy=nan
2023-03-20 10:59:56,896 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:59:56,896 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:59:56,896 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:59:56,896 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:59:56,896 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:59:56,896 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 10:59:56,897 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679327996897, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-20 10:59:56,898 Node[0] Epoch[19] Time cost=60.812
:::MLLOG {"namespace": "", "time_ms": 1679327996898, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21067.81036522193}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679327996899, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-20 10:59:56,899 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:00:00,157 Node[0] Epoch[20] Batch [0-20]	Speed: 21023.96 samples/sec	accuracy=nan
2023-03-20 11:00:03,258 Node[0] Epoch[20] Batch [20-40]	Speed: 21054.12 samples/sec	accuracy=nan
2023-03-20 11:00:06,357 Node[0] Epoch[20] Batch [40-60]	Speed: 21066.54 samples/sec	accuracy=nan
2023-03-20 11:00:09,465 Node[0] Epoch[20] Batch [60-80]	Speed: 21001.91 samples/sec	accuracy=nan
2023-03-20 11:00:12,568 Node[0] Epoch[20] Batch [80-100]	Speed: 21039.62 samples/sec	accuracy=nan
2023-03-20 11:00:15,669 Node[0] Epoch[20] Batch [100-120]	Speed: 21048.61 samples/sec	accuracy=nan
2023-03-20 11:00:18,769 Node[0] Epoch[20] Batch [120-140]	Speed: 21060.07 samples/sec	accuracy=nan
2023-03-20 11:00:21,870 Node[0] Epoch[20] Batch [140-160]	Speed: 21047.92 samples/sec	accuracy=nan
2023-03-20 11:00:24,977 Node[0] Epoch[20] Batch [160-180]	Speed: 21012.72 samples/sec	accuracy=nan
2023-03-20 11:00:28,078 Node[0] Epoch[20] Batch [180-200]	Speed: 21048.68 samples/sec	accuracy=nan
2023-03-20 11:00:31,182 Node[0] Epoch[20] Batch [200-220]	Speed: 21035.66 samples/sec	accuracy=nan
2023-03-20 11:00:34,289 Node[0] Epoch[20] Batch [220-240]	Speed: 21008.51 samples/sec	accuracy=nan
2023-03-20 11:00:37,395 Node[0] Epoch[20] Batch [240-260]	Speed: 21016.84 samples/sec	accuracy=nan
2023-03-20 11:00:40,507 Node[0] Epoch[20] Batch [260-280]	Speed: 20981.03 samples/sec	accuracy=nan
2023-03-20 11:00:43,613 Node[0] Epoch[20] Batch [280-300]	Speed: 21014.25 samples/sec	accuracy=nan
2023-03-20 11:00:46,719 Node[0] Epoch[20] Batch [300-320]	Speed: 21014.20 samples/sec	accuracy=nan
2023-03-20 11:00:49,825 Node[0] Epoch[20] Batch [320-340]	Speed: 21023.26 samples/sec	accuracy=nan
2023-03-20 11:00:52,933 Node[0] Epoch[20] Batch [340-360]	Speed: 21000.58 samples/sec	accuracy=nan
2023-03-20 11:00:56,038 Node[0] Epoch[20] Batch [360-380]	Speed: 21024.96 samples/sec	accuracy=nan
2023-03-20 11:00:57,742 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:00:57,742 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:00:57,742 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:00:57,742 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:00:57,743 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:00:57,743 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:00:57,743 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679328057742, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-20 11:00:57,744 Node[0] Epoch[20] Time cost=60.845
:::MLLOG {"namespace": "", "time_ms": 1679328057744, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21056.2087507959}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1679328057744, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-20 11:00:57,744 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:01:01,008 Node[0] Epoch[21] Batch [0-20]	Speed: 21026.82 samples/sec	accuracy=nan
2023-03-20 11:01:04,114 Node[0] Epoch[21] Batch [20-40]	Speed: 21013.64 samples/sec	accuracy=nan
2023-03-20 11:01:07,217 Node[0] Epoch[21] Batch [40-60]	Speed: 21037.20 samples/sec	accuracy=nan
2023-03-20 11:01:10,328 Node[0] Epoch[21] Batch [60-80]	Speed: 20987.71 samples/sec	accuracy=nan
2023-03-20 11:01:13,437 Node[0] Epoch[21] Batch [80-100]	Speed: 20998.09 samples/sec	accuracy=nan
2023-03-20 11:01:16,543 Node[0] Epoch[21] Batch [100-120]	Speed: 21017.39 samples/sec	accuracy=nan
2023-03-20 11:01:19,650 Node[0] Epoch[21] Batch [120-140]	Speed: 21005.22 samples/sec	accuracy=nan
2023-03-20 11:01:22,752 Node[0] Epoch[21] Batch [140-160]	Speed: 21048.28 samples/sec	accuracy=nan
2023-03-20 11:01:25,865 Node[0] Epoch[21] Batch [160-180]	Speed: 20968.53 samples/sec	accuracy=nan
2023-03-20 11:01:28,970 Node[0] Epoch[21] Batch [180-200]	Speed: 21026.37 samples/sec	accuracy=nan
2023-03-20 11:01:32,070 Node[0] Epoch[21] Batch [200-220]	Speed: 21056.85 samples/sec	accuracy=nan
2023-03-20 11:01:35,174 Node[0] Epoch[21] Batch [220-240]	Speed: 21032.04 samples/sec	accuracy=nan
2023-03-20 11:01:38,282 Node[0] Epoch[21] Batch [240-260]	Speed: 21003.26 samples/sec	accuracy=nan
2023-03-20 11:01:41,383 Node[0] Epoch[21] Batch [260-280]	Speed: 21050.47 samples/sec	accuracy=nan
2023-03-20 11:01:44,487 Node[0] Epoch[21] Batch [280-300]	Speed: 21031.64 samples/sec	accuracy=nan
2023-03-20 11:01:47,593 Node[0] Epoch[21] Batch [300-320]	Speed: 21017.47 samples/sec	accuracy=nan
2023-03-20 11:01:50,696 Node[0] Epoch[21] Batch [320-340]	Speed: 21035.15 samples/sec	accuracy=nan
2023-03-20 11:01:53,805 Node[0] Epoch[21] Batch [340-360]	Speed: 20997.80 samples/sec	accuracy=nan
2023-03-20 11:01:56,913 Node[0] Epoch[21] Batch [360-380]	Speed: 21005.90 samples/sec	accuracy=nan
2023-03-20 11:01:58,778 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:01:58,778 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:01:58,778 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:01:58,778 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:01:58,778 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:01:58,778 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:01:58,778 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679328118778, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-20 11:01:58,780 Node[0] Epoch[21] Time cost=61.035
:::MLLOG {"namespace": "", "time_ms": 1679328118780, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20990.5345193732}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679328118780, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-20 11:01:58,780 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:02:02,042 Node[0] Epoch[22] Batch [0-20]	Speed: 21019.62 samples/sec	accuracy=nan
2023-03-20 11:02:05,149 Node[0] Epoch[22] Batch [20-40]	Speed: 21007.43 samples/sec	accuracy=nan
2023-03-20 11:02:08,255 Node[0] Epoch[22] Batch [40-60]	Speed: 21021.87 samples/sec	accuracy=nan
2023-03-20 11:02:11,361 Node[0] Epoch[22] Batch [60-80]	Speed: 21014.99 samples/sec	accuracy=nan
2023-03-20 11:02:14,471 Node[0] Epoch[22] Batch [80-100]	Speed: 20994.45 samples/sec	accuracy=nan
2023-03-20 11:02:17,578 Node[0] Epoch[22] Batch [100-120]	Speed: 21008.32 samples/sec	accuracy=nan
2023-03-20 11:02:20,699 Node[0] Epoch[22] Batch [120-140]	Speed: 20915.93 samples/sec	accuracy=nan
2023-03-20 11:02:23,808 Node[0] Epoch[22] Batch [140-160]	Speed: 20998.24 samples/sec	accuracy=nan
2023-03-20 11:02:26,916 Node[0] Epoch[22] Batch [160-180]	Speed: 21002.13 samples/sec	accuracy=nan
2023-03-20 11:02:30,023 Node[0] Epoch[22] Batch [180-200]	Speed: 21013.92 samples/sec	accuracy=nan
2023-03-20 11:02:33,129 Node[0] Epoch[22] Batch [200-220]	Speed: 21014.65 samples/sec	accuracy=nan
2023-03-20 11:02:36,235 Node[0] Epoch[22] Batch [220-240]	Speed: 21015.79 samples/sec	accuracy=nan
2023-03-20 11:02:39,335 Node[0] Epoch[22] Batch [240-260]	Speed: 21062.34 samples/sec	accuracy=nan
2023-03-20 11:02:42,436 Node[0] Epoch[22] Batch [260-280]	Speed: 21046.08 samples/sec	accuracy=nan
2023-03-20 11:02:45,539 Node[0] Epoch[22] Batch [280-300]	Speed: 21039.25 samples/sec	accuracy=nan
2023-03-20 11:02:48,647 Node[0] Epoch[22] Batch [300-320]	Speed: 21007.35 samples/sec	accuracy=nan
2023-03-20 11:02:51,749 Node[0] Epoch[22] Batch [320-340]	Speed: 21040.30 samples/sec	accuracy=nan
2023-03-20 11:02:54,851 Node[0] Epoch[22] Batch [340-360]	Speed: 21045.88 samples/sec	accuracy=nan
2023-03-20 11:02:57,956 Node[0] Epoch[22] Batch [360-380]	Speed: 21027.27 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679328179660, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-20 11:02:59,661 Node[0] Epoch[22] Time cost=60.881
:::MLLOG {"namespace": "", "time_ms": 1679328179661, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21043.700998047007}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679328179811, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-20 11:03:01,096 Node[0] Epoch[22] Validation-accuracy=0.671840
2023-03-20 11:03:01,096 Node[0] Epoch[22] Validation-correct-count=4199.000000
2023-03-20 11:03:01,096 Node[0] Epoch[22] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679328181366, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679328181367, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.67688, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679328181367, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
2023-03-20 11:03:01,367 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:03:01,367 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679328181367, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-20 11:03:01,367 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:03:01,367 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:03:01,367 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:03:01,367 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679328181367, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-20 11:03:01,367 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:03:01,367 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:03:04,500 Node[0] Epoch[23] Batch [0-20]	Speed: 20899.37 samples/sec	accuracy=nan
2023-03-20 11:03:07,606 Node[0] Epoch[23] Batch [20-40]	Speed: 21016.66 samples/sec	accuracy=nan
2023-03-20 11:03:10,712 Node[0] Epoch[23] Batch [40-60]	Speed: 21014.10 samples/sec	accuracy=nan
2023-03-20 11:03:13,817 Node[0] Epoch[23] Batch [60-80]	Speed: 21022.31 samples/sec	accuracy=nan
2023-03-20 11:03:16,922 Node[0] Epoch[23] Batch [80-100]	Speed: 21027.03 samples/sec	accuracy=nan
2023-03-20 11:03:20,029 Node[0] Epoch[23] Batch [100-120]	Speed: 21012.69 samples/sec	accuracy=nan
2023-03-20 11:03:23,138 Node[0] Epoch[23] Batch [120-140]	Speed: 20997.05 samples/sec	accuracy=nan
2023-03-20 11:03:26,246 Node[0] Epoch[23] Batch [140-160]	Speed: 21000.54 samples/sec	accuracy=nan
2023-03-20 11:03:29,352 Node[0] Epoch[23] Batch [160-180]	Speed: 21015.98 samples/sec	accuracy=nan
2023-03-20 11:03:32,459 Node[0] Epoch[23] Batch [180-200]	Speed: 21012.40 samples/sec	accuracy=nan
2023-03-20 11:03:35,564 Node[0] Epoch[23] Batch [200-220]	Speed: 21022.43 samples/sec	accuracy=nan
2023-03-20 11:03:38,668 Node[0] Epoch[23] Batch [220-240]	Speed: 21031.08 samples/sec	accuracy=nan
2023-03-20 11:03:41,779 Node[0] Epoch[23] Batch [240-260]	Speed: 20986.07 samples/sec	accuracy=nan
2023-03-20 11:03:44,884 Node[0] Epoch[23] Batch [260-280]	Speed: 21023.39 samples/sec	accuracy=nan
2023-03-20 11:03:47,997 Node[0] Epoch[23] Batch [280-300]	Speed: 20971.17 samples/sec	accuracy=nan
2023-03-20 11:03:51,105 Node[0] Epoch[23] Batch [300-320]	Speed: 21005.93 samples/sec	accuracy=nan
2023-03-20 11:03:54,207 Node[0] Epoch[23] Batch [320-340]	Speed: 21043.63 samples/sec	accuracy=nan
2023-03-20 11:03:57,307 Node[0] Epoch[23] Batch [340-360]	Speed: 21054.88 samples/sec	accuracy=nan
2023-03-20 11:04:00,407 Node[0] Epoch[23] Batch [360-380]	Speed: 21057.10 samples/sec	accuracy=nan
2023-03-20 11:04:02,264 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:04:02,265 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:04:02,265 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:04:02,265 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:04:02,265 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:04:02,265 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:04:02,265 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679328242265, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-20 11:04:02,266 Node[0] Epoch[23] Time cost=60.899
:::MLLOG {"namespace": "", "time_ms": 1679328242266, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21037.552637713}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679328242266, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-20 11:04:02,267 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:04:05,521 Node[0] Epoch[24] Batch [0-20]	Speed: 21059.26 samples/sec	accuracy=nan
2023-03-20 11:04:08,620 Node[0] Epoch[24] Batch [20-40]	Speed: 21068.09 samples/sec	accuracy=nan
2023-03-20 11:04:11,721 Node[0] Epoch[24] Batch [40-60]	Speed: 21049.53 samples/sec	accuracy=nan
2023-03-20 11:04:14,819 Node[0] Epoch[24] Batch [60-80]	Speed: 21069.24 samples/sec	accuracy=nan
2023-03-20 11:04:17,920 Node[0] Epoch[24] Batch [80-100]	Speed: 21050.54 samples/sec	accuracy=nan
2023-03-20 11:04:21,018 Node[0] Epoch[24] Batch [100-120]	Speed: 21076.60 samples/sec	accuracy=nan
2023-03-20 11:04:24,124 Node[0] Epoch[24] Batch [120-140]	Speed: 21013.47 samples/sec	accuracy=nan
2023-03-20 11:04:27,229 Node[0] Epoch[24] Batch [140-160]	Speed: 21026.95 samples/sec	accuracy=nan
2023-03-20 11:04:30,332 Node[0] Epoch[24] Batch [160-180]	Speed: 21036.14 samples/sec	accuracy=nan
2023-03-20 11:04:33,440 Node[0] Epoch[24] Batch [180-200]	Speed: 21002.61 samples/sec	accuracy=nan
2023-03-20 11:04:36,540 Node[0] Epoch[24] Batch [200-220]	Speed: 21058.00 samples/sec	accuracy=nan
2023-03-20 11:04:39,642 Node[0] Epoch[24] Batch [220-240]	Speed: 21048.95 samples/sec	accuracy=nan
2023-03-20 11:04:42,746 Node[0] Epoch[24] Batch [240-260]	Speed: 21030.20 samples/sec	accuracy=nan
2023-03-20 11:04:45,854 Node[0] Epoch[24] Batch [260-280]	Speed: 20998.21 samples/sec	accuracy=nan
2023-03-20 11:04:48,961 Node[0] Epoch[24] Batch [280-300]	Speed: 21012.47 samples/sec	accuracy=nan
2023-03-20 11:04:52,066 Node[0] Epoch[24] Batch [300-320]	Speed: 21025.38 samples/sec	accuracy=nan
2023-03-20 11:04:55,171 Node[0] Epoch[24] Batch [320-340]	Speed: 21024.89 samples/sec	accuracy=nan
2023-03-20 11:04:58,279 Node[0] Epoch[24] Batch [340-360]	Speed: 21003.28 samples/sec	accuracy=nan
2023-03-20 11:05:01,383 Node[0] Epoch[24] Batch [360-380]	Speed: 21034.32 samples/sec	accuracy=nan
2023-03-20 11:05:03,095 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:05:03,096 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:05:03,096 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:05:03,096 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:05:03,096 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:05:03,096 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:05:03,096 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679328303096, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-20 11:05:03,097 Node[0] Epoch[24] Time cost=60.830
:::MLLOG {"namespace": "", "time_ms": 1679328303097, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21061.267773148014}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679328303097, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-20 11:05:03,098 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:05:06,358 Node[0] Epoch[25] Batch [0-20]	Speed: 21042.93 samples/sec	accuracy=nan
2023-03-20 11:05:09,470 Node[0] Epoch[25] Batch [20-40]	Speed: 20976.37 samples/sec	accuracy=nan
2023-03-20 11:05:12,576 Node[0] Epoch[25] Batch [40-60]	Speed: 21016.54 samples/sec	accuracy=nan
2023-03-20 11:05:15,681 Node[0] Epoch[25] Batch [60-80]	Speed: 21024.07 samples/sec	accuracy=nan
2023-03-20 11:05:18,789 Node[0] Epoch[25] Batch [80-100]	Speed: 21007.78 samples/sec	accuracy=nan
2023-03-20 11:05:21,892 Node[0] Epoch[25] Batch [100-120]	Speed: 21033.45 samples/sec	accuracy=nan
2023-03-20 11:05:25,000 Node[0] Epoch[25] Batch [120-140]	Speed: 21009.12 samples/sec	accuracy=nan
2023-03-20 11:05:28,109 Node[0] Epoch[25] Batch [140-160]	Speed: 20991.95 samples/sec	accuracy=nan
2023-03-20 11:05:31,217 Node[0] Epoch[25] Batch [160-180]	Speed: 21007.36 samples/sec	accuracy=nan
2023-03-20 11:05:34,326 Node[0] Epoch[25] Batch [180-200]	Speed: 20997.50 samples/sec	accuracy=nan
2023-03-20 11:05:37,432 Node[0] Epoch[25] Batch [200-220]	Speed: 21018.96 samples/sec	accuracy=nan
2023-03-20 11:05:40,543 Node[0] Epoch[25] Batch [220-240]	Speed: 20981.36 samples/sec	accuracy=nan
2023-03-20 11:05:43,650 Node[0] Epoch[25] Batch [240-260]	Speed: 21010.04 samples/sec	accuracy=nan
2023-03-20 11:05:46,760 Node[0] Epoch[25] Batch [260-280]	Speed: 20991.21 samples/sec	accuracy=nan
2023-03-20 11:05:49,868 Node[0] Epoch[25] Batch [280-300]	Speed: 21001.08 samples/sec	accuracy=nan
2023-03-20 11:05:55,250 Node[0] Epoch[25] Batch [300-320]	Speed: 12129.90 samples/sec	accuracy=nan
2023-03-20 11:05:58,353 Node[0] Epoch[25] Batch [320-340]	Speed: 21035.03 samples/sec	accuracy=nan
2023-03-20 11:06:01,456 Node[0] Epoch[25] Batch [340-360]	Speed: 21039.83 samples/sec	accuracy=nan
2023-03-20 11:06:04,561 Node[0] Epoch[25] Batch [360-380]	Speed: 21026.37 samples/sec	accuracy=nan
2023-03-20 11:06:06,421 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:06:06,421 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:06:06,422 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:06:06,421 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:06:06,422 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:06:06,422 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:06:06,422 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679328366422, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-20 11:06:06,424 Node[0] Epoch[25] Time cost=63.326
:::MLLOG {"namespace": "", "time_ms": 1679328366424, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20231.20533078473}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679328366424, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-20 11:06:06,424 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:06:09,681 Node[0] Epoch[26] Batch [0-20]	Speed: 21035.64 samples/sec	accuracy=nan
2023-03-20 11:06:12,780 Node[0] Epoch[26] Batch [20-40]	Speed: 21066.11 samples/sec	accuracy=nan
2023-03-20 11:06:15,881 Node[0] Epoch[26] Batch [40-60]	Speed: 21048.56 samples/sec	accuracy=nan
2023-03-20 11:06:18,987 Node[0] Epoch[26] Batch [60-80]	Speed: 21017.89 samples/sec	accuracy=nan
2023-03-20 11:06:22,093 Node[0] Epoch[26] Batch [80-100]	Speed: 21019.37 samples/sec	accuracy=nan
2023-03-20 11:06:25,197 Node[0] Epoch[26] Batch [100-120]	Speed: 21031.61 samples/sec	accuracy=nan
2023-03-20 11:06:28,300 Node[0] Epoch[26] Batch [120-140]	Speed: 21036.45 samples/sec	accuracy=nan
2023-03-20 11:06:31,402 Node[0] Epoch[26] Batch [140-160]	Speed: 21040.34 samples/sec	accuracy=nan
2023-03-20 11:06:34,509 Node[0] Epoch[26] Batch [160-180]	Speed: 21014.50 samples/sec	accuracy=nan
2023-03-20 11:06:37,611 Node[0] Epoch[26] Batch [180-200]	Speed: 21046.02 samples/sec	accuracy=nan
2023-03-20 11:06:40,719 Node[0] Epoch[26] Batch [200-220]	Speed: 21001.63 samples/sec	accuracy=nan
2023-03-20 11:06:43,826 Node[0] Epoch[26] Batch [220-240]	Speed: 21012.64 samples/sec	accuracy=nan
2023-03-20 11:06:46,933 Node[0] Epoch[26] Batch [240-260]	Speed: 21006.10 samples/sec	accuracy=nan
2023-03-20 11:06:50,045 Node[0] Epoch[26] Batch [260-280]	Speed: 20980.83 samples/sec	accuracy=nan
2023-03-20 11:06:53,156 Node[0] Epoch[26] Batch [280-300]	Speed: 20980.61 samples/sec	accuracy=nan
2023-03-20 11:06:56,260 Node[0] Epoch[26] Batch [300-320]	Speed: 21029.08 samples/sec	accuracy=nan
2023-03-20 11:06:59,368 Node[0] Epoch[26] Batch [320-340]	Speed: 21007.54 samples/sec	accuracy=nan
2023-03-20 11:07:02,467 Node[0] Epoch[26] Batch [340-360]	Speed: 21061.23 samples/sec	accuracy=nan
2023-03-20 11:07:05,570 Node[0] Epoch[26] Batch [360-380]	Speed: 21038.09 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679328427274, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-20 11:07:07,275 Node[0] Epoch[26] Time cost=60.851
:::MLLOG {"namespace": "", "time_ms": 1679328427275, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21054.246734491076}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679328427424, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-20 11:07:08,662 Node[0] Epoch[26] Validation-accuracy=0.719520
2023-03-20 11:07:08,662 Node[0] Epoch[26] Validation-correct-count=4497.000000
2023-03-20 11:07:08,662 Node[0] Epoch[26] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679328428990, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
2023-03-20 11:07:08,990 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:07:08,990 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:07:08,990 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679328428990, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7175, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679328428990, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679328428990, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-20 11:07:08,990 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:07:08,990 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:07:08,990 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:07:08,990 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679328428991, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-20 11:07:08,991 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:07:12,119 Node[0] Epoch[27] Batch [0-20]	Speed: 20929.21 samples/sec	accuracy=nan
2023-03-20 11:07:15,220 Node[0] Epoch[27] Batch [20-40]	Speed: 21050.56 samples/sec	accuracy=nan
2023-03-20 11:07:18,325 Node[0] Epoch[27] Batch [40-60]	Speed: 21022.70 samples/sec	accuracy=nan
2023-03-20 11:07:21,423 Node[0] Epoch[27] Batch [60-80]	Speed: 21069.86 samples/sec	accuracy=nan
2023-03-20 11:07:24,523 Node[0] Epoch[27] Batch [80-100]	Speed: 21063.29 samples/sec	accuracy=nan
2023-03-20 11:07:27,622 Node[0] Epoch[27] Batch [100-120]	Speed: 21065.05 samples/sec	accuracy=nan
2023-03-20 11:07:30,724 Node[0] Epoch[27] Batch [120-140]	Speed: 21044.52 samples/sec	accuracy=nan
2023-03-20 11:07:33,820 Node[0] Epoch[27] Batch [140-160]	Speed: 21082.03 samples/sec	accuracy=nan
2023-03-20 11:07:36,922 Node[0] Epoch[27] Batch [160-180]	Speed: 21044.19 samples/sec	accuracy=nan
2023-03-20 11:07:40,032 Node[0] Epoch[27] Batch [180-200]	Speed: 20991.99 samples/sec	accuracy=nan
2023-03-20 11:07:43,131 Node[0] Epoch[27] Batch [200-220]	Speed: 21061.97 samples/sec	accuracy=nan
2023-03-20 11:07:46,234 Node[0] Epoch[27] Batch [220-240]	Speed: 21042.73 samples/sec	accuracy=nan
2023-03-20 11:07:49,337 Node[0] Epoch[27] Batch [240-260]	Speed: 21036.35 samples/sec	accuracy=nan
2023-03-20 11:07:52,440 Node[0] Epoch[27] Batch [260-280]	Speed: 21033.13 samples/sec	accuracy=nan
2023-03-20 11:07:55,543 Node[0] Epoch[27] Batch [280-300]	Speed: 21042.58 samples/sec	accuracy=nan
2023-03-20 11:08:00,894 Node[0] Epoch[27] Batch [300-320]	Speed: 12199.52 samples/sec	accuracy=nan
2023-03-20 11:08:03,995 Node[0] Epoch[27] Batch [320-340]	Speed: 21046.83 samples/sec	accuracy=nan
2023-03-20 11:08:07,098 Node[0] Epoch[27] Batch [340-360]	Speed: 21040.51 samples/sec	accuracy=nan
2023-03-20 11:08:10,209 Node[0] Epoch[27] Batch [360-380]	Speed: 20983.97 samples/sec	accuracy=nan
2023-03-20 11:08:12,073 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:08:12,073 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:08:12,073 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:08:12,073 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:08:12,073 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:08:12,073 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:08:12,074 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679328492073, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-20 11:08:12,075 Node[0] Epoch[27] Time cost=63.084
:::MLLOG {"namespace": "", "time_ms": 1679328492075, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20308.93333598193}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679328492075, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-20 11:08:12,075 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:08:15,337 Node[0] Epoch[28] Batch [0-20]	Speed: 21005.93 samples/sec	accuracy=nan
2023-03-20 11:08:18,449 Node[0] Epoch[28] Batch [20-40]	Speed: 20973.46 samples/sec	accuracy=nan
2023-03-20 11:08:21,555 Node[0] Epoch[28] Batch [40-60]	Speed: 21019.32 samples/sec	accuracy=nan
2023-03-20 11:08:24,660 Node[0] Epoch[28] Batch [60-80]	Speed: 21026.90 samples/sec	accuracy=nan
2023-03-20 11:08:27,766 Node[0] Epoch[28] Batch [80-100]	Speed: 21017.48 samples/sec	accuracy=nan
2023-03-20 11:08:30,874 Node[0] Epoch[28] Batch [100-120]	Speed: 21004.54 samples/sec	accuracy=nan
2023-03-20 11:08:33,979 Node[0] Epoch[28] Batch [120-140]	Speed: 21018.92 samples/sec	accuracy=nan
2023-03-20 11:08:37,086 Node[0] Epoch[28] Batch [140-160]	Speed: 21014.20 samples/sec	accuracy=nan
2023-03-20 11:08:40,196 Node[0] Epoch[28] Batch [160-180]	Speed: 20990.97 samples/sec	accuracy=nan
2023-03-20 11:08:43,304 Node[0] Epoch[28] Batch [180-200]	Speed: 21002.76 samples/sec	accuracy=nan
2023-03-20 11:08:46,412 Node[0] Epoch[28] Batch [200-220]	Speed: 21002.76 samples/sec	accuracy=nan
2023-03-20 11:08:49,515 Node[0] Epoch[28] Batch [220-240]	Speed: 21036.83 samples/sec	accuracy=nan
2023-03-20 11:08:52,615 Node[0] Epoch[28] Batch [240-260]	Speed: 21059.65 samples/sec	accuracy=nan
2023-03-20 11:08:55,716 Node[0] Epoch[28] Batch [260-280]	Speed: 21049.80 samples/sec	accuracy=nan
2023-03-20 11:08:58,818 Node[0] Epoch[28] Batch [280-300]	Speed: 21046.54 samples/sec	accuracy=nan
2023-03-20 11:09:03,887 Node[0] Epoch[28] Batch [300-320]	Speed: 12877.45 samples/sec	accuracy=nan
2023-03-20 11:09:06,991 Node[0] Epoch[28] Batch [320-340]	Speed: 21030.33 samples/sec	accuracy=nan
2023-03-20 11:09:10,101 Node[0] Epoch[28] Batch [340-360]	Speed: 20993.28 samples/sec	accuracy=nan
2023-03-20 11:09:13,209 Node[0] Epoch[28] Batch [360-380]	Speed: 21004.21 samples/sec	accuracy=nan
2023-03-20 11:09:14,917 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:09:14,917 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:09:14,917 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:09:14,917 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:09:14,917 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:09:14,917 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:09:14,918 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679328554917, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-20 11:09:14,919 Node[0] Epoch[28] Time cost=62.844
:::MLLOG {"namespace": "", "time_ms": 1679328554919, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20386.61452324588}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1679328554919, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-20 11:09:14,919 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:09:18,181 Node[0] Epoch[29] Batch [0-20]	Speed: 21030.68 samples/sec	accuracy=nan
2023-03-20 11:09:21,287 Node[0] Epoch[29] Batch [20-40]	Speed: 21021.37 samples/sec	accuracy=nan
2023-03-20 11:09:24,394 Node[0] Epoch[29] Batch [40-60]	Speed: 21007.11 samples/sec	accuracy=nan
2023-03-20 11:09:27,499 Node[0] Epoch[29] Batch [60-80]	Speed: 21021.77 samples/sec	accuracy=nan
2023-03-20 11:09:30,603 Node[0] Epoch[29] Batch [80-100]	Speed: 21032.14 samples/sec	accuracy=nan
2023-03-20 11:09:33,707 Node[0] Epoch[29] Batch [100-120]	Speed: 21034.65 samples/sec	accuracy=nan
2023-03-20 11:09:36,807 Node[0] Epoch[29] Batch [120-140]	Speed: 21059.30 samples/sec	accuracy=nan
2023-03-20 11:09:39,910 Node[0] Epoch[29] Batch [140-160]	Speed: 21031.28 samples/sec	accuracy=nan
2023-03-20 11:09:43,019 Node[0] Epoch[29] Batch [160-180]	Speed: 21001.93 samples/sec	accuracy=nan
2023-03-20 11:09:46,123 Node[0] Epoch[29] Batch [180-200]	Speed: 21028.28 samples/sec	accuracy=nan
2023-03-20 11:09:49,226 Node[0] Epoch[29] Batch [200-220]	Speed: 21040.29 samples/sec	accuracy=nan
2023-03-20 11:09:52,329 Node[0] Epoch[29] Batch [220-240]	Speed: 21039.00 samples/sec	accuracy=nan
2023-03-20 11:09:55,429 Node[0] Epoch[29] Batch [240-260]	Speed: 21052.61 samples/sec	accuracy=nan
2023-03-20 11:09:58,531 Node[0] Epoch[29] Batch [260-280]	Speed: 21044.92 samples/sec	accuracy=nan
2023-03-20 11:10:01,633 Node[0] Epoch[29] Batch [280-300]	Speed: 21044.20 samples/sec	accuracy=nan
2023-03-20 11:10:06,702 Node[0] Epoch[29] Batch [300-320]	Speed: 12878.87 samples/sec	accuracy=nan
2023-03-20 11:10:09,809 Node[0] Epoch[29] Batch [320-340]	Speed: 21008.51 samples/sec	accuracy=nan
2023-03-20 11:10:12,918 Node[0] Epoch[29] Batch [340-360]	Speed: 20997.14 samples/sec	accuracy=nan
2023-03-20 11:10:16,027 Node[0] Epoch[29] Batch [360-380]	Speed: 20997.78 samples/sec	accuracy=nan
2023-03-20 11:10:17,892 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:10:17,892 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:10:17,893 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:10:17,892 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:10:17,893 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:10:17,893 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:10:17,893 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679328617893, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-20 11:10:17,894 Node[0] Epoch[29] Time cost=62.975
:::MLLOG {"namespace": "", "time_ms": 1679328617894, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20344.12050785818}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679328617894, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-20 11:10:17,894 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:10:21,154 Node[0] Epoch[30] Batch [0-20]	Speed: 21023.36 samples/sec	accuracy=nan
2023-03-20 11:10:24,262 Node[0] Epoch[30] Batch [20-40]	Speed: 21000.66 samples/sec	accuracy=nan
2023-03-20 11:10:27,371 Node[0] Epoch[30] Batch [40-60]	Speed: 21003.15 samples/sec	accuracy=nan
2023-03-20 11:10:30,481 Node[0] Epoch[30] Batch [60-80]	Speed: 20990.39 samples/sec	accuracy=nan
2023-03-20 11:10:33,586 Node[0] Epoch[30] Batch [80-100]	Speed: 21018.49 samples/sec	accuracy=nan
2023-03-20 11:10:36,689 Node[0] Epoch[30] Batch [100-120]	Speed: 21037.45 samples/sec	accuracy=nan
2023-03-20 11:10:39,796 Node[0] Epoch[30] Batch [120-140]	Speed: 21010.58 samples/sec	accuracy=nan
2023-03-20 11:10:42,903 Node[0] Epoch[30] Batch [140-160]	Speed: 21013.07 samples/sec	accuracy=nan
2023-03-20 11:10:46,017 Node[0] Epoch[30] Batch [160-180]	Speed: 20965.07 samples/sec	accuracy=nan
2023-03-20 11:10:49,126 Node[0] Epoch[30] Batch [180-200]	Speed: 20996.78 samples/sec	accuracy=nan
2023-03-20 11:10:52,230 Node[0] Epoch[30] Batch [200-220]	Speed: 21033.35 samples/sec	accuracy=nan
2023-03-20 11:10:55,331 Node[0] Epoch[30] Batch [220-240]	Speed: 21044.66 samples/sec	accuracy=nan
2023-03-20 11:10:58,434 Node[0] Epoch[30] Batch [240-260]	Speed: 21039.88 samples/sec	accuracy=nan
2023-03-20 11:11:01,540 Node[0] Epoch[30] Batch [260-280]	Speed: 21016.87 samples/sec	accuracy=nan
2023-03-20 11:11:04,648 Node[0] Epoch[30] Batch [280-300]	Speed: 21005.17 samples/sec	accuracy=nan
2023-03-20 11:11:11,985 Node[0] Epoch[30] Batch [300-320]	Speed: 8897.07 samples/sec	accuracy=nan
2023-03-20 11:11:15,090 Node[0] Epoch[30] Batch [320-340]	Speed: 21028.91 samples/sec	accuracy=nan
2023-03-20 11:11:18,192 Node[0] Epoch[30] Batch [340-360]	Speed: 21039.73 samples/sec	accuracy=nan
2023-03-20 11:11:21,297 Node[0] Epoch[30] Batch [360-380]	Speed: 21026.17 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679328683005, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-20 11:11:23,006 Node[0] Epoch[30] Time cost=65.112
:::MLLOG {"namespace": "", "time_ms": 1679328683006, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 19676.42185935381}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679328683155, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-20 11:11:24,558 Node[0] Epoch[30] Validation-accuracy=0.755840
2023-03-20 11:11:24,559 Node[0] Epoch[30] Validation-correct-count=4724.000000
2023-03-20 11:11:24,559 Node[0] Epoch[30] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679328684703, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679328684703, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75088, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679328684703, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679328684703, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-20 11:11:24,703 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:11:24,703 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:11:24,703 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679328684703, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-20 11:11:24,703 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:11:24,704 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:11:24,703 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:11:24,703 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:11:24,703 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:11:27,832 Node[0] Epoch[31] Batch [0-20]	Speed: 20922.43 samples/sec	accuracy=nan
2023-03-20 11:11:30,934 Node[0] Epoch[31] Batch [20-40]	Speed: 21044.85 samples/sec	accuracy=nan
2023-03-20 11:11:34,038 Node[0] Epoch[31] Batch [40-60]	Speed: 21034.39 samples/sec	accuracy=nan
2023-03-20 11:11:37,148 Node[0] Epoch[31] Batch [60-80]	Speed: 20991.10 samples/sec	accuracy=nan
2023-03-20 11:11:40,259 Node[0] Epoch[31] Batch [80-100]	Speed: 20984.79 samples/sec	accuracy=nan
2023-03-20 11:11:43,365 Node[0] Epoch[31] Batch [100-120]	Speed: 21012.56 samples/sec	accuracy=nan
2023-03-20 11:11:46,470 Node[0] Epoch[31] Batch [120-140]	Speed: 21023.80 samples/sec	accuracy=nan
2023-03-20 11:11:49,577 Node[0] Epoch[31] Batch [140-160]	Speed: 21009.62 samples/sec	accuracy=nan
2023-03-20 11:11:52,689 Node[0] Epoch[31] Batch [160-180]	Speed: 20977.82 samples/sec	accuracy=nan
2023-03-20 11:11:55,802 Node[0] Epoch[31] Batch [180-200]	Speed: 20973.65 samples/sec	accuracy=nan
2023-03-20 11:11:58,914 Node[0] Epoch[31] Batch [200-220]	Speed: 20977.27 samples/sec	accuracy=nan
2023-03-20 11:12:02,016 Node[0] Epoch[31] Batch [220-240]	Speed: 21040.76 samples/sec	accuracy=nan
2023-03-20 11:12:05,120 Node[0] Epoch[31] Batch [240-260]	Speed: 21031.59 samples/sec	accuracy=nan
2023-03-20 11:12:08,224 Node[0] Epoch[31] Batch [260-280]	Speed: 21029.07 samples/sec	accuracy=nan
2023-03-20 11:12:11,327 Node[0] Epoch[31] Batch [280-300]	Speed: 21040.24 samples/sec	accuracy=nan
2023-03-20 11:12:16,379 Node[0] Epoch[31] Batch [300-320]	Speed: 12921.72 samples/sec	accuracy=nan
2023-03-20 11:12:19,483 Node[0] Epoch[31] Batch [320-340]	Speed: 21028.30 samples/sec	accuracy=nan
2023-03-20 11:12:22,590 Node[0] Epoch[31] Batch [340-360]	Speed: 21011.02 samples/sec	accuracy=nan
2023-03-20 11:12:25,705 Node[0] Epoch[31] Batch [360-380]	Speed: 20959.91 samples/sec	accuracy=nan
2023-03-20 11:12:27,567 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:12:27,567 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:12:27,567 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:12:27,567 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:12:27,567 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:12:27,567 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:12:27,567 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679328747567, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-20 11:12:27,568 Node[0] Epoch[31] Time cost=62.865
:::MLLOG {"namespace": "", "time_ms": 1679328747569, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20379.689593718766}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679328747569, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-20 11:12:27,569 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:12:30,830 Node[0] Epoch[32] Batch [0-20]	Speed: 21011.40 samples/sec	accuracy=nan
2023-03-20 11:12:33,941 Node[0] Epoch[32] Batch [20-40]	Speed: 20986.45 samples/sec	accuracy=nan
2023-03-20 11:12:37,049 Node[0] Epoch[32] Batch [40-60]	Speed: 21005.34 samples/sec	accuracy=nan
2023-03-20 11:12:40,160 Node[0] Epoch[32] Batch [60-80]	Speed: 20979.35 samples/sec	accuracy=nan
2023-03-20 11:12:43,266 Node[0] Epoch[32] Batch [80-100]	Speed: 21016.60 samples/sec	accuracy=nan
2023-03-20 11:12:46,372 Node[0] Epoch[32] Batch [100-120]	Speed: 21018.27 samples/sec	accuracy=nan
2023-03-20 11:12:49,481 Node[0] Epoch[32] Batch [120-140]	Speed: 20997.94 samples/sec	accuracy=nan
2023-03-20 11:12:52,585 Node[0] Epoch[32] Batch [140-160]	Speed: 21029.21 samples/sec	accuracy=nan
2023-03-20 11:12:55,690 Node[0] Epoch[32] Batch [160-180]	Speed: 21028.83 samples/sec	accuracy=nan
2023-03-20 11:12:58,794 Node[0] Epoch[32] Batch [180-200]	Speed: 21030.12 samples/sec	accuracy=nan
2023-03-20 11:13:01,903 Node[0] Epoch[32] Batch [200-220]	Speed: 20998.55 samples/sec	accuracy=nan
2023-03-20 11:13:05,011 Node[0] Epoch[32] Batch [220-240]	Speed: 21000.40 samples/sec	accuracy=nan
2023-03-20 11:13:08,121 Node[0] Epoch[32] Batch [240-260]	Speed: 20988.68 samples/sec	accuracy=nan
2023-03-20 11:13:11,229 Node[0] Epoch[32] Batch [260-280]	Speed: 21009.50 samples/sec	accuracy=nan
2023-03-20 11:13:14,335 Node[0] Epoch[32] Batch [280-300]	Speed: 21013.11 samples/sec	accuracy=nan
2023-03-20 11:13:19,714 Node[0] Epoch[32] Batch [300-320]	Speed: 12136.09 samples/sec	accuracy=nan
2023-03-20 11:13:22,821 Node[0] Epoch[32] Batch [320-340]	Speed: 21009.13 samples/sec	accuracy=nan
2023-03-20 11:13:25,930 Node[0] Epoch[32] Batch [340-360]	Speed: 20998.41 samples/sec	accuracy=nan
2023-03-20 11:13:29,037 Node[0] Epoch[32] Batch [360-380]	Speed: 21012.41 samples/sec	accuracy=nan
2023-03-20 11:13:30,747 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:13:30,747 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:13:30,747 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:13:30,747 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:13:30,748 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:13:30,748 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:13:30,749 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679328810748, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-20 11:13:30,749 Node[0] Epoch[32] Time cost=63.180
:::MLLOG {"namespace": "", "time_ms": 1679328810749, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20278.006119194128}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679328810749, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-20 11:13:30,750 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:13:34,012 Node[0] Epoch[33] Batch [0-20]	Speed: 21023.48 samples/sec	accuracy=nan
2023-03-20 11:13:37,120 Node[0] Epoch[33] Batch [20-40]	Speed: 21002.96 samples/sec	accuracy=nan
2023-03-20 11:13:40,230 Node[0] Epoch[33] Batch [40-60]	Speed: 20988.55 samples/sec	accuracy=nan
2023-03-20 11:13:43,344 Node[0] Epoch[33] Batch [60-80]	Speed: 20968.14 samples/sec	accuracy=nan
2023-03-20 11:13:46,455 Node[0] Epoch[33] Batch [80-100]	Speed: 20983.94 samples/sec	accuracy=nan
2023-03-20 11:13:49,565 Node[0] Epoch[33] Batch [100-120]	Speed: 20988.85 samples/sec	accuracy=nan
2023-03-20 11:13:52,678 Node[0] Epoch[33] Batch [120-140]	Speed: 20969.25 samples/sec	accuracy=nan
2023-03-20 11:13:55,786 Node[0] Epoch[33] Batch [140-160]	Speed: 21001.68 samples/sec	accuracy=nan
2023-03-20 11:13:58,900 Node[0] Epoch[33] Batch [160-180]	Speed: 20967.42 samples/sec	accuracy=nan
2023-03-20 11:14:02,006 Node[0] Epoch[33] Batch [180-200]	Speed: 21012.54 samples/sec	accuracy=nan
2023-03-20 11:14:05,116 Node[0] Epoch[33] Batch [200-220]	Speed: 20991.80 samples/sec	accuracy=nan
2023-03-20 11:14:08,226 Node[0] Epoch[33] Batch [220-240]	Speed: 20993.98 samples/sec	accuracy=nan
2023-03-20 11:14:11,338 Node[0] Epoch[33] Batch [240-260]	Speed: 20978.57 samples/sec	accuracy=nan
2023-03-20 11:14:14,444 Node[0] Epoch[33] Batch [260-280]	Speed: 21014.07 samples/sec	accuracy=nan
2023-03-20 11:14:17,552 Node[0] Epoch[33] Batch [280-300]	Speed: 21000.43 samples/sec	accuracy=nan
2023-03-20 11:14:20,662 Node[0] Epoch[33] Batch [300-320]	Speed: 20991.46 samples/sec	accuracy=nan
2023-03-20 11:14:23,770 Node[0] Epoch[33] Batch [320-340]	Speed: 21008.00 samples/sec	accuracy=nan
2023-03-20 11:14:26,883 Node[0] Epoch[33] Batch [340-360]	Speed: 20966.00 samples/sec	accuracy=nan
2023-03-20 11:14:29,991 Node[0] Epoch[33] Batch [360-380]	Speed: 21008.51 samples/sec	accuracy=nan
2023-03-20 11:14:31,854 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:14:31,854 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:14:31,854 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:14:31,854 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:14:31,854 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:14:31,854 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:14:31,854 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679328871854, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-20 11:14:31,856 Node[0] Epoch[33] Time cost=61.106
:::MLLOG {"namespace": "", "time_ms": 1679328871856, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20966.3317138711}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679328871856, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-20 11:14:31,856 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 11:14:35,122 Node[0] Epoch[34] Batch [0-20]	Speed: 20985.24 samples/sec	accuracy=nan
2023-03-20 11:14:38,229 Node[0] Epoch[34] Batch [20-40]	Speed: 21008.69 samples/sec	accuracy=nan
2023-03-20 11:14:41,342 Node[0] Epoch[34] Batch [40-60]	Speed: 20969.84 samples/sec	accuracy=nan
2023-03-20 11:14:44,451 Node[0] Epoch[34] Batch [60-80]	Speed: 20995.15 samples/sec	accuracy=nan
2023-03-20 11:14:47,560 Node[0] Epoch[34] Batch [80-100]	Speed: 20996.84 samples/sec	accuracy=nan
2023-03-20 11:14:50,677 Node[0] Epoch[34] Batch [100-120]	Speed: 20945.49 samples/sec	accuracy=nan
2023-03-20 11:14:53,786 Node[0] Epoch[34] Batch [120-140]	Speed: 20996.84 samples/sec	accuracy=nan
2023-03-20 11:14:56,896 Node[0] Epoch[34] Batch [140-160]	Speed: 20989.85 samples/sec	accuracy=nan
2023-03-20 11:15:00,013 Node[0] Epoch[34] Batch [160-180]	Speed: 20945.67 samples/sec	accuracy=nan
2023-03-20 11:15:03,123 Node[0] Epoch[34] Batch [180-200]	Speed: 20988.17 samples/sec	accuracy=nan
2023-03-20 11:15:06,231 Node[0] Epoch[34] Batch [200-220]	Speed: 21002.84 samples/sec	accuracy=nan
2023-03-20 11:15:09,335 Node[0] Epoch[34] Batch [220-240]	Speed: 21030.54 samples/sec	accuracy=nan
2023-03-20 11:15:12,444 Node[0] Epoch[34] Batch [240-260]	Speed: 21000.42 samples/sec	accuracy=nan
2023-03-20 11:15:15,554 Node[0] Epoch[34] Batch [260-280]	Speed: 20990.06 samples/sec	accuracy=nan
2023-03-20 11:15:18,676 Node[0] Epoch[34] Batch [280-300]	Speed: 20910.17 samples/sec	accuracy=nan
2023-03-20 11:15:21,791 Node[0] Epoch[34] Batch [300-320]	Speed: 20958.14 samples/sec	accuracy=nan
2023-03-20 11:15:24,901 Node[0] Epoch[34] Batch [320-340]	Speed: 20986.31 samples/sec	accuracy=nan
2023-03-20 11:15:28,005 Node[0] Epoch[34] Batch [340-360]	Speed: 21030.55 samples/sec	accuracy=nan
2023-03-20 11:15:31,108 Node[0] Epoch[34] Batch [360-380]	Speed: 21035.86 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679328932971, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-20 11:15:32,972 Node[0] Epoch[34] Time cost=61.116
:::MLLOG {"namespace": "", "time_ms": 1679328932972, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20962.980049031787}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679328933121, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-20 11:15:34,349 Node[0] Epoch[34] Validation-accuracy=0.764000
2023-03-20 11:15:34,349 Node[0] Epoch[34] Validation-correct-count=4775.000000
2023-03-20 11:15:34,349 Node[0] Epoch[34] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679328934766, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679328934767, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76036, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679328934767, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679328934767, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679328951
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 11:15:51 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 11:15:51 AM'
ENDING TIMING RUN AT 2023-03-20 11:15:51 AM
+ result=2306
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2306,root,2023-03-20 10:37:25 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2306,root,2023-03-20 10:37:25 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679328951
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 11:15:51 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 11:15:51 AM'
ENDING TIMING RUN AT 2023-03-20 11:15:51 AM
+ result=2306
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2306,root,2023-03-20 10:37:25 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2306,root,2023-03-20 10:37:25 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679328951
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 11:15:51 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 11:15:51 AM'
ENDING TIMING RUN AT 2023-03-20 11:15:51 AM
+ result=2306
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2306,root,2023-03-20 10:37:25 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2306,root,2023-03-20 10:37:25 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679328951
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 11:15:51 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 11:15:51 AM'
ENDING TIMING RUN AT 2023-03-20 11:15:51 AM
+ result=2306
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2306,root,2023-03-20 10:37:25 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2306,root,2023-03-20 10:37:25 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679328951
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 11:15:51 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 11:15:51 AM'
ENDING TIMING RUN AT 2023-03-20 11:15:51 AM
+ result=2306
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2306,root,2023-03-20 10:37:25 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2306,root,2023-03-20 10:37:25 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679328952
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 11:15:52 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 11:15:52 AM'
ENDING TIMING RUN AT 2023-03-20 11:15:52 AM
+ result=2307
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2307,root,2023-03-20 10:37:25 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2307,root,2023-03-20 10:37:25 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679328952
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 11:15:52 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 11:15:52 AM'
ENDING TIMING RUN AT 2023-03-20 11:15:52 AM
+ result=2307
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2307,root,2023-03-20 10:37:25 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2307,root,2023-03-20 10:37:25 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679328952
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 11:15:52 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 11:15:52 AM'
ENDING TIMING RUN AT 2023-03-20 11:15:52 AM
+ result=2307
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2307,root,2023-03-20 10:37:25 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2307,root,2023-03-20 10:37:25 AM'
+ export PROFILE=0
+ PROFILE=0
