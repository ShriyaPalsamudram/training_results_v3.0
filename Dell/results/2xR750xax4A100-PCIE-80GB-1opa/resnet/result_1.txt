+ echo 'Beginning trial 2 of 5'
Beginning trial 2 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node041 node046 '
+ echo 'hosts=node041 node046 '
hosts=node041 node046 
+ for node in $hosts
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679321938787, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679321938816, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679321938817, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679321938819, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679321938820, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node041 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node041
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679321950354, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679321955639, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679321955668, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679321955669, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679321955670, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679321955671, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "2xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node046 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node046
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679321966255, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=21108
+ SEED=21108
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 8 singularity exec --nv -B /dev/shm/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node041: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node046: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export MOM=0.9
++ MOM=0.9
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ export WD=5.0e-05
++ WD=5.0e-05
++ LABELSMOOTHING=0.1
++ export MOM=0.9
++ MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LARSETA=0.001
++ LARSETA=0.001
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DGXNNODES=2
++ DGXNNODES=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ sed 's/^config_//'
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ sed 's/^config_//'
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
+++ sed 's/\.sh$//'
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
+++ sed 's/^config_//'
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
+++ sed 's/\.sh$//'
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++++ readlink -f ./config_2xR750xax4A100.sh
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++++ readlink -f ./config_2xR750xax4A100.sh
++ export DALI_THREADS=6
++ DALI_THREADS=6
+++ sed 's/\.sh$//'
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++++ readlink -f ./config_2xR750xax4A100.sh
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ date +%s
++ date +%s
++ date +%s
+ start=1679321967
+ start=1679321967
+ start=1679321967
+ start=1679321967
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 09:19:27 AM'
+ start_fmt='2023-03-20 09:19:27 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 09:19:27 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 09:19:27 AM'
STARTING TIMING RUN AT 2023-03-20 09:19:27 AM
STARTING TIMING RUN AT 2023-03-20 09:19:27 AM
+ start_fmt='2023-03-20 09:19:27 AM'
+ readonly global_rank=0
+ global_rank=0
+ readonly global_rank=0
+ global_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-20 09:19:27 AM'
+ readonly local_rank=0
+ local_rank=0
+ readonly local_rank=0
+ local_rank=0
STARTING TIMING RUN AT 2023-03-20 09:19:27 AM
+ readonly global_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ SLURM_NTASKS_PER_NODE=4
+ global_rank=0
+ OPTIMIZER=sgdwfastlars
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ start_fmt='2023-03-20 09:19:27 AM'
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ readonly local_rank=0
+ local_rank=0
+ INPUT_BATCH_MULTIPLIER=1
+ LR=12.5
+ KVSTORE=horovod
+ echo 'STARTING TIMING RUN AT 2023-03-20 09:19:27 AM'
+ MOM=0.9
+ LRSCHED=pow2
+ SLURM_NTASKS_PER_NODE=4
+ LR=12.5
+ MOM=0.9
STARTING TIMING RUN AT 2023-03-20 09:19:27 AM
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ readonly global_rank=0
+ global_rank=0
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LARSETA=0.001
+ INPUT_BATCH_MULTIPLIER=1
+ LABELSMOOTHING=0.1
+ SEED=21108
+ KVSTORE=horovod
+ EVAL_OFFSET=2
+ DALI_HW_DECODER_LOAD=0
+ LR=12.5
+ EVAL_PERIOD=4
+ WD=5.0e-05
+ readonly local_rank=0
+ local_rank=0
+ DALI_PREFETCH_QUEUE=5
+ MOM=0.9
+ LABELSMOOTHING=0.1
+ SEED=21108
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ SLURM_NTASKS_PER_NODE=4
+ DALI_CACHE_SIZE=0
+ LARSETA=0.001
+ EVAL_OFFSET=2
+ OPTIMIZER=sgdwfastlars
+ EVAL_PERIOD=4
+ DALI_ROI_DECODE=1
+ BATCHSIZE=408
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_PREFETCH_QUEUE=5
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ LABELSMOOTHING=0.1
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_CACHE_SIZE=0
+ SEED=21108
+ LR=12.5
+ DALI_DECODER_BUFFER_HINT=1315942
+ MOM=0.9
+ DALI_ROI_DECODE=1
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_PREFETCH_QUEUE=5
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ NUMEPOCHS=37
+ DALI_DECODER_BUFFER_HINT=1315942
+ WD=5.0e-05
+ DALI_CACHE_SIZE=0
+ DALI_CROP_BUFFER_HINT=165581
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ LABELSMOOTHING=0.1
+ SEED=21108
+ DALI_ROI_DECODE=1
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ PROFILE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ PROFILE_EXCEL=0
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_PREFETCH_QUEUE=5
+ NODALI=0
+ NUMEXAMPLES=
+ NETWORK=resnet-v1b-stats-fl
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_NVJPEG_MEMPADDING=256
+ PROFILE_ALL_LOCAL_RANKS=0
+ BN_GROUP=1
+ PROFILE=0
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ THR=0.759
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_DONT_USE_MMAP=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ [[ 0 == 1 ]]
+ NUMEPOCHS=37
+ NUMEXAMPLES=
+ NETWORK=resnet-v1b-stats-fl
+ DALI_PREALLOCATE_HEIGHT=6430
+ DATAROOT=/data
+ echo 'running benchmark'
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ export NGPUS=4
+ NGPUS=4
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
running benchmark
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ NUMEXAMPLES=
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ [[ 0 -ge 1 ]]
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ BN_GROUP=1
+ PROFILE=0
running benchmark
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DATAROOT=/data
+ echo 'running benchmark'
+ PROFILE_EXCEL=0
+ [[ 0 -ge 1 ]]
running benchmark
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ export NGPUS=4
+ NGPUS=4
+ THR=0.759
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 == 1 ]]
+ [[ 0 -ge 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+ source ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
+++ dirname ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_2xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ dirname ./config_2xR750xax4A100.sh
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=408
++ BATCHSIZE=408
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=12.5
++ LR=12.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_EVAL_THREADS=5
++ DALI_EVAL_THREADS=5
++ export DALI_EVAL_PREFETCH_QUEUE=15
++ DALI_EVAL_PREFETCH_QUEUE=15
++ export DALI_EVAL_HW_DECODER_LOAD=0
++ DALI_EVAL_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=2
++ DGXNNODES=2
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
+++ basename /workspace/image_classification/config_2xR750xax4A100.sh
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ date +%s
++ date +%s
++ export DGXSYSTEM=2xR750xax4A100
++ DGXSYSTEM=2xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ start=1679321967
+ start=1679321967
+ start=1679321967
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start=1679321967
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-20 09:19:27 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 09:19:27 AM'
STARTING TIMING RUN AT 2023-03-20 09:19:27 AM
+ start_fmt='2023-03-20 09:19:27 AM'
+ readonly global_rank=0
+ global_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-20 09:19:27 AM'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
STARTING TIMING RUN AT 2023-03-20 09:19:27 AM
+ readonly global_rank=0
+ global_rank=0
+ start_fmt='2023-03-20 09:19:27 AM'
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
STARTING TIMING RUN AT 2023-03-20 09:19:27 AM
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ echo 'STARTING TIMING RUN AT 2023-03-20 09:19:27 AM'
+ readonly global_rank=0
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21108
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21108
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ SEED=21108
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
running benchmark
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
running benchmark
+ [[ 0 -ge 1 ]]
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-20 09:19:27 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-20 09:19:27 AM'
STARTING TIMING RUN AT 2023-03-20 09:19:27 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=408
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
++ seq 0 3
+ LR=12.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
++ seq 0 3
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=21108
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
++ seq 0 3
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
++ tr '\n' ,
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
++ tr '\n' ,
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
++ tr '\n' ,
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
++ sed 's/,$//'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ sed 's/,$//'
++ sed 's/,$//'
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 408 --kv-store horovod --lr 12.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 21108 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node041:885040] MCW rank 1 is not bound (or bound to all available processors)
[node041:885041] MCW rank 3 is not bound (or bound to all available processors)
[node041:885038] MCW rank 2 is not bound (or bound to all available processors)
[node041:885039] MCW rank 0 is not bound (or bound to all available processors)
[node046:1057625] MCW rank 6 is not bound (or bound to all available processors)
[node046:1057624] MCW rank 5 is not bound (or bound to all available processors)
[node046:1057623] MCW rank 7 is not bound (or bound to all available processors)
[node046:1057626] MCW rank 4 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679321972590, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[09:19:39] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679321979634, "event_type": "POINT_IN_TIME", "key": "seed", "value": 21108, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[09:19:39] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:19:39] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:19:39] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:19:40] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:19:40] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:19:40] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[09:19:40] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679321982188, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 408, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[09:19:46] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:19:46] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:19:46] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:19:46] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679321986689, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986690, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986690, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986690, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986690, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986691, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986691, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986691, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986691, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986691, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986692, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986692, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986692, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986692, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986692, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986693, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986693, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986693, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986693, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986693, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986694, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986694, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986694, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986694, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986694, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986695, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986695, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986695, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986695, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986695, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986696, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986696, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986696, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986696, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986696, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986697, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986697, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986697, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986697, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986697, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986698, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986698, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986698, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986698, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986698, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986699, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986699, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986699, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986699, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986699, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986700, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986700, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986700, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986700, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986700, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986701, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986701, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986701, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986701, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986701, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986702, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986702, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986702, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986702, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986702, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986703, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986703, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986703, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986703, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986703, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986704, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986704, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986704, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986704, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986704, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986705, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986705, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986705, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986705, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986705, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986706, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986706, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986706, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986706, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986706, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986707, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986707, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986707, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986707, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986707, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986708, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986708, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986708, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986708, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986708, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986708, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986709, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986709, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986709, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986709, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986709, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986710, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986710, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986710, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986710, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986710, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986711, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986711, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986711, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986711, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986711, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986712, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986712, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986712, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986712, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986712, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986713, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986713, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986713, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986713, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986714, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986714, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986714, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986714, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986714, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986715, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986715, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986715, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986715, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986716, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986716, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986716, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986716, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986718, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986718, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986718, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986718, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986718, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986722, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986722, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679321986722, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[09:19:47] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:19:47] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:19:47] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[09:19:47] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 09:19:48,717 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=41625, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 09:19:48,718 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61535, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 09:19:48,719 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=18351, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 09:19:48,719 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=1119, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679321988718, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679321988720, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679321988720, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679321988720, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679321988720, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 408, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 09:19:48,720 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=25366, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679321988720, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679321988721, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679321988721, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679321988721, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679321988721, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 09:19:48,720 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=64243, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679321988721, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679321988721, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 09:19:48,720 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=34109, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-20 09:19:48,720 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=408, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=12.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=7784, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679321988721, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679321988721, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679321988721, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679321988721, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679321988721, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679321988721, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 12.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679321988721, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679321988721, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679322078567, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679322078568, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679322078568, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679322079115, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679322079238, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679322079239, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-20 09:21:22,500 Node[0] Epoch[0] Batch [0-20]	Speed: 20103.17 samples/sec	accuracy=nan
2023-03-20 09:21:25,602 Node[0] Epoch[0] Batch [20-40]	Speed: 21043.08 samples/sec	accuracy=nan
2023-03-20 09:21:28,706 Node[0] Epoch[0] Batch [40-60]	Speed: 21029.58 samples/sec	accuracy=nan
2023-03-20 09:21:31,806 Node[0] Epoch[0] Batch [60-80]	Speed: 21055.32 samples/sec	accuracy=nan
2023-03-20 09:21:34,910 Node[0] Epoch[0] Batch [80-100]	Speed: 21036.38 samples/sec	accuracy=nan
2023-03-20 09:21:38,010 Node[0] Epoch[0] Batch [100-120]	Speed: 21055.92 samples/sec	accuracy=nan
2023-03-20 09:21:41,113 Node[0] Epoch[0] Batch [120-140]	Speed: 21038.17 samples/sec	accuracy=nan
2023-03-20 09:21:44,218 Node[0] Epoch[0] Batch [140-160]	Speed: 21022.96 samples/sec	accuracy=nan
2023-03-20 09:21:47,326 Node[0] Epoch[0] Batch [160-180]	Speed: 21005.53 samples/sec	accuracy=nan
2023-03-20 09:21:50,431 Node[0] Epoch[0] Batch [180-200]	Speed: 21022.32 samples/sec	accuracy=nan
2023-03-20 09:21:53,543 Node[0] Epoch[0] Batch [200-220]	Speed: 20974.90 samples/sec	accuracy=nan
2023-03-20 09:21:56,657 Node[0] Epoch[0] Batch [220-240]	Speed: 20969.24 samples/sec	accuracy=nan
2023-03-20 09:22:06,558 Node[0] Epoch[0] Batch [240-260]	Speed: 6593.31 samples/sec	accuracy=nan
2023-03-20 09:22:11,941 Node[0] Epoch[0] Batch [260-280]	Speed: 12126.75 samples/sec	accuracy=nan
2023-03-20 09:22:17,335 Node[0] Epoch[0] Batch [280-300]	Speed: 12101.68 samples/sec	accuracy=nan
2023-03-20 09:22:20,449 Node[0] Epoch[0] Batch [300-320]	Speed: 20965.68 samples/sec	accuracy=nan
2023-03-20 09:22:23,561 Node[0] Epoch[0] Batch [320-340]	Speed: 20976.13 samples/sec	accuracy=nan
2023-03-20 09:22:26,682 Node[0] Epoch[0] Batch [340-360]	Speed: 20914.12 samples/sec	accuracy=nan
2023-03-20 09:22:29,798 Node[0] Epoch[0] Batch [360-380]	Speed: 20951.03 samples/sec	accuracy=nan
2023-03-20 09:22:31,669 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:22:31,669 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:22:31,670 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:22:31,669 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322151669, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-20 09:22:31,670 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:22:31,670 Node[0] Epoch[0] Time cost=72.431
2023-03-20 09:22:31,670 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322151670, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 17688.02758811551}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-20 09:22:31,670 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322151671, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-20 09:22:31,671 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:22:34,953 Node[0] Epoch[1] Batch [0-20]	Speed: 20878.21 samples/sec	accuracy=nan
2023-03-20 09:22:38,076 Node[0] Epoch[1] Batch [20-40]	Speed: 20904.96 samples/sec	accuracy=nan
2023-03-20 09:22:41,200 Node[0] Epoch[1] Batch [40-60]	Speed: 20893.53 samples/sec	accuracy=nan
2023-03-20 09:22:44,327 Node[0] Epoch[1] Batch [60-80]	Speed: 20878.38 samples/sec	accuracy=nan
2023-03-20 09:22:47,452 Node[0] Epoch[1] Batch [80-100]	Speed: 20886.53 samples/sec	accuracy=nan
2023-03-20 09:22:50,579 Node[0] Epoch[1] Batch [100-120]	Speed: 20876.06 samples/sec	accuracy=nan
2023-03-20 09:22:53,705 Node[0] Epoch[1] Batch [120-140]	Speed: 20884.52 samples/sec	accuracy=nan
2023-03-20 09:22:56,833 Node[0] Epoch[1] Batch [140-160]	Speed: 20869.17 samples/sec	accuracy=nan
2023-03-20 09:22:59,958 Node[0] Epoch[1] Batch [160-180]	Speed: 20887.78 samples/sec	accuracy=nan
2023-03-20 09:23:03,089 Node[0] Epoch[1] Batch [180-200]	Speed: 20854.10 samples/sec	accuracy=nan
2023-03-20 09:23:06,217 Node[0] Epoch[1] Batch [200-220]	Speed: 20871.59 samples/sec	accuracy=nan
2023-03-20 09:23:09,339 Node[0] Epoch[1] Batch [220-240]	Speed: 20903.83 samples/sec	accuracy=nan
2023-03-20 09:23:12,463 Node[0] Epoch[1] Batch [240-260]	Speed: 20897.64 samples/sec	accuracy=nan
2023-03-20 09:23:15,590 Node[0] Epoch[1] Batch [260-280]	Speed: 20874.19 samples/sec	accuracy=nan
2023-03-20 09:23:18,719 Node[0] Epoch[1] Batch [280-300]	Speed: 20866.43 samples/sec	accuracy=nan
2023-03-20 09:23:21,840 Node[0] Epoch[1] Batch [300-320]	Speed: 20914.80 samples/sec	accuracy=nan
2023-03-20 09:23:24,966 Node[0] Epoch[1] Batch [320-340]	Speed: 20886.66 samples/sec	accuracy=nan
2023-03-20 09:23:28,091 Node[0] Epoch[1] Batch [340-360]	Speed: 20889.90 samples/sec	accuracy=nan
2023-03-20 09:23:31,219 Node[0] Epoch[1] Batch [360-380]	Speed: 20866.25 samples/sec	accuracy=nan
2023-03-20 09:23:33,090 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:23:33,090 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:23:33,090 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:23:33,090 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:23:33,090 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:23:33,090 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:23:33,090 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322213090, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-20 09:23:33,091 Node[0] Epoch[1] Time cost=61.420
:::MLLOG {"namespace": "", "time_ms": 1679322213091, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20859.05015823148}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679322213092, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-20 09:23:33,092 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:23:36,374 Node[0] Epoch[2] Batch [0-20]	Speed: 20882.63 samples/sec	accuracy=nan
2023-03-20 09:23:39,496 Node[0] Epoch[2] Batch [20-40]	Speed: 20906.31 samples/sec	accuracy=nan
2023-03-20 09:23:42,618 Node[0] Epoch[2] Batch [40-60]	Speed: 20910.92 samples/sec	accuracy=nan
2023-03-20 09:23:45,741 Node[0] Epoch[2] Batch [60-80]	Speed: 20902.68 samples/sec	accuracy=nan
2023-03-20 09:23:48,863 Node[0] Epoch[2] Batch [80-100]	Speed: 20908.97 samples/sec	accuracy=nan
2023-03-20 09:23:51,984 Node[0] Epoch[2] Batch [100-120]	Speed: 20913.73 samples/sec	accuracy=nan
2023-03-20 09:23:55,103 Node[0] Epoch[2] Batch [120-140]	Speed: 20934.57 samples/sec	accuracy=nan
2023-03-20 09:23:58,223 Node[0] Epoch[2] Batch [140-160]	Speed: 20919.40 samples/sec	accuracy=nan
2023-03-20 09:24:01,343 Node[0] Epoch[2] Batch [160-180]	Speed: 20927.13 samples/sec	accuracy=nan
2023-03-20 09:24:04,465 Node[0] Epoch[2] Batch [180-200]	Speed: 20907.64 samples/sec	accuracy=nan
2023-03-20 09:24:07,582 Node[0] Epoch[2] Batch [200-220]	Speed: 20941.10 samples/sec	accuracy=nan
2023-03-20 09:24:10,700 Node[0] Epoch[2] Batch [220-240]	Speed: 20939.23 samples/sec	accuracy=nan
2023-03-20 09:24:13,818 Node[0] Epoch[2] Batch [240-260]	Speed: 20937.21 samples/sec	accuracy=nan
2023-03-20 09:24:16,932 Node[0] Epoch[2] Batch [260-280]	Speed: 20960.37 samples/sec	accuracy=nan
2023-03-20 09:24:20,054 Node[0] Epoch[2] Batch [280-300]	Speed: 20913.04 samples/sec	accuracy=nan
2023-03-20 09:24:23,170 Node[0] Epoch[2] Batch [300-320]	Speed: 20946.70 samples/sec	accuracy=nan
2023-03-20 09:24:26,286 Node[0] Epoch[2] Batch [320-340]	Speed: 20951.14 samples/sec	accuracy=nan
2023-03-20 09:24:29,402 Node[0] Epoch[2] Batch [340-360]	Speed: 20947.84 samples/sec	accuracy=nan
2023-03-20 09:24:32,520 Node[0] Epoch[2] Batch [360-380]	Speed: 20938.17 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679322274230, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-20 09:24:34,231 Node[0] Epoch[2] Time cost=61.139
:::MLLOG {"namespace": "", "time_ms": 1679322274231, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20955.003525130076}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
2023-03-20 09:24:34,381 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:24:34,381 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:24:34,381 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:24:34,381 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322274382, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-20 09:24:34,381 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:24:34,382 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:24:34,381 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:24:34,382 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:24:35,530 Node[0] Epoch[2] Validation-accuracy=0.302880
2023-03-20 09:24:35,530 Node[0] Epoch[2] Validation-correct-count=1893.000000
2023-03-20 09:24:35,530 Node[0] Epoch[2] Validation-total-count=6250.000000
2023-03-20 09:24:35,944 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322275944, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679322275945, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.30322, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-20 09:24:35,945 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322275945, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1679322275945, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-20 09:24:35,945 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:24:35,944 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:24:35,944 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:24:35,944 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:24:35,945 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322275945, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-20 09:24:35,945 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:24:39,082 Node[0] Epoch[3] Batch [0-20]	Speed: 20900.50 samples/sec	accuracy=nan
2023-03-20 09:24:42,188 Node[0] Epoch[3] Batch [20-40]	Speed: 21018.22 samples/sec	accuracy=nan
2023-03-20 09:24:45,290 Node[0] Epoch[3] Batch [40-60]	Speed: 21040.15 samples/sec	accuracy=nan
2023-03-20 09:24:48,396 Node[0] Epoch[3] Batch [60-80]	Speed: 21017.75 samples/sec	accuracy=nan
2023-03-20 09:24:51,505 Node[0] Epoch[3] Batch [80-100]	Speed: 21000.48 samples/sec	accuracy=nan
2023-03-20 09:24:54,608 Node[0] Epoch[3] Batch [100-120]	Speed: 21033.99 samples/sec	accuracy=nan
2023-03-20 09:24:57,710 Node[0] Epoch[3] Batch [120-140]	Speed: 21044.92 samples/sec	accuracy=nan
2023-03-20 09:25:00,814 Node[0] Epoch[3] Batch [140-160]	Speed: 21030.10 samples/sec	accuracy=nan
2023-03-20 09:25:03,918 Node[0] Epoch[3] Batch [160-180]	Speed: 21035.51 samples/sec	accuracy=nan
2023-03-20 09:25:07,025 Node[0] Epoch[3] Batch [180-200]	Speed: 21011.11 samples/sec	accuracy=nan
2023-03-20 09:25:10,129 Node[0] Epoch[3] Batch [200-220]	Speed: 21028.72 samples/sec	accuracy=nan
2023-03-20 09:25:13,237 Node[0] Epoch[3] Batch [220-240]	Speed: 21003.20 samples/sec	accuracy=nan
2023-03-20 09:25:16,343 Node[0] Epoch[3] Batch [240-260]	Speed: 21014.62 samples/sec	accuracy=nan
2023-03-20 09:25:19,449 Node[0] Epoch[3] Batch [260-280]	Speed: 21018.17 samples/sec	accuracy=nan
2023-03-20 09:25:22,556 Node[0] Epoch[3] Batch [280-300]	Speed: 21011.67 samples/sec	accuracy=nan
2023-03-20 09:25:25,660 Node[0] Epoch[3] Batch [300-320]	Speed: 21031.68 samples/sec	accuracy=nan
2023-03-20 09:25:28,763 Node[0] Epoch[3] Batch [320-340]	Speed: 21035.94 samples/sec	accuracy=nan
2023-03-20 09:25:31,870 Node[0] Epoch[3] Batch [340-360]	Speed: 21009.51 samples/sec	accuracy=nan
2023-03-20 09:25:34,975 Node[0] Epoch[3] Batch [360-380]	Speed: 21024.93 samples/sec	accuracy=nan
2023-03-20 09:25:36,836 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:25:36,836 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:25:36,837 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:25:36,837 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:25:36,837 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322336837, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-20 09:25:36,837 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:25:36,838 Node[0] Epoch[3] Time cost=60.893
2023-03-20 09:25:36,838 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322336838, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21039.757112232302}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679322336838, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-20 09:25:36,838 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:25:40,102 Node[0] Epoch[4] Batch [0-20]	Speed: 21000.78 samples/sec	accuracy=nan
2023-03-20 09:25:43,207 Node[0] Epoch[4] Batch [20-40]	Speed: 21021.88 samples/sec	accuracy=nan
2023-03-20 09:25:46,309 Node[0] Epoch[4] Batch [40-60]	Speed: 21046.08 samples/sec	accuracy=nan
2023-03-20 09:25:49,409 Node[0] Epoch[4] Batch [60-80]	Speed: 21057.28 samples/sec	accuracy=nan
2023-03-20 09:25:52,512 Node[0] Epoch[4] Batch [80-100]	Speed: 21032.93 samples/sec	accuracy=nan
2023-03-20 09:25:55,618 Node[0] Epoch[4] Batch [100-120]	Speed: 21022.59 samples/sec	accuracy=nan
2023-03-20 09:25:58,722 Node[0] Epoch[4] Batch [120-140]	Speed: 21026.22 samples/sec	accuracy=nan
2023-03-20 09:26:01,822 Node[0] Epoch[4] Batch [140-160]	Speed: 21063.03 samples/sec	accuracy=nan
2023-03-20 09:26:04,923 Node[0] Epoch[4] Batch [160-180]	Speed: 21047.43 samples/sec	accuracy=nan
2023-03-20 09:26:08,030 Node[0] Epoch[4] Batch [180-200]	Speed: 21011.47 samples/sec	accuracy=nan
2023-03-20 09:26:11,136 Node[0] Epoch[4] Batch [200-220]	Speed: 21020.79 samples/sec	accuracy=nan
2023-03-20 09:26:14,237 Node[0] Epoch[4] Batch [220-240]	Speed: 21047.09 samples/sec	accuracy=nan
2023-03-20 09:26:17,339 Node[0] Epoch[4] Batch [240-260]	Speed: 21043.72 samples/sec	accuracy=nan
2023-03-20 09:26:20,438 Node[0] Epoch[4] Batch [260-280]	Speed: 21070.67 samples/sec	accuracy=nan
2023-03-20 09:26:23,541 Node[0] Epoch[4] Batch [280-300]	Speed: 21037.02 samples/sec	accuracy=nan
2023-03-20 09:26:26,643 Node[0] Epoch[4] Batch [300-320]	Speed: 21044.87 samples/sec	accuracy=nan
2023-03-20 09:26:29,744 Node[0] Epoch[4] Batch [320-340]	Speed: 21045.21 samples/sec	accuracy=nan
2023-03-20 09:26:32,849 Node[0] Epoch[4] Batch [340-360]	Speed: 21024.93 samples/sec	accuracy=nan
2023-03-20 09:26:35,952 Node[0] Epoch[4] Batch [360-380]	Speed: 21038.52 samples/sec	accuracy=nan
2023-03-20 09:26:37,656 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:26:37,657 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:26:37,657 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:26:37,657 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:26:37,657 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:26:37,657 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:26:37,657 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322397657, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-20 09:26:37,658 Node[0] Epoch[4] Time cost=60.820
:::MLLOG {"namespace": "", "time_ms": 1679322397658, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21064.94854425889}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1679322397658, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-20 09:26:37,659 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:26:40,915 Node[0] Epoch[5] Batch [0-20]	Speed: 21065.59 samples/sec	accuracy=nan
2023-03-20 09:26:44,015 Node[0] Epoch[5] Batch [20-40]	Speed: 21056.96 samples/sec	accuracy=nan
2023-03-20 09:26:47,114 Node[0] Epoch[5] Batch [40-60]	Speed: 21064.28 samples/sec	accuracy=nan
2023-03-20 09:26:50,216 Node[0] Epoch[5] Batch [60-80]	Speed: 21047.42 samples/sec	accuracy=nan
2023-03-20 09:26:53,316 Node[0] Epoch[5] Batch [80-100]	Speed: 21055.80 samples/sec	accuracy=nan
2023-03-20 09:26:56,418 Node[0] Epoch[5] Batch [100-120]	Speed: 21045.21 samples/sec	accuracy=nan
2023-03-20 09:26:59,518 Node[0] Epoch[5] Batch [120-140]	Speed: 21061.29 samples/sec	accuracy=nan
2023-03-20 09:27:02,617 Node[0] Epoch[5] Batch [140-160]	Speed: 21060.11 samples/sec	accuracy=nan
2023-03-20 09:27:05,717 Node[0] Epoch[5] Batch [160-180]	Speed: 21058.42 samples/sec	accuracy=nan
2023-03-20 09:27:08,819 Node[0] Epoch[5] Batch [180-200]	Speed: 21046.69 samples/sec	accuracy=nan
2023-03-20 09:27:11,921 Node[0] Epoch[5] Batch [200-220]	Speed: 21042.46 samples/sec	accuracy=nan
2023-03-20 09:27:15,022 Node[0] Epoch[5] Batch [220-240]	Speed: 21053.68 samples/sec	accuracy=nan
2023-03-20 09:27:18,121 Node[0] Epoch[5] Batch [240-260]	Speed: 21065.67 samples/sec	accuracy=nan
2023-03-20 09:27:21,221 Node[0] Epoch[5] Batch [260-280]	Speed: 21054.57 samples/sec	accuracy=nan
2023-03-20 09:27:24,321 Node[0] Epoch[5] Batch [280-300]	Speed: 21059.83 samples/sec	accuracy=nan
2023-03-20 09:27:27,422 Node[0] Epoch[5] Batch [300-320]	Speed: 21049.60 samples/sec	accuracy=nan
2023-03-20 09:27:30,519 Node[0] Epoch[5] Batch [320-340]	Speed: 21079.35 samples/sec	accuracy=nan
2023-03-20 09:27:33,617 Node[0] Epoch[5] Batch [340-360]	Speed: 21075.09 samples/sec	accuracy=nan
2023-03-20 09:27:36,717 Node[0] Epoch[5] Batch [360-380]	Speed: 21054.73 samples/sec	accuracy=nan
2023-03-20 09:27:38,574 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:27:38,574 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:27:38,575 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:27:38,575 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:27:38,575 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:27:38,575 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:27:38,575 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322458575, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-20 09:27:38,577 Node[0] Epoch[5] Time cost=60.918
:::MLLOG {"namespace": "", "time_ms": 1679322458577, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21031.0045406836}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679322458577, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-20 09:27:38,577 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:27:41,828 Node[0] Epoch[6] Batch [0-20]	Speed: 21077.60 samples/sec	accuracy=nan
2023-03-20 09:27:44,924 Node[0] Epoch[6] Batch [20-40]	Speed: 21089.68 samples/sec	accuracy=nan
2023-03-20 09:27:48,022 Node[0] Epoch[6] Batch [40-60]	Speed: 21070.43 samples/sec	accuracy=nan
2023-03-20 09:27:51,120 Node[0] Epoch[6] Batch [60-80]	Speed: 21074.23 samples/sec	accuracy=nan
2023-03-20 09:27:54,220 Node[0] Epoch[6] Batch [80-100]	Speed: 21056.52 samples/sec	accuracy=nan
2023-03-20 09:27:57,316 Node[0] Epoch[6] Batch [100-120]	Speed: 21080.21 samples/sec	accuracy=nan
2023-03-20 09:28:00,417 Node[0] Epoch[6] Batch [120-140]	Speed: 21052.17 samples/sec	accuracy=nan
2023-03-20 09:28:03,515 Node[0] Epoch[6] Batch [140-160]	Speed: 21071.32 samples/sec	accuracy=nan
2023-03-20 09:28:06,617 Node[0] Epoch[6] Batch [160-180]	Speed: 21049.24 samples/sec	accuracy=nan
2023-03-20 09:28:09,717 Node[0] Epoch[6] Batch [180-200]	Speed: 21056.47 samples/sec	accuracy=nan
2023-03-20 09:28:12,816 Node[0] Epoch[6] Batch [200-220]	Speed: 21064.13 samples/sec	accuracy=nan
2023-03-20 09:28:15,915 Node[0] Epoch[6] Batch [220-240]	Speed: 21066.36 samples/sec	accuracy=nan
2023-03-20 09:28:19,013 Node[0] Epoch[6] Batch [240-260]	Speed: 21069.24 samples/sec	accuracy=nan
2023-03-20 09:28:22,112 Node[0] Epoch[6] Batch [260-280]	Speed: 21067.55 samples/sec	accuracy=nan
2023-03-20 09:28:25,210 Node[0] Epoch[6] Batch [280-300]	Speed: 21071.60 samples/sec	accuracy=nan
2023-03-20 09:28:28,314 Node[0] Epoch[6] Batch [300-320]	Speed: 21030.39 samples/sec	accuracy=nan
2023-03-20 09:28:31,410 Node[0] Epoch[6] Batch [320-340]	Speed: 21081.57 samples/sec	accuracy=nan
2023-03-20 09:28:34,511 Node[0] Epoch[6] Batch [340-360]	Speed: 21055.00 samples/sec	accuracy=nan
2023-03-20 09:28:37,611 Node[0] Epoch[6] Batch [360-380]	Speed: 21060.06 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679322519311, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-20 09:28:39,312 Node[0] Epoch[6] Time cost=60.735
:::MLLOG {"namespace": "", "time_ms": 1679322519312, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21094.25767608771}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679322519463, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-20 09:28:40,649 Node[0] Epoch[6] Validation-accuracy=0.353280
2023-03-20 09:28:40,649 Node[0] Epoch[6] Validation-correct-count=2208.000000
2023-03-20 09:28:40,649 Node[0] Epoch[6] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679322521107, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679322521108, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.35182, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679322521108, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
2023-03-20 09:28:41,108 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322521108, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-20 09:28:41,108 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:28:41,108 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:28:41,108 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:28:41,108 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:28:41,108 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322521108, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-20 09:28:41,108 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:28:41,108 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:28:44,233 Node[0] Epoch[7] Batch [0-20]	Speed: 20946.63 samples/sec	accuracy=nan
2023-03-20 09:28:47,332 Node[0] Epoch[7] Batch [20-40]	Speed: 21065.38 samples/sec	accuracy=nan
2023-03-20 09:28:50,428 Node[0] Epoch[7] Batch [40-60]	Speed: 21083.10 samples/sec	accuracy=nan
2023-03-20 09:28:53,524 Node[0] Epoch[7] Batch [60-80]	Speed: 21084.74 samples/sec	accuracy=nan
2023-03-20 09:28:56,622 Node[0] Epoch[7] Batch [80-100]	Speed: 21077.06 samples/sec	accuracy=nan
2023-03-20 09:28:59,722 Node[0] Epoch[7] Batch [100-120]	Speed: 21054.84 samples/sec	accuracy=nan
2023-03-20 09:29:02,823 Node[0] Epoch[7] Batch [120-140]	Speed: 21049.69 samples/sec	accuracy=nan
2023-03-20 09:29:05,919 Node[0] Epoch[7] Batch [140-160]	Speed: 21087.45 samples/sec	accuracy=nan
2023-03-20 09:29:09,022 Node[0] Epoch[7] Batch [160-180]	Speed: 21034.36 samples/sec	accuracy=nan
2023-03-20 09:29:12,126 Node[0] Epoch[7] Batch [180-200]	Speed: 21035.00 samples/sec	accuracy=nan
2023-03-20 09:29:15,229 Node[0] Epoch[7] Batch [200-220]	Speed: 21037.79 samples/sec	accuracy=nan
2023-03-20 09:29:18,325 Node[0] Epoch[7] Batch [220-240]	Speed: 21082.35 samples/sec	accuracy=nan
2023-03-20 09:29:21,419 Node[0] Epoch[7] Batch [240-260]	Speed: 21098.39 samples/sec	accuracy=nan
2023-03-20 09:29:24,516 Node[0] Epoch[7] Batch [260-280]	Speed: 21082.89 samples/sec	accuracy=nan
2023-03-20 09:29:27,612 Node[0] Epoch[7] Batch [280-300]	Speed: 21085.75 samples/sec	accuracy=nan
2023-03-20 09:29:30,712 Node[0] Epoch[7] Batch [300-320]	Speed: 21057.27 samples/sec	accuracy=nan
2023-03-20 09:29:33,810 Node[0] Epoch[7] Batch [320-340]	Speed: 21066.19 samples/sec	accuracy=nan
2023-03-20 09:29:36,909 Node[0] Epoch[7] Batch [340-360]	Speed: 21065.96 samples/sec	accuracy=nan
2023-03-20 09:29:40,008 Node[0] Epoch[7] Batch [360-380]	Speed: 21064.38 samples/sec	accuracy=nan
2023-03-20 09:29:41,864 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:29:41,864 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:29:41,864 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:29:41,864 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:29:41,865 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:29:41,865 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:29:41,865 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322581864, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-20 09:29:41,866 Node[0] Epoch[7] Time cost=60.757
:::MLLOG {"namespace": "", "time_ms": 1679322581866, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21086.59178096682}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679322581866, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-20 09:29:41,866 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:29:45,123 Node[0] Epoch[8] Batch [0-20]	Speed: 21045.46 samples/sec	accuracy=nan
2023-03-20 09:29:48,221 Node[0] Epoch[8] Batch [20-40]	Speed: 21075.39 samples/sec	accuracy=nan
2023-03-20 09:29:51,319 Node[0] Epoch[8] Batch [40-60]	Speed: 21071.89 samples/sec	accuracy=nan
2023-03-20 09:29:54,418 Node[0] Epoch[8] Batch [60-80]	Speed: 21063.31 samples/sec	accuracy=nan
2023-03-20 09:29:57,519 Node[0] Epoch[8] Batch [80-100]	Speed: 21051.64 samples/sec	accuracy=nan
2023-03-20 09:30:00,619 Node[0] Epoch[8] Batch [100-120]	Speed: 21054.53 samples/sec	accuracy=nan
2023-03-20 09:30:03,721 Node[0] Epoch[8] Batch [120-140]	Speed: 21049.15 samples/sec	accuracy=nan
2023-03-20 09:30:06,822 Node[0] Epoch[8] Batch [140-160]	Speed: 21046.32 samples/sec	accuracy=nan
2023-03-20 09:30:09,927 Node[0] Epoch[8] Batch [160-180]	Speed: 21026.42 samples/sec	accuracy=nan
2023-03-20 09:30:13,029 Node[0] Epoch[8] Batch [180-200]	Speed: 21044.89 samples/sec	accuracy=nan
2023-03-20 09:30:16,129 Node[0] Epoch[8] Batch [200-220]	Speed: 21060.85 samples/sec	accuracy=nan
2023-03-20 09:30:19,228 Node[0] Epoch[8] Batch [220-240]	Speed: 21061.03 samples/sec	accuracy=nan
2023-03-20 09:30:22,331 Node[0] Epoch[8] Batch [240-260]	Speed: 21036.14 samples/sec	accuracy=nan
2023-03-20 09:30:25,432 Node[0] Epoch[8] Batch [260-280]	Speed: 21052.88 samples/sec	accuracy=nan
2023-03-20 09:30:28,537 Node[0] Epoch[8] Batch [280-300]	Speed: 21028.71 samples/sec	accuracy=nan
2023-03-20 09:30:31,637 Node[0] Epoch[8] Batch [300-320]	Speed: 21057.11 samples/sec	accuracy=nan
2023-03-20 09:30:34,735 Node[0] Epoch[8] Batch [320-340]	Speed: 21072.14 samples/sec	accuracy=nan
2023-03-20 09:30:37,835 Node[0] Epoch[8] Batch [340-360]	Speed: 21053.59 samples/sec	accuracy=nan
2023-03-20 09:30:40,938 Node[0] Epoch[8] Batch [360-380]	Speed: 21042.67 samples/sec	accuracy=nan
2023-03-20 09:30:42,638 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:30:42,639 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:30:42,639 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:30:42,639 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:30:42,639 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:30:42,639 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:30:42,640 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322642639, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-20 09:30:42,641 Node[0] Epoch[8] Time cost=60.774
:::MLLOG {"namespace": "", "time_ms": 1679322642641, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21080.72928336525}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679322642641, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-20 09:30:42,641 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:30:45,894 Node[0] Epoch[9] Batch [0-20]	Speed: 21083.70 samples/sec	accuracy=nan
2023-03-20 09:30:48,996 Node[0] Epoch[9] Batch [20-40]	Speed: 21043.50 samples/sec	accuracy=nan
2023-03-20 09:30:52,099 Node[0] Epoch[9] Batch [40-60]	Speed: 21038.48 samples/sec	accuracy=nan
2023-03-20 09:30:55,199 Node[0] Epoch[9] Batch [60-80]	Speed: 21057.09 samples/sec	accuracy=nan
2023-03-20 09:30:58,298 Node[0] Epoch[9] Batch [80-100]	Speed: 21064.65 samples/sec	accuracy=nan
2023-03-20 09:31:01,400 Node[0] Epoch[9] Batch [100-120]	Speed: 21045.00 samples/sec	accuracy=nan
2023-03-20 09:31:04,500 Node[0] Epoch[9] Batch [120-140]	Speed: 21062.49 samples/sec	accuracy=nan
2023-03-20 09:31:07,603 Node[0] Epoch[9] Batch [140-160]	Speed: 21036.40 samples/sec	accuracy=nan
2023-03-20 09:31:10,710 Node[0] Epoch[9] Batch [160-180]	Speed: 21009.99 samples/sec	accuracy=nan
2023-03-20 09:31:13,818 Node[0] Epoch[9] Batch [180-200]	Speed: 21004.47 samples/sec	accuracy=nan
2023-03-20 09:31:16,925 Node[0] Epoch[9] Batch [200-220]	Speed: 21009.62 samples/sec	accuracy=nan
2023-03-20 09:31:20,033 Node[0] Epoch[9] Batch [220-240]	Speed: 21003.99 samples/sec	accuracy=nan
2023-03-20 09:31:23,140 Node[0] Epoch[9] Batch [240-260]	Speed: 21007.76 samples/sec	accuracy=nan
2023-03-20 09:31:26,250 Node[0] Epoch[9] Batch [260-280]	Speed: 20995.30 samples/sec	accuracy=nan
2023-03-20 09:31:29,358 Node[0] Epoch[9] Batch [280-300]	Speed: 21001.24 samples/sec	accuracy=nan
2023-03-20 09:31:32,466 Node[0] Epoch[9] Batch [300-320]	Speed: 21005.06 samples/sec	accuracy=nan
2023-03-20 09:31:35,565 Node[0] Epoch[9] Batch [320-340]	Speed: 21059.98 samples/sec	accuracy=nan
2023-03-20 09:31:38,664 Node[0] Epoch[9] Batch [340-360]	Speed: 21068.52 samples/sec	accuracy=nan
2023-03-20 09:31:41,769 Node[0] Epoch[9] Batch [360-380]	Speed: 21026.07 samples/sec	accuracy=nan
2023-03-20 09:31:43,626 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:31:43,626 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:31:43,626 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:31:43,626 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:31:43,626 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:31:43,626 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:31:43,626 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322703626, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-20 09:31:43,628 Node[0] Epoch[9] Time cost=60.987
:::MLLOG {"namespace": "", "time_ms": 1679322703628, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21007.372007443646}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1679322703628, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-20 09:31:43,628 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:31:46,884 Node[0] Epoch[10] Batch [0-20]	Speed: 21053.37 samples/sec	accuracy=nan
2023-03-20 09:31:49,984 Node[0] Epoch[10] Batch [20-40]	Speed: 21054.62 samples/sec	accuracy=nan
2023-03-20 09:31:53,089 Node[0] Epoch[10] Batch [40-60]	Speed: 21025.66 samples/sec	accuracy=nan
2023-03-20 09:31:56,196 Node[0] Epoch[10] Batch [60-80]	Speed: 21015.58 samples/sec	accuracy=nan
2023-03-20 09:31:59,304 Node[0] Epoch[10] Batch [80-100]	Speed: 20998.16 samples/sec	accuracy=nan
2023-03-20 09:32:02,409 Node[0] Epoch[10] Batch [100-120]	Speed: 21025.48 samples/sec	accuracy=nan
2023-03-20 09:32:05,514 Node[0] Epoch[10] Batch [120-140]	Speed: 21024.39 samples/sec	accuracy=nan
2023-03-20 09:32:08,620 Node[0] Epoch[10] Batch [140-160]	Speed: 21017.86 samples/sec	accuracy=nan
2023-03-20 09:32:11,728 Node[0] Epoch[10] Batch [160-180]	Speed: 21006.16 samples/sec	accuracy=nan
2023-03-20 09:32:14,835 Node[0] Epoch[10] Batch [180-200]	Speed: 21007.34 samples/sec	accuracy=nan
2023-03-20 09:32:17,943 Node[0] Epoch[10] Batch [200-220]	Speed: 21006.91 samples/sec	accuracy=nan
2023-03-20 09:32:21,049 Node[0] Epoch[10] Batch [220-240]	Speed: 21017.80 samples/sec	accuracy=nan
2023-03-20 09:32:24,157 Node[0] Epoch[10] Batch [240-260]	Speed: 21001.62 samples/sec	accuracy=nan
2023-03-20 09:32:27,262 Node[0] Epoch[10] Batch [260-280]	Speed: 21020.98 samples/sec	accuracy=nan
2023-03-20 09:32:30,369 Node[0] Epoch[10] Batch [280-300]	Speed: 21012.15 samples/sec	accuracy=nan
2023-03-20 09:32:33,473 Node[0] Epoch[10] Batch [300-320]	Speed: 21033.58 samples/sec	accuracy=nan
2023-03-20 09:32:36,576 Node[0] Epoch[10] Batch [320-340]	Speed: 21035.79 samples/sec	accuracy=nan
2023-03-20 09:32:39,678 Node[0] Epoch[10] Batch [340-360]	Speed: 21047.28 samples/sec	accuracy=nan
2023-03-20 09:32:42,779 Node[0] Epoch[10] Batch [360-380]	Speed: 21052.72 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679322764482, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-20 09:32:44,483 Node[0] Epoch[10] Time cost=60.855
:::MLLOG {"namespace": "", "time_ms": 1679322764483, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21052.816166570312}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679322764633, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-20 09:32:45,896 Node[0] Epoch[10] Validation-accuracy=0.507200
2023-03-20 09:32:45,896 Node[0] Epoch[10] Validation-correct-count=3170.000000
2023-03-20 09:32:45,896 Node[0] Epoch[10] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679322766283, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679322766284, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.50486, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
2023-03-20 09:32:46,283 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322766284, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-20 09:32:46,284 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:32:46,284 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322766284, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-20 09:32:46,283 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:32:46,283 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:32:46,283 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:32:46,284 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322766284, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-20 09:32:46,284 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:32:49,406 Node[0] Epoch[11] Batch [0-20]	Speed: 20969.06 samples/sec	accuracy=nan
2023-03-20 09:32:52,515 Node[0] Epoch[11] Batch [20-40]	Speed: 21002.31 samples/sec	accuracy=nan
2023-03-20 09:32:55,620 Node[0] Epoch[11] Batch [40-60]	Speed: 21019.27 samples/sec	accuracy=nan
2023-03-20 09:32:58,726 Node[0] Epoch[11] Batch [60-80]	Speed: 21018.73 samples/sec	accuracy=nan
2023-03-20 09:33:01,832 Node[0] Epoch[11] Batch [80-100]	Speed: 21020.00 samples/sec	accuracy=nan
2023-03-20 09:33:04,939 Node[0] Epoch[11] Batch [100-120]	Speed: 21008.67 samples/sec	accuracy=nan
2023-03-20 09:33:08,043 Node[0] Epoch[11] Batch [120-140]	Speed: 21031.32 samples/sec	accuracy=nan
2023-03-20 09:33:11,151 Node[0] Epoch[11] Batch [140-160]	Speed: 21002.75 samples/sec	accuracy=nan
2023-03-20 09:33:14,267 Node[0] Epoch[11] Batch [160-180]	Speed: 20953.11 samples/sec	accuracy=nan
2023-03-20 09:33:17,372 Node[0] Epoch[11] Batch [180-200]	Speed: 21021.55 samples/sec	accuracy=nan
2023-03-20 09:33:20,480 Node[0] Epoch[11] Batch [200-220]	Speed: 21006.09 samples/sec	accuracy=nan
2023-03-20 09:33:23,588 Node[0] Epoch[11] Batch [220-240]	Speed: 20999.03 samples/sec	accuracy=nan
2023-03-20 09:33:26,691 Node[0] Epoch[11] Batch [240-260]	Speed: 21041.66 samples/sec	accuracy=nan
2023-03-20 09:33:29,797 Node[0] Epoch[11] Batch [260-280]	Speed: 21014.30 samples/sec	accuracy=nan
2023-03-20 09:33:32,901 Node[0] Epoch[11] Batch [280-300]	Speed: 21036.15 samples/sec	accuracy=nan
2023-03-20 09:33:36,007 Node[0] Epoch[11] Batch [300-320]	Speed: 21015.94 samples/sec	accuracy=nan
2023-03-20 09:33:39,112 Node[0] Epoch[11] Batch [320-340]	Speed: 21021.96 samples/sec	accuracy=nan
2023-03-20 09:33:42,215 Node[0] Epoch[11] Batch [340-360]	Speed: 21038.67 samples/sec	accuracy=nan
2023-03-20 09:33:45,315 Node[0] Epoch[11] Batch [360-380]	Speed: 21057.88 samples/sec	accuracy=nan
2023-03-20 09:33:47,173 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:33:47,173 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:33:47,174 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:33:47,174 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:33:47,174 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:33:47,174 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:33:47,175 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322827174, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-20 09:33:47,176 Node[0] Epoch[11] Time cost=60.892
:::MLLOG {"namespace": "", "time_ms": 1679322827176, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21040.14026330329}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679322827176, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-20 09:33:47,176 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:33:50,437 Node[0] Epoch[12] Batch [0-20]	Speed: 21020.64 samples/sec	accuracy=nan
2023-03-20 09:33:53,537 Node[0] Epoch[12] Batch [20-40]	Speed: 21053.25 samples/sec	accuracy=nan
2023-03-20 09:33:56,636 Node[0] Epoch[12] Batch [40-60]	Speed: 21065.54 samples/sec	accuracy=nan
2023-03-20 09:33:59,737 Node[0] Epoch[12] Batch [60-80]	Speed: 21056.21 samples/sec	accuracy=nan
2023-03-20 09:34:02,838 Node[0] Epoch[12] Batch [80-100]	Speed: 21050.29 samples/sec	accuracy=nan
2023-03-20 09:34:05,936 Node[0] Epoch[12] Batch [100-120]	Speed: 21068.04 samples/sec	accuracy=nan
2023-03-20 09:34:09,036 Node[0] Epoch[12] Batch [120-140]	Speed: 21058.47 samples/sec	accuracy=nan
2023-03-20 09:34:12,135 Node[0] Epoch[12] Batch [140-160]	Speed: 21064.80 samples/sec	accuracy=nan
2023-03-20 09:34:15,236 Node[0] Epoch[12] Batch [160-180]	Speed: 21050.90 samples/sec	accuracy=nan
2023-03-20 09:34:18,335 Node[0] Epoch[12] Batch [180-200]	Speed: 21065.11 samples/sec	accuracy=nan
2023-03-20 09:34:21,441 Node[0] Epoch[12] Batch [200-220]	Speed: 21022.41 samples/sec	accuracy=nan
2023-03-20 09:34:24,539 Node[0] Epoch[12] Batch [220-240]	Speed: 21066.09 samples/sec	accuracy=nan
2023-03-20 09:34:27,640 Node[0] Epoch[12] Batch [240-260]	Speed: 21054.86 samples/sec	accuracy=nan
2023-03-20 09:34:30,743 Node[0] Epoch[12] Batch [260-280]	Speed: 21038.39 samples/sec	accuracy=nan
2023-03-20 09:34:33,843 Node[0] Epoch[12] Batch [280-300]	Speed: 21058.33 samples/sec	accuracy=nan
2023-03-20 09:34:36,945 Node[0] Epoch[12] Batch [300-320]	Speed: 21040.48 samples/sec	accuracy=nan
2023-03-20 09:34:40,051 Node[0] Epoch[12] Batch [320-340]	Speed: 21019.92 samples/sec	accuracy=nan
2023-03-20 09:34:43,156 Node[0] Epoch[12] Batch [340-360]	Speed: 21020.64 samples/sec	accuracy=nan
2023-03-20 09:34:46,262 Node[0] Epoch[12] Batch [360-380]	Speed: 21020.10 samples/sec	accuracy=nan
2023-03-20 09:34:47,966 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:34:47,966 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:34:47,967 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:34:47,967 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:34:47,967 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:34:47,967 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:34:47,968 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322887967, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-20 09:34:47,968 Node[0] Epoch[12] Time cost=60.792
:::MLLOG {"namespace": "", "time_ms": 1679322887968, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21074.598446919772}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1679322887968, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-20 09:34:47,969 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:34:51,227 Node[0] Epoch[13] Batch [0-20]	Speed: 21057.33 samples/sec	accuracy=nan
2023-03-20 09:34:54,333 Node[0] Epoch[13] Batch [20-40]	Speed: 21017.86 samples/sec	accuracy=nan
2023-03-20 09:34:57,442 Node[0] Epoch[13] Batch [40-60]	Speed: 20994.84 samples/sec	accuracy=nan
2023-03-20 09:35:00,549 Node[0] Epoch[13] Batch [60-80]	Speed: 21009.33 samples/sec	accuracy=nan
2023-03-20 09:35:03,657 Node[0] Epoch[13] Batch [80-100]	Speed: 21003.58 samples/sec	accuracy=nan
2023-03-20 09:35:06,766 Node[0] Epoch[13] Batch [100-120]	Speed: 21002.10 samples/sec	accuracy=nan
2023-03-20 09:35:09,875 Node[0] Epoch[13] Batch [120-140]	Speed: 20991.83 samples/sec	accuracy=nan
2023-03-20 09:35:12,988 Node[0] Epoch[13] Batch [140-160]	Speed: 20970.60 samples/sec	accuracy=nan
2023-03-20 09:35:16,105 Node[0] Epoch[13] Batch [160-180]	Speed: 20943.66 samples/sec	accuracy=nan
2023-03-20 09:35:19,218 Node[0] Epoch[13] Batch [180-200]	Speed: 20973.44 samples/sec	accuracy=nan
2023-03-20 09:35:22,314 Node[0] Epoch[13] Batch [200-220]	Speed: 21083.04 samples/sec	accuracy=nan
2023-03-20 09:35:25,412 Node[0] Epoch[13] Batch [220-240]	Speed: 21068.84 samples/sec	accuracy=nan
2023-03-20 09:35:28,513 Node[0] Epoch[13] Batch [240-260]	Speed: 21054.45 samples/sec	accuracy=nan
2023-03-20 09:35:31,617 Node[0] Epoch[13] Batch [260-280]	Speed: 21034.13 samples/sec	accuracy=nan
2023-03-20 09:35:34,718 Node[0] Epoch[13] Batch [280-300]	Speed: 21045.49 samples/sec	accuracy=nan
2023-03-20 09:35:37,824 Node[0] Epoch[13] Batch [300-320]	Speed: 21021.11 samples/sec	accuracy=nan
2023-03-20 09:35:40,922 Node[0] Epoch[13] Batch [320-340]	Speed: 21070.43 samples/sec	accuracy=nan
2023-03-20 09:35:44,025 Node[0] Epoch[13] Batch [340-360]	Speed: 21040.05 samples/sec	accuracy=nan
2023-03-20 09:35:47,128 Node[0] Epoch[13] Batch [360-380]	Speed: 21032.25 samples/sec	accuracy=nan
2023-03-20 09:35:48,985 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:35:48,985 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:35:48,985 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:35:48,985 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:35:48,985 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:35:48,986 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679322948985, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-20 09:35:48,986 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:35:48,986 Node[0] Epoch[13] Time cost=61.018
:::MLLOG {"namespace": "", "time_ms": 1679322948987, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20996.591841607726}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679322948987, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-20 09:35:48,987 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:35:52,242 Node[0] Epoch[14] Batch [0-20]	Speed: 21057.24 samples/sec	accuracy=nan
2023-03-20 09:35:55,338 Node[0] Epoch[14] Batch [20-40]	Speed: 21083.53 samples/sec	accuracy=nan
2023-03-20 09:35:58,441 Node[0] Epoch[14] Batch [40-60]	Speed: 21039.70 samples/sec	accuracy=nan
2023-03-20 09:36:01,545 Node[0] Epoch[14] Batch [60-80]	Speed: 21035.28 samples/sec	accuracy=nan
2023-03-20 09:36:04,644 Node[0] Epoch[14] Batch [80-100]	Speed: 21062.90 samples/sec	accuracy=nan
2023-03-20 09:36:07,745 Node[0] Epoch[14] Batch [100-120]	Speed: 21052.88 samples/sec	accuracy=nan
2023-03-20 09:36:10,855 Node[0] Epoch[14] Batch [120-140]	Speed: 20985.54 samples/sec	accuracy=nan
2023-03-20 09:36:13,964 Node[0] Epoch[14] Batch [140-160]	Speed: 21000.18 samples/sec	accuracy=nan
2023-03-20 09:36:17,072 Node[0] Epoch[14] Batch [160-180]	Speed: 21005.76 samples/sec	accuracy=nan
2023-03-20 09:36:20,176 Node[0] Epoch[14] Batch [180-200]	Speed: 21030.66 samples/sec	accuracy=nan
2023-03-20 09:36:23,281 Node[0] Epoch[14] Batch [200-220]	Speed: 21022.42 samples/sec	accuracy=nan
2023-03-20 09:36:26,388 Node[0] Epoch[14] Batch [220-240]	Speed: 21007.69 samples/sec	accuracy=nan
2023-03-20 09:36:29,495 Node[0] Epoch[14] Batch [240-260]	Speed: 21011.00 samples/sec	accuracy=nan
2023-03-20 09:36:32,600 Node[0] Epoch[14] Batch [260-280]	Speed: 21025.56 samples/sec	accuracy=nan
2023-03-20 09:36:35,706 Node[0] Epoch[14] Batch [280-300]	Speed: 21014.75 samples/sec	accuracy=nan
2023-03-20 09:36:38,813 Node[0] Epoch[14] Batch [300-320]	Speed: 21014.32 samples/sec	accuracy=nan
2023-03-20 09:36:41,919 Node[0] Epoch[14] Batch [320-340]	Speed: 21019.06 samples/sec	accuracy=nan
2023-03-20 09:36:45,029 Node[0] Epoch[14] Batch [340-360]	Speed: 20989.32 samples/sec	accuracy=nan
2023-03-20 09:36:48,136 Node[0] Epoch[14] Batch [360-380]	Speed: 21008.93 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679323009842, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-20 09:36:49,843 Node[0] Epoch[14] Time cost=60.856
:::MLLOG {"namespace": "", "time_ms": 1679323009843, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21052.28260948371}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679323009993, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-20 09:36:51,223 Node[0] Epoch[14] Validation-accuracy=0.518240
2023-03-20 09:36:51,224 Node[0] Epoch[14] Validation-correct-count=3239.000000
2023-03-20 09:36:51,224 Node[0] Epoch[14] Validation-total-count=6250.000000
2023-03-20 09:36:51,638 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:36:51,638 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323011637, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
2023-03-20 09:36:51,638 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:36:51,638 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:36:51,638 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:36:51,638 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323011638, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.52078, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679323011638, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679323011638, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-20 09:36:51,638 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323011638, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-20 09:36:51,639 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:36:54,772 Node[0] Epoch[15] Batch [0-20]	Speed: 20932.90 samples/sec	accuracy=nan
2023-03-20 09:36:57,877 Node[0] Epoch[15] Batch [20-40]	Speed: 21023.50 samples/sec	accuracy=nan
2023-03-20 09:37:00,979 Node[0] Epoch[15] Batch [40-60]	Speed: 21047.08 samples/sec	accuracy=nan
2023-03-20 09:37:04,085 Node[0] Epoch[15] Batch [60-80]	Speed: 21017.78 samples/sec	accuracy=nan
2023-03-20 09:37:07,188 Node[0] Epoch[15] Batch [80-100]	Speed: 21037.40 samples/sec	accuracy=nan
2023-03-20 09:37:10,295 Node[0] Epoch[15] Batch [100-120]	Speed: 21007.20 samples/sec	accuracy=nan
2023-03-20 09:37:13,399 Node[0] Epoch[15] Batch [120-140]	Speed: 21034.42 samples/sec	accuracy=nan
2023-03-20 09:37:16,501 Node[0] Epoch[15] Batch [140-160]	Speed: 21040.76 samples/sec	accuracy=nan
2023-03-20 09:37:19,606 Node[0] Epoch[15] Batch [160-180]	Speed: 21023.94 samples/sec	accuracy=nan
2023-03-20 09:37:22,712 Node[0] Epoch[15] Batch [180-200]	Speed: 21023.57 samples/sec	accuracy=nan
2023-03-20 09:37:25,813 Node[0] Epoch[15] Batch [200-220]	Speed: 21048.37 samples/sec	accuracy=nan
2023-03-20 09:37:28,918 Node[0] Epoch[15] Batch [220-240]	Speed: 21022.80 samples/sec	accuracy=nan
2023-03-20 09:37:32,035 Node[0] Epoch[15] Batch [240-260]	Speed: 20943.07 samples/sec	accuracy=nan
2023-03-20 09:37:35,151 Node[0] Epoch[15] Batch [260-280]	Speed: 20951.86 samples/sec	accuracy=nan
2023-03-20 09:37:38,257 Node[0] Epoch[15] Batch [280-300]	Speed: 21015.53 samples/sec	accuracy=nan
2023-03-20 09:37:41,363 Node[0] Epoch[15] Batch [300-320]	Speed: 21019.90 samples/sec	accuracy=nan
2023-03-20 09:37:44,466 Node[0] Epoch[15] Batch [320-340]	Speed: 21033.01 samples/sec	accuracy=nan
2023-03-20 09:37:47,570 Node[0] Epoch[15] Batch [340-360]	Speed: 21032.36 samples/sec	accuracy=nan
2023-03-20 09:37:50,677 Node[0] Epoch[15] Batch [360-380]	Speed: 21011.56 samples/sec	accuracy=nan
2023-03-20 09:37:52,539 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:37:52,539 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:37:52,539 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:37:52,540 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:37:52,540 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:37:52,540 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:37:52,540 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323072540, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-20 09:37:52,541 Node[0] Epoch[15] Time cost=60.903
:::MLLOG {"namespace": "", "time_ms": 1679323072541, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21036.352779976914}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679323072541, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-20 09:37:52,542 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:37:55,799 Node[0] Epoch[16] Batch [0-20]	Speed: 21040.70 samples/sec	accuracy=nan
2023-03-20 09:37:58,906 Node[0] Epoch[16] Batch [20-40]	Speed: 21014.07 samples/sec	accuracy=nan
2023-03-20 09:38:02,013 Node[0] Epoch[16] Batch [40-60]	Speed: 21010.45 samples/sec	accuracy=nan
2023-03-20 09:38:05,118 Node[0] Epoch[16] Batch [60-80]	Speed: 21025.82 samples/sec	accuracy=nan
2023-03-20 09:38:08,224 Node[0] Epoch[16] Batch [80-100]	Speed: 21011.85 samples/sec	accuracy=nan
2023-03-20 09:38:11,328 Node[0] Epoch[16] Batch [100-120]	Speed: 21034.85 samples/sec	accuracy=nan
2023-03-20 09:38:14,427 Node[0] Epoch[16] Batch [120-140]	Speed: 21061.23 samples/sec	accuracy=nan
2023-03-20 09:38:17,531 Node[0] Epoch[16] Batch [140-160]	Speed: 21029.62 samples/sec	accuracy=nan
2023-03-20 09:38:20,644 Node[0] Epoch[16] Batch [160-180]	Speed: 20971.43 samples/sec	accuracy=nan
2023-03-20 09:38:23,754 Node[0] Epoch[16] Batch [180-200]	Speed: 20993.38 samples/sec	accuracy=nan
2023-03-20 09:38:26,858 Node[0] Epoch[16] Batch [200-220]	Speed: 21027.17 samples/sec	accuracy=nan
2023-03-20 09:38:29,962 Node[0] Epoch[16] Batch [220-240]	Speed: 21031.31 samples/sec	accuracy=nan
2023-03-20 09:38:33,068 Node[0] Epoch[16] Batch [240-260]	Speed: 21021.32 samples/sec	accuracy=nan
2023-03-20 09:38:36,175 Node[0] Epoch[16] Batch [260-280]	Speed: 21009.79 samples/sec	accuracy=nan
2023-03-20 09:38:39,287 Node[0] Epoch[16] Batch [280-300]	Speed: 20976.24 samples/sec	accuracy=nan
2023-03-20 09:38:42,396 Node[0] Epoch[16] Batch [300-320]	Speed: 20994.47 samples/sec	accuracy=nan
2023-03-20 09:38:45,503 Node[0] Epoch[16] Batch [320-340]	Speed: 21015.02 samples/sec	accuracy=nan
2023-03-20 09:38:48,611 Node[0] Epoch[16] Batch [340-360]	Speed: 20999.28 samples/sec	accuracy=nan
2023-03-20 09:38:51,718 Node[0] Epoch[16] Batch [360-380]	Speed: 21013.66 samples/sec	accuracy=nan
2023-03-20 09:38:53,423 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:38:53,424 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:38:53,424 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:38:53,424 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:38:53,424 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:38:53,424 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:38:53,425 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323133424, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-20 09:38:53,425 Node[0] Epoch[16] Time cost=60.884
:::MLLOG {"namespace": "", "time_ms": 1679323133426, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21042.796589911854}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1679323133426, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-20 09:38:53,426 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:38:56,685 Node[0] Epoch[17] Batch [0-20]	Speed: 21047.86 samples/sec	accuracy=nan
2023-03-20 09:38:59,790 Node[0] Epoch[17] Batch [20-40]	Speed: 21023.93 samples/sec	accuracy=nan
2023-03-20 09:39:02,896 Node[0] Epoch[17] Batch [40-60]	Speed: 21017.53 samples/sec	accuracy=nan
2023-03-20 09:39:06,003 Node[0] Epoch[17] Batch [60-80]	Speed: 21012.06 samples/sec	accuracy=nan
2023-03-20 09:39:09,112 Node[0] Epoch[17] Batch [80-100]	Speed: 20992.54 samples/sec	accuracy=nan
2023-03-20 09:39:12,222 Node[0] Epoch[17] Batch [100-120]	Speed: 20989.39 samples/sec	accuracy=nan
2023-03-20 09:39:15,330 Node[0] Epoch[17] Batch [120-140]	Speed: 21008.85 samples/sec	accuracy=nan
2023-03-20 09:39:18,436 Node[0] Epoch[17] Batch [140-160]	Speed: 21013.62 samples/sec	accuracy=nan
2023-03-20 09:39:21,554 Node[0] Epoch[17] Batch [160-180]	Speed: 20936.27 samples/sec	accuracy=nan
2023-03-20 09:39:24,660 Node[0] Epoch[17] Batch [180-200]	Speed: 21018.28 samples/sec	accuracy=nan
2023-03-20 09:39:27,767 Node[0] Epoch[17] Batch [200-220]	Speed: 21011.58 samples/sec	accuracy=nan
2023-03-20 09:39:30,871 Node[0] Epoch[17] Batch [220-240]	Speed: 21029.89 samples/sec	accuracy=nan
2023-03-20 09:39:33,976 Node[0] Epoch[17] Batch [240-260]	Speed: 21023.32 samples/sec	accuracy=nan
2023-03-20 09:39:37,083 Node[0] Epoch[17] Batch [260-280]	Speed: 21015.82 samples/sec	accuracy=nan
2023-03-20 09:39:40,191 Node[0] Epoch[17] Batch [280-300]	Speed: 21003.29 samples/sec	accuracy=nan
2023-03-20 09:39:43,295 Node[0] Epoch[17] Batch [300-320]	Speed: 21025.68 samples/sec	accuracy=nan
2023-03-20 09:39:46,401 Node[0] Epoch[17] Batch [320-340]	Speed: 21021.79 samples/sec	accuracy=nan
2023-03-20 09:39:49,505 Node[0] Epoch[17] Batch [340-360]	Speed: 21026.43 samples/sec	accuracy=nan
2023-03-20 09:39:52,612 Node[0] Epoch[17] Batch [360-380]	Speed: 21016.13 samples/sec	accuracy=nan
2023-03-20 09:39:54,475 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:39:54,475 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:39:54,475 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:39:54,475 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:39:54,475 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:39:54,475 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323194475, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-20 09:39:54,476 Node[0] Epoch[17] Time cost=61.050
:::MLLOG {"namespace": "", "time_ms": 1679323194476, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20985.397385518794}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679323194477, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-20 09:39:54,477 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:39:54,477 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:39:57,741 Node[0] Epoch[18] Batch [0-20]	Speed: 20994.14 samples/sec	accuracy=nan
2023-03-20 09:40:00,851 Node[0] Epoch[18] Batch [20-40]	Speed: 20991.87 samples/sec	accuracy=nan
2023-03-20 09:40:03,961 Node[0] Epoch[18] Batch [40-60]	Speed: 20987.71 samples/sec	accuracy=nan
2023-03-20 09:40:07,064 Node[0] Epoch[18] Batch [60-80]	Speed: 21036.02 samples/sec	accuracy=nan
2023-03-20 09:40:10,172 Node[0] Epoch[18] Batch [80-100]	Speed: 21005.60 samples/sec	accuracy=nan
2023-03-20 09:40:13,280 Node[0] Epoch[18] Batch [100-120]	Speed: 21002.88 samples/sec	accuracy=nan
2023-03-20 09:40:16,390 Node[0] Epoch[18] Batch [120-140]	Speed: 20990.14 samples/sec	accuracy=nan
2023-03-20 09:40:19,497 Node[0] Epoch[18] Batch [140-160]	Speed: 21012.02 samples/sec	accuracy=nan
2023-03-20 09:40:22,608 Node[0] Epoch[18] Batch [160-180]	Speed: 20985.73 samples/sec	accuracy=nan
2023-03-20 09:40:25,715 Node[0] Epoch[18] Batch [180-200]	Speed: 21013.14 samples/sec	accuracy=nan
2023-03-20 09:40:28,821 Node[0] Epoch[18] Batch [200-220]	Speed: 21012.98 samples/sec	accuracy=nan
2023-03-20 09:40:31,920 Node[0] Epoch[18] Batch [220-240]	Speed: 21068.75 samples/sec	accuracy=nan
2023-03-20 09:40:35,023 Node[0] Epoch[18] Batch [240-260]	Speed: 21032.03 samples/sec	accuracy=nan
2023-03-20 09:40:38,128 Node[0] Epoch[18] Batch [260-280]	Speed: 21027.80 samples/sec	accuracy=nan
2023-03-20 09:40:41,235 Node[0] Epoch[18] Batch [280-300]	Speed: 21010.66 samples/sec	accuracy=nan
2023-03-20 09:40:44,351 Node[0] Epoch[18] Batch [300-320]	Speed: 20946.74 samples/sec	accuracy=nan
2023-03-20 09:40:47,456 Node[0] Epoch[18] Batch [320-340]	Speed: 21024.96 samples/sec	accuracy=nan
2023-03-20 09:40:50,563 Node[0] Epoch[18] Batch [340-360]	Speed: 21013.60 samples/sec	accuracy=nan
2023-03-20 09:40:53,670 Node[0] Epoch[18] Batch [360-380]	Speed: 21011.70 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679323255374, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-20 09:40:55,375 Node[0] Epoch[18] Time cost=60.898
:::MLLOG {"namespace": "", "time_ms": 1679323255375, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21037.78185254746}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679323255526, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-20 09:40:56,827 Node[0] Epoch[18] Validation-accuracy=0.611520
2023-03-20 09:40:56,827 Node[0] Epoch[18] Validation-correct-count=3822.000000
2023-03-20 09:40:56,827 Node[0] Epoch[18] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679323257047, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679323257048, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.61596, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-20 09:40:57,048 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:40:57,048 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:40:57,048 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323257048, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679323257048, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-20 09:40:57,047 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:40:57,048 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:40:57,048 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:40:57,048 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323257048, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-20 09:40:57,048 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:41:00,178 Node[0] Epoch[19] Batch [0-20]	Speed: 20921.73 samples/sec	accuracy=nan
2023-03-20 09:41:03,279 Node[0] Epoch[19] Batch [20-40]	Speed: 21045.94 samples/sec	accuracy=nan
2023-03-20 09:41:06,381 Node[0] Epoch[19] Batch [40-60]	Speed: 21047.74 samples/sec	accuracy=nan
2023-03-20 09:41:09,486 Node[0] Epoch[19] Batch [60-80]	Speed: 21023.03 samples/sec	accuracy=nan
2023-03-20 09:41:12,585 Node[0] Epoch[19] Batch [80-100]	Speed: 21066.06 samples/sec	accuracy=nan
2023-03-20 09:41:15,687 Node[0] Epoch[19] Batch [100-120]	Speed: 21044.10 samples/sec	accuracy=nan
2023-03-20 09:41:18,789 Node[0] Epoch[19] Batch [120-140]	Speed: 21044.79 samples/sec	accuracy=nan
2023-03-20 09:41:21,893 Node[0] Epoch[19] Batch [140-160]	Speed: 21029.87 samples/sec	accuracy=nan
2023-03-20 09:41:24,992 Node[0] Epoch[19] Batch [160-180]	Speed: 21062.37 samples/sec	accuracy=nan
2023-03-20 09:41:28,102 Node[0] Epoch[19] Batch [180-200]	Speed: 20995.06 samples/sec	accuracy=nan
2023-03-20 09:41:31,211 Node[0] Epoch[19] Batch [200-220]	Speed: 20992.46 samples/sec	accuracy=nan
2023-03-20 09:41:34,321 Node[0] Epoch[19] Batch [220-240]	Speed: 20995.90 samples/sec	accuracy=nan
2023-03-20 09:41:37,433 Node[0] Epoch[19] Batch [240-260]	Speed: 20977.93 samples/sec	accuracy=nan
2023-03-20 09:41:40,543 Node[0] Epoch[19] Batch [260-280]	Speed: 20987.55 samples/sec	accuracy=nan
2023-03-20 09:41:43,654 Node[0] Epoch[19] Batch [280-300]	Speed: 20981.41 samples/sec	accuracy=nan
2023-03-20 09:41:46,764 Node[0] Epoch[19] Batch [300-320]	Speed: 20993.21 samples/sec	accuracy=nan
2023-03-20 09:41:49,869 Node[0] Epoch[19] Batch [320-340]	Speed: 21020.70 samples/sec	accuracy=nan
2023-03-20 09:41:52,976 Node[0] Epoch[19] Batch [340-360]	Speed: 21010.73 samples/sec	accuracy=nan
2023-03-20 09:41:56,082 Node[0] Epoch[19] Batch [360-380]	Speed: 21018.70 samples/sec	accuracy=nan
2023-03-20 09:41:57,945 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:41:57,945 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:41:57,945 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:41:57,945 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:41:57,945 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:41:57,946 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323317945, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-20 09:41:57,946 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:41:57,947 Node[0] Epoch[19] Time cost=60.898
:::MLLOG {"namespace": "", "time_ms": 1679323317947, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21037.75434320907}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679323317947, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-20 09:41:57,947 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:42:01,213 Node[0] Epoch[20] Batch [0-20]	Speed: 20979.06 samples/sec	accuracy=nan
2023-03-20 09:42:04,327 Node[0] Epoch[20] Batch [20-40]	Speed: 20964.07 samples/sec	accuracy=nan
2023-03-20 09:42:07,433 Node[0] Epoch[20] Batch [40-60]	Speed: 21019.39 samples/sec	accuracy=nan
2023-03-20 09:42:10,544 Node[0] Epoch[20] Batch [60-80]	Speed: 20978.89 samples/sec	accuracy=nan
2023-03-20 09:42:13,654 Node[0] Epoch[20] Batch [80-100]	Speed: 20992.03 samples/sec	accuracy=nan
2023-03-20 09:42:16,765 Node[0] Epoch[20] Batch [100-120]	Speed: 20986.94 samples/sec	accuracy=nan
2023-03-20 09:42:19,876 Node[0] Epoch[20] Batch [120-140]	Speed: 20980.25 samples/sec	accuracy=nan
2023-03-20 09:42:22,983 Node[0] Epoch[20] Batch [140-160]	Speed: 21009.06 samples/sec	accuracy=nan
2023-03-20 09:42:26,093 Node[0] Epoch[20] Batch [160-180]	Speed: 20989.16 samples/sec	accuracy=nan
2023-03-20 09:42:29,201 Node[0] Epoch[20] Batch [180-200]	Speed: 21006.85 samples/sec	accuracy=nan
2023-03-20 09:42:32,311 Node[0] Epoch[20] Batch [200-220]	Speed: 20988.25 samples/sec	accuracy=nan
2023-03-20 09:42:35,416 Node[0] Epoch[20] Batch [220-240]	Speed: 21026.36 samples/sec	accuracy=nan
2023-03-20 09:42:38,517 Node[0] Epoch[20] Batch [240-260]	Speed: 21049.52 samples/sec	accuracy=nan
2023-03-20 09:42:41,620 Node[0] Epoch[20] Batch [260-280]	Speed: 21038.25 samples/sec	accuracy=nan
2023-03-20 09:42:44,724 Node[0] Epoch[20] Batch [280-300]	Speed: 21034.24 samples/sec	accuracy=nan
2023-03-20 09:42:47,826 Node[0] Epoch[20] Batch [300-320]	Speed: 21044.58 samples/sec	accuracy=nan
2023-03-20 09:42:50,927 Node[0] Epoch[20] Batch [320-340]	Speed: 21049.03 samples/sec	accuracy=nan
2023-03-20 09:42:54,032 Node[0] Epoch[20] Batch [340-360]	Speed: 21023.81 samples/sec	accuracy=nan
2023-03-20 09:42:57,137 Node[0] Epoch[20] Batch [360-380]	Speed: 21026.85 samples/sec	accuracy=nan
2023-03-20 09:42:58,840 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:42:58,840 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:42:58,840 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:42:58,841 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:42:58,841 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:42:58,841 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:42:58,841 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323378841, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-20 09:42:58,842 Node[0] Epoch[20] Time cost=60.895
:::MLLOG {"namespace": "", "time_ms": 1679323378842, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21038.963257080053}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1679323378842, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-20 09:42:58,842 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:43:02,098 Node[0] Epoch[21] Batch [0-20]	Speed: 21068.83 samples/sec	accuracy=nan
2023-03-20 09:43:05,202 Node[0] Epoch[21] Batch [20-40]	Speed: 21031.39 samples/sec	accuracy=nan
2023-03-20 09:43:08,306 Node[0] Epoch[21] Batch [40-60]	Speed: 21030.43 samples/sec	accuracy=nan
2023-03-20 09:43:11,411 Node[0] Epoch[21] Batch [60-80]	Speed: 21024.04 samples/sec	accuracy=nan
2023-03-20 09:43:14,513 Node[0] Epoch[21] Batch [80-100]	Speed: 21048.39 samples/sec	accuracy=nan
2023-03-20 09:43:17,615 Node[0] Epoch[21] Batch [100-120]	Speed: 21043.73 samples/sec	accuracy=nan
2023-03-20 09:43:20,722 Node[0] Epoch[21] Batch [120-140]	Speed: 21012.86 samples/sec	accuracy=nan
2023-03-20 09:43:23,824 Node[0] Epoch[21] Batch [140-160]	Speed: 21040.13 samples/sec	accuracy=nan
2023-03-20 09:43:26,936 Node[0] Epoch[21] Batch [160-180]	Speed: 20975.78 samples/sec	accuracy=nan
2023-03-20 09:43:30,039 Node[0] Epoch[21] Batch [180-200]	Speed: 21038.21 samples/sec	accuracy=nan
2023-03-20 09:43:33,145 Node[0] Epoch[21] Batch [200-220]	Speed: 21022.13 samples/sec	accuracy=nan
2023-03-20 09:43:36,247 Node[0] Epoch[21] Batch [220-240]	Speed: 21044.33 samples/sec	accuracy=nan
2023-03-20 09:43:39,349 Node[0] Epoch[21] Batch [240-260]	Speed: 21041.88 samples/sec	accuracy=nan
2023-03-20 09:43:42,455 Node[0] Epoch[21] Batch [260-280]	Speed: 21018.77 samples/sec	accuracy=nan
2023-03-20 09:43:45,559 Node[0] Epoch[21] Batch [280-300]	Speed: 21030.27 samples/sec	accuracy=nan
2023-03-20 09:43:48,660 Node[0] Epoch[21] Batch [300-320]	Speed: 21049.99 samples/sec	accuracy=nan
2023-03-20 09:43:51,765 Node[0] Epoch[21] Batch [320-340]	Speed: 21027.39 samples/sec	accuracy=nan
2023-03-20 09:43:54,870 Node[0] Epoch[21] Batch [340-360]	Speed: 21023.84 samples/sec	accuracy=nan
2023-03-20 09:43:57,977 Node[0] Epoch[21] Batch [360-380]	Speed: 21007.82 samples/sec	accuracy=nan
2023-03-20 09:43:59,835 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:43:59,835 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:43:59,836 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:43:59,835 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:43:59,836 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:43:59,836 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:43:59,836 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323439836, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-20 09:43:59,837 Node[0] Epoch[21] Time cost=60.994
:::MLLOG {"namespace": "", "time_ms": 1679323439837, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21004.69464815768}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679323439837, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-20 09:43:59,837 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:44:03,097 Node[0] Epoch[22] Batch [0-20]	Speed: 21023.95 samples/sec	accuracy=nan
2023-03-20 09:44:06,202 Node[0] Epoch[22] Batch [20-40]	Speed: 21029.35 samples/sec	accuracy=nan
2023-03-20 09:44:09,308 Node[0] Epoch[22] Batch [40-60]	Speed: 21017.08 samples/sec	accuracy=nan
2023-03-20 09:44:12,415 Node[0] Epoch[22] Batch [60-80]	Speed: 21009.76 samples/sec	accuracy=nan
2023-03-20 09:44:15,518 Node[0] Epoch[22] Batch [80-100]	Speed: 21036.07 samples/sec	accuracy=nan
2023-03-20 09:44:18,625 Node[0] Epoch[22] Batch [100-120]	Speed: 21012.66 samples/sec	accuracy=nan
2023-03-20 09:44:21,730 Node[0] Epoch[22] Batch [120-140]	Speed: 21020.92 samples/sec	accuracy=nan
2023-03-20 09:44:24,834 Node[0] Epoch[22] Batch [140-160]	Speed: 21035.23 samples/sec	accuracy=nan
2023-03-20 09:44:27,939 Node[0] Epoch[22] Batch [160-180]	Speed: 21020.10 samples/sec	accuracy=nan
2023-03-20 09:44:31,043 Node[0] Epoch[22] Batch [180-200]	Speed: 21028.93 samples/sec	accuracy=nan
2023-03-20 09:44:34,145 Node[0] Epoch[22] Batch [200-220]	Speed: 21046.37 samples/sec	accuracy=nan
2023-03-20 09:44:37,245 Node[0] Epoch[22] Batch [220-240]	Speed: 21058.76 samples/sec	accuracy=nan
2023-03-20 09:44:40,351 Node[0] Epoch[22] Batch [240-260]	Speed: 21020.81 samples/sec	accuracy=nan
2023-03-20 09:44:43,456 Node[0] Epoch[22] Batch [260-280]	Speed: 21021.25 samples/sec	accuracy=nan
2023-03-20 09:44:46,562 Node[0] Epoch[22] Batch [280-300]	Speed: 21020.37 samples/sec	accuracy=nan
2023-03-20 09:44:49,668 Node[0] Epoch[22] Batch [300-320]	Speed: 21011.83 samples/sec	accuracy=nan
2023-03-20 09:44:52,771 Node[0] Epoch[22] Batch [320-340]	Speed: 21037.61 samples/sec	accuracy=nan
2023-03-20 09:44:55,878 Node[0] Epoch[22] Batch [340-360]	Speed: 21015.32 samples/sec	accuracy=nan
2023-03-20 09:44:58,980 Node[0] Epoch[22] Batch [360-380]	Speed: 21041.02 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679323500683, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-20 09:45:00,684 Node[0] Epoch[22] Time cost=60.847
:::MLLOG {"namespace": "", "time_ms": 1679323500684, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21055.608854088732}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679323500834, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-20 09:45:02,094 Node[0] Epoch[22] Validation-accuracy=0.682240
2023-03-20 09:45:02,095 Node[0] Epoch[22] Validation-correct-count=4264.000000
2023-03-20 09:45:02,095 Node[0] Epoch[22] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679323502387, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
2023-03-20 09:45:02,387 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:45:02,387 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323502387, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.68144, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679323502388, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679323502388, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-20 09:45:02,387 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:45:02,388 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:45:02,387 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:45:02,387 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:45:02,388 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323502388, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-20 09:45:02,388 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:45:05,525 Node[0] Epoch[23] Batch [0-20]	Speed: 20869.07 samples/sec	accuracy=nan
2023-03-20 09:45:08,631 Node[0] Epoch[23] Batch [20-40]	Speed: 21017.55 samples/sec	accuracy=nan
2023-03-20 09:45:11,740 Node[0] Epoch[23] Batch [40-60]	Speed: 20993.19 samples/sec	accuracy=nan
2023-03-20 09:45:14,849 Node[0] Epoch[23] Batch [60-80]	Speed: 20996.22 samples/sec	accuracy=nan
2023-03-20 09:45:17,958 Node[0] Epoch[23] Batch [80-100]	Speed: 21002.24 samples/sec	accuracy=nan
2023-03-20 09:45:21,068 Node[0] Epoch[23] Batch [100-120]	Speed: 20987.94 samples/sec	accuracy=nan
2023-03-20 09:45:24,178 Node[0] Epoch[23] Batch [120-140]	Speed: 20987.92 samples/sec	accuracy=nan
2023-03-20 09:45:27,284 Node[0] Epoch[23] Batch [140-160]	Speed: 21020.30 samples/sec	accuracy=nan
2023-03-20 09:45:30,392 Node[0] Epoch[23] Batch [160-180]	Speed: 21005.66 samples/sec	accuracy=nan
2023-03-20 09:45:33,499 Node[0] Epoch[23] Batch [180-200]	Speed: 21008.62 samples/sec	accuracy=nan
2023-03-20 09:45:36,609 Node[0] Epoch[23] Batch [200-220]	Speed: 20988.32 samples/sec	accuracy=nan
2023-03-20 09:45:39,721 Node[0] Epoch[23] Batch [220-240]	Speed: 20981.49 samples/sec	accuracy=nan
2023-03-20 09:45:42,830 Node[0] Epoch[23] Batch [240-260]	Speed: 20995.20 samples/sec	accuracy=nan
2023-03-20 09:45:45,935 Node[0] Epoch[23] Batch [260-280]	Speed: 21020.57 samples/sec	accuracy=nan
2023-03-20 09:45:49,042 Node[0] Epoch[23] Batch [280-300]	Speed: 21012.12 samples/sec	accuracy=nan
2023-03-20 09:45:52,150 Node[0] Epoch[23] Batch [300-320]	Speed: 21002.50 samples/sec	accuracy=nan
2023-03-20 09:45:55,260 Node[0] Epoch[23] Batch [320-340]	Speed: 20992.20 samples/sec	accuracy=nan
2023-03-20 09:45:58,365 Node[0] Epoch[23] Batch [340-360]	Speed: 21023.75 samples/sec	accuracy=nan
2023-03-20 09:46:01,472 Node[0] Epoch[23] Batch [360-380]	Speed: 21009.96 samples/sec	accuracy=nan
2023-03-20 09:46:03,334 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:46:03,335 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:46:03,335 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:46:03,335 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:46:03,335 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:46:03,335 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:46:03,336 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323563335, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-20 09:46:03,336 Node[0] Epoch[23] Time cost=60.948
:::MLLOG {"namespace": "", "time_ms": 1679323563336, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21020.499501207487}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679323563337, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-20 09:46:03,337 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:46:06,599 Node[0] Epoch[24] Batch [0-20]	Speed: 21010.39 samples/sec	accuracy=nan
2023-03-20 09:46:09,701 Node[0] Epoch[24] Batch [20-40]	Speed: 21043.48 samples/sec	accuracy=nan
2023-03-20 09:46:12,805 Node[0] Epoch[24] Batch [40-60]	Speed: 21034.17 samples/sec	accuracy=nan
2023-03-20 09:46:15,911 Node[0] Epoch[24] Batch [60-80]	Speed: 21011.01 samples/sec	accuracy=nan
2023-03-20 09:46:19,013 Node[0] Epoch[24] Batch [80-100]	Speed: 21048.68 samples/sec	accuracy=nan
2023-03-20 09:46:22,118 Node[0] Epoch[24] Batch [100-120]	Speed: 21022.80 samples/sec	accuracy=nan
2023-03-20 09:46:25,222 Node[0] Epoch[24] Batch [120-140]	Speed: 21032.88 samples/sec	accuracy=nan
2023-03-20 09:46:28,330 Node[0] Epoch[24] Batch [140-160]	Speed: 21000.85 samples/sec	accuracy=nan
2023-03-20 09:46:31,435 Node[0] Epoch[24] Batch [160-180]	Speed: 21024.65 samples/sec	accuracy=nan
2023-03-20 09:46:34,542 Node[0] Epoch[24] Batch [180-200]	Speed: 21009.94 samples/sec	accuracy=nan
2023-03-20 09:46:37,649 Node[0] Epoch[24] Batch [200-220]	Speed: 21014.29 samples/sec	accuracy=nan
2023-03-20 09:46:40,756 Node[0] Epoch[24] Batch [220-240]	Speed: 21006.30 samples/sec	accuracy=nan
2023-03-20 09:46:43,864 Node[0] Epoch[24] Batch [240-260]	Speed: 21004.83 samples/sec	accuracy=nan
2023-03-20 09:46:46,977 Node[0] Epoch[24] Batch [260-280]	Speed: 20973.73 samples/sec	accuracy=nan
2023-03-20 09:46:50,083 Node[0] Epoch[24] Batch [280-300]	Speed: 21014.71 samples/sec	accuracy=nan
2023-03-20 09:46:55,155 Node[0] Epoch[24] Batch [300-320]	Speed: 12869.71 samples/sec	accuracy=nan
2023-03-20 09:46:58,261 Node[0] Epoch[24] Batch [320-340]	Speed: 21018.68 samples/sec	accuracy=nan
2023-03-20 09:47:01,369 Node[0] Epoch[24] Batch [340-360]	Speed: 21008.12 samples/sec	accuracy=nan
2023-03-20 09:47:04,475 Node[0] Epoch[24] Batch [360-380]	Speed: 21017.05 samples/sec	accuracy=nan
2023-03-20 09:47:06,181 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:47:06,181 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:47:06,182 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:47:06,182 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:47:06,182 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:47:06,182 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:47:06,183 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323626182, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-20 09:47:06,183 Node[0] Epoch[24] Time cost=62.846
:::MLLOG {"namespace": "", "time_ms": 1679323626183, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20385.714051089493}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679323626184, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-20 09:47:06,184 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:47:09,448 Node[0] Epoch[25] Batch [0-20]	Speed: 21009.92 samples/sec	accuracy=nan
2023-03-20 09:47:12,555 Node[0] Epoch[25] Batch [20-40]	Speed: 21005.01 samples/sec	accuracy=nan
2023-03-20 09:47:15,664 Node[0] Epoch[25] Batch [40-60]	Speed: 21000.57 samples/sec	accuracy=nan
2023-03-20 09:47:18,772 Node[0] Epoch[25] Batch [60-80]	Speed: 21002.41 samples/sec	accuracy=nan
2023-03-20 09:47:21,880 Node[0] Epoch[25] Batch [80-100]	Speed: 21003.86 samples/sec	accuracy=nan
2023-03-20 09:47:24,987 Node[0] Epoch[25] Batch [100-120]	Speed: 21011.41 samples/sec	accuracy=nan
2023-03-20 09:47:28,096 Node[0] Epoch[25] Batch [120-140]	Speed: 20996.98 samples/sec	accuracy=nan
2023-03-20 09:47:31,212 Node[0] Epoch[25] Batch [140-160]	Speed: 20953.48 samples/sec	accuracy=nan
2023-03-20 09:47:34,317 Node[0] Epoch[25] Batch [160-180]	Speed: 21020.85 samples/sec	accuracy=nan
2023-03-20 09:47:37,422 Node[0] Epoch[25] Batch [180-200]	Speed: 21022.12 samples/sec	accuracy=nan
2023-03-20 09:47:40,528 Node[0] Epoch[25] Batch [200-220]	Speed: 21020.31 samples/sec	accuracy=nan
2023-03-20 09:47:43,640 Node[0] Epoch[25] Batch [220-240]	Speed: 20976.06 samples/sec	accuracy=nan
2023-03-20 09:47:46,750 Node[0] Epoch[25] Batch [240-260]	Speed: 20991.01 samples/sec	accuracy=nan
2023-03-20 09:47:49,859 Node[0] Epoch[25] Batch [260-280]	Speed: 20994.04 samples/sec	accuracy=nan
2023-03-20 09:47:52,969 Node[0] Epoch[25] Batch [280-300]	Speed: 20991.29 samples/sec	accuracy=nan
2023-03-20 09:47:56,079 Node[0] Epoch[25] Batch [300-320]	Speed: 20994.03 samples/sec	accuracy=nan
2023-03-20 09:47:59,188 Node[0] Epoch[25] Batch [320-340]	Speed: 20997.08 samples/sec	accuracy=nan
2023-03-20 09:48:02,299 Node[0] Epoch[25] Batch [340-360]	Speed: 20979.00 samples/sec	accuracy=nan
2023-03-20 09:48:05,412 Node[0] Epoch[25] Batch [360-380]	Speed: 20970.64 samples/sec	accuracy=nan
2023-03-20 09:48:07,274 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:48:07,274 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:48:07,275 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:48:07,275 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:48:07,275 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:48:07,275 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:48:07,275 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323687275, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-20 09:48:07,277 Node[0] Epoch[25] Time cost=61.094
:::MLLOG {"namespace": "", "time_ms": 1679323687277, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20970.56957267691}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679323687279, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-20 09:48:07,280 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:48:10,551 Node[0] Epoch[26] Batch [0-20]	Speed: 20927.75 samples/sec	accuracy=nan
2023-03-20 09:48:13,661 Node[0] Epoch[26] Batch [20-40]	Speed: 20993.03 samples/sec	accuracy=nan
2023-03-20 09:48:16,768 Node[0] Epoch[26] Batch [40-60]	Speed: 21006.35 samples/sec	accuracy=nan
2023-03-20 09:48:19,877 Node[0] Epoch[26] Batch [60-80]	Speed: 20996.65 samples/sec	accuracy=nan
2023-03-20 09:48:22,988 Node[0] Epoch[26] Batch [80-100]	Speed: 20986.31 samples/sec	accuracy=nan
2023-03-20 09:48:26,099 Node[0] Epoch[26] Batch [100-120]	Speed: 20980.06 samples/sec	accuracy=nan
2023-03-20 09:48:29,207 Node[0] Epoch[26] Batch [120-140]	Speed: 21010.65 samples/sec	accuracy=nan
2023-03-20 09:48:32,315 Node[0] Epoch[26] Batch [140-160]	Speed: 20999.60 samples/sec	accuracy=nan
2023-03-20 09:48:35,423 Node[0] Epoch[26] Batch [160-180]	Speed: 21007.24 samples/sec	accuracy=nan
2023-03-20 09:48:38,532 Node[0] Epoch[26] Batch [180-200]	Speed: 20995.58 samples/sec	accuracy=nan
2023-03-20 09:48:41,643 Node[0] Epoch[26] Batch [200-220]	Speed: 20983.95 samples/sec	accuracy=nan
2023-03-20 09:48:44,753 Node[0] Epoch[26] Batch [220-240]	Speed: 20991.55 samples/sec	accuracy=nan
2023-03-20 09:48:47,863 Node[0] Epoch[26] Batch [240-260]	Speed: 20988.25 samples/sec	accuracy=nan
2023-03-20 09:48:50,973 Node[0] Epoch[26] Batch [260-280]	Speed: 20990.23 samples/sec	accuracy=nan
2023-03-20 09:48:54,084 Node[0] Epoch[26] Batch [280-300]	Speed: 20985.45 samples/sec	accuracy=nan
2023-03-20 09:48:57,194 Node[0] Epoch[26] Batch [300-320]	Speed: 20989.31 samples/sec	accuracy=nan
2023-03-20 09:49:00,304 Node[0] Epoch[26] Batch [320-340]	Speed: 20991.45 samples/sec	accuracy=nan
2023-03-20 09:49:03,411 Node[0] Epoch[26] Batch [340-360]	Speed: 21008.60 samples/sec	accuracy=nan
2023-03-20 09:49:06,518 Node[0] Epoch[26] Batch [360-380]	Speed: 21008.90 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679323748226, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-20 09:49:08,227 Node[0] Epoch[26] Time cost=60.948
:::MLLOG {"namespace": "", "time_ms": 1679323748227, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21020.81123267222}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679323748377, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-20 09:49:09,602 Node[0] Epoch[26] Validation-accuracy=0.722560
2023-03-20 09:49:09,602 Node[0] Epoch[26] Validation-correct-count=4516.000000
2023-03-20 09:49:09,602 Node[0] Epoch[26] Validation-total-count=6250.000000
2023-03-20 09:49:09,939 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:49:09,939 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:49:09,939 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:49:09,939 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323749939, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
2023-03-20 09:49:09,939 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:49:09,939 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:49:09,939 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323749940, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72278, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679323749940, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679323749940, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679323749940, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-20 09:49:09,940 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:49:13,072 Node[0] Epoch[27] Batch [0-20]	Speed: 20908.41 samples/sec	accuracy=nan
2023-03-20 09:49:16,182 Node[0] Epoch[27] Batch [20-40]	Speed: 20986.69 samples/sec	accuracy=nan
2023-03-20 09:49:19,289 Node[0] Epoch[27] Batch [40-60]	Speed: 21012.89 samples/sec	accuracy=nan
2023-03-20 09:49:22,389 Node[0] Epoch[27] Batch [60-80]	Speed: 21055.84 samples/sec	accuracy=nan
2023-03-20 09:49:25,492 Node[0] Epoch[27] Batch [80-100]	Speed: 21039.59 samples/sec	accuracy=nan
2023-03-20 09:49:28,599 Node[0] Epoch[27] Batch [100-120]	Speed: 21012.54 samples/sec	accuracy=nan
2023-03-20 09:49:31,707 Node[0] Epoch[27] Batch [120-140]	Speed: 21004.65 samples/sec	accuracy=nan
2023-03-20 09:49:34,807 Node[0] Epoch[27] Batch [140-160]	Speed: 21051.88 samples/sec	accuracy=nan
2023-03-20 09:49:37,908 Node[0] Epoch[27] Batch [160-180]	Speed: 21055.35 samples/sec	accuracy=nan
2023-03-20 09:49:41,018 Node[0] Epoch[27] Batch [180-200]	Speed: 20990.77 samples/sec	accuracy=nan
2023-03-20 09:49:44,121 Node[0] Epoch[27] Batch [200-220]	Speed: 21035.16 samples/sec	accuracy=nan
2023-03-20 09:49:47,233 Node[0] Epoch[27] Batch [220-240]	Speed: 20976.63 samples/sec	accuracy=nan
2023-03-20 09:49:50,344 Node[0] Epoch[27] Batch [240-260]	Speed: 20988.13 samples/sec	accuracy=nan
2023-03-20 09:49:53,448 Node[0] Epoch[27] Batch [260-280]	Speed: 21027.70 samples/sec	accuracy=nan
2023-03-20 09:49:56,551 Node[0] Epoch[27] Batch [280-300]	Speed: 21040.68 samples/sec	accuracy=nan
2023-03-20 09:50:01,958 Node[0] Epoch[27] Batch [300-320]	Speed: 12072.48 samples/sec	accuracy=nan
2023-03-20 09:50:05,063 Node[0] Epoch[27] Batch [320-340]	Speed: 21020.90 samples/sec	accuracy=nan
2023-03-20 09:50:08,173 Node[0] Epoch[27] Batch [340-360]	Speed: 20994.21 samples/sec	accuracy=nan
2023-03-20 09:50:11,294 Node[0] Epoch[27] Batch [360-380]	Speed: 20914.31 samples/sec	accuracy=nan
2023-03-20 09:50:13,165 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:50:13,165 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:50:13,166 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:50:13,166 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:50:13,166 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:50:13,167 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323813166, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-20 09:50:13,167 Node[0] Epoch[27] Time cost=63.227
2023-03-20 09:50:13,167 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323813167, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20263.096115700082}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679323813168, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-20 09:50:13,168 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:50:16,436 Node[0] Epoch[28] Batch [0-20]	Speed: 20975.40 samples/sec	accuracy=nan
2023-03-20 09:50:19,540 Node[0] Epoch[28] Batch [20-40]	Speed: 21035.07 samples/sec	accuracy=nan
2023-03-20 09:50:22,640 Node[0] Epoch[28] Batch [40-60]	Speed: 21052.14 samples/sec	accuracy=nan
2023-03-20 09:50:25,743 Node[0] Epoch[28] Batch [60-80]	Speed: 21037.74 samples/sec	accuracy=nan
2023-03-20 09:50:28,849 Node[0] Epoch[28] Batch [80-100]	Speed: 21017.16 samples/sec	accuracy=nan
2023-03-20 09:50:31,956 Node[0] Epoch[28] Batch [100-120]	Speed: 21010.82 samples/sec	accuracy=nan
2023-03-20 09:50:35,061 Node[0] Epoch[28] Batch [120-140]	Speed: 21025.67 samples/sec	accuracy=nan
2023-03-20 09:50:38,174 Node[0] Epoch[28] Batch [140-160]	Speed: 20973.32 samples/sec	accuracy=nan
2023-03-20 09:50:41,303 Node[0] Epoch[28] Batch [160-180]	Speed: 20859.62 samples/sec	accuracy=nan
2023-03-20 09:50:44,414 Node[0] Epoch[28] Batch [180-200]	Speed: 20982.06 samples/sec	accuracy=nan
2023-03-20 09:50:47,522 Node[0] Epoch[28] Batch [200-220]	Speed: 21008.12 samples/sec	accuracy=nan
2023-03-20 09:50:50,634 Node[0] Epoch[28] Batch [220-240]	Speed: 20974.72 samples/sec	accuracy=nan
2023-03-20 09:50:53,746 Node[0] Epoch[28] Batch [240-260]	Speed: 20981.47 samples/sec	accuracy=nan
2023-03-20 09:50:56,856 Node[0] Epoch[28] Batch [260-280]	Speed: 20983.20 samples/sec	accuracy=nan
2023-03-20 09:50:59,968 Node[0] Epoch[28] Batch [280-300]	Speed: 20977.89 samples/sec	accuracy=nan
2023-03-20 09:51:05,349 Node[0] Epoch[28] Batch [300-320]	Speed: 12132.40 samples/sec	accuracy=nan
2023-03-20 09:51:08,453 Node[0] Epoch[28] Batch [320-340]	Speed: 21031.54 samples/sec	accuracy=nan
2023-03-20 09:51:11,560 Node[0] Epoch[28] Batch [340-360]	Speed: 21011.72 samples/sec	accuracy=nan
2023-03-20 09:51:14,663 Node[0] Epoch[28] Batch [360-380]	Speed: 21039.09 samples/sec	accuracy=nan
2023-03-20 09:51:16,366 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:51:16,367 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:51:16,367 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:51:16,367 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:51:16,367 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:51:16,367 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:51:16,367 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323876367, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-20 09:51:16,368 Node[0] Epoch[28] Time cost=63.200
:::MLLOG {"namespace": "", "time_ms": 1679323876368, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20271.52481026912}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1679323876368, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-20 09:51:16,368 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:51:19,630 Node[0] Epoch[29] Batch [0-20]	Speed: 21037.15 samples/sec	accuracy=nan
2023-03-20 09:51:22,735 Node[0] Epoch[29] Batch [20-40]	Speed: 21021.63 samples/sec	accuracy=nan
2023-03-20 09:51:25,841 Node[0] Epoch[29] Batch [40-60]	Speed: 21017.63 samples/sec	accuracy=nan
2023-03-20 09:51:28,951 Node[0] Epoch[29] Batch [60-80]	Speed: 20994.09 samples/sec	accuracy=nan
2023-03-20 09:51:32,057 Node[0] Epoch[29] Batch [80-100]	Speed: 21013.49 samples/sec	accuracy=nan
2023-03-20 09:51:35,166 Node[0] Epoch[29] Batch [100-120]	Speed: 20998.27 samples/sec	accuracy=nan
2023-03-20 09:51:38,279 Node[0] Epoch[29] Batch [120-140]	Speed: 20969.59 samples/sec	accuracy=nan
2023-03-20 09:51:41,395 Node[0] Epoch[29] Batch [140-160]	Speed: 20953.54 samples/sec	accuracy=nan
2023-03-20 09:51:44,506 Node[0] Epoch[29] Batch [160-180]	Speed: 20980.13 samples/sec	accuracy=nan
2023-03-20 09:51:47,618 Node[0] Epoch[29] Batch [180-200]	Speed: 20978.12 samples/sec	accuracy=nan
2023-03-20 09:51:50,735 Node[0] Epoch[29] Batch [200-220]	Speed: 20941.47 samples/sec	accuracy=nan
2023-03-20 09:51:53,848 Node[0] Epoch[29] Batch [220-240]	Speed: 20976.14 samples/sec	accuracy=nan
2023-03-20 09:51:56,957 Node[0] Epoch[29] Batch [240-260]	Speed: 20996.92 samples/sec	accuracy=nan
2023-03-20 09:52:00,071 Node[0] Epoch[29] Batch [260-280]	Speed: 20961.67 samples/sec	accuracy=nan
2023-03-20 09:52:03,182 Node[0] Epoch[29] Batch [280-300]	Speed: 20980.67 samples/sec	accuracy=nan
2023-03-20 09:52:08,574 Node[0] Epoch[29] Batch [300-320]	Speed: 12107.90 samples/sec	accuracy=nan
2023-03-20 09:52:11,681 Node[0] Epoch[29] Batch [320-340]	Speed: 21005.79 samples/sec	accuracy=nan
2023-03-20 09:52:14,788 Node[0] Epoch[29] Batch [340-360]	Speed: 21012.10 samples/sec	accuracy=nan
2023-03-20 09:52:17,898 Node[0] Epoch[29] Batch [360-380]	Speed: 20995.05 samples/sec	accuracy=nan
2023-03-20 09:52:19,759 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:52:19,760 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:52:19,760 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:52:19,760 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:52:19,760 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:52:19,760 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:52:19,761 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679323939761, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-20 09:52:19,762 Node[0] Epoch[29] Time cost=63.394
:::MLLOG {"namespace": "", "time_ms": 1679323939762, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20209.691847432132}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679323939763, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-20 09:52:19,763 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:52:23,029 Node[0] Epoch[30] Batch [0-20]	Speed: 20975.25 samples/sec	accuracy=nan
2023-03-20 09:52:26,136 Node[0] Epoch[30] Batch [20-40]	Speed: 21007.01 samples/sec	accuracy=nan
2023-03-20 09:52:29,242 Node[0] Epoch[30] Batch [40-60]	Speed: 21020.89 samples/sec	accuracy=nan
2023-03-20 09:52:32,351 Node[0] Epoch[30] Batch [60-80]	Speed: 20993.17 samples/sec	accuracy=nan
2023-03-20 09:52:35,461 Node[0] Epoch[30] Batch [80-100]	Speed: 20991.99 samples/sec	accuracy=nan
2023-03-20 09:52:38,570 Node[0] Epoch[30] Batch [100-120]	Speed: 20997.75 samples/sec	accuracy=nan
2023-03-20 09:52:41,680 Node[0] Epoch[30] Batch [120-140]	Speed: 20989.13 samples/sec	accuracy=nan
2023-03-20 09:52:44,790 Node[0] Epoch[30] Batch [140-160]	Speed: 20991.40 samples/sec	accuracy=nan
2023-03-20 09:52:47,902 Node[0] Epoch[30] Batch [160-180]	Speed: 20979.29 samples/sec	accuracy=nan
2023-03-20 09:52:51,014 Node[0] Epoch[30] Batch [180-200]	Speed: 20974.26 samples/sec	accuracy=nan
2023-03-20 09:52:54,125 Node[0] Epoch[30] Batch [200-220]	Speed: 20981.06 samples/sec	accuracy=nan
2023-03-20 09:52:57,230 Node[0] Epoch[30] Batch [220-240]	Speed: 21029.40 samples/sec	accuracy=nan
2023-03-20 09:53:00,331 Node[0] Epoch[30] Batch [240-260]	Speed: 21045.90 samples/sec	accuracy=nan
2023-03-20 09:53:03,432 Node[0] Epoch[30] Batch [260-280]	Speed: 21055.78 samples/sec	accuracy=nan
2023-03-20 09:53:06,538 Node[0] Epoch[30] Batch [280-300]	Speed: 21018.15 samples/sec	accuracy=nan
2023-03-20 09:53:13,860 Node[0] Epoch[30] Batch [300-320]	Speed: 8914.81 samples/sec	accuracy=nan
2023-03-20 09:53:16,966 Node[0] Epoch[30] Batch [320-340]	Speed: 21018.47 samples/sec	accuracy=nan
2023-03-20 09:53:20,073 Node[0] Epoch[30] Batch [340-360]	Speed: 21009.15 samples/sec	accuracy=nan
2023-03-20 09:53:23,180 Node[0] Epoch[30] Batch [360-380]	Speed: 21015.83 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679324004887, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-20 09:53:24,888 Node[0] Epoch[30] Time cost=65.125
:::MLLOG {"namespace": "", "time_ms": 1679324004888, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 19672.300020019342}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679324005039, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-20 09:53:26,420 Node[0] Epoch[30] Validation-accuracy=0.756480
2023-03-20 09:53:26,421 Node[0] Epoch[30] Validation-correct-count=4728.000000
2023-03-20 09:53:26,421 Node[0] Epoch[30] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679324006593, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679324006593, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7469, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
2023-03-20 09:53:26,593 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324006593, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
2023-03-20 09:53:26,593 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324006593, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-20 09:53:26,593 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:53:26,593 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:53:26,593 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:53:26,593 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:53:26,593 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324006594, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-20 09:53:26,594 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:53:29,723 Node[0] Epoch[31] Batch [0-20]	Speed: 20920.29 samples/sec	accuracy=nan
2023-03-20 09:53:32,831 Node[0] Epoch[31] Batch [20-40]	Speed: 21002.99 samples/sec	accuracy=nan
2023-03-20 09:53:35,935 Node[0] Epoch[31] Batch [40-60]	Speed: 21034.14 samples/sec	accuracy=nan
2023-03-20 09:53:39,042 Node[0] Epoch[31] Batch [60-80]	Speed: 21006.31 samples/sec	accuracy=nan
2023-03-20 09:53:42,153 Node[0] Epoch[31] Batch [80-100]	Speed: 20984.46 samples/sec	accuracy=nan
2023-03-20 09:53:45,261 Node[0] Epoch[31] Batch [100-120]	Speed: 21002.51 samples/sec	accuracy=nan
2023-03-20 09:53:48,370 Node[0] Epoch[31] Batch [120-140]	Speed: 21000.35 samples/sec	accuracy=nan
2023-03-20 09:53:51,478 Node[0] Epoch[31] Batch [140-160]	Speed: 21003.82 samples/sec	accuracy=nan
2023-03-20 09:53:54,581 Node[0] Epoch[31] Batch [160-180]	Speed: 21035.13 samples/sec	accuracy=nan
2023-03-20 09:53:57,684 Node[0] Epoch[31] Batch [180-200]	Speed: 21041.74 samples/sec	accuracy=nan
2023-03-20 09:54:00,788 Node[0] Epoch[31] Batch [200-220]	Speed: 21028.35 samples/sec	accuracy=nan
2023-03-20 09:54:03,888 Node[0] Epoch[31] Batch [220-240]	Speed: 21058.62 samples/sec	accuracy=nan
2023-03-20 09:54:06,997 Node[0] Epoch[31] Batch [240-260]	Speed: 20995.55 samples/sec	accuracy=nan
2023-03-20 09:54:10,108 Node[0] Epoch[31] Batch [260-280]	Speed: 20984.66 samples/sec	accuracy=nan
2023-03-20 09:54:13,221 Node[0] Epoch[31] Batch [280-300]	Speed: 20970.11 samples/sec	accuracy=nan
2023-03-20 09:54:18,301 Node[0] Epoch[31] Batch [300-320]	Speed: 12850.99 samples/sec	accuracy=nan
2023-03-20 09:54:21,408 Node[0] Epoch[31] Batch [320-340]	Speed: 21009.80 samples/sec	accuracy=nan
2023-03-20 09:54:24,519 Node[0] Epoch[31] Batch [340-360]	Speed: 20985.39 samples/sec	accuracy=nan
2023-03-20 09:54:27,626 Node[0] Epoch[31] Batch [360-380]	Speed: 21006.22 samples/sec	accuracy=nan
2023-03-20 09:54:29,488 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:54:29,489 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:54:29,489 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:54:29,489 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:54:29,489 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:54:29,489 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:54:29,489 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324069489, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-20 09:54:29,490 Node[0] Epoch[31] Time cost=62.896
:::MLLOG {"namespace": "", "time_ms": 1679324069490, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20369.52501232089}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679324069490, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-20 09:54:29,491 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:54:32,756 Node[0] Epoch[32] Batch [0-20]	Speed: 20985.93 samples/sec	accuracy=nan
2023-03-20 09:54:35,864 Node[0] Epoch[32] Batch [20-40]	Speed: 21007.47 samples/sec	accuracy=nan
2023-03-20 09:54:38,976 Node[0] Epoch[32] Batch [40-60]	Speed: 20974.13 samples/sec	accuracy=nan
2023-03-20 09:54:42,087 Node[0] Epoch[32] Batch [60-80]	Speed: 20986.37 samples/sec	accuracy=nan
2023-03-20 09:54:45,196 Node[0] Epoch[32] Batch [80-100]	Speed: 20990.57 samples/sec	accuracy=nan
2023-03-20 09:54:48,306 Node[0] Epoch[32] Batch [100-120]	Speed: 20994.08 samples/sec	accuracy=nan
2023-03-20 09:54:51,416 Node[0] Epoch[32] Batch [120-140]	Speed: 20988.22 samples/sec	accuracy=nan
2023-03-20 09:54:54,527 Node[0] Epoch[32] Batch [140-160]	Speed: 20982.57 samples/sec	accuracy=nan
2023-03-20 09:54:57,637 Node[0] Epoch[32] Batch [160-180]	Speed: 20994.49 samples/sec	accuracy=nan
2023-03-20 09:55:00,745 Node[0] Epoch[32] Batch [180-200]	Speed: 21002.38 samples/sec	accuracy=nan
2023-03-20 09:55:03,855 Node[0] Epoch[32] Batch [200-220]	Speed: 20992.87 samples/sec	accuracy=nan
2023-03-20 09:55:06,965 Node[0] Epoch[32] Batch [220-240]	Speed: 20984.60 samples/sec	accuracy=nan
2023-03-20 09:55:10,078 Node[0] Epoch[32] Batch [240-260]	Speed: 20976.43 samples/sec	accuracy=nan
2023-03-20 09:55:13,182 Node[0] Epoch[32] Batch [260-280]	Speed: 21029.69 samples/sec	accuracy=nan
2023-03-20 09:55:16,288 Node[0] Epoch[32] Batch [280-300]	Speed: 21017.80 samples/sec	accuracy=nan
2023-03-20 09:55:19,392 Node[0] Epoch[32] Batch [300-320]	Speed: 21026.23 samples/sec	accuracy=nan
2023-03-20 09:55:22,494 Node[0] Epoch[32] Batch [320-340]	Speed: 21049.69 samples/sec	accuracy=nan
2023-03-20 09:55:25,597 Node[0] Epoch[32] Batch [340-360]	Speed: 21031.69 samples/sec	accuracy=nan
2023-03-20 09:55:28,706 Node[0] Epoch[32] Batch [360-380]	Speed: 21001.61 samples/sec	accuracy=nan
2023-03-20 09:55:30,413 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:55:30,413 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:55:30,414 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:55:30,414 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:55:30,414 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:55:30,414 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:55:30,414 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324130414, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-20 09:55:30,415 Node[0] Epoch[32] Time cost=60.925
:::MLLOG {"namespace": "", "time_ms": 1679324130415, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 21028.762975253183}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679324130415, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-20 09:55:30,415 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:55:33,678 Node[0] Epoch[33] Batch [0-20]	Speed: 21025.12 samples/sec	accuracy=nan
2023-03-20 09:55:36,786 Node[0] Epoch[33] Batch [20-40]	Speed: 21006.09 samples/sec	accuracy=nan
2023-03-20 09:55:39,896 Node[0] Epoch[33] Batch [40-60]	Speed: 20992.07 samples/sec	accuracy=nan
2023-03-20 09:55:43,001 Node[0] Epoch[33] Batch [60-80]	Speed: 21020.79 samples/sec	accuracy=nan
2023-03-20 09:55:46,114 Node[0] Epoch[33] Batch [80-100]	Speed: 20970.19 samples/sec	accuracy=nan
2023-03-20 09:55:49,223 Node[0] Epoch[33] Batch [100-120]	Speed: 20999.95 samples/sec	accuracy=nan
2023-03-20 09:55:52,332 Node[0] Epoch[33] Batch [120-140]	Speed: 20994.84 samples/sec	accuracy=nan
2023-03-20 09:55:55,440 Node[0] Epoch[33] Batch [140-160]	Speed: 21007.10 samples/sec	accuracy=nan
2023-03-20 09:55:58,544 Node[0] Epoch[33] Batch [160-180]	Speed: 21031.36 samples/sec	accuracy=nan
2023-03-20 09:56:01,648 Node[0] Epoch[33] Batch [180-200]	Speed: 21029.02 samples/sec	accuracy=nan
2023-03-20 09:56:04,755 Node[0] Epoch[33] Batch [200-220]	Speed: 21011.28 samples/sec	accuracy=nan
2023-03-20 09:56:07,863 Node[0] Epoch[33] Batch [220-240]	Speed: 21002.05 samples/sec	accuracy=nan
2023-03-20 09:56:10,975 Node[0] Epoch[33] Batch [240-260]	Speed: 20978.26 samples/sec	accuracy=nan
2023-03-20 09:56:14,084 Node[0] Epoch[33] Batch [260-280]	Speed: 20996.89 samples/sec	accuracy=nan
2023-03-20 09:56:17,193 Node[0] Epoch[33] Batch [280-300]	Speed: 20997.13 samples/sec	accuracy=nan
2023-03-20 09:56:20,300 Node[0] Epoch[33] Batch [300-320]	Speed: 21011.62 samples/sec	accuracy=nan
2023-03-20 09:56:23,410 Node[0] Epoch[33] Batch [320-340]	Speed: 20984.98 samples/sec	accuracy=nan
2023-03-20 09:56:26,525 Node[0] Epoch[33] Batch [340-360]	Speed: 20960.29 samples/sec	accuracy=nan
2023-03-20 09:56:29,636 Node[0] Epoch[33] Batch [360-380]	Speed: 20985.67 samples/sec	accuracy=nan
2023-03-20 09:56:31,498 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:56:31,498 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:56:31,498 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:56:31,499 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:56:31,499 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:56:31,499 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:56:31,499 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679324191499, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-20 09:56:31,500 Node[0] Epoch[33] Time cost=61.084
:::MLLOG {"namespace": "", "time_ms": 1679324191500, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20973.704271443472}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679324191500, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-20 09:56:31,500 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-20 09:56:34,767 Node[0] Epoch[34] Batch [0-20]	Speed: 20976.73 samples/sec	accuracy=nan
2023-03-20 09:56:37,879 Node[0] Epoch[34] Batch [20-40]	Speed: 20982.54 samples/sec	accuracy=nan
2023-03-20 09:56:40,995 Node[0] Epoch[34] Batch [40-60]	Speed: 20946.79 samples/sec	accuracy=nan
2023-03-20 09:56:44,106 Node[0] Epoch[34] Batch [60-80]	Speed: 20981.48 samples/sec	accuracy=nan
2023-03-20 09:56:47,220 Node[0] Epoch[34] Batch [80-100]	Speed: 20963.97 samples/sec	accuracy=nan
2023-03-20 09:56:50,329 Node[0] Epoch[34] Batch [100-120]	Speed: 21001.42 samples/sec	accuracy=nan
2023-03-20 09:56:53,438 Node[0] Epoch[34] Batch [120-140]	Speed: 20995.88 samples/sec	accuracy=nan
2023-03-20 09:56:56,550 Node[0] Epoch[34] Batch [140-160]	Speed: 20978.47 samples/sec	accuracy=nan
2023-03-20 09:56:59,658 Node[0] Epoch[34] Batch [160-180]	Speed: 21001.63 samples/sec	accuracy=nan
2023-03-20 09:57:02,770 Node[0] Epoch[34] Batch [180-200]	Speed: 20978.80 samples/sec	accuracy=nan
2023-03-20 09:57:05,884 Node[0] Epoch[34] Batch [200-220]	Speed: 20963.30 samples/sec	accuracy=nan
2023-03-20 09:57:08,990 Node[0] Epoch[34] Batch [220-240]	Speed: 21015.03 samples/sec	accuracy=nan
2023-03-20 09:57:12,093 Node[0] Epoch[34] Batch [240-260]	Speed: 21034.60 samples/sec	accuracy=nan
2023-03-20 09:57:15,197 Node[0] Epoch[34] Batch [260-280]	Speed: 21035.27 samples/sec	accuracy=nan
2023-03-20 09:57:18,302 Node[0] Epoch[34] Batch [280-300]	Speed: 21022.88 samples/sec	accuracy=nan
2023-03-20 09:57:21,411 Node[0] Epoch[34] Batch [300-320]	Speed: 20999.98 samples/sec	accuracy=nan
2023-03-20 09:57:24,516 Node[0] Epoch[34] Batch [320-340]	Speed: 21018.91 samples/sec	accuracy=nan
2023-03-20 09:57:27,621 Node[0] Epoch[34] Batch [340-360]	Speed: 21029.00 samples/sec	accuracy=nan
2023-03-20 09:57:30,725 Node[0] Epoch[34] Batch [360-380]	Speed: 21025.36 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679324252586, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-20 09:57:32,587 Node[0] Epoch[34] Time cost=61.086
:::MLLOG {"namespace": "", "time_ms": 1679324252587, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 20973.07534125385}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679324252737, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-20 09:57:33,953 Node[0] Epoch[34] Validation-accuracy=0.760960
2023-03-20 09:57:33,953 Node[0] Epoch[34] Validation-correct-count=4756.000000
2023-03-20 09:57:33,953 Node[0] Epoch[34] Validation-total-count=6250.000000
:::MLLOG {"namespace": "", "time_ms": 1679324254370, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679324254371, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7594, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679324254371, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679324254371, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679324278
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 09:57:58 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 09:57:58 AM'
ENDING TIMING RUN AT 2023-03-20 09:57:58 AM
+ result=2311
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2311,root,2023-03-20 09:19:27 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2311,root,2023-03-20 09:19:27 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679324278
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 09:57:58 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 09:57:58 AM'
ENDING TIMING RUN AT 2023-03-20 09:57:58 AM
+ result=2311
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2311,root,2023-03-20 09:19:27 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2311,root,2023-03-20 09:19:27 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679324278
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 09:57:58 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 09:57:58 AM'
ENDING TIMING RUN AT 2023-03-20 09:57:58 AM
+ result=2311
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2311,root,2023-03-20 09:19:27 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2311,root,2023-03-20 09:19:27 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679324278
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 09:57:58 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 09:57:58 AM'
ENDING TIMING RUN AT 2023-03-20 09:57:58 AM
+ result=2311
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2311,root,2023-03-20 09:19:27 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2311,root,2023-03-20 09:19:27 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679324279
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 09:57:59 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 09:57:59 AM'
ENDING TIMING RUN AT 2023-03-20 09:57:59 AM
+ result=2312
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2312,root,2023-03-20 09:19:27 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2312,root,2023-03-20 09:19:27 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679324279
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 09:57:59 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 09:57:59 AM'
ENDING TIMING RUN AT 2023-03-20 09:57:59 AM
+ result=2312
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2312,root,2023-03-20 09:19:27 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2312,root,2023-03-20 09:19:27 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679324279
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 09:57:59 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 09:57:59 AM'
ENDING TIMING RUN AT 2023-03-20 09:57:59 AM
+ result=2312
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2312,root,2023-03-20 09:19:27 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2312,root,2023-03-20 09:19:27 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679324279
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-20 09:57:59 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-20 09:57:59 AM'
ENDING TIMING RUN AT 2023-03-20 09:57:59 AM
+ result=2312
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,2312,root,2023-03-20 09:19:27 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,2312,root,2023-03-20 09:19:27 AM'
+ export PROFILE=0
+ PROFILE=0
