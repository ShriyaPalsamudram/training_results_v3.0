+ echo 'Beginning trial 3 of 5'
Beginning trial 3 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node040 node041 node042 node043 node044 node045 node046 node047 '
+ echo 'hosts=node040 node041 node042 node043 node044 node045 node046 node047 '
hosts=node040 node041 node042 node043 node044 node045 node046 node047 
+ for node in $hosts
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679787107197, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787107231, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787107233, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787107234, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787107235, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node040 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node040
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node040 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679787120401, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679787126499, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787126534, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787126535, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787126537, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787126538, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node041 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node041
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node041 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679787136687, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node042 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679787142603, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787142638, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787142639, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787142640, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787142642, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node042 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node042
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node042 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679787154934, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node043 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679787159858, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787159892, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787159894, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787159895, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787159896, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node043 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node043
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node043 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679787171308, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679787176227, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787176262, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787176264, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787176265, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787176266, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679787187604, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679787192604, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787192639, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787192640, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787192641, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787192643, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node045 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node045
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679787204070, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679787208988, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787209023, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787209024, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787209026, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787209027, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node046 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node046
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679787220335, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679787225250, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787225284, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787225286, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787225287, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787225288, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "8xR750xax4A100-PCIE-80GB-1opa", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node047 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node047
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679787236735, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=4761
+ SEED=4761
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 32'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 32 singularity exec --nv -B /dev/shm/resnet/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node040: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node041: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node042: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node043: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node045: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node046: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node047: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
+++ export 'OMPI_MCA_btl=^openib'
++ export DALI_THREADS=6
++ DALI_THREADS=6
+++ OMPI_MCA_btl='^openib'
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
+++ export DGXNGPU=4
+++ DGXNGPU=4
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
+++ export DGXHT=1
+++ DGXHT=1
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
++ export DGXNNODES=8
++ DGXNNODES=8
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ date +%s
+ start=1679787238
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ date '+%Y-%m-%d %r'
+ start=1679787238
+ start=1679787238
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-25 06:33:58 PM'
++ date '+%Y-%m-%d %r'
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-25 06:33:58 PM'
++ seq 0 3
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
++ tr '\n' ,
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ start_fmt='2023-03-25 06:33:58 PM'
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ readonly global_rank=0
++ sed 's/,$//'
+ EVAL_PERIOD=4
+ global_rank=0
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ readonly local_rank=0
+ local_rank=0
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ SLURM_NTASKS_PER_NODE=4
+ DALI_PREALLOCATE_WIDTH=5980
+ OPTIMIZER=sgdwfastlars
+ DALI_PREALLOCATE_HEIGHT=6430
+ BATCHSIZE=102
+ DALI_TMP_BUFFER_HINT=355568328
+ INPUT_BATCH_MULTIPLIER=1
+ DALI_DECODER_BUFFER_HINT=1315942
+ KVSTORE=horovod
+ LR=10.5
+ DALI_CROP_BUFFER_HINT=165581
+ MOM=0.9
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ LRSCHED=pow2
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ NETWORK=resnet-v1b-fl
+ DALI_HW_DECODER_LOAD=0.7
+ BN_GROUP=1
+ WD=5.0e-05
+ PROFILE=0
+ LABELSMOOTHING=0.1
+ SEED=4761
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_PREFETCH_QUEUE=3
+ THR=0.759
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ [[ 0 == 1 ]]
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DATAROOT=/data
+ DALI_PREALLOCATE_WIDTH=5980
+ echo 'running benchmark'
running benchmark
+ DALI_PREALLOCATE_HEIGHT=6430
+ export NGPUS=4
+ NGPUS=4
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DALI_CROP_BUFFER_HINT=165581
+ [[ 0 -ge 1 ]]
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ start=1679787238
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-25 06:33:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+ source ./config_8xR750xax4A100.sh
+++ sed 's/\.sh$//'
+ source ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ dirname ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+++ dirname ./config_8xR750xax4A100.sh
++ date +%s
++ date +%s
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ dirname ./config_8xR750xax4A100.sh
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
+ start=1679787238
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
+ start=1679787238
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ date +%s
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+ start_fmt='2023-03-25 06:33:58 PM'
+ start_fmt='2023-03-25 06:33:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ readonly global_rank=6
+ global_rank=6
+ readonly local_rank=0
+ local_rank=0
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
+ readonly global_rank=6
+ global_rank=6
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4761
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
++ date +%s
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ seq 0 3
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+ start=1679787238
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ date '+%Y-%m-%d %r'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+ source ./config_8xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
+++ dirname ./config_8xR750xax4A100.sh
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export LARSETA=0.001
++ LARSETA=0.001
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ NUMEPOCHS=37
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ export DGXNNODES=8
++ DGXNNODES=8
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DGXNNODES=8
++ DGXNNODES=8
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ start_fmt='2023-03-25 06:33:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
+++ sed 's/^config_//'
+ source ./config_8xR750xax4A100.sh
+++ sed 's/^config_//'
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+++ sed 's/\.sh$//'
+ readonly global_rank=6
+ global_rank=6
+++ sed 's/\.sh$//'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
++++ readlink -f ./config_8xR750xax4A100.sh
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
++++ readlink -f ./config_8xR750xax4A100.sh
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+++ sed 's/^config_//'
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+++ dirname ./config_8xR750xax4A100.sh
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ sed 's/\.sh$//'
+ start=1679787238
++++ readlink -f ./config_8xR750xax4A100.sh
++ date '+%Y-%m-%d %r'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start_fmt='2023-03-25 06:33:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ readonly global_rank=6
+ global_rank=6
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+++ export DGXNGPU=4
+++ DGXNGPU=4
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+++ export DGXHT=1
+++ DGXHT=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+ NODALI=0
+ NUMEXAMPLES=
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+ [[ 0 == 1 ]]
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+ DATAROOT=/data
+ echo 'running benchmark'
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
running benchmark
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+ NCCL_DEBUG=WARN
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+ [[ 0 -ge 1 ]]
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ seq 0 3
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ tr '\n' ,
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+ GPUS=0,1,2,3
++ sed 's/,$//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ GPUS=0,1,2,3
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ sed 's/^config_//'
++ date +%s
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ date +%s
+++ sed 's/\.sh$//'
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
++++ readlink -f ./config_8xR750xax4A100.sh
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+ [[ '' -ge 1 ]]
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+ [[ '' -ge 1 ]]
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
+ source ./config_8xR750xax4A100.sh
++ export DALI_THREADS=6
++ DALI_THREADS=6
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ dirname ./config_8xR750xax4A100.sh
+++ sed 's/^config_//'
+ source ./config_8xR750xax4A100.sh
+++ sed 's/\.sh$//'
+ source ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+ GPUS=0,1,2,3
+++ dirname ./config_8xR750xax4A100.sh
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679787238
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ start=1679787238
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
++ date '+%Y-%m-%d %r'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ date +%s
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ date +%s
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
+ [[ '' -ge 1 ]]
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ date +%s
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+ start_fmt='2023-03-25 06:33:58 PM'
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+ readonly global_rank=4
+ global_rank=4
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+ start_fmt='2023-03-25 06:33:58 PM'
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+++ export DGXHT=1
+++ DGXHT=1
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
++ export MOM=0.9
++ MOM=0.9
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+ readonly global_rank=4
+ global_rank=4
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
++ export DALI_THREADS=6
++ DALI_THREADS=6
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export LR=10.5
++ LR=10.5
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+++ sed 's/^config_//'
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export DALI_THREADS=6
++ DALI_THREADS=6
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
++ DGXNNODES=8
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+++ sed 's/\.sh$//'
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
++++ readlink -f ./config_8xR750xax4A100.sh
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
+ [[ 0 == 1 ]]
+ DATAROOT=/data
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
running benchmark
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
+ [[ 0 == 1 ]]
+ DATAROOT=/data
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
running benchmark
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ sed 's/^config_//'
++ seq 0 3
++ seq 0 3
+++ sed 's/\.sh$//'
++ tr '\n' ,
+++ sed 's/^config_//'
++ tr '\n' ,
++ sed 's/,$//'
+++ sed 's/\.sh$//'
++ sed 's/,$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+ start=1679787238
+ start=1679787238
++ date +%s
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start=1679787238
++ date '+%Y-%m-%d %r'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ date +%s
+ start_fmt='2023-03-25 06:33:58 PM'
+ start_fmt='2023-03-25 06:33:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
+ readonly global_rank=2
+ global_rank=2
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ source ./config_8xR750xax4A100.sh
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ start_fmt='2023-03-25 06:33:58 PM'
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ readonly global_rank=5
+ global_rank=5
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ readonly local_rank=0
+ local_rank=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
running benchmark
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
running benchmark
+ LARSETA=0.001
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ LABELSMOOTHING=0.1
+ SEED=4761
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+++ dirname ./config_8xR750xax4A100.sh
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ seq 0 3
+ GPUS=0,1,2,3
++ tr '\n' ,
+ start=1679787238
+ GPUS=0,1,2,3
++ sed 's/,$//'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ date '+%Y-%m-%d %r'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679787238
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
+ start_fmt='2023-03-25 06:33:58 PM'
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
++ date '+%Y-%m-%d %r'
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ readonly global_rank=5
+ global_rank=5
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
++ date +%s
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ NODALI=0
+ NUMEXAMPLES=
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ seq 0 3
++ tr '\n' ,
+ start_fmt='2023-03-25 06:33:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ date +%s
++ sed 's/,$//'
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+ readonly global_rank=4
+ global_rank=4
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+++ sed 's/^config_//'
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+++ sed 's/\.sh$//'
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++++ readlink -f ./config_8xR750xax4A100.sh
++ date +%s
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
++ seq 0 3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ tr '\n' ,
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ sed 's/,$//'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ [[ '' -ge 1 ]]
+ PARAMS+=(--use-dali)
+ GPUS=0,1,2,3
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ source ./config_8xR750xax4A100.sh
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679787238
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ dirname ./config_8xR750xax4A100.sh
++ date '+%Y-%m-%d %r'
+ start=1679787238
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-25 06:33:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ start=1679787238
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ GPUS=0,1,2,3
+ echo 'running benchmark'
++ date '+%Y-%m-%d %r'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ start_fmt='2023-03-25 06:33:58 PM'
++ seq 0 3
++ tr '\n' ,
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ readonly global_rank=5
+ global_rank=5
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ sed 's/,$//'
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
++ source ./config_R750xax4A100-SXM-80GB_common.sh
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-25 06:33:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
+ GPUS=0,1,2,3
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+++ export DGXNGPU=4
+++ DGXNGPU=4
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+ LABELSMOOTHING=0.1
+ SEED=4761
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+ NETWORK=resnet-v1b-fl
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+ NODALI=0
+ NUMEXAMPLES=
++ seq 0 3
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 == 1 ]]
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+ DATAROOT=/data
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
running benchmark
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
++ export LR=10.5
++ LR=10.5
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ tr '\n' ,
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+ [[ 0 -ge 1 ]]
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ sed 's/,$//'
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+ [[ '' -ge 1 ]]
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_8xR750xax4A100.sh
++ seq 0 3
+ source ./config_8xR750xax4A100.sh
++ tr '\n' ,
++ sed 's/,$//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ dirname ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+ source ./config_8xR750xax4A100.sh
++ date +%s
+++ dirname ./config_8xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ source ./config_8xR750xax4A100.sh
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ dirname ./config_8xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+ [[ '' -ge 1 ]]
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+++ sed 's/^config_//'
+ start=1679787238
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ sed 's/^config_//'
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++++ readlink -f ./config_8xR750xax4A100.sh
++ date '+%Y-%m-%d %r'
+++ sed 's/\.sh$//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ start_fmt='2023-03-25 06:33:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ readonly global_rank=5
+ global_rank=5
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4761
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+ NUMEPOCHS=37
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+ NODALI=0
+ NUMEXAMPLES=
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
running benchmark
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+ export NGPUS=1
+ NGPUS=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export DGXNNODES=8
++ DGXNNODES=8
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ seq 0 3
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+ source ./config_8xR750xax4A100.sh
++ tr '\n' ,
++ sed 's/,$//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ dirname ./config_8xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
++ date +%s
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ start=1679787238
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ date '+%Y-%m-%d %r'
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+++ sed 's/^config_//'
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+++ sed 's/\.sh$//'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++++ readlink -f ./config_8xR750xax4A100.sh
+ GPUS=0,1,2,3
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ date +%s
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ source ./config_8xR750xax4A100.sh
+ start_fmt='2023-03-25 06:33:58 PM'
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ readonly global_rank=4
+ global_rank=4
+ readonly local_rank=0
+ local_rank=0
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+++ dirname ./config_8xR750xax4A100.sh
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+ start=1679787238
+ start=1679787238
++ date +%s
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date +%s
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ start_fmt='2023-03-25 06:33:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ readonly global_rank=1
+ global_rank=1
+ start_fmt='2023-03-25 06:33:58 PM'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
+ readonly global_rank=1
+ global_rank=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ readonly local_rank=0
+ local_rank=0
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+++ sed 's/^config_//'
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++ seq 0 3
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ seq 0 3
++ tr '\n' ,
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
++ sed 's/,$//'
++ date +%s
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679787238
+ start=1679787238
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-25 06:33:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ readonly global_rank=3
+ global_rank=3
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ start_fmt='2023-03-25 06:33:58 PM'
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ readonly global_rank=3
+ global_rank=3
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ DALI_PREFETCH_QUEUE=3
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ start=1679787238
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ source ./config_8xR750xax4A100.sh
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ THR=0.759
+ [[ 0 == 1 ]]
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DATAROOT=/data
+ echo 'running benchmark'
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ [[ 0 -ge 1 ]]
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
++ date '+%Y-%m-%d %r'
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
+++ dirname ./config_8xR750xax4A100.sh
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start_fmt='2023-03-25 06:33:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ readonly global_rank=1
+ global_rank=1
+ [[ '' -ge 1 ]]
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ [[ '' -ge 1 ]]
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ date +%s
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start=1679787238
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date '+%Y-%m-%d %r'
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ start_fmt='2023-03-25 06:33:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ readonly global_rank=3
+ global_rank=3
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
+ GPUS=0,1,2,3
+ start=1679787238
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ date '+%Y-%m-%d %r'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start_fmt='2023-03-25 06:33:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ source ./config_8xR750xax4A100.sh
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ dirname ./config_8xR750xax4A100.sh
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+ GPUS=0,1,2,3
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++++ readlink -f ./config_8xR750xax4A100.sh
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ start=1679787238
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-25 06:33:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ readonly global_rank=3
+ global_rank=3
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+ source ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ dirname ./config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=102
++ BATCHSIZE=102
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export NETWORK=resnet-v1b-fl
++ NETWORK=resnet-v1b-fl
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0.7
++ DALI_HW_DECODER_LOAD=0.7
++ export DALI_PREFETCH_QUEUE=3
++ DALI_PREFETCH_QUEUE=3
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_CACHE_SIZE=12288
++ DALI_CACHE_SIZE=12288
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=8
++ DGXNNODES=8
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_8xR750xax4A100.sh
++++ readlink -f ./config_8xR750xax4A100.sh
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ date +%s
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+++ basename /workspace/image_classification/config_8xR750xax4A100.sh
+ start=1679787238
+ start=1679787238
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
++ date +%s
++ export DGXSYSTEM=8xR750xax4A100
++ DGXSYSTEM=8xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ OMPI_MCA_btl_openib_if_include=hfi1_0:1
++ export UCX_NET_DEVICES=hfi1_0:1
++ UCX_NET_DEVICES=hfi1_0:1
+ start_fmt='2023-03-25 06:33:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ start_fmt='2023-03-25 06:33:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
+ readonly global_rank=0
+ global_rank=0
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ readonly global_rank=0
+ global_rank=0
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ readonly local_rank=0
+ local_rank=0
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ SLURM_NTASKS_PER_NODE=1
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ LR=10.5
+ MOM=0.9
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ THR=0.759
+ [[ 0 == 1 ]]
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
++ date +%s
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 -ge 1 ]]
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679787238
++ date '+%Y-%m-%d %r'
+ start=1679787238
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-25 06:33:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-25 06:33:58 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-25 06:33:58 PM'
STARTING TIMING RUN AT 2023-03-25 06:33:58 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
++ seq 0 3
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=102
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0.7
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
++ tr '\n' ,
+ SEED=4761
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=3
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=12288
+ DALI_ROI_DECODE=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
++ sed 's/,$//'
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 102 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4761 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0.7 --dali-prefetch-queue 3 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 12288 --dali-roi-decode 0 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node042:279877] MCW rank 9 is not bound (or bound to all available processors)
[node042:279864] MCW rank 10 is not bound (or bound to all available processors)
[node042:279863] MCW rank 8 is not bound (or bound to all available processors)
[node042:279870] MCW rank 11 is not bound (or bound to all available processors)
[node040:155180] MCW rank 0 is not bound (or bound to all available processors)
[node040:155179] MCW rank 1 is not bound (or bound to all available processors)
[node040:155196] MCW rank 2 is not bound (or bound to all available processors)
[node040:155181] MCW rank 3 is not bound (or bound to all available processors)
[node041:216135] MCW rank 5 is not bound (or bound to all available processors)
[node041:216134] MCW rank 6 is not bound (or bound to all available processors)
[node041:216137] MCW rank 7 is not bound (or bound to all available processors)
[node041:216136] MCW rank 4 is not bound (or bound to all available processors)
[node043:228871] MCW rank 15 is not bound (or bound to all available processors)
[node046:202075] MCW rank 26 is not bound (or bound to all available processors)
[node043:228860] MCW rank 12 is not bound (or bound to all available processors)
[node045:227142] MCW rank 21 is not bound (or bound to all available processors)
[node043:228870] MCW rank 13 is not bound (or bound to all available processors)
[node045:227155] MCW rank 20 is not bound (or bound to all available processors)
[node043:228859] MCW rank 14 is not bound (or bound to all available processors)
[node046:202062] MCW rank 24 is not bound (or bound to all available processors)
[node046:202070] MCW rank 25 is not bound (or bound to all available processors)
[node046:202067] MCW rank 27 is not bound (or bound to all available processors)
[node045:227162] MCW rank 22 is not bound (or bound to all available processors)
[node045:227141] MCW rank 23 is not bound (or bound to all available processors)
[node044:210104] MCW rank 19 is not bound (or bound to all available processors)
[node044:210084] MCW rank 16 is not bound (or bound to all available processors)
[node044:210092] MCW rank 18 is not bound (or bound to all available processors)
[node044:210083] MCW rank 17 is not bound (or bound to all available processors)
[node047:224066] MCW rank 28 is not bound (or bound to all available processors)
[node047:224067] MCW rank 30 is not bound (or bound to all available processors)
[node047:224068] MCW rank 31 is not bound (or bound to all available processors)
[node047:224065] MCW rank 29 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679787243142, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[18:34:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679787251379, "event_type": "POINT_IN_TIME", "key": "seed", "value": 4761, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[18:34:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679787253346, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 102, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[18:34:17] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:17] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:17] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:17] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[[18:34:18] ../src/storage/storage.cc:196: 18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
Using Pooled (Naive) StorageManager for CPU
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679787258250, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258250, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258251, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258251, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258251, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258252, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258252, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258252, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258252, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258253, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258253, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258253, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258254, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258254, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679787258254, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258254, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258255, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258255, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258255, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258255, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258256, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258256, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258256, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258256, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258257, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258257, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258257, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258257, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258258, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258258, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258258, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258258, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258259, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258259, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258259, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258259, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258260, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258260, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258260, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258260, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258260, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258261, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258261, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258261, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258261, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258262, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258262, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258262, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258262, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258263, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679787258263, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679787258263, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258263, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258264, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258264, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258264, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258264, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258264, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258265, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258265, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258265, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258265, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258266, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258266, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258266, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258266, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258267, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258267, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258267, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258267, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258267, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258268, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258268, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258268, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258268, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258269, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258269, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258269, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258269, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258270, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258270, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258270, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258270, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258271, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258271, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258271, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258271, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258271, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258272, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258272, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258272, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258272, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258273, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258273, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258273, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258273, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258274, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258274, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258274, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258274, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258275, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258275, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258275, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258275, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258275, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258276, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258276, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258276, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258276, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258277, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258277, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679787258277, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258277, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258277, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258278, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258278, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258278, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258278, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258279, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258279, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258279, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258279, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258280, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258280, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258280, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679787258280, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258281, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258281, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258281, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258281, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258281, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258282, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258282, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258282, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258282, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258283, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258283, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258283, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258283, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258284, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258284, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258284, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258284, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258284, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258285, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258285, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258285, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258285, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258286, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258286, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258286, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258286, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258286, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258287, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258287, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258287, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258287, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258288, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258288, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258288, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679787258288, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[18:34:18] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,316 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=18114, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,316 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=17669, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,317 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=37797, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,317 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=28494, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,317 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=20741, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,318 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=50941, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,318 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=37186, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,318 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=7326, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,320 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=5153, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,320 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=25998, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,320 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=54777, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,320 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=26653, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,320 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=21035, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,321 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=22738, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,321 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=42106, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,321 Node[23] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=54401, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,321 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=49576, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,321 Node[21] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=26841, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,321 Node[17] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=54642, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,321 Node[25] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=63614, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,321 Node[18] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61123, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,321 Node[27] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=50293, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,321 Node[19] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=17519, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,321 Node[22] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=8417, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,321 Node[24] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=11032, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,321 Node[16] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=18425, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,322 Node[29] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=46873, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,322 Node[28] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=59446, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,322 Node[20] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=30413, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679787260321, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679787260323, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679787260323, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,322 Node[31] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=47417, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679787260323, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,322 Node[26] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=48770, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679787260323, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 102, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679787260323, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679787260323, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679787260323, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679787260323, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679787260323, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679787260323, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679787260323, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679787260323, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679787260323, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679787260324, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679787260324, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679787260324, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679787260324, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679787260324, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679787260324, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-25 18:34:20,325 Node[30] start with arguments Namespace(accuracy_threshold=0.759, batch_size=102, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=12288, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.7, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=3, dali_roi_decode=False, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=3207, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679787310025, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679787310027, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679787310027, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679787310562, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50016, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679787310582, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787310582, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-25 18:35:11,499 Node[0] Epoch[0] Batch [0-20]	Speed: 71691.07 samples/sec	accuracy=nan
2023-03-25 18:35:12,392 Node[0] Epoch[0] Batch [20-40]	Speed: 73102.11 samples/sec	accuracy=nan
2023-03-25 18:35:13,284 Node[0] Epoch[0] Batch [40-60]	Speed: 73140.07 samples/sec	accuracy=nan
2023-03-25 18:35:14,181 Node[0] Epoch[0] Batch [60-80]	Speed: 72772.16 samples/sec	accuracy=nan
2023-03-25 18:35:15,073 Node[0] Epoch[0] Batch [80-100]	Speed: 73196.77 samples/sec	accuracy=nan
2023-03-25 18:35:15,968 Node[0] Epoch[0] Batch [100-120]	Speed: 72948.50 samples/sec	accuracy=nan
2023-03-25 18:35:16,866 Node[0] Epoch[0] Batch [120-140]	Speed: 72691.87 samples/sec	accuracy=nan
2023-03-25 18:35:17,765 Node[0] Epoch[0] Batch [140-160]	Speed: 72649.80 samples/sec	accuracy=nan
2023-03-25 18:35:18,659 Node[0] Epoch[0] Batch [160-180]	Speed: 72958.74 samples/sec	accuracy=nan
2023-03-25 18:35:19,549 Node[0] Epoch[0] Batch [180-200]	Speed: 73362.53 samples/sec	accuracy=nan
2023-03-25 18:35:20,439 Node[0] Epoch[0] Batch [200-220]	Speed: 73389.18 samples/sec	accuracy=nan
2023-03-25 18:35:21,329 Node[0] Epoch[0] Batch [220-240]	Speed: 73321.00 samples/sec	accuracy=nan
2023-03-25 18:35:22,219 Node[0] Epoch[0] Batch [240-260]	Speed: 73360.77 samples/sec	accuracy=nan
2023-03-25 18:35:23,109 Node[0] Epoch[0] Batch [260-280]	Speed: 73310.87 samples/sec	accuracy=nan
2023-03-25 18:35:24,004 Node[0] Epoch[0] Batch [280-300]	Speed: 72969.36 samples/sec	accuracy=nan
2023-03-25 18:35:24,896 Node[0] Epoch[0] Batch [300-320]	Speed: 73193.74 samples/sec	accuracy=nan
2023-03-25 18:35:25,789 Node[0] Epoch[0] Batch [320-340]	Speed: 73093.21 samples/sec	accuracy=nan
2023-03-25 18:35:26,679 Node[0] Epoch[0] Batch [340-360]	Speed: 73384.48 samples/sec	accuracy=nan
2023-03-25 18:35:27,569 Node[0] Epoch[0] Batch [360-380]	Speed: 73310.40 samples/sec	accuracy=nan
2023-03-25 18:35:28,101 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,101 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,101 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,101 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,101 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,102 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,102 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,102 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,102 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,102 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,102 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,102 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,102 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,102 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787328102, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-25 18:35:28,102 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,102 Node[0] Epoch[0] Time cost=17.520
2023-03-25 18:35:28,102 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787328102, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73124.61207885286}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-25 18:35:28,102 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,102 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787328103, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-25 18:35:28,102 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,103 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,102 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,103 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,103 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,103 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,102 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,103 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,103 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,103 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,103 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,103 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,103 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:28,103 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:29,030 Node[0] Epoch[1] Batch [0-20]	Speed: 73917.20 samples/sec	accuracy=nan
2023-03-25 18:35:29,910 Node[0] Epoch[1] Batch [20-40]	Speed: 74125.62 samples/sec	accuracy=nan
2023-03-25 18:35:30,791 Node[0] Epoch[1] Batch [40-60]	Speed: 74083.48 samples/sec	accuracy=nan
2023-03-25 18:35:31,674 Node[0] Epoch[1] Batch [60-80]	Speed: 73928.38 samples/sec	accuracy=nan
2023-03-25 18:35:32,560 Node[0] Epoch[1] Batch [80-100]	Speed: 73706.60 samples/sec	accuracy=nan
2023-03-25 18:35:33,442 Node[0] Epoch[1] Batch [100-120]	Speed: 74012.99 samples/sec	accuracy=nan
2023-03-25 18:35:34,326 Node[0] Epoch[1] Batch [120-140]	Speed: 73804.55 samples/sec	accuracy=nan
2023-03-25 18:35:35,208 Node[0] Epoch[1] Batch [140-160]	Speed: 74044.03 samples/sec	accuracy=nan
2023-03-25 18:35:36,092 Node[0] Epoch[1] Batch [160-180]	Speed: 73885.62 samples/sec	accuracy=nan
2023-03-25 18:35:36,978 Node[0] Epoch[1] Batch [180-200]	Speed: 73645.66 samples/sec	accuracy=nan
2023-03-25 18:35:37,867 Node[0] Epoch[1] Batch [200-220]	Speed: 73406.51 samples/sec	accuracy=nan
2023-03-25 18:35:38,760 Node[0] Epoch[1] Batch [220-240]	Speed: 73122.41 samples/sec	accuracy=nan
2023-03-25 18:35:39,651 Node[0] Epoch[1] Batch [240-260]	Speed: 73271.68 samples/sec	accuracy=nan
2023-03-25 18:35:40,543 Node[0] Epoch[1] Batch [260-280]	Speed: 73224.02 samples/sec	accuracy=nan
2023-03-25 18:35:41,436 Node[0] Epoch[1] Batch [280-300]	Speed: 73043.62 samples/sec	accuracy=nan
2023-03-25 18:35:42,328 Node[0] Epoch[1] Batch [300-320]	Speed: 73223.45 samples/sec	accuracy=nan
2023-03-25 18:35:43,222 Node[0] Epoch[1] Batch [320-340]	Speed: 73017.07 samples/sec	accuracy=nan
2023-03-25 18:35:44,113 Node[0] Epoch[1] Batch [340-360]	Speed: 73229.66 samples/sec	accuracy=nan
2023-03-25 18:35:45,003 Node[0] Epoch[1] Batch [360-380]	Speed: 73347.95 samples/sec	accuracy=nan
2023-03-25 18:35:45,537 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,537 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,537 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,537 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,537 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,537 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,537 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787345537, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-25 18:35:45,537 Node[0] Epoch[1] Time cost=17.435
:::MLLOG {"namespace": "", "time_ms": 1679787345537, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73483.98331432327}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
2023-03-25 18:35:45,537 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,537 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,537 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,537 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787345538, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-25 18:35:45,537 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,538 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,538 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,538 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,538 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,538 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,538 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,538 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,538 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,538 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,538 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,538 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,538 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,538 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,538 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,538 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,538 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,538 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,538 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,539 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:45,539 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:35:46,467 Node[0] Epoch[2] Batch [0-20]	Speed: 73728.93 samples/sec	accuracy=nan
2023-03-25 18:35:47,349 Node[0] Epoch[2] Batch [20-40]	Speed: 74028.82 samples/sec	accuracy=nan
2023-03-25 18:35:48,235 Node[0] Epoch[2] Batch [40-60]	Speed: 73683.13 samples/sec	accuracy=nan
2023-03-25 18:35:49,118 Node[0] Epoch[2] Batch [60-80]	Speed: 73959.15 samples/sec	accuracy=nan
2023-03-25 18:35:50,000 Node[0] Epoch[2] Batch [80-100]	Speed: 74024.67 samples/sec	accuracy=nan
2023-03-25 18:35:50,884 Node[0] Epoch[2] Batch [100-120]	Speed: 73781.28 samples/sec	accuracy=nan
2023-03-25 18:35:51,768 Node[0] Epoch[2] Batch [120-140]	Speed: 73882.81 samples/sec	accuracy=nan
2023-03-25 18:35:52,652 Node[0] Epoch[2] Batch [140-160]	Speed: 73825.10 samples/sec	accuracy=nan
2023-03-25 18:35:53,538 Node[0] Epoch[2] Batch [160-180]	Speed: 73674.47 samples/sec	accuracy=nan
2023-03-25 18:35:54,425 Node[0] Epoch[2] Batch [180-200]	Speed: 73621.06 samples/sec	accuracy=nan
2023-03-25 18:35:55,317 Node[0] Epoch[2] Batch [200-220]	Speed: 73175.33 samples/sec	accuracy=nan
2023-03-25 18:35:56,210 Node[0] Epoch[2] Batch [220-240]	Speed: 73128.23 samples/sec	accuracy=nan
2023-03-25 18:35:57,102 Node[0] Epoch[2] Batch [240-260]	Speed: 73139.91 samples/sec	accuracy=nan
2023-03-25 18:35:57,994 Node[0] Epoch[2] Batch [260-280]	Speed: 73182.39 samples/sec	accuracy=nan
2023-03-25 18:35:58,887 Node[0] Epoch[2] Batch [280-300]	Speed: 73113.39 samples/sec	accuracy=nan
2023-03-25 18:35:59,784 Node[0] Epoch[2] Batch [300-320]	Speed: 72815.96 samples/sec	accuracy=nan
2023-03-25 18:36:00,685 Node[0] Epoch[2] Batch [320-340]	Speed: 72454.07 samples/sec	accuracy=nan
2023-03-25 18:36:01,578 Node[0] Epoch[2] Batch [340-360]	Speed: 73095.98 samples/sec	accuracy=nan
2023-03-25 18:36:02,470 Node[0] Epoch[2] Batch [360-380]	Speed: 73145.27 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679787362957, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-25 18:36:02,958 Node[0] Epoch[2] Time cost=17.420
:::MLLOG {"namespace": "", "time_ms": 1679787362958, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73544.79443923141}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
2023-03-25 18:36:02,998 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787362999, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-25 18:36:02,999 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:02,998 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:02,999 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:02,999 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:02,999 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:02,999 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:02,999 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:02,999 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:02,999 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:02,999 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:02,999 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:02,999 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:02,999 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:02,999 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:02,999 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:02,999 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:02,999 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:02,999 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:02,999 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:02,999 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,000 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,000 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,000 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,000 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,000 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,000 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,000 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,000 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,000 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,000 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,000 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,193 Node[0] Epoch[2] Validation-accuracy=0.322023
2023-03-25 18:36:03,194 Node[0] Epoch[2] Validation-correct-count=503.000000
2023-03-25 18:36:03,194 Node[0] Epoch[2] Validation-total-count=1562.000000
2023-03-25 18:36:03,213 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787363213, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787363213, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.33028, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679787363213, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-25 18:36:03,213 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787363213, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-25 18:36:03,213 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:03,213 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787363214, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-25 18:36:03,214 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:04,103 Node[0] Epoch[3] Batch [0-20]	Speed: 73813.56 samples/sec	accuracy=nan
2023-03-25 18:36:04,985 Node[0] Epoch[3] Batch [20-40]	Speed: 73990.49 samples/sec	accuracy=nan
2023-03-25 18:36:05,869 Node[0] Epoch[3] Batch [40-60]	Speed: 73851.21 samples/sec	accuracy=nan
2023-03-25 18:36:06,755 Node[0] Epoch[3] Batch [60-80]	Speed: 73746.50 samples/sec	accuracy=nan
2023-03-25 18:36:07,640 Node[0] Epoch[3] Batch [80-100]	Speed: 73713.50 samples/sec	accuracy=nan
2023-03-25 18:36:08,524 Node[0] Epoch[3] Batch [100-120]	Speed: 73829.36 samples/sec	accuracy=nan
2023-03-25 18:36:09,408 Node[0] Epoch[3] Batch [120-140]	Speed: 73849.95 samples/sec	accuracy=nan
2023-03-25 18:36:10,293 Node[0] Epoch[3] Batch [140-160]	Speed: 73776.11 samples/sec	accuracy=nan
2023-03-25 18:36:11,180 Node[0] Epoch[3] Batch [160-180]	Speed: 73564.04 samples/sec	accuracy=nan
2023-03-25 18:36:12,071 Node[0] Epoch[3] Batch [180-200]	Speed: 73314.07 samples/sec	accuracy=nan
2023-03-25 18:36:12,962 Node[0] Epoch[3] Batch [200-220]	Speed: 73252.62 samples/sec	accuracy=nan
2023-03-25 18:36:13,855 Node[0] Epoch[3] Batch [220-240]	Speed: 73090.97 samples/sec	accuracy=nan
2023-03-25 18:36:14,749 Node[0] Epoch[3] Batch [240-260]	Speed: 73051.09 samples/sec	accuracy=nan
2023-03-25 18:36:15,641 Node[0] Epoch[3] Batch [260-280]	Speed: 73144.70 samples/sec	accuracy=nan
2023-03-25 18:36:16,535 Node[0] Epoch[3] Batch [280-300]	Speed: 73010.08 samples/sec	accuracy=nan
2023-03-25 18:36:17,431 Node[0] Epoch[3] Batch [300-320]	Speed: 72882.36 samples/sec	accuracy=nan
2023-03-25 18:36:18,327 Node[0] Epoch[3] Batch [320-340]	Speed: 72837.48 samples/sec	accuracy=nan
2023-03-25 18:36:19,221 Node[0] Epoch[3] Batch [340-360]	Speed: 73088.04 samples/sec	accuracy=nan
2023-03-25 18:36:20,114 Node[0] Epoch[3] Batch [360-380]	Speed: 73025.89 samples/sec	accuracy=nan
2023-03-25 18:36:20,644 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,644 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,644 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,644 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,645 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,645 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,645 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,645 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,645 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,645 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,645 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,645 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,645 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,645 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,645 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,645 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787380645, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-25 18:36:20,645 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,645 Node[0] Epoch[3] Time cost=17.432
2023-03-25 18:36:20,645 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787380646, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73495.65800351492}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
2023-03-25 18:36:20,645 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,645 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,645 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787380646, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-25 18:36:20,646 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,645 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,646 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,645 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,646 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,646 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,646 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,646 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,646 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,646 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:20,646 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:21,579 Node[0] Epoch[4] Batch [0-20]	Speed: 73514.95 samples/sec	accuracy=nan
2023-03-25 18:36:22,466 Node[0] Epoch[4] Batch [20-40]	Speed: 73618.81 samples/sec	accuracy=nan
2023-03-25 18:36:23,349 Node[0] Epoch[4] Batch [40-60]	Speed: 73856.77 samples/sec	accuracy=nan
2023-03-25 18:36:24,240 Node[0] Epoch[4] Batch [60-80]	Speed: 73312.15 samples/sec	accuracy=nan
2023-03-25 18:36:25,124 Node[0] Epoch[4] Batch [80-100]	Speed: 73800.85 samples/sec	accuracy=nan
2023-03-25 18:36:26,015 Node[0] Epoch[4] Batch [100-120]	Speed: 73324.83 samples/sec	accuracy=nan
2023-03-25 18:36:26,901 Node[0] Epoch[4] Batch [120-140]	Speed: 73676.43 samples/sec	accuracy=nan
2023-03-25 18:36:27,785 Node[0] Epoch[4] Batch [140-160]	Speed: 73832.41 samples/sec	accuracy=nan
2023-03-25 18:36:28,669 Node[0] Epoch[4] Batch [160-180]	Speed: 73811.57 samples/sec	accuracy=nan
2023-03-25 18:36:29,557 Node[0] Epoch[4] Batch [180-200]	Speed: 73560.04 samples/sec	accuracy=nan
2023-03-25 18:36:30,450 Node[0] Epoch[4] Batch [200-220]	Speed: 73101.99 samples/sec	accuracy=nan
2023-03-25 18:36:31,342 Node[0] Epoch[4] Batch [220-240]	Speed: 73135.58 samples/sec	accuracy=nan
2023-03-25 18:36:32,235 Node[0] Epoch[4] Batch [240-260]	Speed: 73143.45 samples/sec	accuracy=nan
2023-03-25 18:36:33,130 Node[0] Epoch[4] Batch [260-280]	Speed: 72960.24 samples/sec	accuracy=nan
2023-03-25 18:36:34,022 Node[0] Epoch[4] Batch [280-300]	Speed: 73173.61 samples/sec	accuracy=nan
2023-03-25 18:36:34,918 Node[0] Epoch[4] Batch [300-320]	Speed: 72809.95 samples/sec	accuracy=nan
2023-03-25 18:36:35,810 Node[0] Epoch[4] Batch [320-340]	Speed: 73205.30 samples/sec	accuracy=nan
2023-03-25 18:36:36,705 Node[0] Epoch[4] Batch [340-360]	Speed: 72963.66 samples/sec	accuracy=nan
2023-03-25 18:36:37,596 Node[0] Epoch[4] Batch [360-380]	Speed: 73207.07 samples/sec	accuracy=nan
2023-03-25 18:36:38,084 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,084 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,084 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,084 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,084 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,084 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,084 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,084 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,084 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,084 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,084 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,084 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,084 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,084 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787398084, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-25 18:36:38,084 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,084 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,085 Node[0] Epoch[4] Time cost=17.439
2023-03-25 18:36:38,084 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787398085, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73466.52242753471}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
2023-03-25 18:36:38,085 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787398085, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-25 18:36:38,085 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,085 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,085 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,085 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,085 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,085 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,085 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,085 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,085 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,085 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,085 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,085 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,085 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:38,085 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:39,017 Node[0] Epoch[5] Batch [0-20]	Speed: 73951.96 samples/sec	accuracy=nan
2023-03-25 18:36:39,902 Node[0] Epoch[5] Batch [20-40]	Speed: 73732.30 samples/sec	accuracy=nan
2023-03-25 18:36:40,787 Node[0] Epoch[5] Batch [40-60]	Speed: 73783.80 samples/sec	accuracy=nan
2023-03-25 18:36:41,676 Node[0] Epoch[5] Batch [60-80]	Speed: 73392.23 samples/sec	accuracy=nan
2023-03-25 18:36:42,561 Node[0] Epoch[5] Batch [80-100]	Speed: 73768.26 samples/sec	accuracy=nan
2023-03-25 18:36:43,447 Node[0] Epoch[5] Batch [100-120]	Speed: 73659.52 samples/sec	accuracy=nan
2023-03-25 18:36:44,334 Node[0] Epoch[5] Batch [120-140]	Speed: 73637.93 samples/sec	accuracy=nan
2023-03-25 18:36:45,217 Node[0] Epoch[5] Batch [140-160]	Speed: 73919.75 samples/sec	accuracy=nan
2023-03-25 18:36:46,103 Node[0] Epoch[5] Batch [160-180]	Speed: 73696.48 samples/sec	accuracy=nan
2023-03-25 18:36:46,991 Node[0] Epoch[5] Batch [180-200]	Speed: 73459.45 samples/sec	accuracy=nan
2023-03-25 18:36:47,885 Node[0] Epoch[5] Batch [200-220]	Speed: 73033.86 samples/sec	accuracy=nan
2023-03-25 18:36:48,776 Node[0] Epoch[5] Batch [220-240]	Speed: 73297.55 samples/sec	accuracy=nan
2023-03-25 18:36:49,668 Node[0] Epoch[5] Batch [240-260]	Speed: 73210.61 samples/sec	accuracy=nan
2023-03-25 18:36:50,560 Node[0] Epoch[5] Batch [260-280]	Speed: 73139.76 samples/sec	accuracy=nan
2023-03-25 18:36:51,454 Node[0] Epoch[5] Batch [280-300]	Speed: 73046.53 samples/sec	accuracy=nan
2023-03-25 18:36:52,350 Node[0] Epoch[5] Batch [300-320]	Speed: 72806.62 samples/sec	accuracy=nan
2023-03-25 18:36:53,243 Node[0] Epoch[5] Batch [320-340]	Speed: 73149.31 samples/sec	accuracy=nan
2023-03-25 18:36:54,135 Node[0] Epoch[5] Batch [340-360]	Speed: 73137.92 samples/sec	accuracy=nan
2023-03-25 18:36:55,031 Node[0] Epoch[5] Batch [360-380]	Speed: 72869.09 samples/sec	accuracy=nan
2023-03-25 18:36:55,564 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,564 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,564 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,564 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,565 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,565 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,565 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,565 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,565 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,565 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,565 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,565 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,565 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,565 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,565 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,565 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,565 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787415565, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-25 18:36:55,565 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,566 Node[0] Epoch[5] Time cost=17.480
2023-03-25 18:36:55,565 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,565 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,565 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787415566, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73291.5591492435}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
2023-03-25 18:36:55,565 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,565 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787415566, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-25 18:36:55,565 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,566 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,566 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,566 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,566 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,566 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,566 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,566 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:55,566 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:36:56,494 Node[0] Epoch[6] Batch [0-20]	Speed: 73824.61 samples/sec	accuracy=nan
2023-03-25 18:36:57,380 Node[0] Epoch[6] Batch [20-40]	Speed: 73679.68 samples/sec	accuracy=nan
2023-03-25 18:36:58,264 Node[0] Epoch[6] Batch [40-60]	Speed: 73895.48 samples/sec	accuracy=nan
2023-03-25 18:36:59,151 Node[0] Epoch[6] Batch [60-80]	Speed: 73525.42 samples/sec	accuracy=nan
2023-03-25 18:37:00,045 Node[0] Epoch[6] Batch [80-100]	Speed: 73091.08 samples/sec	accuracy=nan
2023-03-25 18:37:00,930 Node[0] Epoch[6] Batch [100-120]	Speed: 73707.15 samples/sec	accuracy=nan
2023-03-25 18:37:01,814 Node[0] Epoch[6] Batch [120-140]	Speed: 73844.38 samples/sec	accuracy=nan
2023-03-25 18:37:02,700 Node[0] Epoch[6] Batch [140-160]	Speed: 73721.28 samples/sec	accuracy=nan
2023-03-25 18:37:03,586 Node[0] Epoch[6] Batch [160-180]	Speed: 73627.50 samples/sec	accuracy=nan
2023-03-25 18:37:04,475 Node[0] Epoch[6] Batch [180-200]	Speed: 73493.43 samples/sec	accuracy=nan
2023-03-25 18:37:05,368 Node[0] Epoch[6] Batch [200-220]	Speed: 73077.35 samples/sec	accuracy=nan
2023-03-25 18:37:06,259 Node[0] Epoch[6] Batch [220-240]	Speed: 73248.49 samples/sec	accuracy=nan
2023-03-25 18:37:07,156 Node[0] Epoch[6] Batch [240-260]	Speed: 72815.34 samples/sec	accuracy=nan
2023-03-25 18:37:08,047 Node[0] Epoch[6] Batch [260-280]	Speed: 73211.90 samples/sec	accuracy=nan
2023-03-25 18:37:08,941 Node[0] Epoch[6] Batch [280-300]	Speed: 73058.28 samples/sec	accuracy=nan
2023-03-25 18:37:09,833 Node[0] Epoch[6] Batch [300-320]	Speed: 73132.47 samples/sec	accuracy=nan
2023-03-25 18:37:10,726 Node[0] Epoch[6] Batch [320-340]	Speed: 73150.45 samples/sec	accuracy=nan
2023-03-25 18:37:11,617 Node[0] Epoch[6] Batch [340-360]	Speed: 73241.55 samples/sec	accuracy=nan
2023-03-25 18:37:12,515 Node[0] Epoch[6] Batch [360-380]	Speed: 72728.42 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679787433003, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-25 18:37:13,003 Node[0] Epoch[6] Time cost=17.437
:::MLLOG {"namespace": "", "time_ms": 1679787433003, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73472.48612520764}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679787433043, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-25 18:37:13,232 Node[0] Epoch[6] Validation-accuracy=0.450704
2023-03-25 18:37:13,232 Node[0] Epoch[6] Validation-correct-count=704.000000
2023-03-25 18:37:13,232 Node[0] Epoch[6] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679787433258, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679787433259, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.45198, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
2023-03-25 18:37:13,259 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787433259, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679787433259, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-25 18:37:13,259 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,258 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,258 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,258 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787433259, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-25 18:37:13,259 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:13,259 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:14,153 Node[0] Epoch[7] Batch [0-20]	Speed: 73459.18 samples/sec	accuracy=nan
2023-03-25 18:37:15,037 Node[0] Epoch[7] Batch [20-40]	Speed: 73824.94 samples/sec	accuracy=nan
2023-03-25 18:37:15,921 Node[0] Epoch[7] Batch [40-60]	Speed: 73863.42 samples/sec	accuracy=nan
2023-03-25 18:37:16,805 Node[0] Epoch[7] Batch [60-80]	Speed: 73868.74 samples/sec	accuracy=nan
2023-03-25 18:37:17,693 Node[0] Epoch[7] Batch [80-100]	Speed: 73518.88 samples/sec	accuracy=nan
2023-03-25 18:37:18,577 Node[0] Epoch[7] Batch [100-120]	Speed: 73818.06 samples/sec	accuracy=nan
2023-03-25 18:37:19,462 Node[0] Epoch[7] Batch [120-140]	Speed: 73774.08 samples/sec	accuracy=nan
2023-03-25 18:37:20,346 Node[0] Epoch[7] Batch [140-160]	Speed: 73810.50 samples/sec	accuracy=nan
2023-03-25 18:37:21,232 Node[0] Epoch[7] Batch [160-180]	Speed: 73686.96 samples/sec	accuracy=nan
2023-03-25 18:37:22,120 Node[0] Epoch[7] Batch [180-200]	Speed: 73563.56 samples/sec	accuracy=nan
2023-03-25 18:37:23,014 Node[0] Epoch[7] Batch [200-220]	Speed: 73027.32 samples/sec	accuracy=nan
2023-03-25 18:37:23,904 Node[0] Epoch[7] Batch [220-240]	Speed: 73315.41 samples/sec	accuracy=nan
2023-03-25 18:37:24,796 Node[0] Epoch[7] Batch [240-260]	Speed: 73152.20 samples/sec	accuracy=nan
2023-03-25 18:37:25,688 Node[0] Epoch[7] Batch [260-280]	Speed: 73174.78 samples/sec	accuracy=nan
2023-03-25 18:37:26,583 Node[0] Epoch[7] Batch [280-300]	Speed: 72974.07 samples/sec	accuracy=nan
2023-03-25 18:37:27,477 Node[0] Epoch[7] Batch [300-320]	Speed: 72989.47 samples/sec	accuracy=nan
2023-03-25 18:37:28,372 Node[0] Epoch[7] Batch [320-340]	Speed: 72966.79 samples/sec	accuracy=nan
2023-03-25 18:37:29,266 Node[0] Epoch[7] Batch [340-360]	Speed: 73065.34 samples/sec	accuracy=nan
2023-03-25 18:37:30,156 Node[0] Epoch[7] Batch [360-380]	Speed: 73285.84 samples/sec	accuracy=nan
2023-03-25 18:37:30,688 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,688 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,688 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,689 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,689 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,689 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,689 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,689 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,689 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,689 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,689 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,689 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787450689, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-25 18:37:30,689 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,689 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,690 Node[0] Epoch[7] Time cost=17.430
2023-03-25 18:37:30,689 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787450690, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73502.23368427287}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
2023-03-25 18:37:30,689 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787450690, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-25 18:37:30,690 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,690 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,690 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,690 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,690 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,690 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,690 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,690 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,690 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,690 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,690 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,690 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,690 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,690 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,690 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:30,690 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:31,619 Node[0] Epoch[8] Batch [0-20]	Speed: 73848.12 samples/sec	accuracy=nan
2023-03-25 18:37:32,505 Node[0] Epoch[8] Batch [20-40]	Speed: 73657.42 samples/sec	accuracy=nan
2023-03-25 18:37:33,388 Node[0] Epoch[8] Batch [40-60]	Speed: 73952.72 samples/sec	accuracy=nan
2023-03-25 18:37:34,273 Node[0] Epoch[8] Batch [60-80]	Speed: 73770.03 samples/sec	accuracy=nan
2023-03-25 18:37:35,157 Node[0] Epoch[8] Batch [80-100]	Speed: 73773.27 samples/sec	accuracy=nan
2023-03-25 18:37:36,046 Node[0] Epoch[8] Batch [100-120]	Speed: 73488.28 samples/sec	accuracy=nan
2023-03-25 18:37:36,932 Node[0] Epoch[8] Batch [120-140]	Speed: 73625.36 samples/sec	accuracy=nan
2023-03-25 18:37:37,818 Node[0] Epoch[8] Batch [140-160]	Speed: 73720.89 samples/sec	accuracy=nan
2023-03-25 18:37:38,705 Node[0] Epoch[8] Batch [160-180]	Speed: 73597.83 samples/sec	accuracy=nan
2023-03-25 18:37:39,593 Node[0] Epoch[8] Batch [180-200]	Speed: 73529.86 samples/sec	accuracy=nan
2023-03-25 18:37:40,485 Node[0] Epoch[8] Batch [200-220]	Speed: 73199.02 samples/sec	accuracy=nan
2023-03-25 18:37:41,378 Node[0] Epoch[8] Batch [220-240]	Speed: 73033.53 samples/sec	accuracy=nan
2023-03-25 18:37:42,272 Node[0] Epoch[8] Batch [240-260]	Speed: 73071.23 samples/sec	accuracy=nan
2023-03-25 18:37:43,163 Node[0] Epoch[8] Batch [260-280]	Speed: 73239.93 samples/sec	accuracy=nan
2023-03-25 18:37:44,058 Node[0] Epoch[8] Batch [280-300]	Speed: 72965.78 samples/sec	accuracy=nan
2023-03-25 18:37:44,952 Node[0] Epoch[8] Batch [300-320]	Speed: 72988.93 samples/sec	accuracy=nan
2023-03-25 18:37:45,846 Node[0] Epoch[8] Batch [320-340]	Speed: 72997.72 samples/sec	accuracy=nan
2023-03-25 18:37:46,738 Node[0] Epoch[8] Batch [340-360]	Speed: 73190.98 samples/sec	accuracy=nan
2023-03-25 18:37:47,631 Node[0] Epoch[8] Batch [360-380]	Speed: 73101.68 samples/sec	accuracy=nan
2023-03-25 18:37:48,118 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,118 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,118 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,118 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,118 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,118 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,119 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787468118, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-25 18:37:48,119 Node[0] Epoch[8] Time cost=17.429
2023-03-25 18:37:48,119 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,119 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787468119, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73507.83012223568}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
2023-03-25 18:37:48,119 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,119 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,119 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,119 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,119 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787468119, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-25 18:37:48,119 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,119 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,119 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,119 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,119 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,119 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,119 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,119 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,120 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,119 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,120 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,120 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,120 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,120 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,120 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,120 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,120 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:48,120 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:37:49,048 Node[0] Epoch[9] Batch [0-20]	Speed: 73894.80 samples/sec	accuracy=nan
2023-03-25 18:37:49,934 Node[0] Epoch[9] Batch [20-40]	Speed: 73620.23 samples/sec	accuracy=nan
2023-03-25 18:37:50,817 Node[0] Epoch[9] Batch [40-60]	Speed: 73945.49 samples/sec	accuracy=nan
2023-03-25 18:37:51,701 Node[0] Epoch[9] Batch [60-80]	Speed: 73868.30 samples/sec	accuracy=nan
2023-03-25 18:37:52,586 Node[0] Epoch[9] Batch [80-100]	Speed: 73729.34 samples/sec	accuracy=nan
2023-03-25 18:37:53,470 Node[0] Epoch[9] Batch [100-120]	Speed: 73894.04 samples/sec	accuracy=nan
2023-03-25 18:37:54,353 Node[0] Epoch[9] Batch [120-140]	Speed: 73931.55 samples/sec	accuracy=nan
2023-03-25 18:37:55,237 Node[0] Epoch[9] Batch [140-160]	Speed: 73822.04 samples/sec	accuracy=nan
2023-03-25 18:37:56,122 Node[0] Epoch[9] Batch [160-180]	Speed: 73786.73 samples/sec	accuracy=nan
2023-03-25 18:37:57,011 Node[0] Epoch[9] Batch [180-200]	Speed: 73419.35 samples/sec	accuracy=nan
2023-03-25 18:37:57,903 Node[0] Epoch[9] Batch [200-220]	Speed: 73154.00 samples/sec	accuracy=nan
2023-03-25 18:37:58,797 Node[0] Epoch[9] Batch [220-240]	Speed: 73053.33 samples/sec	accuracy=nan
2023-03-25 18:37:59,691 Node[0] Epoch[9] Batch [240-260]	Speed: 73008.39 samples/sec	accuracy=nan
2023-03-25 18:38:00,591 Node[0] Epoch[9] Batch [260-280]	Speed: 72516.79 samples/sec	accuracy=nan
2023-03-25 18:38:01,483 Node[0] Epoch[9] Batch [280-300]	Speed: 73206.28 samples/sec	accuracy=nan
2023-03-25 18:38:02,377 Node[0] Epoch[9] Batch [300-320]	Speed: 73038.75 samples/sec	accuracy=nan
2023-03-25 18:38:03,273 Node[0] Epoch[9] Batch [320-340]	Speed: 72863.92 samples/sec	accuracy=nan
2023-03-25 18:38:04,164 Node[0] Epoch[9] Batch [340-360]	Speed: 73209.65 samples/sec	accuracy=nan
2023-03-25 18:38:05,057 Node[0] Epoch[9] Batch [360-380]	Speed: 73132.47 samples/sec	accuracy=nan
2023-03-25 18:38:05,588 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,588 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,588 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,588 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,588 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,588 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,588 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,588 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,588 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,588 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,588 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,589 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787485588, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-25 18:38:05,589 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,589 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,589 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,589 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,589 Node[0] Epoch[9] Time cost=17.470
2023-03-25 18:38:05,589 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787485589, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73336.61347261239}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1679787485589, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-25 18:38:05,589 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,589 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,589 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,589 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,589 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,589 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,589 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,589 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,589 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,589 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,589 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,590 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,590 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,590 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:05,590 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:06,517 Node[0] Epoch[10] Batch [0-20]	Speed: 73865.21 samples/sec	accuracy=nan
2023-03-25 18:38:07,402 Node[0] Epoch[10] Batch [20-40]	Speed: 73778.39 samples/sec	accuracy=nan
2023-03-25 18:38:08,286 Node[0] Epoch[10] Batch [40-60]	Speed: 73835.91 samples/sec	accuracy=nan
2023-03-25 18:38:09,167 Node[0] Epoch[10] Batch [60-80]	Speed: 74114.40 samples/sec	accuracy=nan
2023-03-25 18:38:10,050 Node[0] Epoch[10] Batch [80-100]	Speed: 73911.17 samples/sec	accuracy=nan
2023-03-25 18:38:10,935 Node[0] Epoch[10] Batch [100-120]	Speed: 73749.16 samples/sec	accuracy=nan
2023-03-25 18:38:11,820 Node[0] Epoch[10] Batch [120-140]	Speed: 73778.30 samples/sec	accuracy=nan
2023-03-25 18:38:12,705 Node[0] Epoch[10] Batch [140-160]	Speed: 73711.26 samples/sec	accuracy=nan
2023-03-25 18:38:13,589 Node[0] Epoch[10] Batch [160-180]	Speed: 73864.36 samples/sec	accuracy=nan
2023-03-25 18:38:14,476 Node[0] Epoch[10] Batch [180-200]	Speed: 73615.90 samples/sec	accuracy=nan
2023-03-25 18:38:15,369 Node[0] Epoch[10] Batch [200-220]	Speed: 73129.07 samples/sec	accuracy=nan
2023-03-25 18:38:16,263 Node[0] Epoch[10] Batch [220-240]	Speed: 73008.64 samples/sec	accuracy=nan
2023-03-25 18:38:17,155 Node[0] Epoch[10] Batch [240-260]	Speed: 73136.85 samples/sec	accuracy=nan
2023-03-25 18:38:18,048 Node[0] Epoch[10] Batch [260-280]	Speed: 73094.18 samples/sec	accuracy=nan
2023-03-25 18:38:18,940 Node[0] Epoch[10] Batch [280-300]	Speed: 73229.43 samples/sec	accuracy=nan
2023-03-25 18:38:19,834 Node[0] Epoch[10] Batch [300-320]	Speed: 73036.47 samples/sec	accuracy=nan
2023-03-25 18:38:20,728 Node[0] Epoch[10] Batch [320-340]	Speed: 73012.11 samples/sec	accuracy=nan
2023-03-25 18:38:21,620 Node[0] Epoch[10] Batch [340-360]	Speed: 73129.76 samples/sec	accuracy=nan
2023-03-25 18:38:22,515 Node[0] Epoch[10] Batch [360-380]	Speed: 72992.68 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679787503003, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-25 18:38:23,004 Node[0] Epoch[10] Time cost=17.415
:::MLLOG {"namespace": "", "time_ms": 1679787503004, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73568.81469764104}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679787503044, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-25 18:38:23,234 Node[0] Epoch[10] Validation-accuracy=0.538412
2023-03-25 18:38:23,234 Node[0] Epoch[10] Validation-correct-count=841.000000
2023-03-25 18:38:23,234 Node[0] Epoch[10] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679787503256, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679787503257, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.53198, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
2023-03-25 18:38:23,257 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,257 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,257 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787503257, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679787503257, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-25 18:38:23,256 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,256 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,256 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,256 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,256 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,257 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,257 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,256 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,256 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,257 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,256 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,256 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,257 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787503257, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-25 18:38:23,257 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,256 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,256 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,257 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,256 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,256 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,257 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,257 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,256 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,256 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,257 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,256 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,256 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,257 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,257 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:23,257 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:24,148 Node[0] Epoch[11] Batch [0-20]	Speed: 73712.00 samples/sec	accuracy=nan
2023-03-25 18:38:25,033 Node[0] Epoch[11] Batch [20-40]	Speed: 73751.94 samples/sec	accuracy=nan
2023-03-25 18:38:25,917 Node[0] Epoch[11] Batch [40-60]	Speed: 73799.85 samples/sec	accuracy=nan
2023-03-25 18:38:26,802 Node[0] Epoch[11] Batch [60-80]	Speed: 73793.49 samples/sec	accuracy=nan
2023-03-25 18:38:27,685 Node[0] Epoch[11] Batch [80-100]	Speed: 73909.42 samples/sec	accuracy=nan
2023-03-25 18:38:28,577 Node[0] Epoch[11] Batch [100-120]	Speed: 73171.28 samples/sec	accuracy=nan
2023-03-25 18:38:29,460 Node[0] Epoch[11] Batch [120-140]	Speed: 73918.70 samples/sec	accuracy=nan
2023-03-25 18:38:30,348 Node[0] Epoch[11] Batch [140-160]	Speed: 73569.31 samples/sec	accuracy=nan
2023-03-25 18:38:31,236 Node[0] Epoch[11] Batch [160-180]	Speed: 73469.68 samples/sec	accuracy=nan
2023-03-25 18:38:32,124 Node[0] Epoch[11] Batch [180-200]	Speed: 73578.37 samples/sec	accuracy=nan
2023-03-25 18:38:33,016 Node[0] Epoch[11] Batch [200-220]	Speed: 73131.14 samples/sec	accuracy=nan
2023-03-25 18:38:33,912 Node[0] Epoch[11] Batch [220-240]	Speed: 72845.87 samples/sec	accuracy=nan
2023-03-25 18:38:34,805 Node[0] Epoch[11] Batch [240-260]	Speed: 73127.06 samples/sec	accuracy=nan
2023-03-25 18:38:35,698 Node[0] Epoch[11] Batch [260-280]	Speed: 73121.65 samples/sec	accuracy=nan
2023-03-25 18:38:36,591 Node[0] Epoch[11] Batch [280-300]	Speed: 73048.92 samples/sec	accuracy=nan
2023-03-25 18:38:37,497 Node[0] Epoch[11] Batch [300-320]	Speed: 72126.06 samples/sec	accuracy=nan
2023-03-25 18:38:38,390 Node[0] Epoch[11] Batch [320-340]	Speed: 73060.01 samples/sec	accuracy=nan
2023-03-25 18:38:39,283 Node[0] Epoch[11] Batch [340-360]	Speed: 73095.32 samples/sec	accuracy=nan
2023-03-25 18:38:40,176 Node[0] Epoch[11] Batch [360-380]	Speed: 73074.09 samples/sec	accuracy=nan
2023-03-25 18:38:40,706 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,707 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,707 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,707 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,707 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,707 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,707 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,707 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,707 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,707 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,707 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,707 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,707 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,707 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,707 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,707 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,707 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,707 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,707 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,708 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,707 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,708 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,708 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,708 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,708 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,708 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,708 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787520707, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-25 18:38:40,708 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,708 Node[0] Epoch[11] Time cost=17.451
2023-03-25 18:38:40,708 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:40,708 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787520708, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73414.28881493212}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
2023-03-25 18:38:40,708 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787520708, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-25 18:38:40,709 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:41,637 Node[0] Epoch[12] Batch [0-20]	Speed: 73749.58 samples/sec	accuracy=nan
2023-03-25 18:38:42,521 Node[0] Epoch[12] Batch [20-40]	Speed: 73891.43 samples/sec	accuracy=nan
2023-03-25 18:38:43,404 Node[0] Epoch[12] Batch [40-60]	Speed: 73868.94 samples/sec	accuracy=nan
2023-03-25 18:38:44,289 Node[0] Epoch[12] Batch [60-80]	Speed: 73768.52 samples/sec	accuracy=nan
2023-03-25 18:38:45,178 Node[0] Epoch[12] Batch [80-100]	Speed: 73431.40 samples/sec	accuracy=nan
2023-03-25 18:38:46,063 Node[0] Epoch[12] Batch [100-120]	Speed: 73832.75 samples/sec	accuracy=nan
2023-03-25 18:38:46,948 Node[0] Epoch[12] Batch [120-140]	Speed: 73701.56 samples/sec	accuracy=nan
2023-03-25 18:38:47,834 Node[0] Epoch[12] Batch [140-160]	Speed: 73683.03 samples/sec	accuracy=nan
2023-03-25 18:38:48,721 Node[0] Epoch[12] Batch [160-180]	Speed: 73584.02 samples/sec	accuracy=nan
2023-03-25 18:38:49,608 Node[0] Epoch[12] Batch [180-200]	Speed: 73618.31 samples/sec	accuracy=nan
2023-03-25 18:38:50,503 Node[0] Epoch[12] Batch [200-220]	Speed: 72906.89 samples/sec	accuracy=nan
2023-03-25 18:38:51,396 Node[0] Epoch[12] Batch [220-240]	Speed: 73138.88 samples/sec	accuracy=nan
2023-03-25 18:38:52,287 Node[0] Epoch[12] Batch [240-260]	Speed: 73229.54 samples/sec	accuracy=nan
2023-03-25 18:38:53,180 Node[0] Epoch[12] Batch [260-280]	Speed: 73134.95 samples/sec	accuracy=nan
2023-03-25 18:38:54,072 Node[0] Epoch[12] Batch [280-300]	Speed: 73200.76 samples/sec	accuracy=nan
2023-03-25 18:38:54,965 Node[0] Epoch[12] Batch [300-320]	Speed: 73101.82 samples/sec	accuracy=nan
2023-03-25 18:38:55,858 Node[0] Epoch[12] Batch [320-340]	Speed: 73062.08 samples/sec	accuracy=nan
2023-03-25 18:38:56,751 Node[0] Epoch[12] Batch [340-360]	Speed: 73140.17 samples/sec	accuracy=nan
2023-03-25 18:38:57,640 Node[0] Epoch[12] Batch [360-380]	Speed: 73383.36 samples/sec	accuracy=nan
2023-03-25 18:38:58,127 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,127 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,127 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,127 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,127 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,127 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,128 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,127 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,128 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,128 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,128 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,127 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,128 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,128 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,128 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,128 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,128 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787538128, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-25 18:38:58,128 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,128 Node[0] Epoch[12] Time cost=17.419
:::MLLOG {"namespace": "", "time_ms": 1679787538128, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73548.10615977674}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-25 18:38:58,128 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,128 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,128 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787538128, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-25 18:38:58,128 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,128 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,129 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,128 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,128 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,128 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,128 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,128 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,129 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,129 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:58,129 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:38:59,060 Node[0] Epoch[13] Batch [0-20]	Speed: 73667.45 samples/sec	accuracy=nan
2023-03-25 18:38:59,948 Node[0] Epoch[13] Batch [20-40]	Speed: 73569.10 samples/sec	accuracy=nan
2023-03-25 18:39:00,830 Node[0] Epoch[13] Batch [40-60]	Speed: 73941.63 samples/sec	accuracy=nan
2023-03-25 18:39:01,714 Node[0] Epoch[13] Batch [60-80]	Speed: 73842.25 samples/sec	accuracy=nan
2023-03-25 18:39:02,598 Node[0] Epoch[13] Batch [80-100]	Speed: 73884.39 samples/sec	accuracy=nan
2023-03-25 18:39:03,481 Node[0] Epoch[13] Batch [100-120]	Speed: 73892.84 samples/sec	accuracy=nan
2023-03-25 18:39:04,368 Node[0] Epoch[13] Batch [120-140]	Speed: 73646.25 samples/sec	accuracy=nan
2023-03-25 18:39:05,252 Node[0] Epoch[13] Batch [140-160]	Speed: 73801.46 samples/sec	accuracy=nan
2023-03-25 18:39:06,138 Node[0] Epoch[13] Batch [160-180]	Speed: 73739.57 samples/sec	accuracy=nan
2023-03-25 18:39:07,025 Node[0] Epoch[13] Batch [180-200]	Speed: 73563.25 samples/sec	accuracy=nan
2023-03-25 18:39:07,915 Node[0] Epoch[13] Batch [200-220]	Speed: 73325.85 samples/sec	accuracy=nan
2023-03-25 18:39:08,810 Node[0] Epoch[13] Batch [220-240]	Speed: 72948.69 samples/sec	accuracy=nan
2023-03-25 18:39:09,703 Node[0] Epoch[13] Batch [240-260]	Speed: 73107.81 samples/sec	accuracy=nan
2023-03-25 18:39:10,599 Node[0] Epoch[13] Batch [260-280]	Speed: 72879.96 samples/sec	accuracy=nan
2023-03-25 18:39:11,492 Node[0] Epoch[13] Batch [280-300]	Speed: 73065.63 samples/sec	accuracy=nan
2023-03-25 18:39:12,393 Node[0] Epoch[13] Batch [300-320]	Speed: 72448.55 samples/sec	accuracy=nan
2023-03-25 18:39:13,287 Node[0] Epoch[13] Batch [320-340]	Speed: 73088.19 samples/sec	accuracy=nan
2023-03-25 18:39:14,182 Node[0] Epoch[13] Batch [340-360]	Speed: 72893.03 samples/sec	accuracy=nan
2023-03-25 18:39:15,071 Node[0] Epoch[13] Batch [360-380]	Speed: 73400.35 samples/sec	accuracy=nan
2023-03-25 18:39:15,604 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,604 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,604 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,604 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,605 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,605 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,605 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,605 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,605 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,605 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,605 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,605 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,605 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,605 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,605 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,605 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,605 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,605 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787555605, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-25 18:39:15,605 Node[0] Epoch[13] Time cost=17.477
2023-03-25 18:39:15,605 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,605 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787555605, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73306.18675569774}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
2023-03-25 18:39:15,605 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,605 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,605 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,606 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787555606, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-25 18:39:15,606 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,606 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,606 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,606 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,606 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,606 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,606 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:15,606 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:16,533 Node[0] Epoch[14] Batch [0-20]	Speed: 73956.31 samples/sec	accuracy=nan
2023-03-25 18:39:17,418 Node[0] Epoch[14] Batch [20-40]	Speed: 73762.87 samples/sec	accuracy=nan
2023-03-25 18:39:18,302 Node[0] Epoch[14] Batch [40-60]	Speed: 73850.21 samples/sec	accuracy=nan
2023-03-25 18:39:19,189 Node[0] Epoch[14] Batch [60-80]	Speed: 73637.67 samples/sec	accuracy=nan
2023-03-25 18:39:20,070 Node[0] Epoch[14] Batch [80-100]	Speed: 74028.62 samples/sec	accuracy=nan
2023-03-25 18:39:20,956 Node[0] Epoch[14] Batch [100-120]	Speed: 73684.84 samples/sec	accuracy=nan
2023-03-25 18:39:21,841 Node[0] Epoch[14] Batch [120-140]	Speed: 73813.52 samples/sec	accuracy=nan
2023-03-25 18:39:22,724 Node[0] Epoch[14] Batch [140-160]	Speed: 73905.79 samples/sec	accuracy=nan
2023-03-25 18:39:23,609 Node[0] Epoch[14] Batch [160-180]	Speed: 73777.94 samples/sec	accuracy=nan
2023-03-25 18:39:24,495 Node[0] Epoch[14] Batch [180-200]	Speed: 73670.05 samples/sec	accuracy=nan
2023-03-25 18:39:25,388 Node[0] Epoch[14] Batch [200-220]	Speed: 73087.65 samples/sec	accuracy=nan
2023-03-25 18:39:26,280 Node[0] Epoch[14] Batch [220-240]	Speed: 73189.02 samples/sec	accuracy=nan
2023-03-25 18:39:27,172 Node[0] Epoch[14] Batch [240-260]	Speed: 73183.27 samples/sec	accuracy=nan
2023-03-25 18:39:28,067 Node[0] Epoch[14] Batch [260-280]	Speed: 72971.44 samples/sec	accuracy=nan
2023-03-25 18:39:28,958 Node[0] Epoch[14] Batch [280-300]	Speed: 73261.19 samples/sec	accuracy=nan
2023-03-25 18:39:29,854 Node[0] Epoch[14] Batch [300-320]	Speed: 72806.66 samples/sec	accuracy=nan
2023-03-25 18:39:30,749 Node[0] Epoch[14] Batch [320-340]	Speed: 72938.18 samples/sec	accuracy=nan
2023-03-25 18:39:31,642 Node[0] Epoch[14] Batch [340-360]	Speed: 73121.38 samples/sec	accuracy=nan
2023-03-25 18:39:32,535 Node[0] Epoch[14] Batch [360-380]	Speed: 73129.87 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679787573023, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-25 18:39:33,024 Node[0] Epoch[14] Time cost=17.418
:::MLLOG {"namespace": "", "time_ms": 1679787573024, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73553.90490547496}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679787573064, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-25 18:39:33,254 Node[0] Epoch[14] Validation-accuracy=0.595391
2023-03-25 18:39:33,255 Node[0] Epoch[14] Validation-correct-count=930.000000
2023-03-25 18:39:33,255 Node[0] Epoch[14] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679787573276, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679787573276, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.60088, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
2023-03-25 18:39:33,276 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787573276, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
2023-03-25 18:39:33,276 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787573276, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-25 18:39:33,276 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,276 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787573276, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-25 18:39:33,276 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:33,277 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:34,166 Node[0] Epoch[15] Batch [0-20]	Speed: 73797.56 samples/sec	accuracy=nan
2023-03-25 18:39:35,050 Node[0] Epoch[15] Batch [20-40]	Speed: 73878.55 samples/sec	accuracy=nan
2023-03-25 18:39:35,933 Node[0] Epoch[15] Batch [40-60]	Speed: 73926.66 samples/sec	accuracy=nan
2023-03-25 18:39:36,816 Node[0] Epoch[15] Batch [60-80]	Speed: 73918.46 samples/sec	accuracy=nan
2023-03-25 18:39:37,700 Node[0] Epoch[15] Batch [80-100]	Speed: 73855.95 samples/sec	accuracy=nan
2023-03-25 18:39:38,583 Node[0] Epoch[15] Batch [100-120]	Speed: 73950.06 samples/sec	accuracy=nan
2023-03-25 18:39:39,467 Node[0] Epoch[15] Batch [120-140]	Speed: 73830.18 samples/sec	accuracy=nan
2023-03-25 18:39:40,351 Node[0] Epoch[15] Batch [140-160]	Speed: 73853.92 samples/sec	accuracy=nan
2023-03-25 18:39:41,235 Node[0] Epoch[15] Batch [160-180]	Speed: 73842.28 samples/sec	accuracy=nan
2023-03-25 18:39:42,123 Node[0] Epoch[15] Batch [180-200]	Speed: 73486.86 samples/sec	accuracy=nan
2023-03-25 18:39:43,015 Node[0] Epoch[15] Batch [200-220]	Speed: 73191.08 samples/sec	accuracy=nan
2023-03-25 18:39:43,907 Node[0] Epoch[15] Batch [220-240]	Speed: 73228.96 samples/sec	accuracy=nan
2023-03-25 18:39:44,799 Node[0] Epoch[15] Batch [240-260]	Speed: 73182.37 samples/sec	accuracy=nan
2023-03-25 18:39:45,690 Node[0] Epoch[15] Batch [260-280]	Speed: 73255.84 samples/sec	accuracy=nan
2023-03-25 18:39:46,583 Node[0] Epoch[15] Batch [280-300]	Speed: 73092.49 samples/sec	accuracy=nan
2023-03-25 18:39:47,475 Node[0] Epoch[15] Batch [300-320]	Speed: 73151.40 samples/sec	accuracy=nan
2023-03-25 18:39:48,370 Node[0] Epoch[15] Batch [320-340]	Speed: 72930.23 samples/sec	accuracy=nan
2023-03-25 18:39:49,263 Node[0] Epoch[15] Batch [340-360]	Speed: 73108.30 samples/sec	accuracy=nan
2023-03-25 18:39:50,152 Node[0] Epoch[15] Batch [360-380]	Speed: 73445.97 samples/sec	accuracy=nan
2023-03-25 18:39:50,683 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,683 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,683 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,683 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,683 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,684 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,684 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,684 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,684 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,684 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,684 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,684 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,684 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,684 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787590683, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-25 18:39:50,684 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,684 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,684 Node[0] Epoch[15] Time cost=17.408
:::MLLOG {"namespace": "", "time_ms": 1679787590684, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73597.32486966533}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
2023-03-25 18:39:50,684 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,684 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787590685, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-25 18:39:50,685 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,684 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,685 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,685 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,685 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,685 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,685 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,685 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,685 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,685 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,685 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,685 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,685 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:50,685 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:39:51,615 Node[0] Epoch[16] Batch [0-20]	Speed: 73622.53 samples/sec	accuracy=nan
2023-03-25 18:39:52,500 Node[0] Epoch[16] Batch [20-40]	Speed: 73754.65 samples/sec	accuracy=nan
2023-03-25 18:39:53,382 Node[0] Epoch[16] Batch [40-60]	Speed: 74005.23 samples/sec	accuracy=nan
2023-03-25 18:39:54,266 Node[0] Epoch[16] Batch [60-80]	Speed: 73873.56 samples/sec	accuracy=nan
2023-03-25 18:39:55,148 Node[0] Epoch[16] Batch [80-100]	Speed: 73962.57 samples/sec	accuracy=nan
2023-03-25 18:39:56,033 Node[0] Epoch[16] Batch [100-120]	Speed: 73761.06 samples/sec	accuracy=nan
2023-03-25 18:39:56,921 Node[0] Epoch[16] Batch [120-140]	Speed: 73539.24 samples/sec	accuracy=nan
2023-03-25 18:39:57,806 Node[0] Epoch[16] Batch [140-160]	Speed: 73743.24 samples/sec	accuracy=nan
2023-03-25 18:39:58,692 Node[0] Epoch[16] Batch [160-180]	Speed: 73736.33 samples/sec	accuracy=nan
2023-03-25 18:39:59,578 Node[0] Epoch[16] Batch [180-200]	Speed: 73605.17 samples/sec	accuracy=nan
2023-03-25 18:40:00,475 Node[0] Epoch[16] Batch [200-220]	Speed: 72783.05 samples/sec	accuracy=nan
2023-03-25 18:40:01,371 Node[0] Epoch[16] Batch [220-240]	Speed: 72924.52 samples/sec	accuracy=nan
2023-03-25 18:40:02,263 Node[0] Epoch[16] Batch [240-260]	Speed: 73172.09 samples/sec	accuracy=nan
2023-03-25 18:40:03,156 Node[0] Epoch[16] Batch [260-280]	Speed: 73104.92 samples/sec	accuracy=nan
2023-03-25 18:40:04,050 Node[0] Epoch[16] Batch [280-300]	Speed: 73023.65 samples/sec	accuracy=nan
2023-03-25 18:40:04,944 Node[0] Epoch[16] Batch [300-320]	Speed: 72953.09 samples/sec	accuracy=nan
2023-03-25 18:40:05,837 Node[0] Epoch[16] Batch [320-340]	Speed: 73170.33 samples/sec	accuracy=nan
2023-03-25 18:40:06,727 Node[0] Epoch[16] Batch [340-360]	Speed: 73293.11 samples/sec	accuracy=nan
2023-03-25 18:40:07,617 Node[0] Epoch[16] Batch [360-380]	Speed: 73345.99 samples/sec	accuracy=nan
2023-03-25 18:40:08,104 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,104 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,104 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,104 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,104 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,104 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787608104, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-25 18:40:08,105 Node[0] Epoch[16] Time cost=17.420
2023-03-25 18:40:08,105 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,105 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787608105, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73545.41548993767}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
2023-03-25 18:40:08,105 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,105 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,105 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,105 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,105 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787608105, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-25 18:40:08,105 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,105 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,105 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,105 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,105 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,105 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,105 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,105 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,106 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,106 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,106 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,106 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,106 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,106 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,106 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,106 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,106 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,106 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:08,106 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:09,033 Node[0] Epoch[17] Batch [0-20]	Speed: 73942.39 samples/sec	accuracy=nan
2023-03-25 18:40:09,917 Node[0] Epoch[17] Batch [20-40]	Speed: 73852.24 samples/sec	accuracy=nan
2023-03-25 18:40:10,801 Node[0] Epoch[17] Batch [40-60]	Speed: 73855.07 samples/sec	accuracy=nan
2023-03-25 18:40:11,683 Node[0] Epoch[17] Batch [60-80]	Speed: 74024.87 samples/sec	accuracy=nan
2023-03-25 18:40:12,568 Node[0] Epoch[17] Batch [80-100]	Speed: 73723.94 samples/sec	accuracy=nan
2023-03-25 18:40:13,453 Node[0] Epoch[17] Batch [100-120]	Speed: 73824.51 samples/sec	accuracy=nan
2023-03-25 18:40:14,337 Node[0] Epoch[17] Batch [120-140]	Speed: 73849.26 samples/sec	accuracy=nan
2023-03-25 18:40:15,220 Node[0] Epoch[17] Batch [140-160]	Speed: 73897.03 samples/sec	accuracy=nan
2023-03-25 18:40:16,106 Node[0] Epoch[17] Batch [160-180]	Speed: 73669.79 samples/sec	accuracy=nan
2023-03-25 18:40:16,992 Node[0] Epoch[17] Batch [180-200]	Speed: 73691.80 samples/sec	accuracy=nan
2023-03-25 18:40:17,883 Node[0] Epoch[17] Batch [200-220]	Speed: 73253.58 samples/sec	accuracy=nan
2023-03-25 18:40:18,774 Node[0] Epoch[17] Batch [220-240]	Speed: 73258.11 samples/sec	accuracy=nan
2023-03-25 18:40:19,666 Node[0] Epoch[17] Batch [240-260]	Speed: 73182.59 samples/sec	accuracy=nan
2023-03-25 18:40:20,556 Node[0] Epoch[17] Batch [260-280]	Speed: 73346.26 samples/sec	accuracy=nan
2023-03-25 18:40:21,447 Node[0] Epoch[17] Batch [280-300]	Speed: 73317.06 samples/sec	accuracy=nan
2023-03-25 18:40:22,342 Node[0] Epoch[17] Batch [300-320]	Speed: 72894.88 samples/sec	accuracy=nan
2023-03-25 18:40:23,234 Node[0] Epoch[17] Batch [320-340]	Speed: 73207.52 samples/sec	accuracy=nan
2023-03-25 18:40:24,125 Node[0] Epoch[17] Batch [340-360]	Speed: 73251.51 samples/sec	accuracy=nan
2023-03-25 18:40:25,015 Node[0] Epoch[17] Batch [360-380]	Speed: 73353.36 samples/sec	accuracy=nan
2023-03-25 18:40:25,547 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,547 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,547 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,547 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,547 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,547 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,548 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,548 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,548 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,548 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,548 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,548 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787625547, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-25 18:40:25,548 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,548 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,548 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,548 Node[0] Epoch[17] Time cost=17.443
2023-03-25 18:40:25,548 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787625548, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73448.7686565014}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679787625548, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-25 18:40:25,548 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,549 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,548 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,548 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,548 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,548 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,549 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,549 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,549 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,549 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,549 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,549 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,549 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,549 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,549 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:25,549 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:26,475 Node[0] Epoch[18] Batch [0-20]	Speed: 73914.55 samples/sec	accuracy=nan
2023-03-25 18:40:27,359 Node[0] Epoch[18] Batch [20-40]	Speed: 73857.38 samples/sec	accuracy=nan
2023-03-25 18:40:28,242 Node[0] Epoch[18] Batch [40-60]	Speed: 73926.36 samples/sec	accuracy=nan
2023-03-25 18:40:29,125 Node[0] Epoch[18] Batch [60-80]	Speed: 73923.75 samples/sec	accuracy=nan
2023-03-25 18:40:30,009 Node[0] Epoch[18] Batch [80-100]	Speed: 73894.68 samples/sec	accuracy=nan
2023-03-25 18:40:30,893 Node[0] Epoch[18] Batch [100-120]	Speed: 73805.06 samples/sec	accuracy=nan
2023-03-25 18:40:31,780 Node[0] Epoch[18] Batch [120-140]	Speed: 73652.29 samples/sec	accuracy=nan
2023-03-25 18:40:32,664 Node[0] Epoch[18] Batch [140-160]	Speed: 73800.77 samples/sec	accuracy=nan
2023-03-25 18:40:33,548 Node[0] Epoch[18] Batch [160-180]	Speed: 73845.45 samples/sec	accuracy=nan
2023-03-25 18:40:34,435 Node[0] Epoch[18] Batch [180-200]	Speed: 73649.38 samples/sec	accuracy=nan
2023-03-25 18:40:35,325 Node[0] Epoch[18] Batch [200-220]	Speed: 73292.04 samples/sec	accuracy=nan
2023-03-25 18:40:36,216 Node[0] Epoch[18] Batch [220-240]	Speed: 73296.19 samples/sec	accuracy=nan
2023-03-25 18:40:37,107 Node[0] Epoch[18] Batch [240-260]	Speed: 73259.64 samples/sec	accuracy=nan
2023-03-25 18:40:37,997 Node[0] Epoch[18] Batch [260-280]	Speed: 73312.84 samples/sec	accuracy=nan
2023-03-25 18:40:38,890 Node[0] Epoch[18] Batch [280-300]	Speed: 73160.65 samples/sec	accuracy=nan
2023-03-25 18:40:39,782 Node[0] Epoch[18] Batch [300-320]	Speed: 73151.01 samples/sec	accuracy=nan
2023-03-25 18:40:40,677 Node[0] Epoch[18] Batch [320-340]	Speed: 72954.08 samples/sec	accuracy=nan
2023-03-25 18:40:41,566 Node[0] Epoch[18] Batch [340-360]	Speed: 73396.71 samples/sec	accuracy=nan
2023-03-25 18:40:42,457 Node[0] Epoch[18] Batch [360-380]	Speed: 73274.25 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679787642943, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-25 18:40:42,944 Node[0] Epoch[18] Time cost=17.396
:::MLLOG {"namespace": "", "time_ms": 1679787642944, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73648.64338583962}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679787642985, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-25 18:40:43,174 Node[0] Epoch[18] Validation-accuracy=0.645967
2023-03-25 18:40:43,174 Node[0] Epoch[18] Validation-correct-count=1009.000000
2023-03-25 18:40:43,174 Node[0] Epoch[18] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679787643197, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679787643197, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.64386, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-25 18:40:43,197 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787643198, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-25 18:40:43,197 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787643198, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-25 18:40:43,197 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:43,197 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787643198, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-25 18:40:43,198 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:40:44,090 Node[0] Epoch[19] Batch [0-20]	Speed: 73632.58 samples/sec	accuracy=nan
2023-03-25 18:40:44,973 Node[0] Epoch[19] Batch [20-40]	Speed: 73901.42 samples/sec	accuracy=nan
2023-03-25 18:40:45,858 Node[0] Epoch[19] Batch [40-60]	Speed: 73782.27 samples/sec	accuracy=nan
2023-03-25 18:40:46,742 Node[0] Epoch[19] Batch [60-80]	Speed: 73838.24 samples/sec	accuracy=nan
2023-03-25 18:40:47,632 Node[0] Epoch[19] Batch [80-100]	Speed: 73350.78 samples/sec	accuracy=nan
2023-03-25 18:40:48,514 Node[0] Epoch[19] Batch [100-120]	Speed: 74026.73 samples/sec	accuracy=nan
2023-03-25 18:40:49,399 Node[0] Epoch[19] Batch [120-140]	Speed: 73694.04 samples/sec	accuracy=nan
2023-03-25 18:40:50,282 Node[0] Epoch[19] Batch [140-160]	Speed: 73950.64 samples/sec	accuracy=nan
2023-03-25 18:40:51,167 Node[0] Epoch[19] Batch [160-180]	Speed: 73773.03 samples/sec	accuracy=nan
2023-03-25 18:40:52,053 Node[0] Epoch[19] Batch [180-200]	Speed: 73654.25 samples/sec	accuracy=nan
2023-03-25 18:40:52,943 Node[0] Epoch[19] Batch [200-220]	Speed: 73389.42 samples/sec	accuracy=nan
2023-03-25 18:40:53,833 Node[0] Epoch[19] Batch [220-240]	Speed: 73306.42 samples/sec	accuracy=nan
2023-03-25 18:40:54,726 Node[0] Epoch[19] Batch [240-260]	Speed: 73109.43 samples/sec	accuracy=nan
2023-03-25 18:40:55,619 Node[0] Epoch[19] Batch [260-280]	Speed: 73105.25 samples/sec	accuracy=nan
2023-03-25 18:40:56,511 Node[0] Epoch[19] Batch [280-300]	Speed: 73185.48 samples/sec	accuracy=nan
2023-03-25 18:40:57,404 Node[0] Epoch[19] Batch [300-320]	Speed: 73105.25 samples/sec	accuracy=nan
2023-03-25 18:40:58,297 Node[0] Epoch[19] Batch [320-340]	Speed: 73117.00 samples/sec	accuracy=nan
2023-03-25 18:40:59,191 Node[0] Epoch[19] Batch [340-360]	Speed: 73048.26 samples/sec	accuracy=nan
2023-03-25 18:41:00,085 Node[0] Epoch[19] Batch [360-380]	Speed: 73025.64 samples/sec	accuracy=nan
2023-03-25 18:41:00,615 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,616 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,615 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,616 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,616 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,616 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,616 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,616 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:00,616 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787660616, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-25 18:41:00,616 Node[0] Epoch[19] Time cost=17.418
:::MLLOG {"namespace": "", "time_ms": 1679787660616, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73552.21451695409}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679787660617, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-25 18:41:00,617 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:01,550 Node[0] Epoch[20] Batch [0-20]	Speed: 73372.29 samples/sec	accuracy=nan
2023-03-25 18:41:02,435 Node[0] Epoch[20] Batch [20-40]	Speed: 73758.16 samples/sec	accuracy=nan
2023-03-25 18:41:03,320 Node[0] Epoch[20] Batch [40-60]	Speed: 73747.67 samples/sec	accuracy=nan
2023-03-25 18:41:04,205 Node[0] Epoch[20] Batch [60-80]	Speed: 73752.78 samples/sec	accuracy=nan
2023-03-25 18:41:05,091 Node[0] Epoch[20] Batch [80-100]	Speed: 73734.45 samples/sec	accuracy=nan
2023-03-25 18:41:05,974 Node[0] Epoch[20] Batch [100-120]	Speed: 73889.29 samples/sec	accuracy=nan
2023-03-25 18:41:06,863 Node[0] Epoch[20] Batch [120-140]	Speed: 73474.53 samples/sec	accuracy=nan
2023-03-25 18:41:07,747 Node[0] Epoch[20] Batch [140-160]	Speed: 73766.13 samples/sec	accuracy=nan
2023-03-25 18:41:08,636 Node[0] Epoch[20] Batch [160-180]	Speed: 73467.16 samples/sec	accuracy=nan
2023-03-25 18:41:09,526 Node[0] Epoch[20] Batch [180-200]	Speed: 73352.53 samples/sec	accuracy=nan
2023-03-25 18:41:10,418 Node[0] Epoch[20] Batch [200-220]	Speed: 73219.44 samples/sec	accuracy=nan
2023-03-25 18:41:11,311 Node[0] Epoch[20] Batch [220-240]	Speed: 73100.94 samples/sec	accuracy=nan
2023-03-25 18:41:12,203 Node[0] Epoch[20] Batch [240-260]	Speed: 73152.85 samples/sec	accuracy=nan
2023-03-25 18:41:13,097 Node[0] Epoch[20] Batch [260-280]	Speed: 73020.09 samples/sec	accuracy=nan
2023-03-25 18:41:13,992 Node[0] Epoch[20] Batch [280-300]	Speed: 72928.31 samples/sec	accuracy=nan
2023-03-25 18:41:14,884 Node[0] Epoch[20] Batch [300-320]	Speed: 73227.35 samples/sec	accuracy=nan
2023-03-25 18:41:15,778 Node[0] Epoch[20] Batch [320-340]	Speed: 72996.98 samples/sec	accuracy=nan
2023-03-25 18:41:16,669 Node[0] Epoch[20] Batch [340-360]	Speed: 73233.89 samples/sec	accuracy=nan
2023-03-25 18:41:17,559 Node[0] Epoch[20] Batch [360-380]	Speed: 73405.61 samples/sec	accuracy=nan
2023-03-25 18:41:18,045 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,045 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,045 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,045 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,045 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,045 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,045 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,045 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,046 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,045 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,045 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,046 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,046 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,046 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,046 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,046 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,046 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,046 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,046 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,046 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,046 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,046 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,046 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,046 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,046 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,046 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,046 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,046 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,046 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,046 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787678046, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-25 18:41:18,046 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,047 Node[0] Epoch[20] Time cost=17.430
:::MLLOG {"namespace": "", "time_ms": 1679787678047, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73504.46773320201}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1679787678047, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-25 18:41:18,047 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:18,976 Node[0] Epoch[21] Batch [0-20]	Speed: 73846.97 samples/sec	accuracy=nan
2023-03-25 18:41:19,858 Node[0] Epoch[21] Batch [20-40]	Speed: 73999.17 samples/sec	accuracy=nan
2023-03-25 18:41:20,744 Node[0] Epoch[21] Batch [40-60]	Speed: 73703.32 samples/sec	accuracy=nan
2023-03-25 18:41:21,628 Node[0] Epoch[21] Batch [60-80]	Speed: 73835.44 samples/sec	accuracy=nan
2023-03-25 18:41:22,512 Node[0] Epoch[21] Batch [80-100]	Speed: 73795.91 samples/sec	accuracy=nan
2023-03-25 18:41:23,396 Node[0] Epoch[21] Batch [100-120]	Speed: 73880.88 samples/sec	accuracy=nan
2023-03-25 18:41:24,281 Node[0] Epoch[21] Batch [120-140]	Speed: 73793.11 samples/sec	accuracy=nan
2023-03-25 18:41:25,165 Node[0] Epoch[21] Batch [140-160]	Speed: 73806.56 samples/sec	accuracy=nan
2023-03-25 18:41:26,053 Node[0] Epoch[21] Batch [160-180]	Speed: 73545.24 samples/sec	accuracy=nan
2023-03-25 18:41:26,941 Node[0] Epoch[21] Batch [180-200]	Speed: 73467.83 samples/sec	accuracy=nan
2023-03-25 18:41:27,834 Node[0] Epoch[21] Batch [200-220]	Speed: 73156.15 samples/sec	accuracy=nan
2023-03-25 18:41:28,727 Node[0] Epoch[21] Batch [220-240]	Speed: 73096.88 samples/sec	accuracy=nan
2023-03-25 18:41:29,620 Node[0] Epoch[21] Batch [240-260]	Speed: 73116.36 samples/sec	accuracy=nan
2023-03-25 18:41:30,512 Node[0] Epoch[21] Batch [260-280]	Speed: 73141.34 samples/sec	accuracy=nan
2023-03-25 18:41:31,405 Node[0] Epoch[21] Batch [280-300]	Speed: 73126.18 samples/sec	accuracy=nan
2023-03-25 18:41:32,307 Node[0] Epoch[21] Batch [300-320]	Speed: 72358.05 samples/sec	accuracy=nan
2023-03-25 18:41:33,199 Node[0] Epoch[21] Batch [320-340]	Speed: 73184.74 samples/sec	accuracy=nan
2023-03-25 18:41:34,092 Node[0] Epoch[21] Batch [340-360]	Speed: 73117.82 samples/sec	accuracy=nan
2023-03-25 18:41:34,984 Node[0] Epoch[21] Batch [360-380]	Speed: 73126.65 samples/sec	accuracy=nan
2023-03-25 18:41:35,514 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,514 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,514 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,514 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,514 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,514 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,514 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,514 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,514 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,514 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,514 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,514 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,514 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,514 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,515 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,514 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,515 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,514 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,515 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,515 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,515 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,515 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787695514, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-25 18:41:35,515 Node[0] Epoch[21] Time cost=17.468
2023-03-25 18:41:35,515 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,515 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,515 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,515 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787695515, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73342.46800677356}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
2023-03-25 18:41:35,515 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,515 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,515 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787695516, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-25 18:41:35,515 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,516 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:35,515 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:36,444 Node[0] Epoch[22] Batch [0-20]	Speed: 73828.53 samples/sec	accuracy=nan
2023-03-25 18:41:37,330 Node[0] Epoch[22] Batch [20-40]	Speed: 73670.11 samples/sec	accuracy=nan
2023-03-25 18:41:38,215 Node[0] Epoch[22] Batch [40-60]	Speed: 73814.79 samples/sec	accuracy=nan
2023-03-25 18:41:39,102 Node[0] Epoch[22] Batch [60-80]	Speed: 73568.36 samples/sec	accuracy=nan
2023-03-25 18:41:39,985 Node[0] Epoch[22] Batch [80-100]	Speed: 73953.52 samples/sec	accuracy=nan
2023-03-25 18:41:40,872 Node[0] Epoch[22] Batch [100-120]	Speed: 73584.40 samples/sec	accuracy=nan
2023-03-25 18:41:41,757 Node[0] Epoch[22] Batch [120-140]	Speed: 73778.97 samples/sec	accuracy=nan
2023-03-25 18:41:42,642 Node[0] Epoch[22] Batch [140-160]	Speed: 73720.91 samples/sec	accuracy=nan
2023-03-25 18:41:43,528 Node[0] Epoch[22] Batch [160-180]	Speed: 73708.72 samples/sec	accuracy=nan
2023-03-25 18:41:44,417 Node[0] Epoch[22] Batch [180-200]	Speed: 73409.33 samples/sec	accuracy=nan
2023-03-25 18:41:45,307 Node[0] Epoch[22] Batch [200-220]	Speed: 73364.05 samples/sec	accuracy=nan
2023-03-25 18:41:46,202 Node[0] Epoch[22] Batch [220-240]	Speed: 72975.70 samples/sec	accuracy=nan
2023-03-25 18:41:47,091 Node[0] Epoch[22] Batch [240-260]	Speed: 73376.18 samples/sec	accuracy=nan
2023-03-25 18:41:47,985 Node[0] Epoch[22] Batch [260-280]	Speed: 73050.25 samples/sec	accuracy=nan
2023-03-25 18:41:48,878 Node[0] Epoch[22] Batch [280-300]	Speed: 73089.44 samples/sec	accuracy=nan
2023-03-25 18:41:49,771 Node[0] Epoch[22] Batch [300-320]	Speed: 73139.31 samples/sec	accuracy=nan
2023-03-25 18:41:50,665 Node[0] Epoch[22] Batch [320-340]	Speed: 72985.02 samples/sec	accuracy=nan
2023-03-25 18:41:51,555 Node[0] Epoch[22] Batch [340-360]	Speed: 73313.13 samples/sec	accuracy=nan
2023-03-25 18:41:52,447 Node[0] Epoch[22] Batch [360-380]	Speed: 73184.19 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679787712935, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-25 18:41:52,936 Node[0] Epoch[22] Time cost=17.420
:::MLLOG {"namespace": "", "time_ms": 1679787712936, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73545.1195584712}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679787712976, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-25 18:41:53,166 Node[0] Epoch[22] Validation-accuracy=0.702305
2023-03-25 18:41:53,166 Node[0] Epoch[22] Validation-correct-count=1097.000000
2023-03-25 18:41:53,166 Node[0] Epoch[22] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679787713187, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679787713187, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7005, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
2023-03-25 18:41:53,187 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787713187, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679787713188, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-25 18:41:53,187 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787713188, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-25 18:41:53,187 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,188 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:53,187 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:41:54,077 Node[0] Epoch[23] Batch [0-20]	Speed: 73843.18 samples/sec	accuracy=nan
2023-03-25 18:41:54,961 Node[0] Epoch[23] Batch [20-40]	Speed: 73831.15 samples/sec	accuracy=nan
2023-03-25 18:41:55,847 Node[0] Epoch[23] Batch [40-60]	Speed: 73655.44 samples/sec	accuracy=nan
2023-03-25 18:41:56,731 Node[0] Epoch[23] Batch [60-80]	Speed: 73906.74 samples/sec	accuracy=nan
2023-03-25 18:41:57,615 Node[0] Epoch[23] Batch [80-100]	Speed: 73818.30 samples/sec	accuracy=nan
2023-03-25 18:41:58,501 Node[0] Epoch[23] Batch [100-120]	Speed: 73707.59 samples/sec	accuracy=nan
2023-03-25 18:41:59,387 Node[0] Epoch[23] Batch [120-140]	Speed: 73642.11 samples/sec	accuracy=nan
2023-03-25 18:42:00,282 Node[0] Epoch[23] Batch [140-160]	Speed: 72931.22 samples/sec	accuracy=nan
2023-03-25 18:42:01,167 Node[0] Epoch[23] Batch [160-180]	Speed: 73807.59 samples/sec	accuracy=nan
2023-03-25 18:42:02,053 Node[0] Epoch[23] Batch [180-200]	Speed: 73631.87 samples/sec	accuracy=nan
2023-03-25 18:42:02,945 Node[0] Epoch[23] Batch [200-220]	Speed: 73207.20 samples/sec	accuracy=nan
2023-03-25 18:42:03,841 Node[0] Epoch[23] Batch [220-240]	Speed: 72898.55 samples/sec	accuracy=nan
2023-03-25 18:42:04,734 Node[0] Epoch[23] Batch [240-260]	Speed: 73067.07 samples/sec	accuracy=nan
2023-03-25 18:42:05,626 Node[0] Epoch[23] Batch [260-280]	Speed: 73182.67 samples/sec	accuracy=nan
2023-03-25 18:42:06,518 Node[0] Epoch[23] Batch [280-300]	Speed: 73148.73 samples/sec	accuracy=nan
2023-03-25 18:42:07,413 Node[0] Epoch[23] Batch [300-320]	Speed: 72933.92 samples/sec	accuracy=nan
2023-03-25 18:42:08,307 Node[0] Epoch[23] Batch [320-340]	Speed: 73030.96 samples/sec	accuracy=nan
2023-03-25 18:42:09,200 Node[0] Epoch[23] Batch [340-360]	Speed: 73119.58 samples/sec	accuracy=nan
2023-03-25 18:42:10,091 Node[0] Epoch[23] Batch [360-380]	Speed: 73312.82 samples/sec	accuracy=nan
2023-03-25 18:42:10,622 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,622 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,622 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,623 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,623 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,622 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,623 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,623 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,623 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,623 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,623 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787730622, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-25 18:42:10,623 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,623 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,623 Node[0] Epoch[23] Time cost=17.436
2023-03-25 18:42:10,623 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,623 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,623 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787730623, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73480.1016185206}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
2023-03-25 18:42:10,623 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787730624, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-25 18:42:10,623 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,624 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,624 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,624 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,624 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,624 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,624 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,624 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,624 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,624 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,624 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,624 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,624 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,624 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:10,624 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:11,553 Node[0] Epoch[24] Batch [0-20]	Speed: 73737.05 samples/sec	accuracy=nan
2023-03-25 18:42:12,437 Node[0] Epoch[24] Batch [20-40]	Speed: 73843.20 samples/sec	accuracy=nan
2023-03-25 18:42:13,320 Node[0] Epoch[24] Batch [40-60]	Speed: 73937.20 samples/sec	accuracy=nan
2023-03-25 18:42:14,205 Node[0] Epoch[24] Batch [60-80]	Speed: 73769.11 samples/sec	accuracy=nan
2023-03-25 18:42:15,088 Node[0] Epoch[24] Batch [80-100]	Speed: 73863.46 samples/sec	accuracy=nan
2023-03-25 18:42:15,975 Node[0] Epoch[24] Batch [100-120]	Speed: 73596.09 samples/sec	accuracy=nan
2023-03-25 18:42:16,862 Node[0] Epoch[24] Batch [120-140]	Speed: 73674.15 samples/sec	accuracy=nan
2023-03-25 18:42:17,745 Node[0] Epoch[24] Batch [140-160]	Speed: 73853.50 samples/sec	accuracy=nan
2023-03-25 18:42:18,633 Node[0] Epoch[24] Batch [160-180]	Speed: 73564.67 samples/sec	accuracy=nan
2023-03-25 18:42:19,524 Node[0] Epoch[24] Batch [180-200]	Speed: 73266.83 samples/sec	accuracy=nan
2023-03-25 18:42:20,414 Node[0] Epoch[24] Batch [200-220]	Speed: 73354.93 samples/sec	accuracy=nan
2023-03-25 18:42:21,308 Node[0] Epoch[24] Batch [220-240]	Speed: 73017.27 samples/sec	accuracy=nan
2023-03-25 18:42:22,199 Node[0] Epoch[24] Batch [240-260]	Speed: 73220.57 samples/sec	accuracy=nan
2023-03-25 18:42:23,091 Node[0] Epoch[24] Batch [260-280]	Speed: 73200.22 samples/sec	accuracy=nan
2023-03-25 18:42:23,984 Node[0] Epoch[24] Batch [280-300]	Speed: 73130.58 samples/sec	accuracy=nan
2023-03-25 18:42:24,878 Node[0] Epoch[24] Batch [300-320]	Speed: 73032.13 samples/sec	accuracy=nan
2023-03-25 18:42:25,772 Node[0] Epoch[24] Batch [320-340]	Speed: 73009.73 samples/sec	accuracy=nan
2023-03-25 18:42:26,666 Node[0] Epoch[24] Batch [340-360]	Speed: 73000.90 samples/sec	accuracy=nan
2023-03-25 18:42:27,557 Node[0] Epoch[24] Batch [360-380]	Speed: 73270.91 samples/sec	accuracy=nan
2023-03-25 18:42:28,044 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,044 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,044 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,044 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,044 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,044 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,045 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787748044, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-25 18:42:28,045 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,045 Node[0] Epoch[24] Time cost=17.421
2023-03-25 18:42:28,045 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,045 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,045 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787748045, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73541.08546498226}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
2023-03-25 18:42:28,045 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,045 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,045 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,045 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,045 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787748045, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-25 18:42:28,045 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,045 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,045 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,045 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,045 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,045 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,045 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,045 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,046 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,045 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,046 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,046 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,046 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,046 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,046 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,047 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:28,978 Node[0] Epoch[25] Batch [0-20]	Speed: 73611.54 samples/sec	accuracy=nan
2023-03-25 18:42:29,863 Node[0] Epoch[25] Batch [20-40]	Speed: 73756.53 samples/sec	accuracy=nan
2023-03-25 18:42:30,746 Node[0] Epoch[25] Batch [40-60]	Speed: 73899.86 samples/sec	accuracy=nan
2023-03-25 18:42:31,630 Node[0] Epoch[25] Batch [60-80]	Speed: 73810.06 samples/sec	accuracy=nan
2023-03-25 18:42:32,521 Node[0] Epoch[25] Batch [80-100]	Speed: 73341.12 samples/sec	accuracy=nan
2023-03-25 18:42:33,403 Node[0] Epoch[25] Batch [100-120]	Speed: 73940.12 samples/sec	accuracy=nan
2023-03-25 18:42:34,290 Node[0] Epoch[25] Batch [120-140]	Speed: 73638.23 samples/sec	accuracy=nan
2023-03-25 18:42:35,173 Node[0] Epoch[25] Batch [140-160]	Speed: 73883.43 samples/sec	accuracy=nan
2023-03-25 18:42:36,058 Node[0] Epoch[25] Batch [160-180]	Speed: 73817.50 samples/sec	accuracy=nan
2023-03-25 18:42:36,946 Node[0] Epoch[25] Batch [180-200]	Speed: 73498.34 samples/sec	accuracy=nan
2023-03-25 18:42:37,835 Node[0] Epoch[25] Batch [200-220]	Speed: 73405.49 samples/sec	accuracy=nan
2023-03-25 18:42:38,729 Node[0] Epoch[25] Batch [220-240]	Speed: 73020.44 samples/sec	accuracy=nan
2023-03-25 18:42:39,622 Node[0] Epoch[25] Batch [240-260]	Speed: 73163.40 samples/sec	accuracy=nan
2023-03-25 18:42:40,512 Node[0] Epoch[25] Batch [260-280]	Speed: 73269.64 samples/sec	accuracy=nan
2023-03-25 18:42:41,409 Node[0] Epoch[25] Batch [280-300]	Speed: 72827.66 samples/sec	accuracy=nan
2023-03-25 18:42:42,302 Node[0] Epoch[25] Batch [300-320]	Speed: 73107.59 samples/sec	accuracy=nan
2023-03-25 18:42:43,194 Node[0] Epoch[25] Batch [320-340]	Speed: 73147.30 samples/sec	accuracy=nan
2023-03-25 18:42:44,085 Node[0] Epoch[25] Batch [340-360]	Speed: 73314.43 samples/sec	accuracy=nan
2023-03-25 18:42:44,978 Node[0] Epoch[25] Batch [360-380]	Speed: 73102.93 samples/sec	accuracy=nan
2023-03-25 18:42:45,510 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,510 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,510 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,510 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,510 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,510 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,510 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,510 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,510 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,510 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,510 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,510 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,510 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787765510, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-25 18:42:45,511 Node[0] Epoch[25] Time cost=17.466
2023-03-25 18:42:45,511 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,510 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,511 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,511 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787765511, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73353.96258838668}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679787765511, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-25 18:42:45,511 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,511 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,511 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,511 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,511 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,511 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,511 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,511 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,511 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,511 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,511 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,511 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,511 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,511 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:45,512 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:42:46,438 Node[0] Epoch[26] Batch [0-20]	Speed: 73906.80 samples/sec	accuracy=nan
2023-03-25 18:42:47,323 Node[0] Epoch[26] Batch [20-40]	Speed: 73787.06 samples/sec	accuracy=nan
2023-03-25 18:42:48,206 Node[0] Epoch[26] Batch [40-60]	Speed: 73908.50 samples/sec	accuracy=nan
2023-03-25 18:42:49,090 Node[0] Epoch[26] Batch [60-80]	Speed: 73862.09 samples/sec	accuracy=nan
2023-03-25 18:42:49,973 Node[0] Epoch[26] Batch [80-100]	Speed: 73962.21 samples/sec	accuracy=nan
2023-03-25 18:42:50,856 Node[0] Epoch[26] Batch [100-120]	Speed: 73912.59 samples/sec	accuracy=nan
2023-03-25 18:42:51,741 Node[0] Epoch[26] Batch [120-140]	Speed: 73776.78 samples/sec	accuracy=nan
2023-03-25 18:42:52,625 Node[0] Epoch[26] Batch [140-160]	Speed: 73833.64 samples/sec	accuracy=nan
2023-03-25 18:42:53,509 Node[0] Epoch[26] Batch [160-180]	Speed: 73802.92 samples/sec	accuracy=nan
2023-03-25 18:42:54,398 Node[0] Epoch[26] Batch [180-200]	Speed: 73501.16 samples/sec	accuracy=nan
2023-03-25 18:42:55,291 Node[0] Epoch[26] Batch [200-220]	Speed: 73075.13 samples/sec	accuracy=nan
2023-03-25 18:42:56,182 Node[0] Epoch[26] Batch [220-240]	Speed: 73246.49 samples/sec	accuracy=nan
2023-03-25 18:42:57,077 Node[0] Epoch[26] Batch [240-260]	Speed: 72983.89 samples/sec	accuracy=nan
2023-03-25 18:42:57,969 Node[0] Epoch[26] Batch [260-280]	Speed: 73159.06 samples/sec	accuracy=nan
2023-03-25 18:42:58,862 Node[0] Epoch[26] Batch [280-300]	Speed: 73124.01 samples/sec	accuracy=nan
2023-03-25 18:42:59,763 Node[0] Epoch[26] Batch [300-320]	Speed: 72405.54 samples/sec	accuracy=nan
2023-03-25 18:43:00,658 Node[0] Epoch[26] Batch [320-340]	Speed: 72970.02 samples/sec	accuracy=nan
2023-03-25 18:43:01,549 Node[0] Epoch[26] Batch [340-360]	Speed: 73253.33 samples/sec	accuracy=nan
2023-03-25 18:43:02,440 Node[0] Epoch[26] Batch [360-380]	Speed: 73222.12 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679787782976, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-25 18:43:02,977 Node[0] Epoch[26] Time cost=17.466
:::MLLOG {"namespace": "", "time_ms": 1679787782977, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73353.45791656208}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679787783017, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-25 18:43:03,207 Node[0] Epoch[26] Validation-accuracy=0.739437
2023-03-25 18:43:03,208 Node[0] Epoch[26] Validation-correct-count=1155.000000
2023-03-25 18:43:03,208 Node[0] Epoch[26] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679787783230, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679787783230, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.73022, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
2023-03-25 18:43:03,230 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787783230, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679787783230, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-25 18:43:03,230 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787783230, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-25 18:43:03,230 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:03,230 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:04,121 Node[0] Epoch[27] Batch [0-20]	Speed: 73738.48 samples/sec	accuracy=nan
2023-03-25 18:43:05,006 Node[0] Epoch[27] Batch [20-40]	Speed: 73765.93 samples/sec	accuracy=nan
2023-03-25 18:43:05,888 Node[0] Epoch[27] Batch [40-60]	Speed: 73959.59 samples/sec	accuracy=nan
2023-03-25 18:43:06,779 Node[0] Epoch[27] Batch [60-80]	Speed: 73295.00 samples/sec	accuracy=nan
2023-03-25 18:43:07,663 Node[0] Epoch[27] Batch [80-100]	Speed: 73793.05 samples/sec	accuracy=nan
2023-03-25 18:43:08,547 Node[0] Epoch[27] Batch [100-120]	Speed: 73883.87 samples/sec	accuracy=nan
2023-03-25 18:43:09,433 Node[0] Epoch[27] Batch [120-140]	Speed: 73720.51 samples/sec	accuracy=nan
2023-03-25 18:43:10,317 Node[0] Epoch[27] Batch [140-160]	Speed: 73837.39 samples/sec	accuracy=nan
2023-03-25 18:43:11,200 Node[0] Epoch[27] Batch [160-180]	Speed: 73861.15 samples/sec	accuracy=nan
2023-03-25 18:43:12,089 Node[0] Epoch[27] Batch [180-200]	Speed: 73494.04 samples/sec	accuracy=nan
2023-03-25 18:43:12,980 Node[0] Epoch[27] Batch [200-220]	Speed: 73206.67 samples/sec	accuracy=nan
2023-03-25 18:43:16,300 Node[0] Epoch[27] Batch [220-240]	Speed: 19666.21 samples/sec	accuracy=nan
2023-03-25 18:43:17,192 Node[0] Epoch[27] Batch [240-260]	Speed: 73149.21 samples/sec	accuracy=nan
2023-03-25 18:43:20,535 Node[0] Epoch[27] Batch [260-280]	Speed: 19529.41 samples/sec	accuracy=nan
2023-03-25 18:43:21,426 Node[0] Epoch[27] Batch [280-300]	Speed: 73253.52 samples/sec	accuracy=nan
2023-03-25 18:43:22,317 Node[0] Epoch[27] Batch [300-320]	Speed: 73239.26 samples/sec	accuracy=nan
2023-03-25 18:43:23,222 Node[0] Epoch[27] Batch [320-340]	Speed: 72184.27 samples/sec	accuracy=nan
2023-03-25 18:43:24,114 Node[0] Epoch[27] Batch [340-360]	Speed: 73139.64 samples/sec	accuracy=nan
2023-03-25 18:43:25,005 Node[0] Epoch[27] Batch [360-380]	Speed: 73280.52 samples/sec	accuracy=nan
2023-03-25 18:43:25,491 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,491 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,491 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,492 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,493 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,493 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787805492, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-25 18:43:25,493 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,493 Node[0] Epoch[27] Time cost=22.263
2023-03-25 18:43:25,493 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:25,493 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787805493, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 57547.56841102557}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679787805493, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-25 18:43:25,493 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:26,420 Node[0] Epoch[28] Batch [0-20]	Speed: 73902.12 samples/sec	accuracy=nan
2023-03-25 18:43:27,304 Node[0] Epoch[28] Batch [20-40]	Speed: 73829.10 samples/sec	accuracy=nan
2023-03-25 18:43:28,189 Node[0] Epoch[28] Batch [40-60]	Speed: 73769.09 samples/sec	accuracy=nan
2023-03-25 18:43:29,073 Node[0] Epoch[28] Batch [60-80]	Speed: 73805.38 samples/sec	accuracy=nan
2023-03-25 18:43:29,961 Node[0] Epoch[28] Batch [80-100]	Speed: 73567.02 samples/sec	accuracy=nan
2023-03-25 18:43:30,846 Node[0] Epoch[28] Batch [100-120]	Speed: 73789.47 samples/sec	accuracy=nan
2023-03-25 18:43:31,731 Node[0] Epoch[28] Batch [120-140]	Speed: 73751.15 samples/sec	accuracy=nan
2023-03-25 18:43:32,614 Node[0] Epoch[28] Batch [140-160]	Speed: 73939.90 samples/sec	accuracy=nan
2023-03-25 18:43:33,497 Node[0] Epoch[28] Batch [160-180]	Speed: 73926.52 samples/sec	accuracy=nan
2023-03-25 18:43:34,385 Node[0] Epoch[28] Batch [180-200]	Speed: 73475.06 samples/sec	accuracy=nan
2023-03-25 18:43:35,276 Node[0] Epoch[28] Batch [200-220]	Speed: 73272.05 samples/sec	accuracy=nan
2023-03-25 18:43:36,168 Node[0] Epoch[28] Batch [220-240]	Speed: 73138.17 samples/sec	accuracy=nan
2023-03-25 18:43:37,062 Node[0] Epoch[28] Batch [240-260]	Speed: 73099.28 samples/sec	accuracy=nan
2023-03-25 18:43:37,952 Node[0] Epoch[28] Batch [260-280]	Speed: 73315.90 samples/sec	accuracy=nan
2023-03-25 18:43:41,314 Node[0] Epoch[28] Batch [280-300]	Speed: 19416.21 samples/sec	accuracy=nan
2023-03-25 18:43:42,205 Node[0] Epoch[28] Batch [300-320]	Speed: 73263.93 samples/sec	accuracy=nan
2023-03-25 18:43:43,100 Node[0] Epoch[28] Batch [320-340]	Speed: 72913.47 samples/sec	accuracy=nan
2023-03-25 18:43:43,993 Node[0] Epoch[28] Batch [340-360]	Speed: 73105.02 samples/sec	accuracy=nan
2023-03-25 18:43:44,889 Node[0] Epoch[28] Batch [360-380]	Speed: 72858.27 samples/sec	accuracy=nan
2023-03-25 18:43:45,421 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,421 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,421 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,421 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,422 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,422 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787825422, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-25 18:43:45,422 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,422 Node[0] Epoch[28] Time cost=19.929
2023-03-25 18:43:45,422 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,422 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787825422, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 64287.83665063005}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
2023-03-25 18:43:45,422 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,422 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,422 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,422 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787825422, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-25 18:43:45,422 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,422 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,422 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,422 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,422 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,422 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,423 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,423 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,423 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,423 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,423 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,423 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,423 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,423 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,423 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,423 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,423 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,423 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:45,423 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:43:46,356 Node[0] Epoch[29] Batch [0-20]	Speed: 73460.36 samples/sec	accuracy=nan
2023-03-25 18:43:47,240 Node[0] Epoch[29] Batch [20-40]	Speed: 73800.33 samples/sec	accuracy=nan
2023-03-25 18:43:48,126 Node[0] Epoch[29] Batch [40-60]	Speed: 73712.19 samples/sec	accuracy=nan
2023-03-25 18:43:49,007 Node[0] Epoch[29] Batch [60-80]	Speed: 74120.68 samples/sec	accuracy=nan
2023-03-25 18:43:49,890 Node[0] Epoch[29] Batch [80-100]	Speed: 73895.87 samples/sec	accuracy=nan
2023-03-25 18:43:50,774 Node[0] Epoch[29] Batch [100-120]	Speed: 73797.86 samples/sec	accuracy=nan
2023-03-25 18:43:51,657 Node[0] Epoch[29] Batch [120-140]	Speed: 73976.95 samples/sec	accuracy=nan
2023-03-25 18:43:52,540 Node[0] Epoch[29] Batch [140-160]	Speed: 73917.68 samples/sec	accuracy=nan
2023-03-25 18:43:53,425 Node[0] Epoch[29] Batch [160-180]	Speed: 73783.66 samples/sec	accuracy=nan
2023-03-25 18:43:54,313 Node[0] Epoch[29] Batch [180-200]	Speed: 73509.47 samples/sec	accuracy=nan
2023-03-25 18:43:55,208 Node[0] Epoch[29] Batch [200-220]	Speed: 72935.09 samples/sec	accuracy=nan
2023-03-25 18:43:56,102 Node[0] Epoch[29] Batch [220-240]	Speed: 73031.82 samples/sec	accuracy=nan
2023-03-25 18:43:56,994 Node[0] Epoch[29] Batch [240-260]	Speed: 73140.89 samples/sec	accuracy=nan
2023-03-25 18:43:57,889 Node[0] Epoch[29] Batch [260-280]	Speed: 72969.14 samples/sec	accuracy=nan
2023-03-25 18:43:58,783 Node[0] Epoch[29] Batch [280-300]	Speed: 73006.09 samples/sec	accuracy=nan
2023-03-25 18:43:59,675 Node[0] Epoch[29] Batch [300-320]	Speed: 73222.67 samples/sec	accuracy=nan
2023-03-25 18:44:00,577 Node[0] Epoch[29] Batch [320-340]	Speed: 72349.05 samples/sec	accuracy=nan
2023-03-25 18:44:01,465 Node[0] Epoch[29] Batch [340-360]	Speed: 73471.71 samples/sec	accuracy=nan
2023-03-25 18:44:02,357 Node[0] Epoch[29] Batch [360-380]	Speed: 73194.76 samples/sec	accuracy=nan
2023-03-25 18:44:02,844 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,844 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,844 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,844 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,844 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,844 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,844 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,844 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,844 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,844 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,844 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,844 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,844 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,844 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,844 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,844 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,844 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,845 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,845 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,845 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,845 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,845 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,845 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,845 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,845 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,845 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,845 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,845 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,845 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,845 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787842845, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-25 18:44:02,845 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:02,845 Node[0] Epoch[29] Time cost=17.423
:::MLLOG {"namespace": "", "time_ms": 1679787842845, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73532.98338734063}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679787842846, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-25 18:44:02,846 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:03,772 Node[0] Epoch[30] Batch [0-20]	Speed: 74074.36 samples/sec	accuracy=nan
2023-03-25 18:44:04,655 Node[0] Epoch[30] Batch [20-40]	Speed: 73918.40 samples/sec	accuracy=nan
2023-03-25 18:44:05,539 Node[0] Epoch[30] Batch [40-60]	Speed: 73914.83 samples/sec	accuracy=nan
2023-03-25 18:44:06,421 Node[0] Epoch[30] Batch [60-80]	Speed: 73927.06 samples/sec	accuracy=nan
2023-03-25 18:44:07,305 Node[0] Epoch[30] Batch [80-100]	Speed: 73865.59 samples/sec	accuracy=nan
2023-03-25 18:44:08,190 Node[0] Epoch[30] Batch [100-120]	Speed: 73756.79 samples/sec	accuracy=nan
2023-03-25 18:44:09,076 Node[0] Epoch[30] Batch [120-140]	Speed: 73679.15 samples/sec	accuracy=nan
2023-03-25 18:44:09,960 Node[0] Epoch[30] Batch [140-160]	Speed: 73851.69 samples/sec	accuracy=nan
2023-03-25 18:44:10,846 Node[0] Epoch[30] Batch [160-180]	Speed: 73710.13 samples/sec	accuracy=nan
2023-03-25 18:44:11,734 Node[0] Epoch[30] Batch [180-200]	Speed: 73481.51 samples/sec	accuracy=nan
2023-03-25 18:44:12,626 Node[0] Epoch[30] Batch [200-220]	Speed: 73174.37 samples/sec	accuracy=nan
2023-03-25 18:44:13,520 Node[0] Epoch[30] Batch [220-240]	Speed: 73031.15 samples/sec	accuracy=nan
2023-03-25 18:44:14,412 Node[0] Epoch[30] Batch [240-260]	Speed: 73192.47 samples/sec	accuracy=nan
2023-03-25 18:44:15,302 Node[0] Epoch[30] Batch [260-280]	Speed: 73323.62 samples/sec	accuracy=nan
2023-03-25 18:44:16,194 Node[0] Epoch[30] Batch [280-300]	Speed: 73204.07 samples/sec	accuracy=nan
2023-03-25 18:44:17,090 Node[0] Epoch[30] Batch [300-320]	Speed: 72841.92 samples/sec	accuracy=nan
2023-03-25 18:44:17,985 Node[0] Epoch[30] Batch [320-340]	Speed: 73010.01 samples/sec	accuracy=nan
2023-03-25 18:44:18,877 Node[0] Epoch[30] Batch [340-360]	Speed: 73108.71 samples/sec	accuracy=nan
2023-03-25 18:44:19,768 Node[0] Epoch[30] Batch [360-380]	Speed: 73271.23 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679787860302, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-25 18:44:20,303 Node[0] Epoch[30] Time cost=17.457
:::MLLOG {"namespace": "", "time_ms": 1679787860303, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73389.22870125892}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679787860343, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-25 18:44:20,532 Node[0] Epoch[30] Validation-accuracy=0.752881
2023-03-25 18:44:20,532 Node[0] Epoch[30] Validation-correct-count=1176.000000
2023-03-25 18:44:20,532 Node[0] Epoch[30] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679787860554, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679787860555, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75148, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
2023-03-25 18:44:20,555 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787860555, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
2023-03-25 18:44:20,555 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787860555, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-25 18:44:20,555 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787860555, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-25 18:44:20,555 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:20,555 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:21,444 Node[0] Epoch[31] Batch [0-20]	Speed: 73823.39 samples/sec	accuracy=nan
2023-03-25 18:44:22,327 Node[0] Epoch[31] Batch [20-40]	Speed: 73983.45 samples/sec	accuracy=nan
2023-03-25 18:44:23,208 Node[0] Epoch[31] Batch [40-60]	Speed: 74081.29 samples/sec	accuracy=nan
2023-03-25 18:44:24,096 Node[0] Epoch[31] Batch [60-80]	Speed: 73478.51 samples/sec	accuracy=nan
2023-03-25 18:44:24,979 Node[0] Epoch[31] Batch [80-100]	Speed: 73991.33 samples/sec	accuracy=nan
2023-03-25 18:44:25,866 Node[0] Epoch[31] Batch [100-120]	Speed: 73612.33 samples/sec	accuracy=nan
2023-03-25 18:44:26,749 Node[0] Epoch[31] Batch [120-140]	Speed: 73874.82 samples/sec	accuracy=nan
2023-03-25 18:44:27,636 Node[0] Epoch[31] Batch [140-160]	Speed: 73599.57 samples/sec	accuracy=nan
2023-03-25 18:44:28,522 Node[0] Epoch[31] Batch [160-180]	Speed: 73711.78 samples/sec	accuracy=nan
2023-03-25 18:44:29,409 Node[0] Epoch[31] Batch [180-200]	Speed: 73577.00 samples/sec	accuracy=nan
2023-03-25 18:44:30,301 Node[0] Epoch[31] Batch [200-220]	Speed: 73180.24 samples/sec	accuracy=nan
2023-03-25 18:44:31,193 Node[0] Epoch[31] Batch [220-240]	Speed: 73219.09 samples/sec	accuracy=nan
2023-03-25 18:44:32,087 Node[0] Epoch[31] Batch [240-260]	Speed: 72972.72 samples/sec	accuracy=nan
2023-03-25 18:44:32,979 Node[0] Epoch[31] Batch [260-280]	Speed: 73186.09 samples/sec	accuracy=nan
2023-03-25 18:44:36,173 Node[0] Epoch[31] Batch [280-300]	Speed: 20438.91 samples/sec	accuracy=nan
2023-03-25 18:44:37,066 Node[0] Epoch[31] Batch [300-320]	Speed: 73148.86 samples/sec	accuracy=nan
2023-03-25 18:44:37,959 Node[0] Epoch[31] Batch [320-340]	Speed: 73073.19 samples/sec	accuracy=nan
2023-03-25 18:44:38,850 Node[0] Epoch[31] Batch [340-360]	Speed: 73240.20 samples/sec	accuracy=nan
2023-03-25 18:44:39,741 Node[0] Epoch[31] Batch [360-380]	Speed: 73297.45 samples/sec	accuracy=nan
2023-03-25 18:44:40,228 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,228 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,228 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,228 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,228 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,228 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,228 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,228 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,229 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,229 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,229 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,229 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,229 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787880228, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-25 18:44:40,229 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,229 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,229 Node[0] Epoch[31] Time cost=19.674
2023-03-25 18:44:40,229 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,229 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787880229, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 65120.021299088716}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679787880229, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-25 18:44:40,229 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,229 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,229 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,229 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,229 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,229 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,229 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,229 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,229 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,229 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,229 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,230 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,230 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,230 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:40,230 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:41,160 Node[0] Epoch[32] Batch [0-20]	Speed: 73690.59 samples/sec	accuracy=nan
2023-03-25 18:44:42,046 Node[0] Epoch[32] Batch [20-40]	Speed: 73710.78 samples/sec	accuracy=nan
2023-03-25 18:44:42,930 Node[0] Epoch[32] Batch [40-60]	Speed: 73835.18 samples/sec	accuracy=nan
2023-03-25 18:44:43,813 Node[0] Epoch[32] Batch [60-80]	Speed: 73924.02 samples/sec	accuracy=nan
2023-03-25 18:44:44,698 Node[0] Epoch[32] Batch [80-100]	Speed: 73803.03 samples/sec	accuracy=nan
2023-03-25 18:44:45,584 Node[0] Epoch[32] Batch [100-120]	Speed: 73640.09 samples/sec	accuracy=nan
2023-03-25 18:44:46,472 Node[0] Epoch[32] Batch [120-140]	Speed: 73545.36 samples/sec	accuracy=nan
2023-03-25 18:44:47,357 Node[0] Epoch[32] Batch [140-160]	Speed: 73694.97 samples/sec	accuracy=nan
2023-03-25 18:44:48,241 Node[0] Epoch[32] Batch [160-180]	Speed: 73872.29 samples/sec	accuracy=nan
2023-03-25 18:44:49,129 Node[0] Epoch[32] Batch [180-200]	Speed: 73533.79 samples/sec	accuracy=nan
2023-03-25 18:44:50,021 Node[0] Epoch[32] Batch [200-220]	Speed: 73184.00 samples/sec	accuracy=nan
2023-03-25 18:44:50,914 Node[0] Epoch[32] Batch [220-240]	Speed: 73120.91 samples/sec	accuracy=nan
2023-03-25 18:44:51,806 Node[0] Epoch[32] Batch [240-260]	Speed: 73138.10 samples/sec	accuracy=nan
2023-03-25 18:44:52,699 Node[0] Epoch[32] Batch [260-280]	Speed: 73152.11 samples/sec	accuracy=nan
2023-03-25 18:44:53,591 Node[0] Epoch[32] Batch [280-300]	Speed: 73181.38 samples/sec	accuracy=nan
2023-03-25 18:44:54,484 Node[0] Epoch[32] Batch [300-320]	Speed: 73101.91 samples/sec	accuracy=nan
2023-03-25 18:44:55,377 Node[0] Epoch[32] Batch [320-340]	Speed: 73072.40 samples/sec	accuracy=nan
2023-03-25 18:44:56,269 Node[0] Epoch[32] Batch [340-360]	Speed: 73205.68 samples/sec	accuracy=nan
2023-03-25 18:44:57,163 Node[0] Epoch[32] Batch [360-380]	Speed: 73006.68 samples/sec	accuracy=nan
2023-03-25 18:44:57,694 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,694 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,694 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,694 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,694 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,694 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787897694, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-25 18:44:57,695 Node[0] Epoch[32] Time cost=17.465
2023-03-25 18:44:57,695 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787897695, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73355.24532719671}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
2023-03-25 18:44:57,695 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787897695, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-25 18:44:57,695 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,695 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,695 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,695 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,695 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,695 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,695 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,695 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,695 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,695 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,695 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,695 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,695 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,695 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,695 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,696 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,695 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,696 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,696 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,696 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,696 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,696 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,696 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:57,696 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:44:58,624 Node[0] Epoch[33] Batch [0-20]	Speed: 73778.75 samples/sec	accuracy=nan
2023-03-25 18:44:59,512 Node[0] Epoch[33] Batch [20-40]	Speed: 73563.27 samples/sec	accuracy=nan
2023-03-25 18:45:00,394 Node[0] Epoch[33] Batch [40-60]	Speed: 74009.07 samples/sec	accuracy=nan
2023-03-25 18:45:01,277 Node[0] Epoch[33] Batch [60-80]	Speed: 73856.21 samples/sec	accuracy=nan
2023-03-25 18:45:02,161 Node[0] Epoch[33] Batch [80-100]	Speed: 73886.88 samples/sec	accuracy=nan
2023-03-25 18:45:03,044 Node[0] Epoch[33] Batch [100-120]	Speed: 73891.79 samples/sec	accuracy=nan
2023-03-25 18:45:03,930 Node[0] Epoch[33] Batch [120-140]	Speed: 73722.87 samples/sec	accuracy=nan
2023-03-25 18:45:04,815 Node[0] Epoch[33] Batch [140-160]	Speed: 73779.05 samples/sec	accuracy=nan
2023-03-25 18:45:05,703 Node[0] Epoch[33] Batch [160-180]	Speed: 73518.61 samples/sec	accuracy=nan
2023-03-25 18:45:06,589 Node[0] Epoch[33] Batch [180-200]	Speed: 73642.65 samples/sec	accuracy=nan
2023-03-25 18:45:07,479 Node[0] Epoch[33] Batch [200-220]	Speed: 73344.02 samples/sec	accuracy=nan
2023-03-25 18:45:08,376 Node[0] Epoch[33] Batch [220-240]	Speed: 72817.20 samples/sec	accuracy=nan
2023-03-25 18:45:09,272 Node[0] Epoch[33] Batch [240-260]	Speed: 72814.08 samples/sec	accuracy=nan
2023-03-25 18:45:10,162 Node[0] Epoch[33] Batch [260-280]	Speed: 73333.10 samples/sec	accuracy=nan
2023-03-25 18:45:11,059 Node[0] Epoch[33] Batch [280-300]	Speed: 72821.67 samples/sec	accuracy=nan
2023-03-25 18:45:11,954 Node[0] Epoch[33] Batch [300-320]	Speed: 72928.21 samples/sec	accuracy=nan
2023-03-25 18:45:12,849 Node[0] Epoch[33] Batch [320-340]	Speed: 72918.93 samples/sec	accuracy=nan
2023-03-25 18:45:13,741 Node[0] Epoch[33] Batch [340-360]	Speed: 73172.73 samples/sec	accuracy=nan
2023-03-25 18:45:14,635 Node[0] Epoch[33] Batch [360-380]	Speed: 73014.50 samples/sec	accuracy=nan
2023-03-25 18:45:15,121 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,121 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,121 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,121 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,121 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,121 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,121 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,121 Node[31] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,121 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,121 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,121 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787915121, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-25 18:45:15,121 Node[29] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,122 Node[0] Epoch[33] Time cost=17.427
2023-03-25 18:45:15,121 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,121 Node[28] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,121 Node[30] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,121 Node[27] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679787915122, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73517.6676808721}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679787915122, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-25 18:45:15,122 Node[25] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,122 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,122 Node[24] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,122 Node[23] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,122 Node[26] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,122 Node[22] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,122 Node[20] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,122 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,122 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,122 Node[21] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,122 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,122 Node[18] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,122 Node[17] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,123 Node[16] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,123 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:15,123 Node[19] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-25 18:45:16,053 Node[0] Epoch[34] Batch [0-20]	Speed: 73632.43 samples/sec	accuracy=nan
2023-03-25 18:45:16,937 Node[0] Epoch[34] Batch [20-40]	Speed: 73860.35 samples/sec	accuracy=nan
2023-03-25 18:45:17,825 Node[0] Epoch[34] Batch [40-60]	Speed: 73563.07 samples/sec	accuracy=nan
2023-03-25 18:45:18,706 Node[0] Epoch[34] Batch [60-80]	Speed: 74033.98 samples/sec	accuracy=nan
2023-03-25 18:45:19,590 Node[0] Epoch[34] Batch [80-100]	Speed: 73869.18 samples/sec	accuracy=nan
2023-03-25 18:45:20,480 Node[0] Epoch[34] Batch [100-120]	Speed: 73376.73 samples/sec	accuracy=nan
2023-03-25 18:45:21,364 Node[0] Epoch[34] Batch [120-140]	Speed: 73819.09 samples/sec	accuracy=nan
2023-03-25 18:45:22,249 Node[0] Epoch[34] Batch [140-160]	Speed: 73763.25 samples/sec	accuracy=nan
2023-03-25 18:45:23,136 Node[0] Epoch[34] Batch [160-180]	Speed: 73571.29 samples/sec	accuracy=nan
2023-03-25 18:45:24,024 Node[0] Epoch[34] Batch [180-200]	Speed: 73522.97 samples/sec	accuracy=nan
2023-03-25 18:45:24,920 Node[0] Epoch[34] Batch [200-220]	Speed: 72899.77 samples/sec	accuracy=nan
2023-03-25 18:45:25,812 Node[0] Epoch[34] Batch [220-240]	Speed: 73143.18 samples/sec	accuracy=nan
2023-03-25 18:45:26,706 Node[0] Epoch[34] Batch [240-260]	Speed: 73064.93 samples/sec	accuracy=nan
2023-03-25 18:45:27,597 Node[0] Epoch[34] Batch [260-280]	Speed: 73244.08 samples/sec	accuracy=nan
2023-03-25 18:45:28,490 Node[0] Epoch[34] Batch [280-300]	Speed: 73092.14 samples/sec	accuracy=nan
2023-03-25 18:45:29,385 Node[0] Epoch[34] Batch [300-320]	Speed: 72958.72 samples/sec	accuracy=nan
2023-03-25 18:45:30,280 Node[0] Epoch[34] Batch [320-340]	Speed: 72972.39 samples/sec	accuracy=nan
2023-03-25 18:45:31,174 Node[0] Epoch[34] Batch [340-360]	Speed: 72983.69 samples/sec	accuracy=nan
2023-03-25 18:45:32,067 Node[0] Epoch[34] Batch [360-380]	Speed: 73126.06 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679787932599, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-25 18:45:32,600 Node[0] Epoch[34] Time cost=17.478
:::MLLOG {"namespace": "", "time_ms": 1679787932600, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 73301.77086299814}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679787932641, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-25 18:45:32,830 Node[0] Epoch[34] Validation-accuracy=0.766325
2023-03-25 18:45:32,830 Node[0] Epoch[34] Validation-correct-count=1197.000000
2023-03-25 18:45:32,830 Node[0] Epoch[34] Validation-total-count=1562.000000
:::MLLOG {"namespace": "", "time_ms": 1679787932853, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679787932853, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76056, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679787932853, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679787932853, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787939
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:39 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:39 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:39 PM
+ result=701
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787939
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:39 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:39 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:39 PM
+ result=701
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787939
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:39 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:39 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:39 PM
+ result=701
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787939
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:39 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:39 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:39 PM
+ result=701
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787939
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:39 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:39 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:39 PM
+ result=701
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787939
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:39 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:39 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:39 PM
+ result=701
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787939
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:39 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:39 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:39 PM
+ result=701
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787939
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:39 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:39 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:39 PM
+ result=701
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787939
++ date '+%Y-%m-%d %r'
+ end=1679787939
+ end_fmt='2023-03-25 06:45:39 PM'
++ date '+%Y-%m-%d %r'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:39 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:39 PM
+ result=701
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM'
RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM
+ export PROFILE=0
+ PROFILE=0
+ end_fmt='2023-03-25 06:45:39 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:39 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:39 PM
+ result=701
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787939
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:39 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:39 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:39 PM
+ result=701
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,701,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787940
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:40 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:40 PM
+ result=702
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787940
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:40 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:40 PM
+ result=702
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM'
RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787940
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:40 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:40 PM
+ result=702
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787940
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:40 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:40 PM
+ result=702
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787940
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:40 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:40 PM
+ result=702
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787940
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:40 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:40 PM
+ result=702
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787940
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:40 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:40 PM
+ result=702
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM'
RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787940
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:40 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:40 PM
+ result=702
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787940
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:40 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:40 PM
+ result=702
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787940
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:40 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:40 PM
+ result=702
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787940
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:40 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:40 PM
+ result=702
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787940
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:40 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:40 PM
+ result=702
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787940
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:40 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:40 PM
+ result=702
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787940
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:40 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:40 PM
+ result=702
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787940
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:40 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:40 PM
+ result=702
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787940
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:40 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:40 PM
+ result=702
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM'
RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787940
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:40 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:40 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:40 PM
+ result=702
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,702,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787941
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:41 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:41 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:41 PM
+ result=703
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,703,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,703,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787941
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:41 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:41 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:41 PM
+ result=703
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,703,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,703,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787941
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:41 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:41 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:41 PM
+ result=703
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,703,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,703,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679787941
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-25 06:45:41 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-25 06:45:41 PM'
ENDING TIMING RUN AT 2023-03-25 06:45:41 PM
+ result=703
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,703,root,2023-03-25 06:33:58 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,703,root,2023-03-25 06:33:58 PM'
+ export PROFILE=0
+ PROFILE=0
