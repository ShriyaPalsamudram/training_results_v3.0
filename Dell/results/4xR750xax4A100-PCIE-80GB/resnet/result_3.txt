+ echo 'Beginning trial 4 of 5'
Beginning trial 4 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node044 node045 node046 node047 '
+ echo 'hosts=node044 node045 node046 node047 '
hosts=node044 node045 node046 node047 
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679546242148, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679546242183, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679546242184, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679546242186, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679546242187, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679546255397, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679546261402, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679546261437, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679546261438, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679546261440, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679546261441, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node045 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node045
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679546273400, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679546279335, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679546279369, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679546279371, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679546279372, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679546279374, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node046 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node046
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679546291213, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679546296142, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679546296176, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679546296178, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679546296179, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679546296180, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node047 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node047
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679546308214, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=11206
+ SEED=11206
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16 singularity exec --nv -B /dev/shm/resnet/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node045: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node046: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node047: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ source ./config_R750xax4A100-SXM-80GB_common.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
+++ export 'OMPI_MCA_btl=^openib'
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
+++ OMPI_MCA_btl='^openib'
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+++ export DGXNGPU=4
+++ DGXNGPU=4
++ export DGXNNODES=4
++ DGXNNODES=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ start=1679546309
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 11:38:29 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:38:29 PM'
STARTING TIMING RUN AT 2023-03-22 11:38:29 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=11206
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
++ export DGXSYSTEM=4xR750xax4A100
+ DALI_DECODER_BUFFER_HINT=1315942
++ DGXSYSTEM=4xR750xax4A100
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ seq 0 3
++ tr '\n' ,
++ date +%s
++ sed 's/,$//'
+ start=1679546309
++ date '+%Y-%m-%d %r'
+ start=1679546309
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 11:38:29 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:38:29 PM'
STARTING TIMING RUN AT 2023-03-22 11:38:29 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ GPUS=0,1,2,3
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=11206
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-22 11:38:29 PM'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:38:29 PM'
+ [[ '' -ge 1 ]]
STARTING TIMING RUN AT 2023-03-22 11:38:29 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ LABELSMOOTHING=0.1
+ SEED=11206
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ seq 0 3
+ [[ 0 -ge 1 ]]
++ tr '\n' ,
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+ start=1679546309
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 11:38:29 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:38:29 PM'
STARTING TIMING RUN AT 2023-03-22 11:38:29 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=11206
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+++ sed 's/^config_//'
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
+++ sed 's/\.sh$//'
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
+++ export 'OMPI_MCA_btl=^openib'
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++++ readlink -f ./config_4xR750xax4A100.sh
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export DGXSYSTEM=4xR750xax4A100
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ export LARSETA=0.001
++ LARSETA=0.001
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ export LARSETA=0.001
++ LARSETA=0.001
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ date +%s
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
+++ sed 's/^config_//'
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ sed 's/\.sh$//'
++ export BATCHSIZE=204
++ BATCHSIZE=204
+++ sed 's/^config_//'
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ date +%s
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++++ readlink -f ./config_4xR750xax4A100.sh
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ date +%s
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ sed 's/^config_//'
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+++ sed 's/\.sh$//'
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++++ readlink -f ./config_4xR750xax4A100.sh
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ start=1679546309
+++ sed 's/\.sh$//'
++ date '+%Y-%m-%d %r'
+ start=1679546309
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ start=1679546309
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 11:38:29 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:38:29 PM'
STARTING TIMING RUN AT 2023-03-22 11:38:29 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=11206
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ start_fmt='2023-03-22 11:38:29 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:38:29 PM'
STARTING TIMING RUN AT 2023-03-22 11:38:29 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ start_fmt='2023-03-22 11:38:29 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:38:29 PM'
++ seq 0 3
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=11206
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
STARTING TIMING RUN AT 2023-03-22 11:38:29 PM
+ DALI_PREFETCH_QUEUE=5
+ readonly global_rank=0
+ global_rank=0
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
++ tr '\n' ,
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ MOM=0.9
+ LRSCHED=pow2
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ PROFILE=0
+ PROFILE_EXCEL=0
+ DALI_HW_DECODER_LOAD=0
++ sed 's/,$//'
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ NODALI=0
+ NUMEXAMPLES=
+ SEED=11206
+ EVAL_OFFSET=2
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ [[ 0 == 1 ]]
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DATAROOT=/data
+ echo 'running benchmark'
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
running benchmark
+ DALI_PREALLOCATE_WIDTH=5980
+ export NGPUS=1
+ NGPUS=1
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DALI_DECODER_BUFFER_HINT=1315942
+ [[ 0 -ge 1 ]]
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
++ sed 's/,$//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ date +%s
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ source ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ date +%s
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+++ dirname ./config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
++ date +%s
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ start=1679546309
+ start=1679546309
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ date '+%Y-%m-%d %r'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ date '+%Y-%m-%d %r'
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ start=1679546309
+ start_fmt='2023-03-22 11:38:29 PM'
+ start_fmt='2023-03-22 11:38:29 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:38:29 PM'
STARTING TIMING RUN AT 2023-03-22 11:38:29 PM
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:38:29 PM'
STARTING TIMING RUN AT 2023-03-22 11:38:29 PM
+ SLURM_NTASKS_PER_NODE=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ readonly global_rank=0
+ global_rank=0
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=11206
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+ DALI_CROP_BUFFER_HINT=165581
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
++ date '+%Y-%m-%d %r'
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ LABELSMOOTHING=0.1
+ SEED=11206
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+ [[ 0 -ge 1 ]]
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ start=1679546309
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
+ THR=0.759
+ [[ 0 == 1 ]]
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
running benchmark
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ date '+%Y-%m-%d %r'
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+++ sed 's/^config_//'
+ start_fmt='2023-03-22 11:38:29 PM'
+++ sed 's/\.sh$//'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:38:29 PM'
++++ readlink -f ./config_4xR750xax4A100.sh
STARTING TIMING RUN AT 2023-03-22 11:38:29 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=11206
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ start_fmt='2023-03-22 11:38:29 PM'
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:38:29 PM'
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
STARTING TIMING RUN AT 2023-03-22 11:38:29 PM
running benchmark
+ readonly global_rank=0
+ global_rank=0
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ readonly local_rank=0
+ local_rank=0
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ SLURM_NTASKS_PER_NODE=1
+ [[ 0 -ge 1 ]]
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=11206
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date +%s
+ start=1679546309
+ source ./config_4xR750xax4A100.sh
++ date '+%Y-%m-%d %r'
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ start_fmt='2023-03-22 11:38:29 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:38:29 PM'
STARTING TIMING RUN AT 2023-03-22 11:38:29 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=11206
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+ GPUS=0,1,2,3
+++ sed 's/\.sh$//'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ sed 's/\.sh$//'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
++++ readlink -f ./config_4xR750xax4A100.sh
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
++++ readlink -f ./config_4xR750xax4A100.sh
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+ [[ '' -ge 1 ]]
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DGXNNODES=4
++ DGXNNODES=4
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/^config_//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ date +%s
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ date +%s
+ start=1679546309
+ start=1679546309
+ start=1679546309
+ start=1679546309
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 11:38:29 PM'
+ start_fmt='2023-03-22 11:38:29 PM'
+ start_fmt='2023-03-22 11:38:29 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:38:29 PM'
+ start_fmt='2023-03-22 11:38:29 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:38:29 PM'
STARTING TIMING RUN AT 2023-03-22 11:38:29 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
STARTING TIMING RUN AT 2023-03-22 11:38:29 PM
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:38:29 PM'
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
STARTING TIMING RUN AT 2023-03-22 11:38:29 PM
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:38:29 PM'
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
STARTING TIMING RUN AT 2023-03-22 11:38:29 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ SEED=11206
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=11206
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ SEED=11206
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=11206
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
running benchmark
running benchmark
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ seq 0 3
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ sed 's/,$//'
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 11206 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node044:45645] MCW rank 0 is not bound (or bound to all available processors)
[node044:45648] MCW rank 1 is not bound (or bound to all available processors)
[node044:45650] MCW rank 3 is not bound (or bound to all available processors)
[node044:45662] MCW rank 2 is not bound (or bound to all available processors)
[node046:32241] MCW rank 8 is not bound (or bound to all available processors)
[node045:37956] MCW rank 6 is not bound (or bound to all available processors)
[node045:37978] MCW rank 4 is not bound (or bound to all available processors)
[node046:32231] MCW rank 11 is not bound (or bound to all available processors)
[node045:37972] MCW rank 7 is not bound (or bound to all available processors)
[node045:37970] MCW rank 5 is not bound (or bound to all available processors)
[node046:32240] MCW rank 9 is not bound (or bound to all available processors)
[node046:32229] MCW rank 10 is not bound (or bound to all available processors)
[node047:41625] MCW rank 15 is not bound (or bound to all available processors)
[node047:41628] MCW rank 13 is not bound (or bound to all available processors)
[node047:41626] MCW rank 12 is not bound (or bound to all available processors)
[node047:41627] MCW rank 14 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679546314713, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[23:38:41] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:38:41] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:38:41] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:38:41] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:38:41] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:38:41] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:38:41] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:38:41] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:38:41] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:38:41] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:38:41] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679546321935, "event_type": "POINT_IN_TIME", "key": "seed", "value": 11206, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[23:38:41] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:38:43] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:38:43] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:38:43] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:38:43] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679546324865, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 204, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[23:38:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:38:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:38:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:38:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:38:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:38:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:38:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:38:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:38:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:38:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:38:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:38:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679546329623, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329624, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329624, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329624, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329625, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329625, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329625, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329626, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329626, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329626, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329626, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329627, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329627, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329627, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329627, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329628, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329628, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329628, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329628, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329629, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329629, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329629, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329629, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329630, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329630, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329630, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329630, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329631, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329631, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329631, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329631, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329632, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329632, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329632, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329632, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329633, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329633, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329633, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329633, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329634, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329634, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329634, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329634, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329635, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329635, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329635, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329635, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329635, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329636, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329636, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329636, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329637, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329637, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329637, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329637, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329637, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329638, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329638, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329638, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329638, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329639, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329639, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329639, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329639, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329640, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329640, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329640, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329640, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329641, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329641, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329641, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329641, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329642, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329642, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329642, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329642, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329643, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329643, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329643, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329643, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329644, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329644, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329644, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329644, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329645, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329645, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329645, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329645, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329646, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329646, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329646, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329646, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329647, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329647, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329647, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329647, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329648, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329648, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329648, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329648, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329649, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329649, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329649, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329649, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329650, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329650, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329650, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329650, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329651, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329651, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329651, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329651, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329651, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329652, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329652, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329652, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329652, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329653, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329653, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329653, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329653, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329654, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329654, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329654, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329654, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329655, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329655, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329655, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329655, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329656, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329656, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329656, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329656, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329657, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329657, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329657, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329658, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329658, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329658, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329658, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329659, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329659, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329659, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329659, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329660, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329660, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329660, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329660, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329661, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329661, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329661, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329661, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329662, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329662, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329662, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329662, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329663, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329663, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329663, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329663, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679546329664, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[23:38:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:38:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:38:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:38:49] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:38:51,532 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=27463, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:38:51,532 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=54021, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:38:51,532 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=50754, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:38:51,532 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=6511, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:38:51,532 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=52056, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:38:51,532 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=64946, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:38:51,532 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=38659, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:38:51,532 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=6031, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:38:51,533 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=10344, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:38:51,532 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=14400, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:38:51,532 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=54539, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:38:51,532 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=27719, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:38:51,532 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=63016, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:38:51,532 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=244, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:38:51,533 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=25414, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679546331532, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679546331534, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679546331534, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679546331534, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679546331534, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 204, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:38:51,534 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=62652, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679546331534, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679546331534, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679546331535, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679546331535, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679546331535, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679546331535, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679546331535, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679546331535, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679546331535, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679546331535, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679546331535, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679546331535, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679546331535, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679546331535, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679546331535, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679546418668, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679546418670, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679546418670, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679546419223, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679546419305, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679546419306, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-22 23:40:20,965 Node[0] Epoch[0] Batch [0-20]	Speed: 39595.00 samples/sec	accuracy=nan
2023-03-22 23:40:22,579 Node[0] Epoch[0] Batch [20-40]	Speed: 40433.27 samples/sec	accuracy=nan
2023-03-22 23:40:24,197 Node[0] Epoch[0] Batch [40-60]	Speed: 40345.12 samples/sec	accuracy=nan
2023-03-22 23:40:25,812 Node[0] Epoch[0] Batch [60-80]	Speed: 40429.15 samples/sec	accuracy=nan
2023-03-22 23:40:27,432 Node[0] Epoch[0] Batch [80-100]	Speed: 40287.40 samples/sec	accuracy=nan
2023-03-22 23:40:29,050 Node[0] Epoch[0] Batch [100-120]	Speed: 40343.17 samples/sec	accuracy=nan
2023-03-22 23:40:30,669 Node[0] Epoch[0] Batch [120-140]	Speed: 40323.66 samples/sec	accuracy=nan
2023-03-22 23:40:32,288 Node[0] Epoch[0] Batch [140-160]	Speed: 40322.74 samples/sec	accuracy=nan
2023-03-22 23:40:33,906 Node[0] Epoch[0] Batch [160-180]	Speed: 40353.18 samples/sec	accuracy=nan
2023-03-22 23:40:35,531 Node[0] Epoch[0] Batch [180-200]	Speed: 40182.46 samples/sec	accuracy=nan
2023-03-22 23:40:37,150 Node[0] Epoch[0] Batch [200-220]	Speed: 40320.43 samples/sec	accuracy=nan
2023-03-22 23:40:38,770 Node[0] Epoch[0] Batch [220-240]	Speed: 40286.16 samples/sec	accuracy=nan
2023-03-22 23:40:40,389 Node[0] Epoch[0] Batch [240-260]	Speed: 40307.71 samples/sec	accuracy=nan
2023-03-22 23:40:42,010 Node[0] Epoch[0] Batch [260-280]	Speed: 40289.99 samples/sec	accuracy=nan
2023-03-22 23:40:43,638 Node[0] Epoch[0] Batch [280-300]	Speed: 40097.39 samples/sec	accuracy=nan
2023-03-22 23:40:45,268 Node[0] Epoch[0] Batch [300-320]	Speed: 40042.32 samples/sec	accuracy=nan
2023-03-22 23:40:46,891 Node[0] Epoch[0] Batch [320-340]	Speed: 40229.05 samples/sec	accuracy=nan
2023-03-22 23:40:48,516 Node[0] Epoch[0] Batch [340-360]	Speed: 40171.67 samples/sec	accuracy=nan
2023-03-22 23:40:50,147 Node[0] Epoch[0] Batch [360-380]	Speed: 40031.08 samples/sec	accuracy=nan
2023-03-22 23:40:51,121 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:40:51,121 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:40:51,121 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:40:51,121 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:40:51,122 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:40:51,121 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:40:51,122 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:40:51,122 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:40:51,122 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:40:51,122 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:40:51,122 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:40:51,122 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546451122, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-22 23:40:51,122 Node[0] Epoch[0] Time cost=31.816
2023-03-22 23:40:51,122 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546451123, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40267.52430752494}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-22 23:40:51,122 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:40:51,123 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546451124, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-22 23:40:51,124 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:40:52,834 Node[0] Epoch[1] Batch [0-20]	Speed: 40034.13 samples/sec	accuracy=nan
2023-03-22 23:40:54,458 Node[0] Epoch[1] Batch [20-40]	Speed: 40198.81 samples/sec	accuracy=nan
2023-03-22 23:40:56,084 Node[0] Epoch[1] Batch [40-60]	Speed: 40150.48 samples/sec	accuracy=nan
2023-03-22 23:40:57,713 Node[0] Epoch[1] Batch [60-80]	Speed: 40063.73 samples/sec	accuracy=nan
2023-03-22 23:40:59,336 Node[0] Epoch[1] Batch [80-100]	Speed: 40220.44 samples/sec	accuracy=nan
2023-03-22 23:41:00,970 Node[0] Epoch[1] Batch [100-120]	Speed: 39950.53 samples/sec	accuracy=nan
2023-03-22 23:41:02,590 Node[0] Epoch[1] Batch [120-140]	Speed: 40311.18 samples/sec	accuracy=nan
2023-03-22 23:41:04,221 Node[0] Epoch[1] Batch [140-160]	Speed: 40017.05 samples/sec	accuracy=nan
2023-03-22 23:41:05,848 Node[0] Epoch[1] Batch [160-180]	Speed: 40122.83 samples/sec	accuracy=nan
2023-03-22 23:41:09,877 Node[0] Epoch[1] Batch [180-200]	Speed: 16203.19 samples/sec	accuracy=nan
2023-03-22 23:41:16,249 Node[0] Epoch[1] Batch [200-220]	Speed: 10243.85 samples/sec	accuracy=nan
2023-03-22 23:41:20,245 Node[0] Epoch[1] Batch [220-240]	Speed: 16338.37 samples/sec	accuracy=nan
2023-03-22 23:41:21,863 Node[0] Epoch[1] Batch [240-260]	Speed: 40338.28 samples/sec	accuracy=nan
2023-03-22 23:41:23,481 Node[0] Epoch[1] Batch [260-280]	Speed: 40340.58 samples/sec	accuracy=nan
2023-03-22 23:41:25,101 Node[0] Epoch[1] Batch [280-300]	Speed: 40309.06 samples/sec	accuracy=nan
2023-03-22 23:41:26,720 Node[0] Epoch[1] Batch [300-320]	Speed: 40313.17 samples/sec	accuracy=nan
2023-03-22 23:41:30,715 Node[0] Epoch[1] Batch [320-340]	Speed: 16340.86 samples/sec	accuracy=nan
2023-03-22 23:41:32,338 Node[0] Epoch[1] Batch [340-360]	Speed: 40227.72 samples/sec	accuracy=nan
2023-03-22 23:41:33,959 Node[0] Epoch[1] Batch [360-380]	Speed: 40270.08 samples/sec	accuracy=nan
2023-03-22 23:41:34,932 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:41:34,932 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:41:34,933 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:41:34,932 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:41:34,933 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:41:34,933 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:41:34,932 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:41:34,933 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:41:34,933 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:41:34,933 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:41:34,933 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:41:34,933 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:41:34,933 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:41:34,933 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:41:34,933 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546494933, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-22 23:41:34,934 Node[0] Epoch[1] Time cost=43.811
:::MLLOG {"namespace": "", "time_ms": 1679546494934, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 29243.302675839175}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679546494935, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-22 23:41:34,935 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:41:39,024 Node[0] Epoch[2] Batch [0-20]	Speed: 16280.19 samples/sec	accuracy=nan
2023-03-22 23:41:40,648 Node[0] Epoch[2] Batch [20-40]	Speed: 40201.41 samples/sec	accuracy=nan
2023-03-22 23:41:42,269 Node[0] Epoch[2] Batch [40-60]	Speed: 40277.07 samples/sec	accuracy=nan
2023-03-22 23:41:43,894 Node[0] Epoch[2] Batch [60-80]	Speed: 40170.66 samples/sec	accuracy=nan
2023-03-22 23:41:45,515 Node[0] Epoch[2] Batch [80-100]	Speed: 40258.89 samples/sec	accuracy=nan
2023-03-22 23:41:49,593 Node[0] Epoch[2] Batch [100-120]	Speed: 16008.96 samples/sec	accuracy=nan
2023-03-22 23:41:51,213 Node[0] Epoch[2] Batch [120-140]	Speed: 40302.12 samples/sec	accuracy=nan
2023-03-22 23:41:55,225 Node[0] Epoch[2] Batch [140-160]	Speed: 16271.24 samples/sec	accuracy=nan
2023-03-22 23:42:01,842 Node[0] Epoch[2] Batch [160-180]	Speed: 9864.56 samples/sec	accuracy=nan
2023-03-22 23:42:08,232 Node[0] Epoch[2] Batch [180-200]	Speed: 10215.92 samples/sec	accuracy=nan
2023-03-22 23:42:09,846 Node[0] Epoch[2] Batch [200-220]	Speed: 40460.59 samples/sec	accuracy=nan
2023-03-22 23:42:11,463 Node[0] Epoch[2] Batch [220-240]	Speed: 40373.42 samples/sec	accuracy=nan
2023-03-22 23:42:13,082 Node[0] Epoch[2] Batch [240-260]	Speed: 40313.68 samples/sec	accuracy=nan
2023-03-22 23:42:14,701 Node[0] Epoch[2] Batch [260-280]	Speed: 40328.14 samples/sec	accuracy=nan
2023-03-22 23:42:16,319 Node[0] Epoch[2] Batch [280-300]	Speed: 40332.76 samples/sec	accuracy=nan
2023-03-22 23:42:17,937 Node[0] Epoch[2] Batch [300-320]	Speed: 40363.19 samples/sec	accuracy=nan
2023-03-22 23:42:19,558 Node[0] Epoch[2] Batch [320-340]	Speed: 40268.58 samples/sec	accuracy=nan
2023-03-22 23:42:21,177 Node[0] Epoch[2] Batch [340-360]	Speed: 40309.99 samples/sec	accuracy=nan
2023-03-22 23:42:25,165 Node[0] Epoch[2] Batch [360-380]	Speed: 16372.09 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679546546052, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-22 23:42:26,053 Node[0] Epoch[2] Time cost=51.118
:::MLLOG {"namespace": "", "time_ms": 1679546546053, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 25063.14251958038}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679546546129, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-22 23:42:26,129 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,129 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,129 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,129 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,129 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,129 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,129 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,129 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,129 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,129 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,129 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,129 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,130 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,130 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,130 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,130 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,820 Node[0] Epoch[2] Validation-accuracy=0.313280
2023-03-22 23:42:26,820 Node[0] Epoch[2] Validation-correct-count=979.000000
2023-03-22 23:42:26,820 Node[0] Epoch[2] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679546546929, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-22 23:42:26,930 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546546930, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.313, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-22 23:42:26,930 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,930 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546546930, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-22 23:42:26,930 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546546930, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-22 23:42:26,930 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,930 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,930 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,930 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,930 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,930 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,930 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,930 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,930 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,930 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:26,930 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546546930, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-22 23:42:26,930 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:28,565 Node[0] Epoch[3] Batch [0-20]	Speed: 40122.06 samples/sec	accuracy=nan
2023-03-22 23:42:30,186 Node[0] Epoch[3] Batch [20-40]	Speed: 40263.20 samples/sec	accuracy=nan
2023-03-22 23:42:31,809 Node[0] Epoch[3] Batch [40-60]	Speed: 40230.44 samples/sec	accuracy=nan
2023-03-22 23:42:33,441 Node[0] Epoch[3] Batch [60-80]	Speed: 40001.85 samples/sec	accuracy=nan
2023-03-22 23:42:35,066 Node[0] Epoch[3] Batch [80-100]	Speed: 40165.01 samples/sec	accuracy=nan
2023-03-22 23:42:36,688 Node[0] Epoch[3] Batch [100-120]	Speed: 40243.77 samples/sec	accuracy=nan
2023-03-22 23:42:38,314 Node[0] Epoch[3] Batch [120-140]	Speed: 40157.32 samples/sec	accuracy=nan
2023-03-22 23:42:39,940 Node[0] Epoch[3] Batch [140-160]	Speed: 40146.66 samples/sec	accuracy=nan
2023-03-22 23:42:41,574 Node[0] Epoch[3] Batch [160-180]	Speed: 39963.77 samples/sec	accuracy=nan
2023-03-22 23:42:43,200 Node[0] Epoch[3] Batch [180-200]	Speed: 40132.60 samples/sec	accuracy=nan
2023-03-22 23:42:44,835 Node[0] Epoch[3] Batch [200-220]	Speed: 39922.45 samples/sec	accuracy=nan
2023-03-22 23:42:46,465 Node[0] Epoch[3] Batch [220-240]	Speed: 40057.87 samples/sec	accuracy=nan
2023-03-22 23:42:48,095 Node[0] Epoch[3] Batch [240-260]	Speed: 40036.19 samples/sec	accuracy=nan
2023-03-22 23:42:49,728 Node[0] Epoch[3] Batch [260-280]	Speed: 39996.56 samples/sec	accuracy=nan
2023-03-22 23:42:51,358 Node[0] Epoch[3] Batch [280-300]	Speed: 40030.13 samples/sec	accuracy=nan
2023-03-22 23:42:52,985 Node[0] Epoch[3] Batch [300-320]	Speed: 40122.17 samples/sec	accuracy=nan
2023-03-22 23:42:54,619 Node[0] Epoch[3] Batch [320-340]	Speed: 39956.69 samples/sec	accuracy=nan
2023-03-22 23:42:56,246 Node[0] Epoch[3] Batch [340-360]	Speed: 40126.76 samples/sec	accuracy=nan
2023-03-22 23:42:57,879 Node[0] Epoch[3] Batch [360-380]	Speed: 39977.46 samples/sec	accuracy=nan
2023-03-22 23:42:58,852 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:58,852 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:58,852 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:58,852 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:58,852 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:58,852 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:58,852 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:58,853 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:58,853 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:58,853 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:58,853 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:58,853 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:58,853 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:58,853 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:42:58,853 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546578853, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-22 23:42:58,854 Node[0] Epoch[3] Time cost=31.924
:::MLLOG {"namespace": "", "time_ms": 1679546578854, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40132.16983758328}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679546578854, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-22 23:42:58,855 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:43:00,570 Node[0] Epoch[4] Batch [0-20]	Speed: 39932.13 samples/sec	accuracy=nan
2023-03-22 23:43:02,197 Node[0] Epoch[4] Batch [20-40]	Speed: 40127.66 samples/sec	accuracy=nan
2023-03-22 23:43:03,829 Node[0] Epoch[4] Batch [40-60]	Speed: 40003.10 samples/sec	accuracy=nan
2023-03-22 23:43:05,456 Node[0] Epoch[4] Batch [60-80]	Speed: 40119.07 samples/sec	accuracy=nan
2023-03-22 23:43:07,090 Node[0] Epoch[4] Batch [80-100]	Speed: 39938.54 samples/sec	accuracy=nan
2023-03-22 23:43:08,721 Node[0] Epoch[4] Batch [100-120]	Speed: 40034.16 samples/sec	accuracy=nan
2023-03-22 23:43:10,346 Node[0] Epoch[4] Batch [120-140]	Speed: 40161.24 samples/sec	accuracy=nan
2023-03-22 23:43:11,982 Node[0] Epoch[4] Batch [140-160]	Speed: 39920.39 samples/sec	accuracy=nan
2023-03-22 23:43:13,611 Node[0] Epoch[4] Batch [160-180]	Speed: 40064.49 samples/sec	accuracy=nan
2023-03-22 23:43:15,247 Node[0] Epoch[4] Batch [180-200]	Speed: 39916.54 samples/sec	accuracy=nan
2023-03-22 23:43:16,877 Node[0] Epoch[4] Batch [200-220]	Speed: 40029.23 samples/sec	accuracy=nan
2023-03-22 23:43:18,509 Node[0] Epoch[4] Batch [220-240]	Speed: 40014.53 samples/sec	accuracy=nan
2023-03-22 23:43:20,142 Node[0] Epoch[4] Batch [240-260]	Speed: 39966.32 samples/sec	accuracy=nan
2023-03-22 23:43:21,776 Node[0] Epoch[4] Batch [260-280]	Speed: 39962.49 samples/sec	accuracy=nan
2023-03-22 23:43:23,406 Node[0] Epoch[4] Batch [280-300]	Speed: 40039.72 samples/sec	accuracy=nan
2023-03-22 23:43:25,041 Node[0] Epoch[4] Batch [300-320]	Speed: 39922.45 samples/sec	accuracy=nan
2023-03-22 23:43:26,669 Node[0] Epoch[4] Batch [320-340]	Speed: 40096.04 samples/sec	accuracy=nan
2023-03-22 23:43:28,318 Node[0] Epoch[4] Batch [340-360]	Speed: 39600.55 samples/sec	accuracy=nan
2023-03-22 23:43:29,949 Node[0] Epoch[4] Batch [360-380]	Speed: 40021.92 samples/sec	accuracy=nan
2023-03-22 23:43:30,846 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:43:30,846 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:43:30,846 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:43:30,846 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:43:30,846 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:43:30,846 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:43:30,846 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:43:30,846 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:43:30,846 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:43:30,846 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:43:30,846 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:43:30,846 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:43:30,846 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:43:30,846 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:43:30,846 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546610846, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-22 23:43:30,847 Node[0] Epoch[4] Time cost=31.992
:::MLLOG {"namespace": "", "time_ms": 1679546610847, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40046.44890455461}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1679546610847, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-22 23:43:30,847 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:43:32,563 Node[0] Epoch[5] Batch [0-20]	Speed: 39976.80 samples/sec	accuracy=nan
2023-03-22 23:43:34,195 Node[0] Epoch[5] Batch [20-40]	Speed: 40004.20 samples/sec	accuracy=nan
2023-03-22 23:43:35,829 Node[0] Epoch[5] Batch [40-60]	Speed: 39952.23 samples/sec	accuracy=nan
2023-03-22 23:43:37,465 Node[0] Epoch[5] Batch [60-80]	Speed: 39893.87 samples/sec	accuracy=nan
2023-03-22 23:43:39,091 Node[0] Epoch[5] Batch [80-100]	Speed: 40165.48 samples/sec	accuracy=nan
2023-03-22 23:43:40,725 Node[0] Epoch[5] Batch [100-120]	Speed: 39942.45 samples/sec	accuracy=nan
2023-03-22 23:43:42,353 Node[0] Epoch[5] Batch [120-140]	Speed: 40094.30 samples/sec	accuracy=nan
2023-03-22 23:43:43,985 Node[0] Epoch[5] Batch [140-160]	Speed: 40017.78 samples/sec	accuracy=nan
2023-03-22 23:43:45,615 Node[0] Epoch[5] Batch [160-180]	Speed: 40030.51 samples/sec	accuracy=nan
2023-03-22 23:43:47,247 Node[0] Epoch[5] Batch [180-200]	Speed: 39998.24 samples/sec	accuracy=nan
2023-03-22 23:43:48,880 Node[0] Epoch[5] Batch [200-220]	Speed: 39990.80 samples/sec	accuracy=nan
2023-03-22 23:43:50,514 Node[0] Epoch[5] Batch [220-240]	Speed: 39932.91 samples/sec	accuracy=nan
2023-03-22 23:43:52,142 Node[0] Epoch[5] Batch [240-260]	Speed: 40116.84 samples/sec	accuracy=nan
2023-03-22 23:43:53,778 Node[0] Epoch[5] Batch [260-280]	Speed: 39901.55 samples/sec	accuracy=nan
2023-03-22 23:43:55,405 Node[0] Epoch[5] Batch [280-300]	Speed: 40126.79 samples/sec	accuracy=nan
2023-03-22 23:43:57,038 Node[0] Epoch[5] Batch [300-320]	Speed: 39964.00 samples/sec	accuracy=nan
2023-03-22 23:43:58,672 Node[0] Epoch[5] Batch [320-340]	Speed: 39964.30 samples/sec	accuracy=nan
2023-03-22 23:44:00,306 Node[0] Epoch[5] Batch [340-360]	Speed: 39937.43 samples/sec	accuracy=nan
2023-03-22 23:44:01,940 Node[0] Epoch[5] Batch [360-380]	Speed: 39960.08 samples/sec	accuracy=nan
2023-03-22 23:44:02,914 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:02,914 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:02,914 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:02,914 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:02,914 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:02,915 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:02,914 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:02,914 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:02,914 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:02,914 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:02,915 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:02,915 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:02,915 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:02,915 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:02,915 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546642915, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-22 23:44:02,916 Node[0] Epoch[5] Time cost=32.069
:::MLLOG {"namespace": "", "time_ms": 1679546642916, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39950.63712445965}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679546642916, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-22 23:44:02,916 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:04,633 Node[0] Epoch[6] Batch [0-20]	Speed: 39921.66 samples/sec	accuracy=nan
2023-03-22 23:44:06,263 Node[0] Epoch[6] Batch [20-40]	Speed: 40044.06 samples/sec	accuracy=nan
2023-03-22 23:44:07,897 Node[0] Epoch[6] Batch [40-60]	Speed: 39940.02 samples/sec	accuracy=nan
2023-03-22 23:44:09,533 Node[0] Epoch[6] Batch [60-80]	Speed: 39927.28 samples/sec	accuracy=nan
2023-03-22 23:44:11,166 Node[0] Epoch[6] Batch [80-100]	Speed: 39970.60 samples/sec	accuracy=nan
2023-03-22 23:44:12,793 Node[0] Epoch[6] Batch [100-120]	Speed: 40115.16 samples/sec	accuracy=nan
2023-03-22 23:44:14,430 Node[0] Epoch[6] Batch [120-140]	Speed: 39883.13 samples/sec	accuracy=nan
2023-03-22 23:44:16,064 Node[0] Epoch[6] Batch [140-160]	Speed: 39939.08 samples/sec	accuracy=nan
2023-03-22 23:44:17,697 Node[0] Epoch[6] Batch [160-180]	Speed: 39994.06 samples/sec	accuracy=nan
2023-03-22 23:44:19,328 Node[0] Epoch[6] Batch [180-200]	Speed: 40005.43 samples/sec	accuracy=nan
2023-03-22 23:44:20,962 Node[0] Epoch[6] Batch [200-220]	Speed: 39963.99 samples/sec	accuracy=nan
2023-03-22 23:44:22,593 Node[0] Epoch[6] Batch [220-240]	Speed: 40008.44 samples/sec	accuracy=nan
2023-03-22 23:44:24,226 Node[0] Epoch[6] Batch [240-260]	Speed: 39990.46 samples/sec	accuracy=nan
2023-03-22 23:44:25,858 Node[0] Epoch[6] Batch [260-280]	Speed: 39987.44 samples/sec	accuracy=nan
2023-03-22 23:44:27,492 Node[0] Epoch[6] Batch [280-300]	Speed: 39964.75 samples/sec	accuracy=nan
2023-03-22 23:44:29,128 Node[0] Epoch[6] Batch [300-320]	Speed: 39890.32 samples/sec	accuracy=nan
2023-03-22 23:44:30,757 Node[0] Epoch[6] Batch [320-340]	Speed: 40068.87 samples/sec	accuracy=nan
2023-03-22 23:44:32,397 Node[0] Epoch[6] Batch [340-360]	Speed: 39822.55 samples/sec	accuracy=nan
2023-03-22 23:44:34,032 Node[0] Epoch[6] Batch [360-380]	Speed: 39918.37 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679546674928, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-22 23:44:34,929 Node[0] Epoch[6] Time cost=32.012
:::MLLOG {"namespace": "", "time_ms": 1679546674929, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40021.25880403567}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679546675006, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-22 23:44:35,751 Node[0] Epoch[6] Validation-accuracy=0.446080
2023-03-22 23:44:35,751 Node[0] Epoch[6] Validation-correct-count=1394.000000
2023-03-22 23:44:35,751 Node[0] Epoch[6] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679546675862, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679546675862, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.44538, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
2023-03-22 23:44:35,862 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:35,862 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546675862, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
2023-03-22 23:44:35,862 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:35,862 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546675862, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-22 23:44:35,862 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:35,862 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:35,862 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:35,862 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:35,862 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:35,862 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:35,862 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:35,862 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:35,862 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:35,862 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:35,862 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546675863, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-22 23:44:35,863 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:44:37,506 Node[0] Epoch[7] Batch [0-20]	Speed: 39951.83 samples/sec	accuracy=nan
2023-03-22 23:44:39,138 Node[0] Epoch[7] Batch [20-40]	Speed: 39999.36 samples/sec	accuracy=nan
2023-03-22 23:44:40,770 Node[0] Epoch[7] Batch [40-60]	Speed: 39992.24 samples/sec	accuracy=nan
2023-03-22 23:44:42,400 Node[0] Epoch[7] Batch [60-80]	Speed: 40056.30 samples/sec	accuracy=nan
2023-03-22 23:44:44,038 Node[0] Epoch[7] Batch [80-100]	Speed: 39855.86 samples/sec	accuracy=nan
2023-03-22 23:44:45,667 Node[0] Epoch[7] Batch [100-120]	Speed: 40073.11 samples/sec	accuracy=nan
2023-03-22 23:44:47,302 Node[0] Epoch[7] Batch [120-140]	Speed: 39923.88 samples/sec	accuracy=nan
2023-03-22 23:44:48,932 Node[0] Epoch[7] Batch [140-160]	Speed: 40050.17 samples/sec	accuracy=nan
2023-03-22 23:44:50,566 Node[0] Epoch[7] Batch [160-180]	Speed: 39950.39 samples/sec	accuracy=nan
2023-03-22 23:44:52,199 Node[0] Epoch[7] Batch [180-200]	Speed: 39962.31 samples/sec	accuracy=nan
2023-03-22 23:44:53,828 Node[0] Epoch[7] Batch [200-220]	Speed: 40080.75 samples/sec	accuracy=nan
2023-03-22 23:44:55,462 Node[0] Epoch[7] Batch [220-240]	Speed: 39952.46 samples/sec	accuracy=nan
2023-03-22 23:44:57,090 Node[0] Epoch[7] Batch [240-260]	Speed: 40086.06 samples/sec	accuracy=nan
2023-03-22 23:44:58,724 Node[0] Epoch[7] Batch [260-280]	Speed: 39951.53 samples/sec	accuracy=nan
2023-03-22 23:45:00,356 Node[0] Epoch[7] Batch [280-300]	Speed: 40013.82 samples/sec	accuracy=nan
2023-03-22 23:45:01,991 Node[0] Epoch[7] Batch [300-320]	Speed: 39914.92 samples/sec	accuracy=nan
2023-03-22 23:45:03,621 Node[0] Epoch[7] Batch [320-340]	Speed: 40068.77 samples/sec	accuracy=nan
2023-03-22 23:45:05,254 Node[0] Epoch[7] Batch [340-360]	Speed: 39968.17 samples/sec	accuracy=nan
2023-03-22 23:45:06,890 Node[0] Epoch[7] Batch [360-380]	Speed: 39909.67 samples/sec	accuracy=nan
2023-03-22 23:45:07,863 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:07,863 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:07,863 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:07,863 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:07,863 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:07,863 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:07,863 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:07,863 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:07,863 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:07,864 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:07,864 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:07,864 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:07,864 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:07,864 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:07,864 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546707864, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-22 23:45:07,865 Node[0] Epoch[7] Time cost=32.002
:::MLLOG {"namespace": "", "time_ms": 1679546707865, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40034.29042059972}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679546707865, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-22 23:45:07,865 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:09,582 Node[0] Epoch[8] Batch [0-20]	Speed: 39929.60 samples/sec	accuracy=nan
2023-03-22 23:45:11,214 Node[0] Epoch[8] Batch [20-40]	Speed: 39990.81 samples/sec	accuracy=nan
2023-03-22 23:45:12,845 Node[0] Epoch[8] Batch [40-60]	Speed: 40027.61 samples/sec	accuracy=nan
2023-03-22 23:45:14,481 Node[0] Epoch[8] Batch [60-80]	Speed: 39910.53 samples/sec	accuracy=nan
2023-03-22 23:45:16,110 Node[0] Epoch[8] Batch [80-100]	Speed: 40068.56 samples/sec	accuracy=nan
2023-03-22 23:45:17,741 Node[0] Epoch[8] Batch [100-120]	Speed: 40011.93 samples/sec	accuracy=nan
2023-03-22 23:45:19,377 Node[0] Epoch[8] Batch [120-140]	Speed: 39907.33 samples/sec	accuracy=nan
2023-03-22 23:45:21,013 Node[0] Epoch[8] Batch [140-160]	Speed: 39897.00 samples/sec	accuracy=nan
2023-03-22 23:45:22,644 Node[0] Epoch[8] Batch [160-180]	Speed: 40037.92 samples/sec	accuracy=nan
2023-03-22 23:45:24,275 Node[0] Epoch[8] Batch [180-200]	Speed: 40012.02 samples/sec	accuracy=nan
2023-03-22 23:45:25,908 Node[0] Epoch[8] Batch [200-220]	Speed: 39975.15 samples/sec	accuracy=nan
2023-03-22 23:45:27,542 Node[0] Epoch[8] Batch [220-240]	Speed: 39961.14 samples/sec	accuracy=nan
2023-03-22 23:45:29,182 Node[0] Epoch[8] Batch [240-260]	Speed: 39810.96 samples/sec	accuracy=nan
2023-03-22 23:45:30,811 Node[0] Epoch[8] Batch [260-280]	Speed: 40067.17 samples/sec	accuracy=nan
2023-03-22 23:45:32,446 Node[0] Epoch[8] Batch [280-300]	Speed: 39920.98 samples/sec	accuracy=nan
2023-03-22 23:45:34,082 Node[0] Epoch[8] Batch [300-320]	Speed: 39908.57 samples/sec	accuracy=nan
2023-03-22 23:45:35,714 Node[0] Epoch[8] Batch [320-340]	Speed: 39987.86 samples/sec	accuracy=nan
2023-03-22 23:45:37,350 Node[0] Epoch[8] Batch [340-360]	Speed: 39916.40 samples/sec	accuracy=nan
2023-03-22 23:45:38,983 Node[0] Epoch[8] Batch [360-380]	Speed: 39959.46 samples/sec	accuracy=nan
2023-03-22 23:45:39,876 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:39,876 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:39,876 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:39,876 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:39,877 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:39,876 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:39,877 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:39,877 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:39,877 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:39,877 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:39,877 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:39,877 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:39,877 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546739877, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-22 23:45:39,877 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:39,877 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:39,878 Node[0] Epoch[8] Time cost=32.012
:::MLLOG {"namespace": "", "time_ms": 1679546739878, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40021.029292734354}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679546739878, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-22 23:45:39,878 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:45:41,596 Node[0] Epoch[9] Batch [0-20]	Speed: 39921.94 samples/sec	accuracy=nan
2023-03-22 23:45:43,227 Node[0] Epoch[9] Batch [20-40]	Speed: 40028.07 samples/sec	accuracy=nan
2023-03-22 23:45:44,859 Node[0] Epoch[9] Batch [40-60]	Speed: 40006.37 samples/sec	accuracy=nan
2023-03-22 23:45:46,493 Node[0] Epoch[9] Batch [60-80]	Speed: 39936.22 samples/sec	accuracy=nan
2023-03-22 23:45:48,121 Node[0] Epoch[9] Batch [80-100]	Speed: 40110.80 samples/sec	accuracy=nan
2023-03-22 23:45:49,753 Node[0] Epoch[9] Batch [100-120]	Speed: 39984.82 samples/sec	accuracy=nan
2023-03-22 23:45:51,392 Node[0] Epoch[9] Batch [120-140]	Speed: 39841.56 samples/sec	accuracy=nan
2023-03-22 23:45:53,020 Node[0] Epoch[9] Batch [140-160]	Speed: 40106.35 samples/sec	accuracy=nan
2023-03-22 23:45:54,655 Node[0] Epoch[9] Batch [160-180]	Speed: 39921.61 samples/sec	accuracy=nan
2023-03-22 23:45:56,287 Node[0] Epoch[9] Batch [180-200]	Speed: 39984.25 samples/sec	accuracy=nan
2023-03-22 23:45:57,919 Node[0] Epoch[9] Batch [200-220]	Speed: 40020.65 samples/sec	accuracy=nan
2023-03-22 23:45:59,556 Node[0] Epoch[9] Batch [220-240]	Speed: 39863.53 samples/sec	accuracy=nan
2023-03-22 23:46:01,184 Node[0] Epoch[9] Batch [240-260]	Speed: 40092.41 samples/sec	accuracy=nan
2023-03-22 23:46:02,819 Node[0] Epoch[9] Batch [260-280]	Speed: 39939.48 samples/sec	accuracy=nan
2023-03-22 23:46:04,450 Node[0] Epoch[9] Batch [280-300]	Speed: 40030.29 samples/sec	accuracy=nan
2023-03-22 23:46:06,083 Node[0] Epoch[9] Batch [300-320]	Speed: 39976.17 samples/sec	accuracy=nan
2023-03-22 23:46:07,722 Node[0] Epoch[9] Batch [320-340]	Speed: 39827.82 samples/sec	accuracy=nan
2023-03-22 23:46:09,353 Node[0] Epoch[9] Batch [340-360]	Speed: 40006.20 samples/sec	accuracy=nan
2023-03-22 23:46:10,987 Node[0] Epoch[9] Batch [360-380]	Speed: 39953.64 samples/sec	accuracy=nan
2023-03-22 23:46:11,970 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:11,970 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:11,970 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:11,970 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:11,970 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:11,970 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:11,971 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:11,971 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:11,971 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:11,971 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:11,971 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:11,971 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:11,971 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:11,971 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:11,971 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546771971, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-22 23:46:11,972 Node[0] Epoch[9] Time cost=32.094
:::MLLOG {"namespace": "", "time_ms": 1679546771972, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39919.70268406914}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1679546771972, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-22 23:46:11,972 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:13,688 Node[0] Epoch[10] Batch [0-20]	Speed: 39937.30 samples/sec	accuracy=nan
2023-03-22 23:46:15,322 Node[0] Epoch[10] Batch [20-40]	Speed: 39946.98 samples/sec	accuracy=nan
2023-03-22 23:46:16,958 Node[0] Epoch[10] Batch [40-60]	Speed: 39906.84 samples/sec	accuracy=nan
2023-03-22 23:46:18,594 Node[0] Epoch[10] Batch [60-80]	Speed: 39897.61 samples/sec	accuracy=nan
2023-03-22 23:46:20,223 Node[0] Epoch[10] Batch [80-100]	Speed: 40079.29 samples/sec	accuracy=nan
2023-03-22 23:46:21,856 Node[0] Epoch[10] Batch [100-120]	Speed: 39961.45 samples/sec	accuracy=nan
2023-03-22 23:46:23,490 Node[0] Epoch[10] Batch [120-140]	Speed: 39951.73 samples/sec	accuracy=nan
2023-03-22 23:46:25,117 Node[0] Epoch[10] Batch [140-160]	Speed: 40142.46 samples/sec	accuracy=nan
2023-03-22 23:46:26,751 Node[0] Epoch[10] Batch [160-180]	Speed: 39940.96 samples/sec	accuracy=nan
2023-03-22 23:46:28,387 Node[0] Epoch[10] Batch [180-200]	Speed: 39899.41 samples/sec	accuracy=nan
2023-03-22 23:46:30,016 Node[0] Epoch[10] Batch [200-220]	Speed: 40082.45 samples/sec	accuracy=nan
2023-03-22 23:46:31,651 Node[0] Epoch[10] Batch [220-240]	Speed: 39914.73 samples/sec	accuracy=nan
2023-03-22 23:46:33,283 Node[0] Epoch[10] Batch [240-260]	Speed: 40014.88 samples/sec	accuracy=nan
2023-03-22 23:46:34,916 Node[0] Epoch[10] Batch [260-280]	Speed: 39956.83 samples/sec	accuracy=nan
2023-03-22 23:46:36,550 Node[0] Epoch[10] Batch [280-300]	Speed: 39967.79 samples/sec	accuracy=nan
2023-03-22 23:46:38,179 Node[0] Epoch[10] Batch [300-320]	Speed: 40072.75 samples/sec	accuracy=nan
2023-03-22 23:46:39,811 Node[0] Epoch[10] Batch [320-340]	Speed: 39987.93 samples/sec	accuracy=nan
2023-03-22 23:46:41,440 Node[0] Epoch[10] Batch [340-360]	Speed: 40076.84 samples/sec	accuracy=nan
2023-03-22 23:46:43,075 Node[0] Epoch[10] Batch [360-380]	Speed: 39938.45 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679546803970, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-22 23:46:43,970 Node[0] Epoch[10] Time cost=31.998
:::MLLOG {"namespace": "", "time_ms": 1679546803971, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40038.749941355}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679546804048, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-22 23:46:44,848 Node[0] Epoch[10] Validation-accuracy=0.529600
2023-03-22 23:46:44,848 Node[0] Epoch[10] Validation-correct-count=1655.000000
2023-03-22 23:46:44,848 Node[0] Epoch[10] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679546804878, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
2023-03-22 23:46:44,878 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:44,878 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546804878, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.5274, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
2023-03-22 23:46:44,878 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:44,878 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546804878, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-22 23:46:44,878 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:44,878 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:44,878 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:44,878 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:44,878 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:44,878 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:44,878 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:44,878 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:44,878 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546804878, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-22 23:46:44,878 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:44,878 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546804879, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-22 23:46:44,879 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:46:46,520 Node[0] Epoch[11] Batch [0-20]	Speed: 40052.47 samples/sec	accuracy=nan
2023-03-22 23:46:48,157 Node[0] Epoch[11] Batch [20-40]	Speed: 39886.82 samples/sec	accuracy=nan
2023-03-22 23:46:49,791 Node[0] Epoch[11] Batch [40-60]	Speed: 39958.99 samples/sec	accuracy=nan
2023-03-22 23:46:51,422 Node[0] Epoch[11] Batch [60-80]	Speed: 40022.34 samples/sec	accuracy=nan
2023-03-22 23:46:53,056 Node[0] Epoch[11] Batch [80-100]	Speed: 39957.12 samples/sec	accuracy=nan
2023-03-22 23:46:54,691 Node[0] Epoch[11] Batch [100-120]	Speed: 39919.65 samples/sec	accuracy=nan
2023-03-22 23:46:56,322 Node[0] Epoch[11] Batch [120-140]	Speed: 40030.73 samples/sec	accuracy=nan
2023-03-22 23:46:57,955 Node[0] Epoch[11] Batch [140-160]	Speed: 39974.54 samples/sec	accuracy=nan
2023-03-22 23:46:59,590 Node[0] Epoch[11] Batch [160-180]	Speed: 39920.81 samples/sec	accuracy=nan
2023-03-22 23:47:01,222 Node[0] Epoch[11] Batch [180-200]	Speed: 40003.88 samples/sec	accuracy=nan
2023-03-22 23:47:02,855 Node[0] Epoch[11] Batch [200-220]	Speed: 39961.04 samples/sec	accuracy=nan
2023-03-22 23:47:04,487 Node[0] Epoch[11] Batch [220-240]	Speed: 39998.08 samples/sec	accuracy=nan
2023-03-22 23:47:06,119 Node[0] Epoch[11] Batch [240-260]	Speed: 40020.36 samples/sec	accuracy=nan
2023-03-22 23:47:07,753 Node[0] Epoch[11] Batch [260-280]	Speed: 39942.79 samples/sec	accuracy=nan
2023-03-22 23:47:09,379 Node[0] Epoch[11] Batch [280-300]	Speed: 40136.62 samples/sec	accuracy=nan
2023-03-22 23:47:11,015 Node[0] Epoch[11] Batch [300-320]	Speed: 39906.69 samples/sec	accuracy=nan
2023-03-22 23:47:12,641 Node[0] Epoch[11] Batch [320-340]	Speed: 40161.02 samples/sec	accuracy=nan
2023-03-22 23:47:14,279 Node[0] Epoch[11] Batch [340-360]	Speed: 39834.86 samples/sec	accuracy=nan
2023-03-22 23:47:15,905 Node[0] Epoch[11] Batch [360-380]	Speed: 40152.85 samples/sec	accuracy=nan
2023-03-22 23:47:16,886 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:16,886 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:16,886 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:16,886 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:16,886 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:16,886 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:16,886 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:16,886 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:16,886 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:16,887 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:16,887 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:16,887 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:16,887 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:16,887 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:16,887 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546836887, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-22 23:47:16,888 Node[0] Epoch[11] Time cost=32.009
:::MLLOG {"namespace": "", "time_ms": 1679546836888, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40025.31443466906}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679546836888, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-22 23:47:16,888 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:18,603 Node[0] Epoch[12] Batch [0-20]	Speed: 39978.57 samples/sec	accuracy=nan
2023-03-22 23:47:20,236 Node[0] Epoch[12] Batch [20-40]	Speed: 39967.65 samples/sec	accuracy=nan
2023-03-22 23:47:21,868 Node[0] Epoch[12] Batch [40-60]	Speed: 40009.12 samples/sec	accuracy=nan
2023-03-22 23:47:23,498 Node[0] Epoch[12] Batch [60-80]	Speed: 40037.32 samples/sec	accuracy=nan
2023-03-22 23:47:25,132 Node[0] Epoch[12] Batch [80-100]	Speed: 39957.28 samples/sec	accuracy=nan
2023-03-22 23:47:26,766 Node[0] Epoch[12] Batch [100-120]	Speed: 39941.67 samples/sec	accuracy=nan
2023-03-22 23:47:28,398 Node[0] Epoch[12] Batch [120-140]	Speed: 40002.62 samples/sec	accuracy=nan
2023-03-22 23:47:30,033 Node[0] Epoch[12] Batch [140-160]	Speed: 39925.73 samples/sec	accuracy=nan
2023-03-22 23:47:31,669 Node[0] Epoch[12] Batch [160-180]	Speed: 39913.04 samples/sec	accuracy=nan
2023-03-22 23:47:33,299 Node[0] Epoch[12] Batch [180-200]	Speed: 40042.74 samples/sec	accuracy=nan
2023-03-22 23:47:34,932 Node[0] Epoch[12] Batch [200-220]	Speed: 39980.87 samples/sec	accuracy=nan
2023-03-22 23:47:36,566 Node[0] Epoch[12] Batch [220-240]	Speed: 39939.34 samples/sec	accuracy=nan
2023-03-22 23:47:38,201 Node[0] Epoch[12] Batch [240-260]	Speed: 39924.58 samples/sec	accuracy=nan
2023-03-22 23:47:39,834 Node[0] Epoch[12] Batch [260-280]	Speed: 39982.49 samples/sec	accuracy=nan
2023-03-22 23:47:41,468 Node[0] Epoch[12] Batch [280-300]	Speed: 39936.98 samples/sec	accuracy=nan
2023-03-22 23:47:43,102 Node[0] Epoch[12] Batch [300-320]	Speed: 39964.79 samples/sec	accuracy=nan
2023-03-22 23:47:44,735 Node[0] Epoch[12] Batch [320-340]	Speed: 39965.57 samples/sec	accuracy=nan
2023-03-22 23:47:46,371 Node[0] Epoch[12] Batch [340-360]	Speed: 39911.79 samples/sec	accuracy=nan
2023-03-22 23:47:48,001 Node[0] Epoch[12] Batch [360-380]	Speed: 40052.28 samples/sec	accuracy=nan
2023-03-22 23:47:48,898 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:48,898 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:48,898 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:48,898 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:48,898 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:48,898 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:48,898 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:48,898 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:48,898 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:48,898 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:48,898 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:48,898 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:48,899 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546868898, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-22 23:47:48,899 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:48,899 Node[0] Epoch[12] Time cost=32.011
:::MLLOG {"namespace": "", "time_ms": 1679546868899, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40022.71641127637}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-22 23:47:48,899 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546868900, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-22 23:47:48,900 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:47:50,615 Node[0] Epoch[13] Batch [0-20]	Speed: 40041.74 samples/sec	accuracy=nan
2023-03-22 23:47:52,249 Node[0] Epoch[13] Batch [20-40]	Speed: 39944.09 samples/sec	accuracy=nan
2023-03-22 23:47:53,884 Node[0] Epoch[13] Batch [40-60]	Speed: 39933.27 samples/sec	accuracy=nan
2023-03-22 23:47:55,520 Node[0] Epoch[13] Batch [60-80]	Speed: 39884.71 samples/sec	accuracy=nan
2023-03-22 23:47:57,147 Node[0] Epoch[13] Batch [80-100]	Speed: 40131.90 samples/sec	accuracy=nan
2023-03-22 23:47:58,782 Node[0] Epoch[13] Batch [100-120]	Speed: 39920.06 samples/sec	accuracy=nan
2023-03-22 23:48:00,415 Node[0] Epoch[13] Batch [120-140]	Speed: 39991.23 samples/sec	accuracy=nan
2023-03-22 23:48:02,046 Node[0] Epoch[13] Batch [140-160]	Speed: 40015.23 samples/sec	accuracy=nan
2023-03-22 23:48:03,679 Node[0] Epoch[13] Batch [160-180]	Speed: 39968.32 samples/sec	accuracy=nan
2023-03-22 23:48:05,314 Node[0] Epoch[13] Batch [180-200]	Speed: 39930.91 samples/sec	accuracy=nan
2023-03-22 23:48:06,945 Node[0] Epoch[13] Batch [200-220]	Speed: 40022.22 samples/sec	accuracy=nan
2023-03-22 23:48:08,580 Node[0] Epoch[13] Batch [220-240]	Speed: 39925.12 samples/sec	accuracy=nan
2023-03-22 23:48:10,209 Node[0] Epoch[13] Batch [240-260]	Speed: 40082.00 samples/sec	accuracy=nan
2023-03-22 23:48:11,842 Node[0] Epoch[13] Batch [260-280]	Speed: 39978.87 samples/sec	accuracy=nan
2023-03-22 23:48:13,470 Node[0] Epoch[13] Batch [280-300]	Speed: 40104.29 samples/sec	accuracy=nan
2023-03-22 23:48:15,106 Node[0] Epoch[13] Batch [300-320]	Speed: 39903.51 samples/sec	accuracy=nan
2023-03-22 23:48:16,737 Node[0] Epoch[13] Batch [320-340]	Speed: 40015.47 samples/sec	accuracy=nan
2023-03-22 23:48:18,372 Node[0] Epoch[13] Batch [340-360]	Speed: 39921.19 samples/sec	accuracy=nan
2023-03-22 23:48:20,008 Node[0] Epoch[13] Batch [360-380]	Speed: 39912.18 samples/sec	accuracy=nan
2023-03-22 23:48:20,981 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:20,981 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:20,981 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:20,981 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:20,981 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:20,981 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:20,981 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:20,981 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:20,981 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:20,981 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:20,981 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:20,981 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:20,981 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:20,982 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:20,982 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546900982, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-22 23:48:20,983 Node[0] Epoch[13] Time cost=32.083
:::MLLOG {"namespace": "", "time_ms": 1679546900983, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39933.008018825516}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679546900983, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-22 23:48:20,983 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:22,697 Node[0] Epoch[14] Batch [0-20]	Speed: 39976.84 samples/sec	accuracy=nan
2023-03-22 23:48:24,327 Node[0] Epoch[14] Batch [20-40]	Speed: 40036.37 samples/sec	accuracy=nan
2023-03-22 23:48:25,958 Node[0] Epoch[14] Batch [40-60]	Speed: 40020.16 samples/sec	accuracy=nan
2023-03-22 23:48:27,590 Node[0] Epoch[14] Batch [60-80]	Speed: 40009.52 samples/sec	accuracy=nan
2023-03-22 23:48:29,222 Node[0] Epoch[14] Batch [80-100]	Speed: 39989.96 samples/sec	accuracy=nan
2023-03-22 23:48:30,855 Node[0] Epoch[14] Batch [100-120]	Speed: 39969.11 samples/sec	accuracy=nan
2023-03-22 23:48:32,491 Node[0] Epoch[14] Batch [120-140]	Speed: 39926.01 samples/sec	accuracy=nan
2023-03-22 23:48:34,126 Node[0] Epoch[14] Batch [140-160]	Speed: 39925.10 samples/sec	accuracy=nan
2023-03-22 23:48:35,762 Node[0] Epoch[14] Batch [160-180]	Speed: 39892.71 samples/sec	accuracy=nan
2023-03-22 23:48:37,389 Node[0] Epoch[14] Batch [180-200]	Speed: 40115.06 samples/sec	accuracy=nan
2023-03-22 23:48:39,026 Node[0] Epoch[14] Batch [200-220]	Speed: 39890.77 samples/sec	accuracy=nan
2023-03-22 23:48:40,658 Node[0] Epoch[14] Batch [220-240]	Speed: 39996.72 samples/sec	accuracy=nan
2023-03-22 23:48:42,292 Node[0] Epoch[14] Batch [240-260]	Speed: 39950.97 samples/sec	accuracy=nan
2023-03-22 23:48:43,925 Node[0] Epoch[14] Batch [260-280]	Speed: 39983.40 samples/sec	accuracy=nan
2023-03-22 23:48:45,557 Node[0] Epoch[14] Batch [280-300]	Speed: 39999.11 samples/sec	accuracy=nan
2023-03-22 23:48:47,191 Node[0] Epoch[14] Batch [300-320]	Speed: 39952.30 samples/sec	accuracy=nan
2023-03-22 23:48:48,823 Node[0] Epoch[14] Batch [320-340]	Speed: 39991.09 samples/sec	accuracy=nan
2023-03-22 23:48:50,465 Node[0] Epoch[14] Batch [340-360]	Speed: 39746.87 samples/sec	accuracy=nan
2023-03-22 23:48:52,096 Node[0] Epoch[14] Batch [360-380]	Speed: 40026.54 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679546932994, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-22 23:48:52,995 Node[0] Epoch[14] Time cost=32.011
:::MLLOG {"namespace": "", "time_ms": 1679546932995, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40022.184625699185}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679546933072, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-22 23:48:53,796 Node[0] Epoch[14] Validation-accuracy=0.581440
2023-03-22 23:48:53,796 Node[0] Epoch[14] Validation-correct-count=1817.000000
2023-03-22 23:48:53,796 Node[0] Epoch[14] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679546933907, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
2023-03-22 23:48:53,907 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:53,907 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546933907, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.58648, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
2023-03-22 23:48:53,907 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:53,907 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546933907, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
2023-03-22 23:48:53,907 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:53,907 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:53,907 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:53,907 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:53,907 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:53,907 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546933908, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-22 23:48:53,907 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:53,907 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:53,907 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:53,907 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:53,907 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546933908, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-22 23:48:53,908 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:48:55,550 Node[0] Epoch[15] Batch [0-20]	Speed: 39973.19 samples/sec	accuracy=nan
2023-03-22 23:48:57,182 Node[0] Epoch[15] Batch [20-40]	Speed: 39998.30 samples/sec	accuracy=nan
2023-03-22 23:48:58,813 Node[0] Epoch[15] Batch [40-60]	Speed: 40046.31 samples/sec	accuracy=nan
2023-03-22 23:49:00,446 Node[0] Epoch[15] Batch [60-80]	Speed: 39967.18 samples/sec	accuracy=nan
2023-03-22 23:49:02,078 Node[0] Epoch[15] Batch [80-100]	Speed: 40002.20 samples/sec	accuracy=nan
2023-03-22 23:49:03,706 Node[0] Epoch[15] Batch [100-120]	Speed: 40086.00 samples/sec	accuracy=nan
2023-03-22 23:49:05,339 Node[0] Epoch[15] Batch [120-140]	Speed: 39984.29 samples/sec	accuracy=nan
2023-03-22 23:49:06,971 Node[0] Epoch[15] Batch [140-160]	Speed: 39988.00 samples/sec	accuracy=nan
2023-03-22 23:49:08,606 Node[0] Epoch[15] Batch [160-180]	Speed: 39940.10 samples/sec	accuracy=nan
2023-03-22 23:49:10,240 Node[0] Epoch[15] Batch [180-200]	Speed: 39956.54 samples/sec	accuracy=nan
2023-03-22 23:49:11,871 Node[0] Epoch[15] Batch [200-220]	Speed: 40024.65 samples/sec	accuracy=nan
2023-03-22 23:49:13,507 Node[0] Epoch[15] Batch [220-240]	Speed: 39892.56 samples/sec	accuracy=nan
2023-03-22 23:49:15,141 Node[0] Epoch[15] Batch [240-260]	Speed: 39963.62 samples/sec	accuracy=nan
2023-03-22 23:49:16,774 Node[0] Epoch[15] Batch [260-280]	Speed: 39973.24 samples/sec	accuracy=nan
2023-03-22 23:49:18,409 Node[0] Epoch[15] Batch [280-300]	Speed: 39917.00 samples/sec	accuracy=nan
2023-03-22 23:49:20,045 Node[0] Epoch[15] Batch [300-320]	Speed: 39909.64 samples/sec	accuracy=nan
2023-03-22 23:49:21,672 Node[0] Epoch[15] Batch [320-340]	Speed: 40125.46 samples/sec	accuracy=nan
2023-03-22 23:49:23,304 Node[0] Epoch[15] Batch [340-360]	Speed: 39987.91 samples/sec	accuracy=nan
2023-03-22 23:49:24,937 Node[0] Epoch[15] Batch [360-380]	Speed: 39978.18 samples/sec	accuracy=nan
2023-03-22 23:49:25,919 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:25,919 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:25,919 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:25,919 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:25,919 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:25,919 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:25,919 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:25,919 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:25,919 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:25,919 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:25,920 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:25,920 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:25,920 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546965920, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-22 23:49:25,921 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:25,921 Node[0] Epoch[15] Time cost=32.013
:::MLLOG {"namespace": "", "time_ms": 1679546965921, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40020.27520270658}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679546965921, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-22 23:49:25,922 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:25,923 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:27,628 Node[0] Epoch[16] Batch [0-20]	Speed: 40174.53 samples/sec	accuracy=nan
2023-03-22 23:49:29,263 Node[0] Epoch[16] Batch [20-40]	Speed: 39945.02 samples/sec	accuracy=nan
2023-03-22 23:49:30,892 Node[0] Epoch[16] Batch [40-60]	Speed: 40053.24 samples/sec	accuracy=nan
2023-03-22 23:49:32,529 Node[0] Epoch[16] Batch [60-80]	Speed: 39884.35 samples/sec	accuracy=nan
2023-03-22 23:49:34,160 Node[0] Epoch[16] Batch [80-100]	Speed: 40020.38 samples/sec	accuracy=nan
2023-03-22 23:49:35,791 Node[0] Epoch[16] Batch [100-120]	Speed: 40033.50 samples/sec	accuracy=nan
2023-03-22 23:49:37,426 Node[0] Epoch[16] Batch [120-140]	Speed: 39913.68 samples/sec	accuracy=nan
2023-03-22 23:49:39,060 Node[0] Epoch[16] Batch [140-160]	Speed: 39951.09 samples/sec	accuracy=nan
2023-03-22 23:49:40,689 Node[0] Epoch[16] Batch [160-180]	Speed: 40076.97 samples/sec	accuracy=nan
2023-03-22 23:49:42,317 Node[0] Epoch[16] Batch [180-200]	Speed: 40102.53 samples/sec	accuracy=nan
2023-03-22 23:49:43,951 Node[0] Epoch[16] Batch [200-220]	Speed: 39951.62 samples/sec	accuracy=nan
2023-03-22 23:49:45,588 Node[0] Epoch[16] Batch [220-240]	Speed: 39884.32 samples/sec	accuracy=nan
2023-03-22 23:49:47,222 Node[0] Epoch[16] Batch [240-260]	Speed: 39944.74 samples/sec	accuracy=nan
2023-03-22 23:49:48,851 Node[0] Epoch[16] Batch [260-280]	Speed: 40066.60 samples/sec	accuracy=nan
2023-03-22 23:49:50,486 Node[0] Epoch[16] Batch [280-300]	Speed: 39948.17 samples/sec	accuracy=nan
2023-03-22 23:49:52,118 Node[0] Epoch[16] Batch [300-320]	Speed: 39977.64 samples/sec	accuracy=nan
2023-03-22 23:49:53,751 Node[0] Epoch[16] Batch [320-340]	Speed: 39976.82 samples/sec	accuracy=nan
2023-03-22 23:49:55,385 Node[0] Epoch[16] Batch [340-360]	Speed: 39970.97 samples/sec	accuracy=nan
2023-03-22 23:49:57,020 Node[0] Epoch[16] Batch [360-380]	Speed: 39920.32 samples/sec	accuracy=nan
2023-03-22 23:49:57,918 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:57,918 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:57,918 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:57,918 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:57,918 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:57,918 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:57,918 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:57,918 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:57,918 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:57,918 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:57,918 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:57,918 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:57,918 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:57,919 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546997918, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-22 23:49:57,919 Node[0] Epoch[16] Time cost=31.998
:::MLLOG {"namespace": "", "time_ms": 1679546997919, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40039.52889334699}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
2023-03-22 23:49:57,919 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546997920, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-22 23:49:57,920 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:49:59,633 Node[0] Epoch[17] Batch [0-20]	Speed: 40052.14 samples/sec	accuracy=nan
2023-03-22 23:50:01,267 Node[0] Epoch[17] Batch [20-40]	Speed: 39936.28 samples/sec	accuracy=nan
2023-03-22 23:50:02,903 Node[0] Epoch[17] Batch [40-60]	Speed: 39918.22 samples/sec	accuracy=nan
2023-03-22 23:50:04,527 Node[0] Epoch[17] Batch [60-80]	Speed: 40185.63 samples/sec	accuracy=nan
2023-03-22 23:50:06,162 Node[0] Epoch[17] Batch [80-100]	Speed: 39930.43 samples/sec	accuracy=nan
2023-03-22 23:50:07,794 Node[0] Epoch[17] Batch [100-120]	Speed: 39992.72 samples/sec	accuracy=nan
2023-03-22 23:50:09,424 Node[0] Epoch[17] Batch [120-140]	Speed: 40061.29 samples/sec	accuracy=nan
2023-03-22 23:50:11,059 Node[0] Epoch[17] Batch [140-160]	Speed: 39926.94 samples/sec	accuracy=nan
2023-03-22 23:50:12,693 Node[0] Epoch[17] Batch [160-180]	Speed: 39941.20 samples/sec	accuracy=nan
2023-03-22 23:50:14,326 Node[0] Epoch[17] Batch [180-200]	Speed: 39986.00 samples/sec	accuracy=nan
2023-03-22 23:50:15,959 Node[0] Epoch[17] Batch [200-220]	Speed: 39979.73 samples/sec	accuracy=nan
2023-03-22 23:50:17,593 Node[0] Epoch[17] Batch [220-240]	Speed: 39946.31 samples/sec	accuracy=nan
2023-03-22 23:50:19,221 Node[0] Epoch[17] Batch [240-260]	Speed: 40085.14 samples/sec	accuracy=nan
2023-03-22 23:50:20,857 Node[0] Epoch[17] Batch [260-280]	Speed: 39922.62 samples/sec	accuracy=nan
2023-03-22 23:50:22,493 Node[0] Epoch[17] Batch [280-300]	Speed: 39898.95 samples/sec	accuracy=nan
2023-03-22 23:50:24,120 Node[0] Epoch[17] Batch [300-320]	Speed: 40119.88 samples/sec	accuracy=nan
2023-03-22 23:50:25,759 Node[0] Epoch[17] Batch [320-340]	Speed: 39823.33 samples/sec	accuracy=nan
2023-03-22 23:50:27,392 Node[0] Epoch[17] Batch [340-360]	Speed: 39966.88 samples/sec	accuracy=nan
2023-03-22 23:50:29,023 Node[0] Epoch[17] Batch [360-380]	Speed: 40039.84 samples/sec	accuracy=nan
2023-03-22 23:50:30,004 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:50:30,004 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:50:30,004 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:50:30,004 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:50:30,004 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:50:30,004 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:50:30,005 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:50:30,005 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:50:30,005 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:50:30,005 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:50:30,005 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:50:30,005 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:50:30,004 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:50:30,005 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:50:30,005 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547030005, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-22 23:50:30,006 Node[0] Epoch[17] Time cost=32.086
:::MLLOG {"namespace": "", "time_ms": 1679547030006, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39929.160067643825}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679547030006, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-22 23:50:30,007 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:50:31,717 Node[0] Epoch[18] Batch [0-20]	Speed: 40056.28 samples/sec	accuracy=nan
2023-03-22 23:50:33,351 Node[0] Epoch[18] Batch [20-40]	Speed: 39942.37 samples/sec	accuracy=nan
2023-03-22 23:50:34,979 Node[0] Epoch[18] Batch [40-60]	Speed: 40092.81 samples/sec	accuracy=nan
2023-03-22 23:50:36,615 Node[0] Epoch[18] Batch [60-80]	Speed: 39908.21 samples/sec	accuracy=nan
2023-03-22 23:50:38,243 Node[0] Epoch[18] Batch [80-100]	Speed: 40096.30 samples/sec	accuracy=nan
2023-03-22 23:50:39,877 Node[0] Epoch[18] Batch [100-120]	Speed: 39961.84 samples/sec	accuracy=nan
2023-03-22 23:50:41,507 Node[0] Epoch[18] Batch [120-140]	Speed: 40045.19 samples/sec	accuracy=nan
2023-03-22 23:50:43,142 Node[0] Epoch[18] Batch [140-160]	Speed: 39928.07 samples/sec	accuracy=nan
2023-03-22 23:50:44,772 Node[0] Epoch[18] Batch [160-180]	Speed: 40045.63 samples/sec	accuracy=nan
2023-03-22 23:50:46,404 Node[0] Epoch[18] Batch [180-200]	Speed: 40008.45 samples/sec	accuracy=nan
2023-03-22 23:50:48,028 Node[0] Epoch[18] Batch [200-220]	Speed: 40186.58 samples/sec	accuracy=nan
2023-03-22 23:50:49,663 Node[0] Epoch[18] Batch [220-240]	Speed: 39937.73 samples/sec	accuracy=nan
2023-03-22 23:50:51,299 Node[0] Epoch[18] Batch [240-260]	Speed: 39903.07 samples/sec	accuracy=nan
2023-03-22 23:50:52,934 Node[0] Epoch[18] Batch [260-280]	Speed: 39909.48 samples/sec	accuracy=nan
2023-03-22 23:50:54,565 Node[0] Epoch[18] Batch [280-300]	Speed: 40036.70 samples/sec	accuracy=nan
2023-03-22 23:50:56,195 Node[0] Epoch[18] Batch [300-320]	Speed: 40050.68 samples/sec	accuracy=nan
2023-03-22 23:50:57,833 Node[0] Epoch[18] Batch [320-340]	Speed: 39845.20 samples/sec	accuracy=nan
2023-03-22 23:50:59,470 Node[0] Epoch[18] Batch [340-360]	Speed: 39868.96 samples/sec	accuracy=nan
2023-03-22 23:51:01,102 Node[0] Epoch[18] Batch [360-380]	Speed: 40007.01 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679547061999, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-22 23:51:02,000 Node[0] Epoch[18] Time cost=31.993
:::MLLOG {"namespace": "", "time_ms": 1679547062000, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40044.76605141081}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679547062077, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-22 23:51:02,798 Node[0] Epoch[18] Validation-accuracy=0.635840
2023-03-22 23:51:02,798 Node[0] Epoch[18] Validation-correct-count=1987.000000
2023-03-22 23:51:02,799 Node[0] Epoch[18] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679547062909, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679547062909, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.64556, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679547062910, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-22 23:51:02,909 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:02,909 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547062910, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-22 23:51:02,909 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:02,910 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:02,909 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:02,909 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:02,909 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:02,909 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:02,910 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:02,909 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:02,909 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:02,910 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:02,910 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:02,910 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547062910, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-22 23:51:02,910 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:02,910 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:04,552 Node[0] Epoch[19] Batch [0-20]	Speed: 39952.27 samples/sec	accuracy=nan
2023-03-22 23:51:06,187 Node[0] Epoch[19] Batch [20-40]	Speed: 39919.35 samples/sec	accuracy=nan
2023-03-22 23:51:07,823 Node[0] Epoch[19] Batch [40-60]	Speed: 39904.02 samples/sec	accuracy=nan
2023-03-22 23:51:09,454 Node[0] Epoch[19] Batch [60-80]	Speed: 40019.85 samples/sec	accuracy=nan
2023-03-22 23:51:11,089 Node[0] Epoch[19] Batch [80-100]	Speed: 39931.47 samples/sec	accuracy=nan
2023-03-22 23:51:12,724 Node[0] Epoch[19] Batch [100-120]	Speed: 39927.97 samples/sec	accuracy=nan
2023-03-22 23:51:14,356 Node[0] Epoch[19] Batch [120-140]	Speed: 40007.01 samples/sec	accuracy=nan
2023-03-22 23:51:15,987 Node[0] Epoch[19] Batch [140-160]	Speed: 40014.22 samples/sec	accuracy=nan
2023-03-22 23:51:17,615 Node[0] Epoch[19] Batch [160-180]	Speed: 40090.37 samples/sec	accuracy=nan
2023-03-22 23:51:19,249 Node[0] Epoch[19] Batch [180-200]	Speed: 39957.29 samples/sec	accuracy=nan
2023-03-22 23:51:20,885 Node[0] Epoch[19] Batch [200-220]	Speed: 39898.93 samples/sec	accuracy=nan
2023-03-22 23:51:22,521 Node[0] Epoch[19] Batch [220-240]	Speed: 39900.42 samples/sec	accuracy=nan
2023-03-22 23:51:24,151 Node[0] Epoch[19] Batch [240-260]	Speed: 40059.56 samples/sec	accuracy=nan
2023-03-22 23:51:25,790 Node[0] Epoch[19] Batch [260-280]	Speed: 39838.34 samples/sec	accuracy=nan
2023-03-22 23:51:27,423 Node[0] Epoch[19] Batch [280-300]	Speed: 39965.84 samples/sec	accuracy=nan
2023-03-22 23:51:29,058 Node[0] Epoch[19] Batch [300-320]	Speed: 39932.74 samples/sec	accuracy=nan
2023-03-22 23:51:30,686 Node[0] Epoch[19] Batch [320-340]	Speed: 40085.66 samples/sec	accuracy=nan
2023-03-22 23:51:32,323 Node[0] Epoch[19] Batch [340-360]	Speed: 39892.34 samples/sec	accuracy=nan
2023-03-22 23:51:33,957 Node[0] Epoch[19] Batch [360-380]	Speed: 39943.95 samples/sec	accuracy=nan
2023-03-22 23:51:34,935 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:34,935 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:34,935 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:34,935 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:34,936 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:34,936 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:34,936 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:34,936 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:34,936 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:34,936 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:34,936 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:34,936 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:34,936 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:34,936 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:34,936 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547094936, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-22 23:51:34,937 Node[0] Epoch[19] Time cost=32.027
:::MLLOG {"namespace": "", "time_ms": 1679547094937, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40002.7043104528}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679547094938, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-22 23:51:34,938 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:51:36,651 Node[0] Epoch[20] Batch [0-20]	Speed: 39978.82 samples/sec	accuracy=nan
2023-03-22 23:51:38,284 Node[0] Epoch[20] Batch [20-40]	Speed: 39958.41 samples/sec	accuracy=nan
2023-03-22 23:51:39,920 Node[0] Epoch[20] Batch [40-60]	Speed: 39903.75 samples/sec	accuracy=nan
2023-03-22 23:51:41,548 Node[0] Epoch[20] Batch [60-80]	Speed: 40099.16 samples/sec	accuracy=nan
2023-03-22 23:51:43,184 Node[0] Epoch[20] Batch [80-100]	Speed: 39902.23 samples/sec	accuracy=nan
2023-03-22 23:51:44,817 Node[0] Epoch[20] Batch [100-120]	Speed: 39990.48 samples/sec	accuracy=nan
2023-03-22 23:51:46,450 Node[0] Epoch[20] Batch [120-140]	Speed: 39976.96 samples/sec	accuracy=nan
2023-03-22 23:51:48,084 Node[0] Epoch[20] Batch [140-160]	Speed: 39948.46 samples/sec	accuracy=nan
2023-03-22 23:51:49,712 Node[0] Epoch[20] Batch [160-180]	Speed: 40084.07 samples/sec	accuracy=nan
2023-03-22 23:51:51,349 Node[0] Epoch[20] Batch [180-200]	Speed: 39893.82 samples/sec	accuracy=nan
2023-03-22 23:51:52,982 Node[0] Epoch[20] Batch [200-220]	Speed: 39970.24 samples/sec	accuracy=nan
2023-03-22 23:51:54,617 Node[0] Epoch[20] Batch [220-240]	Speed: 39930.61 samples/sec	accuracy=nan
2023-03-22 23:51:56,251 Node[0] Epoch[20] Batch [240-260]	Speed: 39955.07 samples/sec	accuracy=nan
2023-03-22 23:51:57,886 Node[0] Epoch[20] Batch [260-280]	Speed: 39912.56 samples/sec	accuracy=nan
2023-03-22 23:51:59,524 Node[0] Epoch[20] Batch [280-300]	Speed: 39862.93 samples/sec	accuracy=nan
2023-03-22 23:52:01,151 Node[0] Epoch[20] Batch [300-320]	Speed: 40110.25 samples/sec	accuracy=nan
2023-03-22 23:52:02,788 Node[0] Epoch[20] Batch [320-340]	Speed: 39876.02 samples/sec	accuracy=nan
2023-03-22 23:52:04,422 Node[0] Epoch[20] Batch [340-360]	Speed: 39962.41 samples/sec	accuracy=nan
2023-03-22 23:52:06,057 Node[0] Epoch[20] Batch [360-380]	Speed: 39924.62 samples/sec	accuracy=nan
2023-03-22 23:52:06,953 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:06,953 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:06,953 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:06,953 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:06,953 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:06,953 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:06,953 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:06,953 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:06,953 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:06,953 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:06,953 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:06,953 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:06,954 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:06,954 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547126953, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-22 23:52:06,954 Node[0] Epoch[20] Time cost=32.016
:::MLLOG {"namespace": "", "time_ms": 1679547126954, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40016.01140297631}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
2023-03-22 23:52:06,954 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547126955, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-22 23:52:06,955 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:08,672 Node[0] Epoch[21] Batch [0-20]	Speed: 39944.54 samples/sec	accuracy=nan
2023-03-22 23:52:10,308 Node[0] Epoch[21] Batch [20-40]	Speed: 39889.02 samples/sec	accuracy=nan
2023-03-22 23:52:11,943 Node[0] Epoch[21] Batch [40-60]	Speed: 39947.79 samples/sec	accuracy=nan
2023-03-22 23:52:13,571 Node[0] Epoch[21] Batch [60-80]	Speed: 40078.99 samples/sec	accuracy=nan
2023-03-22 23:52:15,206 Node[0] Epoch[21] Batch [80-100]	Speed: 39924.20 samples/sec	accuracy=nan
2023-03-22 23:52:16,839 Node[0] Epoch[21] Batch [100-120]	Speed: 39984.46 samples/sec	accuracy=nan
2023-03-22 23:52:18,471 Node[0] Epoch[21] Batch [120-140]	Speed: 40005.10 samples/sec	accuracy=nan
2023-03-22 23:52:20,105 Node[0] Epoch[21] Batch [140-160]	Speed: 39944.59 samples/sec	accuracy=nan
2023-03-22 23:52:21,741 Node[0] Epoch[21] Batch [160-180]	Speed: 39902.30 samples/sec	accuracy=nan
2023-03-22 23:52:23,375 Node[0] Epoch[21] Batch [180-200]	Speed: 39950.82 samples/sec	accuracy=nan
2023-03-22 23:52:25,005 Node[0] Epoch[21] Batch [200-220]	Speed: 40053.70 samples/sec	accuracy=nan
2023-03-22 23:52:26,637 Node[0] Epoch[21] Batch [220-240]	Speed: 40006.03 samples/sec	accuracy=nan
2023-03-22 23:52:28,267 Node[0] Epoch[21] Batch [240-260]	Speed: 40049.50 samples/sec	accuracy=nan
2023-03-22 23:52:29,897 Node[0] Epoch[21] Batch [260-280]	Speed: 40034.58 samples/sec	accuracy=nan
2023-03-22 23:52:31,532 Node[0] Epoch[21] Batch [280-300]	Speed: 39946.36 samples/sec	accuracy=nan
2023-03-22 23:52:33,166 Node[0] Epoch[21] Batch [300-320]	Speed: 39943.47 samples/sec	accuracy=nan
2023-03-22 23:52:34,800 Node[0] Epoch[21] Batch [320-340]	Speed: 39956.82 samples/sec	accuracy=nan
2023-03-22 23:52:36,433 Node[0] Epoch[21] Batch [340-360]	Speed: 39960.84 samples/sec	accuracy=nan
2023-03-22 23:52:38,067 Node[0] Epoch[21] Batch [360-380]	Speed: 39958.25 samples/sec	accuracy=nan
2023-03-22 23:52:39,045 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:39,045 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:39,045 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:39,046 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:39,045 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:39,045 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:39,045 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:39,046 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:39,046 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:39,046 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:39,046 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:39,046 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:39,046 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:39,046 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:39,046 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547159045, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-22 23:52:39,047 Node[0] Epoch[21] Time cost=32.092
:::MLLOG {"namespace": "", "time_ms": 1679547159047, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39922.02783048318}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679547159047, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-22 23:52:39,047 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:52:40,767 Node[0] Epoch[22] Batch [0-20]	Speed: 39824.18 samples/sec	accuracy=nan
2023-03-22 23:52:42,396 Node[0] Epoch[22] Batch [20-40]	Speed: 40066.74 samples/sec	accuracy=nan
2023-03-22 23:52:44,036 Node[0] Epoch[22] Batch [40-60]	Speed: 39804.07 samples/sec	accuracy=nan
2023-03-22 23:52:45,673 Node[0] Epoch[22] Batch [60-80]	Speed: 39876.84 samples/sec	accuracy=nan
2023-03-22 23:52:47,300 Node[0] Epoch[22] Batch [80-100]	Speed: 40127.83 samples/sec	accuracy=nan
2023-03-22 23:52:48,936 Node[0] Epoch[22] Batch [100-120]	Speed: 39899.23 samples/sec	accuracy=nan
2023-03-22 23:52:50,570 Node[0] Epoch[22] Batch [120-140]	Speed: 39968.38 samples/sec	accuracy=nan
2023-03-22 23:52:52,202 Node[0] Epoch[22] Batch [140-160]	Speed: 39987.84 samples/sec	accuracy=nan
2023-03-22 23:52:53,837 Node[0] Epoch[22] Batch [160-180]	Speed: 39923.69 samples/sec	accuracy=nan
2023-03-22 23:52:55,467 Node[0] Epoch[22] Batch [180-200]	Speed: 40055.93 samples/sec	accuracy=nan
2023-03-22 23:52:57,104 Node[0] Epoch[22] Batch [200-220]	Speed: 39866.08 samples/sec	accuracy=nan
2023-03-22 23:52:58,743 Node[0] Epoch[22] Batch [220-240]	Speed: 39834.49 samples/sec	accuracy=nan
2023-03-22 23:53:00,378 Node[0] Epoch[22] Batch [240-260]	Speed: 39942.81 samples/sec	accuracy=nan
2023-03-22 23:53:02,011 Node[0] Epoch[22] Batch [260-280]	Speed: 39967.09 samples/sec	accuracy=nan
2023-03-22 23:53:03,642 Node[0] Epoch[22] Batch [280-300]	Speed: 40017.29 samples/sec	accuracy=nan
2023-03-22 23:53:05,278 Node[0] Epoch[22] Batch [300-320]	Speed: 39902.10 samples/sec	accuracy=nan
2023-03-22 23:53:06,916 Node[0] Epoch[22] Batch [320-340]	Speed: 39871.06 samples/sec	accuracy=nan
2023-03-22 23:53:08,549 Node[0] Epoch[22] Batch [340-360]	Speed: 39950.78 samples/sec	accuracy=nan
2023-03-22 23:53:10,186 Node[0] Epoch[22] Batch [360-380]	Speed: 39882.70 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679547191083, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-22 23:53:11,084 Node[0] Epoch[22] Time cost=32.037
:::MLLOG {"namespace": "", "time_ms": 1679547191084, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39990.615821833395}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679547191161, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-22 23:53:11,919 Node[0] Epoch[22] Validation-accuracy=0.686080
2023-03-22 23:53:11,919 Node[0] Epoch[22] Validation-correct-count=2144.000000
2023-03-22 23:53:11,919 Node[0] Epoch[22] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679547192008, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679547192008, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.6931, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679547192008, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679547192008, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-22 23:53:12,008 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:12,008 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:12,008 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:12,008 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:12,008 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:12,008 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:12,008 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:12,008 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:12,008 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:12,008 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:12,008 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:12,008 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547192009, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-22 23:53:12,008 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:12,008 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:12,008 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:12,009 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:13,656 Node[0] Epoch[23] Batch [0-20]	Speed: 39810.94 samples/sec	accuracy=nan
2023-03-22 23:53:15,292 Node[0] Epoch[23] Batch [20-40]	Speed: 39916.51 samples/sec	accuracy=nan
2023-03-22 23:53:16,925 Node[0] Epoch[23] Batch [40-60]	Speed: 39967.69 samples/sec	accuracy=nan
2023-03-22 23:53:18,557 Node[0] Epoch[23] Batch [60-80]	Speed: 39993.29 samples/sec	accuracy=nan
2023-03-22 23:53:20,190 Node[0] Epoch[23] Batch [80-100]	Speed: 39987.25 samples/sec	accuracy=nan
2023-03-22 23:53:21,823 Node[0] Epoch[23] Batch [100-120]	Speed: 39960.27 samples/sec	accuracy=nan
2023-03-22 23:53:23,453 Node[0] Epoch[23] Batch [120-140]	Speed: 40066.46 samples/sec	accuracy=nan
2023-03-22 23:53:25,090 Node[0] Epoch[23] Batch [140-160]	Speed: 39881.55 samples/sec	accuracy=nan
2023-03-22 23:53:26,724 Node[0] Epoch[23] Batch [160-180]	Speed: 39932.45 samples/sec	accuracy=nan
2023-03-22 23:53:28,354 Node[0] Epoch[23] Batch [180-200]	Speed: 40047.28 samples/sec	accuracy=nan
2023-03-22 23:53:29,988 Node[0] Epoch[23] Batch [200-220]	Speed: 39972.86 samples/sec	accuracy=nan
2023-03-22 23:53:31,622 Node[0] Epoch[23] Batch [220-240]	Speed: 39930.55 samples/sec	accuracy=nan
2023-03-22 23:53:33,256 Node[0] Epoch[23] Batch [240-260]	Speed: 39964.59 samples/sec	accuracy=nan
2023-03-22 23:53:34,888 Node[0] Epoch[23] Batch [260-280]	Speed: 39996.54 samples/sec	accuracy=nan
2023-03-22 23:53:36,524 Node[0] Epoch[23] Batch [280-300]	Speed: 39889.19 samples/sec	accuracy=nan
2023-03-22 23:53:38,157 Node[0] Epoch[23] Batch [300-320]	Speed: 39996.96 samples/sec	accuracy=nan
2023-03-22 23:53:39,790 Node[0] Epoch[23] Batch [320-340]	Speed: 39975.45 samples/sec	accuracy=nan
2023-03-22 23:53:41,424 Node[0] Epoch[23] Batch [340-360]	Speed: 39947.44 samples/sec	accuracy=nan
2023-03-22 23:53:43,059 Node[0] Epoch[23] Batch [360-380]	Speed: 39910.04 samples/sec	accuracy=nan
2023-03-22 23:53:44,038 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:44,038 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:44,038 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:44,038 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:44,038 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:44,039 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:44,039 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:44,038 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:44,039 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:44,039 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:44,039 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:44,039 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:44,039 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547224039, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-22 23:53:44,040 Node[0] Epoch[23] Time cost=32.031
:::MLLOG {"namespace": "", "time_ms": 1679547224040, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39997.864882284026}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
2023-03-22 23:53:44,040 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:44,040 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547224040, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-22 23:53:44,040 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:53:45,754 Node[0] Epoch[24] Batch [0-20]	Speed: 39978.94 samples/sec	accuracy=nan
2023-03-22 23:53:47,387 Node[0] Epoch[24] Batch [20-40]	Speed: 39962.67 samples/sec	accuracy=nan
2023-03-22 23:53:49,020 Node[0] Epoch[24] Batch [40-60]	Speed: 39975.47 samples/sec	accuracy=nan
2023-03-22 23:53:50,656 Node[0] Epoch[24] Batch [60-80]	Speed: 39921.63 samples/sec	accuracy=nan
2023-03-22 23:53:52,284 Node[0] Epoch[24] Batch [80-100]	Speed: 40081.73 samples/sec	accuracy=nan
2023-03-22 23:53:53,922 Node[0] Epoch[24] Batch [100-120]	Speed: 39868.56 samples/sec	accuracy=nan
2023-03-22 23:53:55,554 Node[0] Epoch[24] Batch [120-140]	Speed: 39986.89 samples/sec	accuracy=nan
2023-03-22 23:53:57,190 Node[0] Epoch[24] Batch [140-160]	Speed: 39905.86 samples/sec	accuracy=nan
2023-03-22 23:53:58,827 Node[0] Epoch[24] Batch [160-180]	Speed: 39887.50 samples/sec	accuracy=nan
2023-03-22 23:54:00,457 Node[0] Epoch[24] Batch [180-200]	Speed: 40050.15 samples/sec	accuracy=nan
2023-03-22 23:54:02,090 Node[0] Epoch[24] Batch [200-220]	Speed: 39962.35 samples/sec	accuracy=nan
2023-03-22 23:54:03,729 Node[0] Epoch[24] Batch [220-240]	Speed: 39842.03 samples/sec	accuracy=nan
2023-03-22 23:54:05,364 Node[0] Epoch[24] Batch [240-260]	Speed: 39926.39 samples/sec	accuracy=nan
2023-03-22 23:54:06,999 Node[0] Epoch[24] Batch [260-280]	Speed: 39928.48 samples/sec	accuracy=nan
2023-03-22 23:54:08,632 Node[0] Epoch[24] Batch [280-300]	Speed: 39964.65 samples/sec	accuracy=nan
2023-03-22 23:54:10,269 Node[0] Epoch[24] Batch [300-320]	Speed: 39876.32 samples/sec	accuracy=nan
2023-03-22 23:54:11,904 Node[0] Epoch[24] Batch [320-340]	Speed: 39936.28 samples/sec	accuracy=nan
2023-03-22 23:54:13,538 Node[0] Epoch[24] Batch [340-360]	Speed: 39949.68 samples/sec	accuracy=nan
2023-03-22 23:54:15,173 Node[0] Epoch[24] Batch [360-380]	Speed: 39913.63 samples/sec	accuracy=nan
2023-03-22 23:54:16,074 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:16,074 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:16,074 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:16,074 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:16,074 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:16,074 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:16,074 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:16,074 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:16,074 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:16,075 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:16,074 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:16,075 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:16,075 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:16,075 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547256075, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-22 23:54:16,075 Node[0] Epoch[24] Time cost=32.035
:::MLLOG {"namespace": "", "time_ms": 1679547256076, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39992.52985663921}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679547256076, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-22 23:54:16,076 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:16,076 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:17,794 Node[0] Epoch[25] Batch [0-20]	Speed: 39943.95 samples/sec	accuracy=nan
2023-03-22 23:54:19,425 Node[0] Epoch[25] Batch [20-40]	Speed: 40010.74 samples/sec	accuracy=nan
2023-03-22 23:54:21,061 Node[0] Epoch[25] Batch [40-60]	Speed: 39912.43 samples/sec	accuracy=nan
2023-03-22 23:54:22,697 Node[0] Epoch[25] Batch [60-80]	Speed: 39896.77 samples/sec	accuracy=nan
2023-03-22 23:54:24,333 Node[0] Epoch[25] Batch [80-100]	Speed: 39909.26 samples/sec	accuracy=nan
2023-03-22 23:54:25,967 Node[0] Epoch[25] Batch [100-120]	Speed: 39942.29 samples/sec	accuracy=nan
2023-03-22 23:54:27,600 Node[0] Epoch[25] Batch [120-140]	Speed: 39970.45 samples/sec	accuracy=nan
2023-03-22 23:54:29,236 Node[0] Epoch[25] Batch [140-160]	Speed: 39926.74 samples/sec	accuracy=nan
2023-03-22 23:54:30,872 Node[0] Epoch[25] Batch [160-180]	Speed: 39887.78 samples/sec	accuracy=nan
2023-03-22 23:54:32,508 Node[0] Epoch[25] Batch [180-200]	Speed: 39908.36 samples/sec	accuracy=nan
2023-03-22 23:54:34,138 Node[0] Epoch[25] Batch [200-220]	Speed: 40046.58 samples/sec	accuracy=nan
2023-03-22 23:54:35,772 Node[0] Epoch[25] Batch [220-240]	Speed: 39938.11 samples/sec	accuracy=nan
2023-03-22 23:54:37,409 Node[0] Epoch[25] Batch [240-260]	Speed: 39879.47 samples/sec	accuracy=nan
2023-03-22 23:54:39,047 Node[0] Epoch[25] Batch [260-280]	Speed: 39871.83 samples/sec	accuracy=nan
2023-03-22 23:54:40,678 Node[0] Epoch[25] Batch [280-300]	Speed: 40026.17 samples/sec	accuracy=nan
2023-03-22 23:54:42,309 Node[0] Epoch[25] Batch [300-320]	Speed: 40015.60 samples/sec	accuracy=nan
2023-03-22 23:54:43,949 Node[0] Epoch[25] Batch [320-340]	Speed: 39808.65 samples/sec	accuracy=nan
2023-03-22 23:54:45,585 Node[0] Epoch[25] Batch [340-360]	Speed: 39903.67 samples/sec	accuracy=nan
2023-03-22 23:54:47,219 Node[0] Epoch[25] Batch [360-380]	Speed: 39942.53 samples/sec	accuracy=nan
2023-03-22 23:54:48,198 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:48,198 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:48,198 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:48,198 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:48,198 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:48,199 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:48,199 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:48,199 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:48,199 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:48,199 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:48,199 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:48,199 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:48,199 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547288199, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-22 23:54:48,199 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:48,200 Node[0] Epoch[25] Time cost=32.124
2023-03-22 23:54:48,199 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547288200, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39882.49570109371}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679547288200, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-22 23:54:48,200 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:54:49,917 Node[0] Epoch[26] Batch [0-20]	Speed: 39899.11 samples/sec	accuracy=nan
2023-03-22 23:54:51,546 Node[0] Epoch[26] Batch [20-40]	Speed: 40069.33 samples/sec	accuracy=nan
2023-03-22 23:54:53,186 Node[0] Epoch[26] Batch [40-60]	Speed: 39814.22 samples/sec	accuracy=nan
2023-03-22 23:54:54,822 Node[0] Epoch[26] Batch [60-80]	Speed: 39901.56 samples/sec	accuracy=nan
2023-03-22 23:54:56,457 Node[0] Epoch[26] Batch [80-100]	Speed: 39912.58 samples/sec	accuracy=nan
2023-03-22 23:54:58,091 Node[0] Epoch[26] Batch [100-120]	Speed: 39954.65 samples/sec	accuracy=nan
2023-03-22 23:54:59,727 Node[0] Epoch[26] Batch [120-140]	Speed: 39898.97 samples/sec	accuracy=nan
2023-03-22 23:55:01,364 Node[0] Epoch[26] Batch [140-160]	Speed: 39880.98 samples/sec	accuracy=nan
2023-03-22 23:55:02,995 Node[0] Epoch[26] Batch [160-180]	Speed: 40027.84 samples/sec	accuracy=nan
2023-03-22 23:55:04,631 Node[0] Epoch[26] Batch [180-200]	Speed: 39911.36 samples/sec	accuracy=nan
2023-03-22 23:55:06,268 Node[0] Epoch[26] Batch [200-220]	Speed: 39867.19 samples/sec	accuracy=nan
2023-03-22 23:55:07,906 Node[0] Epoch[26] Batch [220-240]	Speed: 39864.85 samples/sec	accuracy=nan
2023-03-22 23:55:09,533 Node[0] Epoch[26] Batch [240-260]	Speed: 40105.54 samples/sec	accuracy=nan
2023-03-22 23:55:11,163 Node[0] Epoch[26] Batch [260-280]	Speed: 40046.14 samples/sec	accuracy=nan
2023-03-22 23:55:12,799 Node[0] Epoch[26] Batch [280-300]	Speed: 39902.40 samples/sec	accuracy=nan
2023-03-22 23:55:14,439 Node[0] Epoch[26] Batch [300-320]	Speed: 39819.67 samples/sec	accuracy=nan
2023-03-22 23:55:16,077 Node[0] Epoch[26] Batch [320-340]	Speed: 39860.45 samples/sec	accuracy=nan
2023-03-22 23:55:17,707 Node[0] Epoch[26] Batch [340-360]	Speed: 40028.50 samples/sec	accuracy=nan
2023-03-22 23:55:19,341 Node[0] Epoch[26] Batch [360-380]	Speed: 39963.44 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679547320241, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-22 23:55:20,242 Node[0] Epoch[26] Time cost=32.042
:::MLLOG {"namespace": "", "time_ms": 1679547320242, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39984.24407003119}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679547320319, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-22 23:55:21,031 Node[0] Epoch[26] Validation-accuracy=0.731840
2023-03-22 23:55:21,031 Node[0] Epoch[26] Validation-correct-count=2287.000000
2023-03-22 23:55:21,031 Node[0] Epoch[26] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679547321153, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679547321153, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72346, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679547321153, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
2023-03-22 23:55:21,153 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547321153, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-22 23:55:21,153 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:21,153 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:21,153 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:21,153 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:21,153 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:21,153 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:21,153 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:21,153 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:21,153 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:21,153 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:21,153 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:21,153 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547321153, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-22 23:55:21,153 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:21,153 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:21,153 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:22,793 Node[0] Epoch[27] Batch [0-20]	Speed: 39984.12 samples/sec	accuracy=nan
2023-03-22 23:55:24,430 Node[0] Epoch[27] Batch [20-40]	Speed: 39880.47 samples/sec	accuracy=nan
2023-03-22 23:55:26,064 Node[0] Epoch[27] Batch [40-60]	Speed: 39964.34 samples/sec	accuracy=nan
2023-03-22 23:55:27,696 Node[0] Epoch[27] Batch [60-80]	Speed: 39990.29 samples/sec	accuracy=nan
2023-03-22 23:55:29,330 Node[0] Epoch[27] Batch [80-100]	Speed: 39962.47 samples/sec	accuracy=nan
2023-03-22 23:55:30,965 Node[0] Epoch[27] Batch [100-120]	Speed: 39927.79 samples/sec	accuracy=nan
2023-03-22 23:55:32,594 Node[0] Epoch[27] Batch [120-140]	Speed: 40068.59 samples/sec	accuracy=nan
2023-03-22 23:55:34,225 Node[0] Epoch[27] Batch [140-160]	Speed: 40022.19 samples/sec	accuracy=nan
2023-03-22 23:55:35,860 Node[0] Epoch[27] Batch [160-180]	Speed: 39919.19 samples/sec	accuracy=nan
2023-03-22 23:55:37,495 Node[0] Epoch[27] Batch [180-200]	Speed: 39929.09 samples/sec	accuracy=nan
2023-03-22 23:55:39,129 Node[0] Epoch[27] Batch [200-220]	Speed: 39960.57 samples/sec	accuracy=nan
2023-03-22 23:55:40,758 Node[0] Epoch[27] Batch [220-240]	Speed: 40058.04 samples/sec	accuracy=nan
2023-03-22 23:55:42,396 Node[0] Epoch[27] Batch [240-260]	Speed: 39869.80 samples/sec	accuracy=nan
2023-03-22 23:55:44,031 Node[0] Epoch[27] Batch [260-280]	Speed: 39919.99 samples/sec	accuracy=nan
2023-03-22 23:55:45,660 Node[0] Epoch[27] Batch [280-300]	Speed: 40059.63 samples/sec	accuracy=nan
2023-03-22 23:55:47,296 Node[0] Epoch[27] Batch [300-320]	Speed: 39921.19 samples/sec	accuracy=nan
2023-03-22 23:55:48,933 Node[0] Epoch[27] Batch [320-340]	Speed: 39882.64 samples/sec	accuracy=nan
2023-03-22 23:55:50,561 Node[0] Epoch[27] Batch [340-360]	Speed: 40098.21 samples/sec	accuracy=nan
2023-03-22 23:55:52,196 Node[0] Epoch[27] Batch [360-380]	Speed: 39915.06 samples/sec	accuracy=nan
2023-03-22 23:55:53,176 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:53,176 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:53,176 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:53,176 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:53,176 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:53,176 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:53,176 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:53,177 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:53,176 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:53,177 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:53,177 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:53,177 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:53,177 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:53,177 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547353176, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-22 23:55:53,177 Node[0] Epoch[27] Time cost=32.024
:::MLLOG {"namespace": "", "time_ms": 1679547353177, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40006.485435303875}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
2023-03-22 23:55:53,178 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547353178, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-22 23:55:53,178 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:55:54,893 Node[0] Epoch[28] Batch [0-20]	Speed: 39975.34 samples/sec	accuracy=nan
2023-03-22 23:55:56,525 Node[0] Epoch[28] Batch [20-40]	Speed: 39990.18 samples/sec	accuracy=nan
2023-03-22 23:55:58,160 Node[0] Epoch[28] Batch [40-60]	Speed: 39929.10 samples/sec	accuracy=nan
2023-03-22 23:55:59,789 Node[0] Epoch[28] Batch [60-80]	Speed: 40081.25 samples/sec	accuracy=nan
2023-03-22 23:56:01,428 Node[0] Epoch[28] Batch [80-100]	Speed: 39830.27 samples/sec	accuracy=nan
2023-03-22 23:56:03,059 Node[0] Epoch[28] Batch [100-120]	Speed: 40007.93 samples/sec	accuracy=nan
2023-03-22 23:56:04,691 Node[0] Epoch[28] Batch [120-140]	Speed: 40004.76 samples/sec	accuracy=nan
2023-03-22 23:56:06,329 Node[0] Epoch[28] Batch [140-160]	Speed: 39866.41 samples/sec	accuracy=nan
2023-03-22 23:56:07,967 Node[0] Epoch[28] Batch [160-180]	Speed: 39858.54 samples/sec	accuracy=nan
2023-03-22 23:56:09,599 Node[0] Epoch[28] Batch [180-200]	Speed: 39992.48 samples/sec	accuracy=nan
2023-03-22 23:56:11,235 Node[0] Epoch[28] Batch [200-220]	Speed: 39897.49 samples/sec	accuracy=nan
2023-03-22 23:56:12,870 Node[0] Epoch[28] Batch [220-240]	Speed: 39919.71 samples/sec	accuracy=nan
2023-03-22 23:56:14,498 Node[0] Epoch[28] Batch [240-260]	Speed: 40115.07 samples/sec	accuracy=nan
2023-03-22 23:56:16,134 Node[0] Epoch[28] Batch [260-280]	Speed: 39890.99 samples/sec	accuracy=nan
2023-03-22 23:56:17,767 Node[0] Epoch[28] Batch [280-300]	Speed: 39986.09 samples/sec	accuracy=nan
2023-03-22 23:56:19,399 Node[0] Epoch[28] Batch [300-320]	Speed: 40002.34 samples/sec	accuracy=nan
2023-03-22 23:56:21,035 Node[0] Epoch[28] Batch [320-340]	Speed: 39885.51 samples/sec	accuracy=nan
2023-03-22 23:56:22,669 Node[0] Epoch[28] Batch [340-360]	Speed: 39955.71 samples/sec	accuracy=nan
2023-03-22 23:56:24,301 Node[0] Epoch[28] Batch [360-380]	Speed: 40011.28 samples/sec	accuracy=nan
2023-03-22 23:56:25,202 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:25,202 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:25,202 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:25,202 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:25,203 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:25,203 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:25,203 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:25,203 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:25,203 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:25,203 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:25,203 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:25,203 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:25,203 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:25,203 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547385203, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-22 23:56:25,204 Node[0] Epoch[28] Time cost=32.026
:::MLLOG {"namespace": "", "time_ms": 1679547385204, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40004.33568166565}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
2023-03-22 23:56:25,204 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547385204, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-22 23:56:25,204 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:26,921 Node[0] Epoch[29] Batch [0-20]	Speed: 39974.11 samples/sec	accuracy=nan
2023-03-22 23:56:28,556 Node[0] Epoch[29] Batch [20-40]	Speed: 39924.79 samples/sec	accuracy=nan
2023-03-22 23:56:30,189 Node[0] Epoch[29] Batch [40-60]	Speed: 39983.37 samples/sec	accuracy=nan
2023-03-22 23:56:31,823 Node[0] Epoch[29] Batch [60-80]	Speed: 39943.89 samples/sec	accuracy=nan
2023-03-22 23:56:33,459 Node[0] Epoch[29] Batch [80-100]	Speed: 39909.12 samples/sec	accuracy=nan
2023-03-22 23:56:35,095 Node[0] Epoch[29] Batch [100-120]	Speed: 39902.99 samples/sec	accuracy=nan
2023-03-22 23:56:36,725 Node[0] Epoch[29] Batch [120-140]	Speed: 40043.58 samples/sec	accuracy=nan
2023-03-22 23:56:38,357 Node[0] Epoch[29] Batch [140-160]	Speed: 39988.71 samples/sec	accuracy=nan
2023-03-22 23:56:39,992 Node[0] Epoch[29] Batch [160-180]	Speed: 39930.80 samples/sec	accuracy=nan
2023-03-22 23:56:41,628 Node[0] Epoch[29] Batch [180-200]	Speed: 39913.54 samples/sec	accuracy=nan
2023-03-22 23:56:43,264 Node[0] Epoch[29] Batch [200-220]	Speed: 39900.56 samples/sec	accuracy=nan
2023-03-22 23:56:44,904 Node[0] Epoch[29] Batch [220-240]	Speed: 39806.51 samples/sec	accuracy=nan
2023-03-22 23:56:46,535 Node[0] Epoch[29] Batch [240-260]	Speed: 40025.41 samples/sec	accuracy=nan
2023-03-22 23:56:48,171 Node[0] Epoch[29] Batch [260-280]	Speed: 39899.86 samples/sec	accuracy=nan
2023-03-22 23:56:49,808 Node[0] Epoch[29] Batch [280-300]	Speed: 39884.11 samples/sec	accuracy=nan
2023-03-22 23:56:51,444 Node[0] Epoch[29] Batch [300-320]	Speed: 39898.64 samples/sec	accuracy=nan
2023-03-22 23:56:53,076 Node[0] Epoch[29] Batch [320-340]	Speed: 39999.71 samples/sec	accuracy=nan
2023-03-22 23:56:54,710 Node[0] Epoch[29] Batch [340-360]	Speed: 39953.42 samples/sec	accuracy=nan
2023-03-22 23:56:56,345 Node[0] Epoch[29] Batch [360-380]	Speed: 39912.26 samples/sec	accuracy=nan
2023-03-22 23:56:57,324 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:57,324 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:57,324 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:57,324 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:57,324 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:57,324 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:57,324 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:57,324 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:57,324 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:57,324 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:57,324 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:57,325 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:57,325 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547417324, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-22 23:56:57,325 Node[0] Epoch[29] Time cost=32.121
:::MLLOG {"namespace": "", "time_ms": 1679547417325, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39885.580311453785}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
2023-03-22 23:56:57,325 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:57,325 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547417326, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-22 23:56:57,326 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:56:59,040 Node[0] Epoch[30] Batch [0-20]	Speed: 39985.30 samples/sec	accuracy=nan
2023-03-22 23:57:00,676 Node[0] Epoch[30] Batch [20-40]	Speed: 39910.22 samples/sec	accuracy=nan
2023-03-22 23:57:02,312 Node[0] Epoch[30] Batch [40-60]	Speed: 39910.70 samples/sec	accuracy=nan
2023-03-22 23:57:03,938 Node[0] Epoch[30] Batch [60-80]	Speed: 40129.47 samples/sec	accuracy=nan
2023-03-22 23:57:05,575 Node[0] Epoch[30] Batch [80-100]	Speed: 39885.74 samples/sec	accuracy=nan
2023-03-22 23:57:07,212 Node[0] Epoch[30] Batch [100-120]	Speed: 39884.86 samples/sec	accuracy=nan
2023-03-22 23:57:08,843 Node[0] Epoch[30] Batch [120-140]	Speed: 40017.23 samples/sec	accuracy=nan
2023-03-22 23:57:10,480 Node[0] Epoch[30] Batch [140-160]	Speed: 39886.73 samples/sec	accuracy=nan
2023-03-22 23:57:12,116 Node[0] Epoch[30] Batch [160-180]	Speed: 39886.91 samples/sec	accuracy=nan
2023-03-22 23:57:13,754 Node[0] Epoch[30] Batch [180-200]	Speed: 39862.23 samples/sec	accuracy=nan
2023-03-22 23:57:15,389 Node[0] Epoch[30] Batch [200-220]	Speed: 39924.69 samples/sec	accuracy=nan
2023-03-22 23:57:17,026 Node[0] Epoch[30] Batch [220-240]	Speed: 39875.45 samples/sec	accuracy=nan
2023-03-22 23:57:18,657 Node[0] Epoch[30] Batch [240-260]	Speed: 40036.46 samples/sec	accuracy=nan
2023-03-22 23:57:20,291 Node[0] Epoch[30] Batch [260-280]	Speed: 39958.06 samples/sec	accuracy=nan
2023-03-22 23:57:21,926 Node[0] Epoch[30] Batch [280-300]	Speed: 39925.53 samples/sec	accuracy=nan
2023-03-22 23:57:23,555 Node[0] Epoch[30] Batch [300-320]	Speed: 40056.98 samples/sec	accuracy=nan
2023-03-22 23:57:25,191 Node[0] Epoch[30] Batch [320-340]	Speed: 39898.88 samples/sec	accuracy=nan
2023-03-22 23:57:26,821 Node[0] Epoch[30] Batch [340-360]	Speed: 40058.32 samples/sec	accuracy=nan
2023-03-22 23:57:28,457 Node[0] Epoch[30] Batch [360-380]	Speed: 39896.32 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679547449354, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-22 23:57:29,355 Node[0] Epoch[30] Time cost=32.029
:::MLLOG {"namespace": "", "time_ms": 1679547449355, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39999.8364811198}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679547449433, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-22 23:57:30,167 Node[0] Epoch[30] Validation-accuracy=0.734720
2023-03-22 23:57:30,168 Node[0] Epoch[30] Validation-correct-count=2296.000000
2023-03-22 23:57:30,168 Node[0] Epoch[30] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679547450268, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
2023-03-22 23:57:30,268 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:57:30,268 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:57:30,268 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547450269, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75004, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679547450269, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
2023-03-22 23:57:30,268 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547450269, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-22 23:57:30,268 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:57:30,268 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:57:30,268 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:57:30,268 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:57:30,268 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:57:30,268 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:57:30,269 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:57:30,269 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:57:30,269 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:57:30,269 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:57:30,269 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547450269, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-22 23:57:30,269 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:57:31,914 Node[0] Epoch[31] Batch [0-20]	Speed: 39986.03 samples/sec	accuracy=nan
2023-03-22 23:57:33,548 Node[0] Epoch[31] Batch [20-40]	Speed: 39939.24 samples/sec	accuracy=nan
2023-03-22 23:57:35,182 Node[0] Epoch[31] Batch [40-60]	Speed: 39961.53 samples/sec	accuracy=nan
2023-03-22 23:57:36,810 Node[0] Epoch[31] Batch [60-80]	Speed: 40091.95 samples/sec	accuracy=nan
2023-03-22 23:57:38,445 Node[0] Epoch[31] Batch [80-100]	Speed: 39924.90 samples/sec	accuracy=nan
2023-03-22 23:57:40,078 Node[0] Epoch[31] Batch [100-120]	Speed: 39971.83 samples/sec	accuracy=nan
2023-03-22 23:57:41,708 Node[0] Epoch[31] Batch [120-140]	Speed: 40049.48 samples/sec	accuracy=nan
2023-03-22 23:57:43,344 Node[0] Epoch[31] Batch [140-160]	Speed: 39912.45 samples/sec	accuracy=nan
2023-03-22 23:57:44,980 Node[0] Epoch[31] Batch [160-180]	Speed: 39881.22 samples/sec	accuracy=nan
2023-03-22 23:57:46,612 Node[0] Epoch[31] Batch [180-200]	Speed: 40015.97 samples/sec	accuracy=nan
2023-03-22 23:57:48,245 Node[0] Epoch[31] Batch [200-220]	Speed: 39977.73 samples/sec	accuracy=nan
2023-03-22 23:57:49,880 Node[0] Epoch[31] Batch [220-240]	Speed: 39920.71 samples/sec	accuracy=nan
2023-03-22 23:57:51,516 Node[0] Epoch[31] Batch [240-260]	Speed: 39896.34 samples/sec	accuracy=nan
2023-03-22 23:57:53,153 Node[0] Epoch[31] Batch [260-280]	Speed: 39875.12 samples/sec	accuracy=nan
2023-03-22 23:57:54,791 Node[0] Epoch[31] Batch [280-300]	Speed: 39875.58 samples/sec	accuracy=nan
2023-03-22 23:57:56,421 Node[0] Epoch[31] Batch [300-320]	Speed: 40047.68 samples/sec	accuracy=nan
2023-03-22 23:57:58,053 Node[0] Epoch[31] Batch [320-340]	Speed: 39986.14 samples/sec	accuracy=nan
2023-03-22 23:57:59,690 Node[0] Epoch[31] Batch [340-360]	Speed: 39869.82 samples/sec	accuracy=nan
2023-03-22 23:58:01,327 Node[0] Epoch[31] Batch [360-380]	Speed: 39878.10 samples/sec	accuracy=nan
2023-03-22 23:58:02,304 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:02,304 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:02,305 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:02,305 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:02,305 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:02,305 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:02,305 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:02,305 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:02,305 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:02,305 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:02,305 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:02,305 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:02,305 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:02,305 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:02,305 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547482305, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-22 23:58:02,306 Node[0] Epoch[31] Time cost=32.037
:::MLLOG {"namespace": "", "time_ms": 1679547482306, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39990.220299308756}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679547482307, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-22 23:58:02,307 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:04,023 Node[0] Epoch[32] Batch [0-20]	Speed: 39903.76 samples/sec	accuracy=nan
2023-03-22 23:58:05,657 Node[0] Epoch[32] Batch [20-40]	Speed: 39954.47 samples/sec	accuracy=nan
2023-03-22 23:58:07,289 Node[0] Epoch[32] Batch [40-60]	Speed: 39991.00 samples/sec	accuracy=nan
2023-03-22 23:58:08,923 Node[0] Epoch[32] Batch [60-80]	Speed: 39943.51 samples/sec	accuracy=nan
2023-03-22 23:58:10,561 Node[0] Epoch[32] Batch [80-100]	Speed: 39853.91 samples/sec	accuracy=nan
2023-03-22 23:58:12,199 Node[0] Epoch[32] Batch [100-120]	Speed: 39874.95 samples/sec	accuracy=nan
2023-03-22 23:58:13,830 Node[0] Epoch[32] Batch [120-140]	Speed: 40012.70 samples/sec	accuracy=nan
2023-03-22 23:58:15,465 Node[0] Epoch[32] Batch [140-160]	Speed: 39935.42 samples/sec	accuracy=nan
2023-03-22 23:58:17,097 Node[0] Epoch[32] Batch [160-180]	Speed: 39985.34 samples/sec	accuracy=nan
2023-03-22 23:58:18,734 Node[0] Epoch[32] Batch [180-200]	Speed: 39886.32 samples/sec	accuracy=nan
2023-03-22 23:58:20,368 Node[0] Epoch[32] Batch [200-220]	Speed: 39955.31 samples/sec	accuracy=nan
2023-03-22 23:58:22,007 Node[0] Epoch[32] Batch [220-240]	Speed: 39812.60 samples/sec	accuracy=nan
2023-03-22 23:58:23,647 Node[0] Epoch[32] Batch [240-260]	Speed: 39809.94 samples/sec	accuracy=nan
2023-03-22 23:58:25,275 Node[0] Epoch[32] Batch [260-280]	Speed: 40092.67 samples/sec	accuracy=nan
2023-03-22 23:58:26,915 Node[0] Epoch[32] Batch [280-300]	Speed: 39803.37 samples/sec	accuracy=nan
2023-03-22 23:58:28,551 Node[0] Epoch[32] Batch [300-320]	Speed: 39905.53 samples/sec	accuracy=nan
2023-03-22 23:58:30,181 Node[0] Epoch[32] Batch [320-340]	Speed: 40063.50 samples/sec	accuracy=nan
2023-03-22 23:58:31,816 Node[0] Epoch[32] Batch [340-360]	Speed: 39920.63 samples/sec	accuracy=nan
2023-03-22 23:58:33,454 Node[0] Epoch[32] Batch [360-380]	Speed: 39865.62 samples/sec	accuracy=nan
2023-03-22 23:58:34,345 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:34,345 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:34,345 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:34,345 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:34,345 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:34,345 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:34,345 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:34,345 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:34,346 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:34,346 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:34,345 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:34,346 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:34,346 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:34,346 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:34,346 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547514346, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-22 23:58:34,347 Node[0] Epoch[32] Time cost=32.040
:::MLLOG {"namespace": "", "time_ms": 1679547514347, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39986.648451393216}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679547514347, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-22 23:58:34,348 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:58:36,066 Node[0] Epoch[33] Batch [0-20]	Speed: 39916.87 samples/sec	accuracy=nan
2023-03-22 23:58:37,701 Node[0] Epoch[33] Batch [20-40]	Speed: 39915.19 samples/sec	accuracy=nan
2023-03-22 23:58:39,335 Node[0] Epoch[33] Batch [40-60]	Speed: 39953.42 samples/sec	accuracy=nan
2023-03-22 23:58:40,970 Node[0] Epoch[33] Batch [60-80]	Speed: 39920.30 samples/sec	accuracy=nan
2023-03-22 23:58:42,606 Node[0] Epoch[33] Batch [80-100]	Speed: 39908.56 samples/sec	accuracy=nan
2023-03-22 23:58:44,241 Node[0] Epoch[33] Batch [100-120]	Speed: 39920.66 samples/sec	accuracy=nan
2023-03-22 23:58:45,874 Node[0] Epoch[33] Batch [120-140]	Speed: 39976.69 samples/sec	accuracy=nan
2023-03-22 23:58:47,507 Node[0] Epoch[33] Batch [140-160]	Speed: 39970.06 samples/sec	accuracy=nan
2023-03-22 23:58:49,142 Node[0] Epoch[33] Batch [160-180]	Speed: 39921.83 samples/sec	accuracy=nan
2023-03-22 23:58:50,779 Node[0] Epoch[33] Batch [180-200]	Speed: 39899.41 samples/sec	accuracy=nan
2023-03-22 23:58:52,412 Node[0] Epoch[33] Batch [200-220]	Speed: 39968.80 samples/sec	accuracy=nan
2023-03-22 23:58:54,049 Node[0] Epoch[33] Batch [220-240]	Speed: 39872.82 samples/sec	accuracy=nan
2023-03-22 23:58:55,683 Node[0] Epoch[33] Batch [240-260]	Speed: 39942.54 samples/sec	accuracy=nan
2023-03-22 23:58:57,317 Node[0] Epoch[33] Batch [260-280]	Speed: 39950.70 samples/sec	accuracy=nan
2023-03-22 23:58:58,954 Node[0] Epoch[33] Batch [280-300]	Speed: 39880.58 samples/sec	accuracy=nan
2023-03-22 23:59:00,588 Node[0] Epoch[33] Batch [300-320]	Speed: 39969.46 samples/sec	accuracy=nan
2023-03-22 23:59:02,222 Node[0] Epoch[33] Batch [320-340]	Speed: 39937.93 samples/sec	accuracy=nan
2023-03-22 23:59:03,856 Node[0] Epoch[33] Batch [340-360]	Speed: 39943.61 samples/sec	accuracy=nan
2023-03-22 23:59:05,491 Node[0] Epoch[33] Batch [360-380]	Speed: 39928.06 samples/sec	accuracy=nan
2023-03-22 23:59:06,473 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:59:06,473 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:59:06,473 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:59:06,473 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:59:06,473 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:59:06,473 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:59:06,473 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:59:06,473 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:59:06,473 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:59:06,473 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:59:06,473 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:59:06,474 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:59:06,473 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:59:06,473 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:59:06,474 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547546473, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-22 23:59:06,474 Node[0] Epoch[33] Time cost=32.127
:::MLLOG {"namespace": "", "time_ms": 1679547546474, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39878.4535709079}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679547546475, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-22 23:59:06,475 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:59:08,187 Node[0] Epoch[34] Batch [0-20]	Speed: 40040.71 samples/sec	accuracy=nan
2023-03-22 23:59:09,822 Node[0] Epoch[34] Batch [20-40]	Speed: 39913.61 samples/sec	accuracy=nan
2023-03-22 23:59:11,458 Node[0] Epoch[34] Batch [40-60]	Speed: 39923.59 samples/sec	accuracy=nan
2023-03-22 23:59:13,093 Node[0] Epoch[34] Batch [60-80]	Speed: 39911.46 samples/sec	accuracy=nan
2023-03-22 23:59:14,724 Node[0] Epoch[34] Batch [80-100]	Speed: 40015.97 samples/sec	accuracy=nan
2023-03-22 23:59:16,361 Node[0] Epoch[34] Batch [100-120]	Speed: 39898.67 samples/sec	accuracy=nan
2023-03-22 23:59:17,994 Node[0] Epoch[34] Batch [120-140]	Speed: 39958.10 samples/sec	accuracy=nan
2023-03-22 23:59:19,623 Node[0] Epoch[34] Batch [140-160]	Speed: 40079.37 samples/sec	accuracy=nan
2023-03-22 23:59:21,258 Node[0] Epoch[34] Batch [160-180]	Speed: 39932.95 samples/sec	accuracy=nan
2023-03-22 23:59:22,893 Node[0] Epoch[34] Batch [180-200]	Speed: 39926.78 samples/sec	accuracy=nan
2023-03-22 23:59:24,522 Node[0] Epoch[34] Batch [200-220]	Speed: 40062.72 samples/sec	accuracy=nan
2023-03-22 23:59:26,158 Node[0] Epoch[34] Batch [220-240]	Speed: 39902.96 samples/sec	accuracy=nan
2023-03-22 23:59:27,788 Node[0] Epoch[34] Batch [240-260]	Speed: 40060.61 samples/sec	accuracy=nan
2023-03-22 23:59:29,423 Node[0] Epoch[34] Batch [260-280]	Speed: 39924.07 samples/sec	accuracy=nan
2023-03-22 23:59:31,055 Node[0] Epoch[34] Batch [280-300]	Speed: 39993.61 samples/sec	accuracy=nan
2023-03-22 23:59:32,686 Node[0] Epoch[34] Batch [300-320]	Speed: 40018.18 samples/sec	accuracy=nan
2023-03-22 23:59:34,320 Node[0] Epoch[34] Batch [320-340]	Speed: 39972.76 samples/sec	accuracy=nan
2023-03-22 23:59:35,949 Node[0] Epoch[34] Batch [340-360]	Speed: 40066.31 samples/sec	accuracy=nan
2023-03-22 23:59:37,588 Node[0] Epoch[34] Batch [360-380]	Speed: 39828.15 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679547578563, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-22 23:59:38,564 Node[0] Epoch[34] Time cost=32.089
:::MLLOG {"namespace": "", "time_ms": 1679547578564, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39925.36061720866}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679547578641, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-22 23:59:39,394 Node[0] Epoch[34] Validation-accuracy=0.763200
2023-03-22 23:59:39,395 Node[0] Epoch[34] Validation-correct-count=2385.000000
2023-03-22 23:59:39,395 Node[0] Epoch[34] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679547579474, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679547579475, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75976, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679547579475, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679547579475, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679547593
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:59:53 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:59:53 PM'
ENDING TIMING RUN AT 2023-03-22 11:59:53 PM
+ result=1284
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1284,root,2023-03-22 11:38:29 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1284,root,2023-03-22 11:38:29 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679547593
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:59:53 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:59:53 PM'
ENDING TIMING RUN AT 2023-03-22 11:59:53 PM
+ result=1284
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1284,root,2023-03-22 11:38:29 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1284,root,2023-03-22 11:38:29 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679547594
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:59:54 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:59:54 PM'
ENDING TIMING RUN AT 2023-03-22 11:59:54 PM
+ result=1285
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679547594
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:59:54 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:59:54 PM'
ENDING TIMING RUN AT 2023-03-22 11:59:54 PM
+ result=1285
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679547594
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:59:54 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:59:54 PM'
ENDING TIMING RUN AT 2023-03-22 11:59:54 PM
+ result=1285
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679547594
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:59:54 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:59:54 PM'
ENDING TIMING RUN AT 2023-03-22 11:59:54 PM
+ result=1285
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM'
RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679547594
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:59:54 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:59:54 PM'
ENDING TIMING RUN AT 2023-03-22 11:59:54 PM
+ result=1285
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679547594
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:59:54 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:59:54 PM'
ENDING TIMING RUN AT 2023-03-22 11:59:54 PM
+ result=1285
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM'
RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679547594
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:59:54 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:59:54 PM'
ENDING TIMING RUN AT 2023-03-22 11:59:54 PM
+ result=1285
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679547594
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:59:54 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:59:54 PM'
ENDING TIMING RUN AT 2023-03-22 11:59:54 PM
+ result=1285
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM'
RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679547594
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:59:54 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:59:54 PM'
ENDING TIMING RUN AT 2023-03-22 11:59:54 PM
+ result=1285
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679547594
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:59:54 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:59:54 PM'
ENDING TIMING RUN AT 2023-03-22 11:59:54 PM
+ result=1285
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679547594
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:59:54 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:59:54 PM'
ENDING TIMING RUN AT 2023-03-22 11:59:54 PM
+ result=1285
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM'
RESULT,IMAGE_CLASSIFICATION,,1285,root,2023-03-22 11:38:29 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679547595
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:59:55 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:59:55 PM'
ENDING TIMING RUN AT 2023-03-22 11:59:55 PM
+ result=1286
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-22 11:38:29 PM'
RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-22 11:38:29 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679547595
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:59:55 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:59:55 PM'
ENDING TIMING RUN AT 2023-03-22 11:59:55 PM
+ result=1286
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-22 11:38:29 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-22 11:38:29 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679547595
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:59:55 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:59:55 PM'
ENDING TIMING RUN AT 2023-03-22 11:59:55 PM
+ result=1286
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-22 11:38:29 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-22 11:38:29 PM'
+ export PROFILE=0
+ PROFILE=0
