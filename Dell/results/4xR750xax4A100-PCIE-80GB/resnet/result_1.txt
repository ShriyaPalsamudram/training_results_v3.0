+ echo 'Beginning trial 2 of 5'
Beginning trial 2 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node044 node045 node046 node047 '
+ echo 'hosts=node044 node045 node046 node047 '
hosts=node044 node045 node046 node047 
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679543499741, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679543499776, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679543499777, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679543499779, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679543499780, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679543512972, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679543518993, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679543519027, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679543519029, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679543519030, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679543519032, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node045 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node045
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679543530961, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679543535903, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679543535937, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679543535939, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679543535940, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679543535942, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node046 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node046
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679543547786, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679543553724, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679543553759, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679543553760, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679543553762, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679543553763, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node047 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node047
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679543565804, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=4718
+ SEED=4718
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16 singularity exec --nv -B /dev/shm/resnet/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node045: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node046: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node047: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export LR=10.5
++ LR=10.5
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export LR=10.5
++ LR=10.5
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WD=5.0e-05
++ WD=5.0e-05
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export MOM=0.9
++ MOM=0.9
++ export MOM=0.9
++ MOM=0.9
++ export WD=5.0e-05
++ WD=5.0e-05
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LARSETA=0.001
++ LARSETA=0.001
++ export MOM=0.9
++ MOM=0.9
++ export LABELSMOOTHING=0.1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LARSETA=0.001
++ LARSETA=0.001
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ date +%s
++ date +%s
+ start=1679543567
+ start=1679543567
+ start=1679543567
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 10:52:47 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:52:47 PM'
STARTING TIMING RUN AT 2023-03-22 10:52:47 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ start_fmt='2023-03-22 10:52:47 PM'
+ LABELSMOOTHING=0.1
+ start_fmt='2023-03-22 10:52:47 PM'
+ SEED=4718
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:52:47 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:52:47 PM'
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
STARTING TIMING RUN AT 2023-03-22 10:52:47 PM
STARTING TIMING RUN AT 2023-03-22 10:52:47 PM
+ readonly global_rank=0
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ readonly global_rank=0
+ global_rank=0
+ global_rank=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ readonly local_rank=0
+ local_rank=0
+ readonly local_rank=0
+ local_rank=0
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ SLURM_NTASKS_PER_NODE=4
+ SLURM_NTASKS_PER_NODE=4
+ NETWORK=resnet-v1b-stats-fl
+ OPTIMIZER=sgdwfastlars
+ OPTIMIZER=sgdwfastlars
+ BN_GROUP=1
+ PROFILE=0
+ BATCHSIZE=204
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ PROFILE_EXCEL=0
+ INPUT_BATCH_MULTIPLIER=1
+ NODALI=0
+ KVSTORE=horovod
+ KVSTORE=horovod
+ LR=10.5
+ LR=10.5
+ NUMEXAMPLES=
+ MOM=0.9
+ MOM=0.9
+ PROFILE_ALL_LOCAL_RANKS=0
+ LRSCHED=pow2
+ LRSCHED=pow2
+ THR=0.759
+ WARMUP_EPOCHS=2
+ WARMUP_EPOCHS=2
+ [[ 0 == 1 ]]
+ LARSETA=0.001
+ LARSETA=0.001
+ DATAROOT=/data
+ DALI_HW_DECODER_LOAD=0
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4718
+ echo 'running benchmark'
+ export NGPUS=4
running benchmark
+ LABELSMOOTHING=0.1
+ SEED=4718
+ EVAL_OFFSET=2
+ NGPUS=4
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ EVAL_PERIOD=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DALI_PREFETCH_QUEUE=5
+ DALI_PREFETCH_QUEUE=5
+ [[ 0 -ge 1 ]]
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE=0
+ PROFILE_EXCEL=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NODALI=0
+ NUMEXAMPLES=
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ THR=0.759
+ [[ 0 == 1 ]]
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
running benchmark
running benchmark
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ GPUS=0,1,2,3
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ GPUS=0,1,2,3
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+ start=1679543567
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 10:52:47 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:52:47 PM'
STARTING TIMING RUN AT 2023-03-22 10:52:47 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4718
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_4xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
+++ sed 's/^config_//'
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
+++ sed 's/\.sh$//'
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
+++ dirname ./config_4xR750xax4A100.sh
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++++ readlink -f ./config_4xR750xax4A100.sh
+ start=1679543567
++ date '+%Y-%m-%d %r'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ start_fmt='2023-03-22 10:52:47 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:52:47 PM'
STARTING TIMING RUN AT 2023-03-22 10:52:47 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4718
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ GPUS=0,1,2,3
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
++ date +%s
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ start=1679543567
++ date '+%Y-%m-%d %r'
+ start=1679543567
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 10:52:47 PM'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:52:47 PM'
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
STARTING TIMING RUN AT 2023-03-22 10:52:47 PM
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
+ readonly global_rank=1
+ global_rank=1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4718
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ date +%s
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+ start_fmt='2023-03-22 10:52:47 PM'
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:52:47 PM'
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
STARTING TIMING RUN AT 2023-03-22 10:52:47 PM
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+ SLURM_NTASKS_PER_NODE=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+ MOM=0.9
+ LRSCHED=pow2
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ seq 0 3
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
+ SEED=4718
+ EVAL_OFFSET=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
+ EVAL_PERIOD=4
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
++ tr '\n' ,
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
+ PROFILE=0
+ PROFILE_EXCEL=0
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
+ NODALI=0
+ NUMEXAMPLES=
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
+ PROFILE_ALL_LOCAL_RANKS=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
+ THR=0.759
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
+ [[ 0 == 1 ]]
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
+ DATAROOT=/data
+ echo 'running benchmark'
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
running benchmark
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ sed 's/,$//'
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
+ [[ 0 -ge 1 ]]
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ source ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
++ seq 0 3
+++ sed 's/^config_//'
++ tr '\n' ,
+++ sed 's/\.sh$//'
+++ dirname ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ sed 's/,$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ start=1679543567
++ date '+%Y-%m-%d %r'
+ source ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_4xR750xax4A100.sh
+ start_fmt='2023-03-22 10:52:47 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:52:47 PM'
STARTING TIMING RUN AT 2023-03-22 10:52:47 PM
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ readonly global_rank=0
+ global_rank=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+ readonly local_rank=0
+ local_rank=0
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ GPUS=0,1,2,3
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+ LABELSMOOTHING=0.1
+ SEED=4718
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+++ dirname ./config_4xR750xax4A100.sh
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
+++ dirname ./config_4xR750xax4A100.sh
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
+ [[ 0 == 1 ]]
+ DATAROOT=/data
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
+ [[ '' -ge 1 ]]
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
+ GPUS=0,1,2,3
++ tr '\n' ,
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ sed 's/,$//'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++++ readlink -f ./config_4xR750xax4A100.sh
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ date +%s
+++ dirname ./config_4xR750xax4A100.sh
++ date +%s
+++ dirname ./config_4xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+ GPUS=0,1,2,3
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+ [[ '' -ge 1 ]]
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ sed 's/^config_//'
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
+++ sed 's/^config_//'
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
+++ sed 's/^config_//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ start=1679543567
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+ start=1679543567
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
++ date '+%Y-%m-%d %r'
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
++ date '+%Y-%m-%d %r'
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export DGXSYSTEM=4xR750xax4A100
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXNNODES=4
++ DGXNNODES=4
++ date +%s
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ start_fmt='2023-03-22 10:52:47 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:52:47 PM'
STARTING TIMING RUN AT 2023-03-22 10:52:47 PM
+ start_fmt='2023-03-22 10:52:47 PM'
+ readonly global_rank=0
+ global_rank=0
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:52:47 PM'
+ readonly local_rank=0
+ local_rank=0
++++ readlink -f ./config_4xR750xax4A100.sh
STARTING TIMING RUN AT 2023-03-22 10:52:47 PM
+ readonly global_rank=0
+ global_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ LR=10.5
+ MOM=0.9
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ SEED=4718
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ WD=5.0e-05
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ LABELSMOOTHING=0.1
+ SEED=4718
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ seq 0 3
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
+ start=1679543567
++ date '+%Y-%m-%d %r'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ start_fmt='2023-03-22 10:52:47 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:52:47 PM'
STARTING TIMING RUN AT 2023-03-22 10:52:47 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4718
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
++ export DGXSYSTEM=4xR750xax4A100
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
++ DGXSYSTEM=4xR750xax4A100
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
++ export DGXSYSTEM=4xR750xax4A100
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ DGXSYSTEM=4xR750xax4A100
+ [[ 0 == 1 ]]
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
+ DATAROOT=/data
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
running benchmark
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ date +%s
++ date +%s
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ date +%s
+ start=1679543567
++ date '+%Y-%m-%d %r'
+ start=1679543567
+ start=1679543567
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 10:52:47 PM'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:52:47 PM'
STARTING TIMING RUN AT 2023-03-22 10:52:47 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=4718
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ [[ '' -ge 1 ]]
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679543567
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679543567
+ start_fmt='2023-03-22 10:52:47 PM'
++ date '+%Y-%m-%d %r'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:52:47 PM'
++ seq 0 3
STARTING TIMING RUN AT 2023-03-22 10:52:47 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ start_fmt='2023-03-22 10:52:47 PM'
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
++ tr '\n' ,
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:52:47 PM'
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
STARTING TIMING RUN AT 2023-03-22 10:52:47 PM
++ sed 's/,$//'
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ readonly global_rank=2
+ global_rank=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ readonly local_rank=0
+ local_rank=0
+ LABELSMOOTHING=0.1
+ SEED=4718
+ EVAL_OFFSET=2
++ date '+%Y-%m-%d %r'
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ SEED=4718
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ THR=0.759
+ [[ 0 == 1 ]]
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DATAROOT=/data
+ echo 'running benchmark'
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ [[ 0 -ge 1 ]]
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ seq 0 3
+ start_fmt='2023-03-22 10:52:47 PM'
++ sed 's/,$//'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:52:47 PM'
STARTING TIMING RUN AT 2023-03-22 10:52:47 PM
+ readonly global_rank=2
+ global_rank=2
++ tr '\n' ,
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ start_fmt='2023-03-22 10:52:47 PM'
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
++ sed 's/,$//'
+ LABELSMOOTHING=0.1
+ SEED=4718
+ EVAL_OFFSET=2
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:52:47 PM'
STARTING TIMING RUN AT 2023-03-22 10:52:47 PM
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ readonly global_rank=2
+ global_rank=2
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ LABELSMOOTHING=0.1
+ SEED=4718
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ [[ 0 -ge 1 ]]
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 4718 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node044:40041] MCW rank 2 is not bound (or bound to all available processors)
[node044:40027] MCW rank 0 is not bound (or bound to all available processors)
[node044:40030] MCW rank 1 is not bound (or bound to all available processors)
[node044:40028] MCW rank 3 is not bound (or bound to all available processors)
[node046:28257] MCW rank 10 is not bound (or bound to all available processors)
[node046:28269] MCW rank 8 is not bound (or bound to all available processors)
[node045:33964] MCW rank 5 is not bound (or bound to all available processors)
[node046:28255] MCW rank 9 is not bound (or bound to all available processors)
[node046:28242] MCW rank 11 is not bound (or bound to all available processors)
[node045:33963] MCW rank 7 is not bound (or bound to all available processors)
[node045:33965] MCW rank 4 is not bound (or bound to all available processors)
[node045:33946] MCW rank 6 is not bound (or bound to all available processors)
[node047:37056] MCW rank 13 is not bound (or bound to all available processors)
[node047:37057] MCW rank 14 is not bound (or bound to all available processors)
[node047:37058] MCW rank 15 is not bound (or bound to all available processors)
[node047:37055] MCW rank 12 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679543572283, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[22:52:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679543579500, "event_type": "POINT_IN_TIME", "key": "seed", "value": 4718, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[22:52:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:52:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:52:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:52:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:52:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:52:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:52:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:52:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:52:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:52:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:52:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:52:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:52:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:52:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:52:59] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679543581560, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 204, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[22:53:05] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:53:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:53:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:53:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:53:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:53:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:53:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:53:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:53:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:53:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:53:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:53:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:53:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:53:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:53:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:53:06] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679543586340, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586341, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586341, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586341, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586342, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586342, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586342, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586342, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586343, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586343, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586343, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586343, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586344, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586344, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586344, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586344, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586345, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586345, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586345, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586345, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586346, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586346, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586346, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586346, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586347, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586347, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586347, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586347, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586348, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586348, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586348, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586348, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586348, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586349, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586349, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586349, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586349, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586350, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586350, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586350, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586350, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586351, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586351, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586351, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586351, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586351, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586352, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586352, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586352, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586352, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586353, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586353, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586353, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586353, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586354, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586354, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586354, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586354, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586355, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586355, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586355, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586355, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586356, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586356, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586356, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586356, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586357, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586357, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586357, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586357, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586357, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586358, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586358, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586358, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586358, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586359, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586359, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586359, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586359, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586360, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586360, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586360, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586360, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586361, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586361, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586361, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586361, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586362, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586362, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586362, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586362, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586363, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586363, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586363, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586363, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586363, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586364, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586364, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586364, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586364, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586365, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586365, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586365, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586365, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586366, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586366, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586366, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586366, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586368, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586368, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586368, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586368, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586374, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586374, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586374, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586374, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586375, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586375, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586375, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586375, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586376, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586376, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586376, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586376, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586377, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586377, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586377, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586377, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586377, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586378, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586378, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586378, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586378, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586379, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586379, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586379, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586379, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679543586380, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:53:07,930 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=51752, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:53:07,930 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=8841, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:53:07,930 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=12844, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:53:07,930 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=29310, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:53:07,930 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=18157, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:53:07,930 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=13367, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:53:07,930 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=16341, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:53:07,930 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=1046, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:53:07,930 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=21256, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:53:07,930 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=12270, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:53:07,930 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=18547, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:53:07,931 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=14030, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:53:07,931 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=52547, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:53:07,931 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=58527, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:53:07,931 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=57477, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:53:07,931 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=51634, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679543587930, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679543587932, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679543587932, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679543587932, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679543587933, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 204, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679543587933, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679543587933, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679543587933, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679543587933, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679543587933, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679543587933, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679543587933, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679543587933, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679543587933, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679543587933, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679543587933, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679543587933, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679543587933, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679543587934, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679543587934, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679543675743, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679543675744, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679543675744, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679543676297, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679543676377, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679543676377, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-22 22:54:38,021 Node[0] Epoch[0] Batch [0-20]	Speed: 39913.59 samples/sec	accuracy=nan
2023-03-22 22:54:39,636 Node[0] Epoch[0] Batch [20-40]	Speed: 40409.27 samples/sec	accuracy=nan
2023-03-22 22:54:41,255 Node[0] Epoch[0] Batch [40-60]	Speed: 40333.74 samples/sec	accuracy=nan
2023-03-22 22:54:42,873 Node[0] Epoch[0] Batch [60-80]	Speed: 40345.52 samples/sec	accuracy=nan
2023-03-22 22:54:44,492 Node[0] Epoch[0] Batch [80-100]	Speed: 40325.27 samples/sec	accuracy=nan
2023-03-22 22:54:46,108 Node[0] Epoch[0] Batch [100-120]	Speed: 40383.24 samples/sec	accuracy=nan
2023-03-22 22:54:47,729 Node[0] Epoch[0] Batch [120-140]	Speed: 40268.25 samples/sec	accuracy=nan
2023-03-22 22:54:49,348 Node[0] Epoch[0] Batch [140-160]	Speed: 40325.78 samples/sec	accuracy=nan
2023-03-22 22:54:50,966 Node[0] Epoch[0] Batch [160-180]	Speed: 40343.92 samples/sec	accuracy=nan
2023-03-22 22:54:52,588 Node[0] Epoch[0] Batch [180-200]	Speed: 40254.72 samples/sec	accuracy=nan
2023-03-22 22:54:54,205 Node[0] Epoch[0] Batch [200-220]	Speed: 40374.22 samples/sec	accuracy=nan
2023-03-22 22:54:55,824 Node[0] Epoch[0] Batch [220-240]	Speed: 40317.43 samples/sec	accuracy=nan
2023-03-22 22:54:57,443 Node[0] Epoch[0] Batch [240-260]	Speed: 40312.79 samples/sec	accuracy=nan
2023-03-22 22:54:59,063 Node[0] Epoch[0] Batch [260-280]	Speed: 40296.09 samples/sec	accuracy=nan
2023-03-22 22:55:00,681 Node[0] Epoch[0] Batch [280-300]	Speed: 40350.27 samples/sec	accuracy=nan
2023-03-22 22:55:02,302 Node[0] Epoch[0] Batch [300-320]	Speed: 40284.29 samples/sec	accuracy=nan
2023-03-22 22:55:03,923 Node[0] Epoch[0] Batch [320-340]	Speed: 40270.47 samples/sec	accuracy=nan
2023-03-22 22:55:05,552 Node[0] Epoch[0] Batch [340-360]	Speed: 40065.81 samples/sec	accuracy=nan
2023-03-22 22:55:07,177 Node[0] Epoch[0] Batch [360-380]	Speed: 40172.79 samples/sec	accuracy=nan
2023-03-22 22:55:08,148 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:08,148 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:08,148 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543708148, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-22 22:55:08,149 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:08,149 Node[0] Epoch[0] Time cost=31.771
2023-03-22 22:55:08,149 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:08,149 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:08,148 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:08,149 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:08,149 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:08,149 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543708149, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40324.474555598325}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-22 22:55:08,148 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:08,149 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:08,149 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:08,149 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:08,149 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543708150, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-22 22:55:08,150 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:09,855 Node[0] Epoch[1] Batch [0-20]	Speed: 40195.05 samples/sec	accuracy=nan
2023-03-22 22:55:11,485 Node[0] Epoch[1] Batch [20-40]	Speed: 40060.27 samples/sec	accuracy=nan
2023-03-22 22:55:13,114 Node[0] Epoch[1] Batch [40-60]	Speed: 40068.83 samples/sec	accuracy=nan
2023-03-22 22:55:14,743 Node[0] Epoch[1] Batch [60-80]	Speed: 40065.37 samples/sec	accuracy=nan
2023-03-22 22:55:16,369 Node[0] Epoch[1] Batch [80-100]	Speed: 40164.43 samples/sec	accuracy=nan
2023-03-22 22:55:17,998 Node[0] Epoch[1] Batch [100-120]	Speed: 40069.30 samples/sec	accuracy=nan
2023-03-22 22:55:19,627 Node[0] Epoch[1] Batch [120-140]	Speed: 40067.00 samples/sec	accuracy=nan
2023-03-22 22:55:21,255 Node[0] Epoch[1] Batch [140-160]	Speed: 40092.45 samples/sec	accuracy=nan
2023-03-22 22:55:22,888 Node[0] Epoch[1] Batch [160-180]	Speed: 39992.99 samples/sec	accuracy=nan
2023-03-22 22:55:24,516 Node[0] Epoch[1] Batch [180-200]	Speed: 40094.16 samples/sec	accuracy=nan
2023-03-22 22:55:26,149 Node[0] Epoch[1] Batch [200-220]	Speed: 39959.09 samples/sec	accuracy=nan
2023-03-22 22:55:30,155 Node[0] Epoch[1] Batch [220-240]	Speed: 16299.01 samples/sec	accuracy=nan
2023-03-22 22:55:31,780 Node[0] Epoch[1] Batch [240-260]	Speed: 40156.52 samples/sec	accuracy=nan
2023-03-22 22:55:33,412 Node[0] Epoch[1] Batch [260-280]	Speed: 40010.27 samples/sec	accuracy=nan
2023-03-22 22:55:35,035 Node[0] Epoch[1] Batch [280-300]	Speed: 40205.99 samples/sec	accuracy=nan
2023-03-22 22:55:36,659 Node[0] Epoch[1] Batch [300-320]	Speed: 40220.05 samples/sec	accuracy=nan
2023-03-22 22:55:38,293 Node[0] Epoch[1] Batch [320-340]	Speed: 39935.31 samples/sec	accuracy=nan
2023-03-22 22:55:44,649 Node[0] Epoch[1] Batch [340-360]	Speed: 10270.76 samples/sec	accuracy=nan
2023-03-22 22:55:46,272 Node[0] Epoch[1] Batch [360-380]	Speed: 40221.87 samples/sec	accuracy=nan
2023-03-22 22:55:47,242 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:47,242 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:47,242 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:47,242 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:47,242 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:47,242 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:47,242 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:47,242 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:47,242 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:47,243 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:47,242 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:47,243 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:47,243 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:47,243 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:47,243 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543747243, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-22 22:55:47,244 Node[0] Epoch[1] Time cost=39.094
:::MLLOG {"namespace": "", "time_ms": 1679543747244, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 32771.58612324363}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679543747244, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-22 22:55:47,244 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:55:48,947 Node[0] Epoch[2] Batch [0-20]	Speed: 40254.76 samples/sec	accuracy=nan
2023-03-22 22:55:50,569 Node[0] Epoch[2] Batch [20-40]	Speed: 40242.55 samples/sec	accuracy=nan
2023-03-22 22:55:52,199 Node[0] Epoch[2] Batch [40-60]	Speed: 40046.79 samples/sec	accuracy=nan
2023-03-22 22:55:53,824 Node[0] Epoch[2] Batch [60-80]	Speed: 40175.33 samples/sec	accuracy=nan
2023-03-22 22:55:55,447 Node[0] Epoch[2] Batch [80-100]	Speed: 40226.65 samples/sec	accuracy=nan
2023-03-22 22:55:59,477 Node[0] Epoch[2] Batch [100-120]	Speed: 16197.10 samples/sec	accuracy=nan
2023-03-22 22:56:03,515 Node[0] Epoch[2] Batch [120-140]	Speed: 16168.12 samples/sec	accuracy=nan
2023-03-22 22:56:07,567 Node[0] Epoch[2] Batch [140-160]	Speed: 16110.06 samples/sec	accuracy=nan
2023-03-22 22:56:13,996 Node[0] Epoch[2] Batch [160-180]	Speed: 10153.60 samples/sec	accuracy=nan
2023-03-22 22:56:18,172 Node[0] Epoch[2] Batch [180-200]	Speed: 15631.12 samples/sec	accuracy=nan
2023-03-22 22:56:19,792 Node[0] Epoch[2] Batch [200-220]	Speed: 40303.24 samples/sec	accuracy=nan
2023-03-22 22:56:26,416 Node[0] Epoch[2] Batch [220-240]	Speed: 9855.40 samples/sec	accuracy=nan
2023-03-22 22:56:30,434 Node[0] Epoch[2] Batch [240-260]	Speed: 16246.41 samples/sec	accuracy=nan
2023-03-22 22:56:32,048 Node[0] Epoch[2] Batch [260-280]	Speed: 40439.97 samples/sec	accuracy=nan
2023-03-22 22:56:33,671 Node[0] Epoch[2] Batch [280-300]	Speed: 40211.84 samples/sec	accuracy=nan
2023-03-22 22:56:35,293 Node[0] Epoch[2] Batch [300-320]	Speed: 40267.70 samples/sec	accuracy=nan
2023-03-22 22:56:36,916 Node[0] Epoch[2] Batch [320-340]	Speed: 40219.97 samples/sec	accuracy=nan
2023-03-22 22:56:38,541 Node[0] Epoch[2] Batch [340-360]	Speed: 40173.41 samples/sec	accuracy=nan
2023-03-22 22:56:40,168 Node[0] Epoch[2] Batch [360-380]	Speed: 40117.59 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679543801062, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-22 22:56:41,063 Node[0] Epoch[2] Time cost=53.818
:::MLLOG {"namespace": "", "time_ms": 1679543801063, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 23805.334738923277}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
2023-03-22 22:56:41,139 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,139 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,139 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,139 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,139 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,140 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,139 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,140 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543801140, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-22 22:56:41,140 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,140 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,140 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,140 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,140 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,140 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,140 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,140 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,820 Node[0] Epoch[2] Validation-accuracy=0.352960
2023-03-22 22:56:41,820 Node[0] Epoch[2] Validation-correct-count=1103.000000
2023-03-22 22:56:41,820 Node[0] Epoch[2] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679543801931, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-22 22:56:41,931 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,931 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,931 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543801931, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.3442, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679543801931, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-22 22:56:41,931 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,931 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,931 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543801931, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-22 22:56:41,931 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,931 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,931 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,931 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,931 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,931 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,931 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,931 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:41,931 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543801931, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-22 22:56:41,932 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:56:43,565 Node[0] Epoch[3] Batch [0-20]	Speed: 40192.76 samples/sec	accuracy=nan
2023-03-22 22:56:45,184 Node[0] Epoch[3] Batch [20-40]	Speed: 40306.69 samples/sec	accuracy=nan
2023-03-22 22:56:46,811 Node[0] Epoch[3] Batch [40-60]	Speed: 40141.24 samples/sec	accuracy=nan
2023-03-22 22:56:50,809 Node[0] Epoch[3] Batch [60-80]	Speed: 16324.97 samples/sec	accuracy=nan
2023-03-22 22:56:52,434 Node[0] Epoch[3] Batch [80-100]	Speed: 40179.81 samples/sec	accuracy=nan
2023-03-22 22:56:54,056 Node[0] Epoch[3] Batch [100-120]	Speed: 40241.85 samples/sec	accuracy=nan
2023-03-22 22:56:55,677 Node[0] Epoch[3] Batch [120-140]	Speed: 40275.45 samples/sec	accuracy=nan
2023-03-22 22:56:57,297 Node[0] Epoch[3] Batch [140-160]	Speed: 40290.57 samples/sec	accuracy=nan
2023-03-22 22:56:58,920 Node[0] Epoch[3] Batch [160-180]	Speed: 40231.67 samples/sec	accuracy=nan
2023-03-22 22:57:00,552 Node[0] Epoch[3] Batch [180-200]	Speed: 39995.76 samples/sec	accuracy=nan
2023-03-22 22:57:02,173 Node[0] Epoch[3] Batch [200-220]	Speed: 40265.34 samples/sec	accuracy=nan
2023-03-22 22:57:03,801 Node[0] Epoch[3] Batch [220-240]	Speed: 40111.70 samples/sec	accuracy=nan
2023-03-22 22:57:05,430 Node[0] Epoch[3] Batch [240-260]	Speed: 40070.12 samples/sec	accuracy=nan
2023-03-22 22:57:07,053 Node[0] Epoch[3] Batch [260-280]	Speed: 40226.63 samples/sec	accuracy=nan
2023-03-22 22:57:08,684 Node[0] Epoch[3] Batch [280-300]	Speed: 40029.80 samples/sec	accuracy=nan
2023-03-22 22:57:10,311 Node[0] Epoch[3] Batch [300-320]	Speed: 40105.50 samples/sec	accuracy=nan
2023-03-22 22:57:11,942 Node[0] Epoch[3] Batch [320-340]	Speed: 40037.25 samples/sec	accuracy=nan
2023-03-22 22:57:13,567 Node[0] Epoch[3] Batch [340-360]	Speed: 40171.01 samples/sec	accuracy=nan
2023-03-22 22:57:15,194 Node[0] Epoch[3] Batch [360-380]	Speed: 40127.06 samples/sec	accuracy=nan
2023-03-22 22:57:16,172 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:16,172 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:16,173 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:16,173 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:16,173 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:16,173 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:16,173 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:16,173 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:16,173 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:16,173 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:16,173 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:16,173 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:16,173 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543836173, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-22 22:57:16,174 Node[0] Epoch[3] Time cost=34.243
2023-03-22 22:57:16,174 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543836174, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37414.50963917277}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679543836174, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-22 22:57:16,175 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:16,174 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:17,881 Node[0] Epoch[4] Batch [0-20]	Speed: 40181.05 samples/sec	accuracy=nan
2023-03-22 22:57:19,514 Node[0] Epoch[4] Batch [20-40]	Speed: 39974.54 samples/sec	accuracy=nan
2023-03-22 22:57:21,138 Node[0] Epoch[4] Batch [40-60]	Speed: 40198.14 samples/sec	accuracy=nan
2023-03-22 22:57:22,771 Node[0] Epoch[4] Batch [60-80]	Speed: 39979.62 samples/sec	accuracy=nan
2023-03-22 22:57:24,402 Node[0] Epoch[4] Batch [80-100]	Speed: 40027.46 samples/sec	accuracy=nan
2023-03-22 22:57:26,034 Node[0] Epoch[4] Batch [100-120]	Speed: 39992.00 samples/sec	accuracy=nan
2023-03-22 22:57:27,661 Node[0] Epoch[4] Batch [120-140]	Speed: 40136.30 samples/sec	accuracy=nan
2023-03-22 22:57:29,294 Node[0] Epoch[4] Batch [140-160]	Speed: 39969.45 samples/sec	accuracy=nan
2023-03-22 22:57:30,928 Node[0] Epoch[4] Batch [160-180]	Speed: 39944.46 samples/sec	accuracy=nan
2023-03-22 22:57:32,558 Node[0] Epoch[4] Batch [180-200]	Speed: 40054.80 samples/sec	accuracy=nan
2023-03-22 22:57:34,193 Node[0] Epoch[4] Batch [200-220]	Speed: 39940.04 samples/sec	accuracy=nan
2023-03-22 22:57:35,820 Node[0] Epoch[4] Batch [220-240]	Speed: 40120.27 samples/sec	accuracy=nan
2023-03-22 22:57:37,453 Node[0] Epoch[4] Batch [240-260]	Speed: 39962.43 samples/sec	accuracy=nan
2023-03-22 22:57:39,081 Node[0] Epoch[4] Batch [260-280]	Speed: 40111.93 samples/sec	accuracy=nan
2023-03-22 22:57:40,715 Node[0] Epoch[4] Batch [280-300]	Speed: 39946.36 samples/sec	accuracy=nan
2023-03-22 22:57:42,345 Node[0] Epoch[4] Batch [300-320]	Speed: 40037.45 samples/sec	accuracy=nan
2023-03-22 22:57:43,979 Node[0] Epoch[4] Batch [320-340]	Speed: 39950.56 samples/sec	accuracy=nan
2023-03-22 22:57:45,610 Node[0] Epoch[4] Batch [340-360]	Speed: 40047.74 samples/sec	accuracy=nan
2023-03-22 22:57:47,248 Node[0] Epoch[4] Batch [360-380]	Speed: 39834.84 samples/sec	accuracy=nan
2023-03-22 22:57:48,142 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:48,142 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:48,142 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:48,142 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:48,142 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:48,142 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:48,142 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:48,142 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:48,142 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:48,142 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:48,142 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:48,142 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:48,142 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:48,143 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:48,143 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543868142, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-22 22:57:48,143 Node[0] Epoch[4] Time cost=31.969
:::MLLOG {"namespace": "", "time_ms": 1679543868143, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40075.91801121625}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1679543868143, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-22 22:57:48,144 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:57:49,858 Node[0] Epoch[5] Batch [0-20]	Speed: 40033.01 samples/sec	accuracy=nan
2023-03-22 22:57:51,486 Node[0] Epoch[5] Batch [20-40]	Speed: 40096.99 samples/sec	accuracy=nan
2023-03-22 22:57:53,122 Node[0] Epoch[5] Batch [40-60]	Speed: 39887.94 samples/sec	accuracy=nan
2023-03-22 22:57:54,753 Node[0] Epoch[5] Batch [60-80]	Speed: 40042.07 samples/sec	accuracy=nan
2023-03-22 22:57:56,385 Node[0] Epoch[5] Batch [80-100]	Speed: 39994.57 samples/sec	accuracy=nan
2023-03-22 22:57:58,018 Node[0] Epoch[5] Batch [100-120]	Speed: 39959.88 samples/sec	accuracy=nan
2023-03-22 22:57:59,649 Node[0] Epoch[5] Batch [120-140]	Speed: 40026.66 samples/sec	accuracy=nan
2023-03-22 22:58:01,284 Node[0] Epoch[5] Batch [140-160]	Speed: 39941.87 samples/sec	accuracy=nan
2023-03-22 22:58:02,918 Node[0] Epoch[5] Batch [160-180]	Speed: 39950.49 samples/sec	accuracy=nan
2023-03-22 22:58:04,547 Node[0] Epoch[5] Batch [180-200]	Speed: 40056.45 samples/sec	accuracy=nan
2023-03-22 22:58:06,179 Node[0] Epoch[5] Batch [200-220]	Speed: 40016.08 samples/sec	accuracy=nan
2023-03-22 22:58:07,809 Node[0] Epoch[5] Batch [220-240]	Speed: 40037.99 samples/sec	accuracy=nan
2023-03-22 22:58:09,440 Node[0] Epoch[5] Batch [240-260]	Speed: 40023.92 samples/sec	accuracy=nan
2023-03-22 22:58:11,075 Node[0] Epoch[5] Batch [260-280]	Speed: 39939.27 samples/sec	accuracy=nan
2023-03-22 22:58:12,704 Node[0] Epoch[5] Batch [280-300]	Speed: 40070.77 samples/sec	accuracy=nan
2023-03-22 22:58:14,337 Node[0] Epoch[5] Batch [300-320]	Speed: 39966.25 samples/sec	accuracy=nan
2023-03-22 22:58:15,973 Node[0] Epoch[5] Batch [320-340]	Speed: 39917.53 samples/sec	accuracy=nan
2023-03-22 22:58:17,601 Node[0] Epoch[5] Batch [340-360]	Speed: 40079.09 samples/sec	accuracy=nan
2023-03-22 22:58:19,234 Node[0] Epoch[5] Batch [360-380]	Speed: 39988.25 samples/sec	accuracy=nan
2023-03-22 22:58:20,214 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:20,214 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:20,214 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:20,214 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:20,214 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:20,214 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:20,214 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:20,214 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:20,214 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:20,214 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:20,214 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:20,214 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:20,215 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:20,214 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:20,215 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543900215, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-22 22:58:20,216 Node[0] Epoch[5] Time cost=32.072
:::MLLOG {"namespace": "", "time_ms": 1679543900216, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39946.70322048058}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679543900216, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-22 22:58:20,216 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:21,933 Node[0] Epoch[6] Batch [0-20]	Speed: 39921.44 samples/sec	accuracy=nan
2023-03-22 22:58:23,565 Node[0] Epoch[6] Batch [20-40]	Speed: 40011.62 samples/sec	accuracy=nan
2023-03-22 22:58:25,197 Node[0] Epoch[6] Batch [40-60]	Speed: 39989.63 samples/sec	accuracy=nan
2023-03-22 22:58:26,832 Node[0] Epoch[6] Batch [60-80]	Speed: 39931.42 samples/sec	accuracy=nan
2023-03-22 22:58:28,467 Node[0] Epoch[6] Batch [80-100]	Speed: 39933.45 samples/sec	accuracy=nan
2023-03-22 22:58:30,101 Node[0] Epoch[6] Batch [100-120]	Speed: 39947.03 samples/sec	accuracy=nan
2023-03-22 22:58:31,736 Node[0] Epoch[6] Batch [120-140]	Speed: 39933.90 samples/sec	accuracy=nan
2023-03-22 22:58:33,366 Node[0] Epoch[6] Batch [140-160]	Speed: 40033.93 samples/sec	accuracy=nan
2023-03-22 22:58:35,000 Node[0] Epoch[6] Batch [160-180]	Speed: 39951.31 samples/sec	accuracy=nan
2023-03-22 22:58:36,633 Node[0] Epoch[6] Batch [180-200]	Speed: 39990.50 samples/sec	accuracy=nan
2023-03-22 22:58:38,263 Node[0] Epoch[6] Batch [200-220]	Speed: 40051.78 samples/sec	accuracy=nan
2023-03-22 22:58:39,897 Node[0] Epoch[6] Batch [220-240]	Speed: 39944.63 samples/sec	accuracy=nan
2023-03-22 22:58:41,525 Node[0] Epoch[6] Batch [240-260]	Speed: 40085.76 samples/sec	accuracy=nan
2023-03-22 22:58:43,161 Node[0] Epoch[6] Batch [260-280]	Speed: 39906.24 samples/sec	accuracy=nan
2023-03-22 22:58:44,792 Node[0] Epoch[6] Batch [280-300]	Speed: 40030.42 samples/sec	accuracy=nan
2023-03-22 22:58:46,427 Node[0] Epoch[6] Batch [300-320]	Speed: 39938.95 samples/sec	accuracy=nan
2023-03-22 22:58:48,060 Node[0] Epoch[6] Batch [320-340]	Speed: 39953.26 samples/sec	accuracy=nan
2023-03-22 22:58:49,690 Node[0] Epoch[6] Batch [340-360]	Speed: 40063.07 samples/sec	accuracy=nan
2023-03-22 22:58:51,330 Node[0] Epoch[6] Batch [360-380]	Speed: 39810.36 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679543932227, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-22 22:58:52,228 Node[0] Epoch[6] Time cost=32.012
:::MLLOG {"namespace": "", "time_ms": 1679543932228, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40021.344349830506}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679543932306, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-22 22:58:53,041 Node[0] Epoch[6] Validation-accuracy=0.434240
2023-03-22 22:58:53,041 Node[0] Epoch[6] Validation-correct-count=1357.000000
2023-03-22 22:58:53,041 Node[0] Epoch[6] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679543933140, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679543933141, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.43444, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679543933141, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
2023-03-22 22:58:53,141 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:53,141 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:53,141 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543933141, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-22 22:58:53,141 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:53,141 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:53,141 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:53,141 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:53,141 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:53,141 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543933141, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-22 22:58:53,141 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:53,141 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:53,141 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:53,141 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:53,141 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:53,141 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:53,141 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:58:54,787 Node[0] Epoch[7] Batch [0-20]	Speed: 39825.13 samples/sec	accuracy=nan
2023-03-22 22:58:56,419 Node[0] Epoch[7] Batch [20-40]	Speed: 40012.64 samples/sec	accuracy=nan
2023-03-22 22:58:58,056 Node[0] Epoch[7] Batch [40-60]	Speed: 39884.92 samples/sec	accuracy=nan
2023-03-22 22:58:59,688 Node[0] Epoch[7] Batch [60-80]	Speed: 39979.02 samples/sec	accuracy=nan
2023-03-22 22:59:01,319 Node[0] Epoch[7] Batch [80-100]	Speed: 40031.75 samples/sec	accuracy=nan
2023-03-22 22:59:02,951 Node[0] Epoch[7] Batch [100-120]	Speed: 40008.78 samples/sec	accuracy=nan
2023-03-22 22:59:04,582 Node[0] Epoch[7] Batch [120-140]	Speed: 40026.85 samples/sec	accuracy=nan
2023-03-22 22:59:06,215 Node[0] Epoch[7] Batch [140-160]	Speed: 39956.55 samples/sec	accuracy=nan
2023-03-22 22:59:07,851 Node[0] Epoch[7] Batch [160-180]	Speed: 39924.68 samples/sec	accuracy=nan
2023-03-22 22:59:09,482 Node[0] Epoch[7] Batch [180-200]	Speed: 40007.94 samples/sec	accuracy=nan
2023-03-22 22:59:11,113 Node[0] Epoch[7] Batch [200-220]	Speed: 40037.00 samples/sec	accuracy=nan
2023-03-22 22:59:12,749 Node[0] Epoch[7] Batch [220-240]	Speed: 39887.93 samples/sec	accuracy=nan
2023-03-22 22:59:14,382 Node[0] Epoch[7] Batch [240-260]	Speed: 39981.87 samples/sec	accuracy=nan
2023-03-22 22:59:16,014 Node[0] Epoch[7] Batch [260-280]	Speed: 40002.42 samples/sec	accuracy=nan
2023-03-22 22:59:17,650 Node[0] Epoch[7] Batch [280-300]	Speed: 39909.82 samples/sec	accuracy=nan
2023-03-22 22:59:19,283 Node[0] Epoch[7] Batch [300-320]	Speed: 39963.30 samples/sec	accuracy=nan
2023-03-22 22:59:20,909 Node[0] Epoch[7] Batch [320-340]	Speed: 40157.98 samples/sec	accuracy=nan
2023-03-22 22:59:22,545 Node[0] Epoch[7] Batch [340-360]	Speed: 39895.68 samples/sec	accuracy=nan
2023-03-22 22:59:24,180 Node[0] Epoch[7] Batch [360-380]	Speed: 39918.46 samples/sec	accuracy=nan
2023-03-22 22:59:25,154 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:25,155 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:25,154 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:25,155 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:25,155 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:25,155 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:25,155 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:25,155 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:25,155 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:25,155 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:25,155 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:25,155 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:25,155 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:25,155 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:25,155 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543965155, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-22 22:59:25,156 Node[0] Epoch[7] Time cost=32.015
:::MLLOG {"namespace": "", "time_ms": 1679543965156, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40017.898365752306}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679543965156, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-22 22:59:25,157 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:26,872 Node[0] Epoch[8] Batch [0-20]	Speed: 39934.57 samples/sec	accuracy=nan
2023-03-22 22:59:28,505 Node[0] Epoch[8] Batch [20-40]	Speed: 39979.82 samples/sec	accuracy=nan
2023-03-22 22:59:30,134 Node[0] Epoch[8] Batch [40-60]	Speed: 40065.91 samples/sec	accuracy=nan
2023-03-22 22:59:31,769 Node[0] Epoch[8] Batch [60-80]	Speed: 39922.18 samples/sec	accuracy=nan
2023-03-22 22:59:33,401 Node[0] Epoch[8] Batch [80-100]	Speed: 40012.62 samples/sec	accuracy=nan
2023-03-22 22:59:35,034 Node[0] Epoch[8] Batch [100-120]	Speed: 39974.10 samples/sec	accuracy=nan
2023-03-22 22:59:36,669 Node[0] Epoch[8] Batch [120-140]	Speed: 39916.18 samples/sec	accuracy=nan
2023-03-22 22:59:38,304 Node[0] Epoch[8] Batch [140-160]	Speed: 39937.94 samples/sec	accuracy=nan
2023-03-22 22:59:39,932 Node[0] Epoch[8] Batch [160-180]	Speed: 40083.06 samples/sec	accuracy=nan
2023-03-22 22:59:41,568 Node[0] Epoch[8] Batch [180-200]	Speed: 39907.05 samples/sec	accuracy=nan
2023-03-22 22:59:43,197 Node[0] Epoch[8] Batch [200-220]	Speed: 40077.64 samples/sec	accuracy=nan
2023-03-22 22:59:44,833 Node[0] Epoch[8] Batch [220-240]	Speed: 39911.92 samples/sec	accuracy=nan
2023-03-22 22:59:46,470 Node[0] Epoch[8] Batch [240-260]	Speed: 39877.57 samples/sec	accuracy=nan
2023-03-22 22:59:48,099 Node[0] Epoch[8] Batch [260-280]	Speed: 40053.56 samples/sec	accuracy=nan
2023-03-22 22:59:49,733 Node[0] Epoch[8] Batch [280-300]	Speed: 39967.65 samples/sec	accuracy=nan
2023-03-22 22:59:51,366 Node[0] Epoch[8] Batch [300-320]	Speed: 39964.72 samples/sec	accuracy=nan
2023-03-22 22:59:52,997 Node[0] Epoch[8] Batch [320-340]	Speed: 40035.91 samples/sec	accuracy=nan
2023-03-22 22:59:54,632 Node[0] Epoch[8] Batch [340-360]	Speed: 39912.19 samples/sec	accuracy=nan
2023-03-22 22:59:56,268 Node[0] Epoch[8] Batch [360-380]	Speed: 39910.49 samples/sec	accuracy=nan
2023-03-22 22:59:57,162 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:57,162 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:57,163 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:57,162 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:57,162 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:57,163 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:57,163 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:57,163 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:57,163 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:57,163 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:57,163 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:57,163 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:57,163 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:57,163 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:57,163 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543997163, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-22 22:59:57,164 Node[0] Epoch[8] Time cost=32.007
:::MLLOG {"namespace": "", "time_ms": 1679543997164, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40027.53710790839}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679543997164, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-22 22:59:57,164 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:59:58,878 Node[0] Epoch[9] Batch [0-20]	Speed: 40054.10 samples/sec	accuracy=nan
2023-03-22 23:00:00,509 Node[0] Epoch[9] Batch [20-40]	Speed: 40029.66 samples/sec	accuracy=nan
2023-03-22 23:00:02,145 Node[0] Epoch[9] Batch [40-60]	Speed: 39886.46 samples/sec	accuracy=nan
2023-03-22 23:00:03,776 Node[0] Epoch[9] Batch [60-80]	Speed: 40042.93 samples/sec	accuracy=nan
2023-03-22 23:00:05,410 Node[0] Epoch[9] Batch [80-100]	Speed: 39952.46 samples/sec	accuracy=nan
2023-03-22 23:00:07,037 Node[0] Epoch[9] Batch [100-120]	Speed: 40120.79 samples/sec	accuracy=nan
2023-03-22 23:00:08,671 Node[0] Epoch[9] Batch [120-140]	Speed: 39946.68 samples/sec	accuracy=nan
2023-03-22 23:00:10,304 Node[0] Epoch[9] Batch [140-160]	Speed: 39974.84 samples/sec	accuracy=nan
2023-03-22 23:00:11,937 Node[0] Epoch[9] Batch [160-180]	Speed: 39964.18 samples/sec	accuracy=nan
2023-03-22 23:00:13,569 Node[0] Epoch[9] Batch [180-200]	Speed: 40001.64 samples/sec	accuracy=nan
2023-03-22 23:00:15,201 Node[0] Epoch[9] Batch [200-220]	Speed: 40012.62 samples/sec	accuracy=nan
2023-03-22 23:00:16,830 Node[0] Epoch[9] Batch [220-240]	Speed: 40076.38 samples/sec	accuracy=nan
2023-03-22 23:00:18,465 Node[0] Epoch[9] Batch [240-260]	Speed: 39912.13 samples/sec	accuracy=nan
2023-03-22 23:00:20,100 Node[0] Epoch[9] Batch [260-280]	Speed: 39940.08 samples/sec	accuracy=nan
2023-03-22 23:00:21,730 Node[0] Epoch[9] Batch [280-300]	Speed: 40048.83 samples/sec	accuracy=nan
2023-03-22 23:00:23,365 Node[0] Epoch[9] Batch [300-320]	Speed: 39929.29 samples/sec	accuracy=nan
2023-03-22 23:00:25,001 Node[0] Epoch[9] Batch [320-340]	Speed: 39898.23 samples/sec	accuracy=nan
2023-03-22 23:00:26,641 Node[0] Epoch[9] Batch [340-360]	Speed: 39811.41 samples/sec	accuracy=nan
2023-03-22 23:00:28,276 Node[0] Epoch[9] Batch [360-380]	Speed: 39906.45 samples/sec	accuracy=nan
2023-03-22 23:00:29,249 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:00:29,249 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:00:29,249 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:00:29,249 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:00:29,249 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:00:29,249 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:00:29,249 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:00:29,250 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:00:29,250 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:00:29,250 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:00:29,250 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:00:29,250 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:00:29,250 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:00:29,250 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:00:29,250 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544029250, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-22 23:00:29,251 Node[0] Epoch[9] Time cost=32.087
:::MLLOG {"namespace": "", "time_ms": 1679544029251, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39928.07536901771}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1679544029252, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-22 23:00:29,252 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:00:30,967 Node[0] Epoch[10] Batch [0-20]	Speed: 39918.06 samples/sec	accuracy=nan
2023-03-22 23:00:32,601 Node[0] Epoch[10] Batch [20-40]	Speed: 39963.32 samples/sec	accuracy=nan
2023-03-22 23:00:34,239 Node[0] Epoch[10] Batch [40-60]	Speed: 39843.70 samples/sec	accuracy=nan
2023-03-22 23:00:35,879 Node[0] Epoch[10] Batch [60-80]	Speed: 39813.82 samples/sec	accuracy=nan
2023-03-22 23:00:37,511 Node[0] Epoch[10] Batch [80-100]	Speed: 40007.20 samples/sec	accuracy=nan
2023-03-22 23:00:39,144 Node[0] Epoch[10] Batch [100-120]	Speed: 39963.77 samples/sec	accuracy=nan
2023-03-22 23:00:40,781 Node[0] Epoch[10] Batch [120-140]	Speed: 39881.48 samples/sec	accuracy=nan
2023-03-22 23:00:42,415 Node[0] Epoch[10] Batch [140-160]	Speed: 39959.81 samples/sec	accuracy=nan
2023-03-22 23:00:44,050 Node[0] Epoch[10] Batch [160-180]	Speed: 39931.89 samples/sec	accuracy=nan
2023-03-22 23:00:45,684 Node[0] Epoch[10] Batch [180-200]	Speed: 39950.19 samples/sec	accuracy=nan
2023-03-22 23:00:47,318 Node[0] Epoch[10] Batch [200-220]	Speed: 39937.09 samples/sec	accuracy=nan
2023-03-22 23:00:48,959 Node[0] Epoch[10] Batch [220-240]	Speed: 39793.77 samples/sec	accuracy=nan
2023-03-22 23:00:50,586 Node[0] Epoch[10] Batch [240-260]	Speed: 40108.73 samples/sec	accuracy=nan
2023-03-22 23:00:52,219 Node[0] Epoch[10] Batch [260-280]	Speed: 39965.83 samples/sec	accuracy=nan
2023-03-22 23:00:53,854 Node[0] Epoch[10] Batch [280-300]	Speed: 39928.95 samples/sec	accuracy=nan
2023-03-22 23:00:55,483 Node[0] Epoch[10] Batch [300-320]	Speed: 40076.48 samples/sec	accuracy=nan
2023-03-22 23:00:57,120 Node[0] Epoch[10] Batch [320-340]	Speed: 39888.73 samples/sec	accuracy=nan
2023-03-22 23:00:58,752 Node[0] Epoch[10] Batch [340-360]	Speed: 40007.97 samples/sec	accuracy=nan
2023-03-22 23:01:00,385 Node[0] Epoch[10] Batch [360-380]	Speed: 39958.04 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679544061282, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-22 23:01:01,283 Node[0] Epoch[10] Time cost=32.031
:::MLLOG {"namespace": "", "time_ms": 1679544061283, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39997.4992855}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679544061360, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-22 23:01:02,148 Node[0] Epoch[10] Validation-accuracy=0.539840
2023-03-22 23:01:02,148 Node[0] Epoch[10] Validation-correct-count=1687.000000
2023-03-22 23:01:02,148 Node[0] Epoch[10] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679544062195, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
2023-03-22 23:01:02,195 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544062195, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.54054, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
2023-03-22 23:01:02,195 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544062195, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-22 23:01:02,195 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:02,195 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544062195, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-22 23:01:02,195 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:02,195 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:02,195 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:02,195 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:02,195 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:02,195 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:02,195 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:02,195 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:02,195 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:02,195 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:02,195 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544062195, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-22 23:01:02,196 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:03,845 Node[0] Epoch[11] Batch [0-20]	Speed: 39786.81 samples/sec	accuracy=nan
2023-03-22 23:01:05,473 Node[0] Epoch[11] Batch [20-40]	Speed: 40100.73 samples/sec	accuracy=nan
2023-03-22 23:01:07,111 Node[0] Epoch[11] Batch [40-60]	Speed: 39860.18 samples/sec	accuracy=nan
2023-03-22 23:01:08,746 Node[0] Epoch[11] Batch [60-80]	Speed: 39939.74 samples/sec	accuracy=nan
2023-03-22 23:01:10,379 Node[0] Epoch[11] Batch [80-100]	Speed: 39973.97 samples/sec	accuracy=nan
2023-03-22 23:01:12,012 Node[0] Epoch[11] Batch [100-120]	Speed: 39956.17 samples/sec	accuracy=nan
2023-03-22 23:01:13,647 Node[0] Epoch[11] Batch [120-140]	Speed: 39944.88 samples/sec	accuracy=nan
2023-03-22 23:01:15,277 Node[0] Epoch[11] Batch [140-160]	Speed: 40032.79 samples/sec	accuracy=nan
2023-03-22 23:01:16,911 Node[0] Epoch[11] Batch [160-180]	Speed: 39961.41 samples/sec	accuracy=nan
2023-03-22 23:01:18,545 Node[0] Epoch[11] Batch [180-200]	Speed: 39950.90 samples/sec	accuracy=nan
2023-03-22 23:01:20,178 Node[0] Epoch[11] Batch [200-220]	Speed: 39983.66 samples/sec	accuracy=nan
2023-03-22 23:01:21,813 Node[0] Epoch[11] Batch [220-240]	Speed: 39920.50 samples/sec	accuracy=nan
2023-03-22 23:01:23,451 Node[0] Epoch[11] Batch [240-260]	Speed: 39838.75 samples/sec	accuracy=nan
2023-03-22 23:01:25,086 Node[0] Epoch[11] Batch [260-280]	Speed: 39935.22 samples/sec	accuracy=nan
2023-03-22 23:01:26,718 Node[0] Epoch[11] Batch [280-300]	Speed: 40011.63 samples/sec	accuracy=nan
2023-03-22 23:01:28,352 Node[0] Epoch[11] Batch [300-320]	Speed: 39931.78 samples/sec	accuracy=nan
2023-03-22 23:01:29,985 Node[0] Epoch[11] Batch [320-340]	Speed: 39994.01 samples/sec	accuracy=nan
2023-03-22 23:01:31,621 Node[0] Epoch[11] Batch [340-360]	Speed: 39900.62 samples/sec	accuracy=nan
2023-03-22 23:01:33,253 Node[0] Epoch[11] Batch [360-380]	Speed: 39984.94 samples/sec	accuracy=nan
2023-03-22 23:01:34,232 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:34,232 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:34,232 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:34,232 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:34,232 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:34,232 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:34,232 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:34,232 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:34,233 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:34,232 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:34,233 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:34,233 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:34,233 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:34,233 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:34,233 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544094234, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-22 23:01:34,235 Node[0] Epoch[11] Time cost=32.039
:::MLLOG {"namespace": "", "time_ms": 1679544094235, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39987.24951752616}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679544094235, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-22 23:01:34,235 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:01:35,951 Node[0] Epoch[12] Batch [0-20]	Speed: 39902.26 samples/sec	accuracy=nan
2023-03-22 23:01:37,579 Node[0] Epoch[12] Batch [20-40]	Speed: 40106.39 samples/sec	accuracy=nan
2023-03-22 23:01:39,213 Node[0] Epoch[12] Batch [40-60]	Speed: 39960.82 samples/sec	accuracy=nan
2023-03-22 23:01:40,848 Node[0] Epoch[12] Batch [60-80]	Speed: 39914.83 samples/sec	accuracy=nan
2023-03-22 23:01:42,483 Node[0] Epoch[12] Batch [80-100]	Speed: 39922.79 samples/sec	accuracy=nan
2023-03-22 23:01:44,118 Node[0] Epoch[12] Batch [100-120]	Speed: 39941.21 samples/sec	accuracy=nan
2023-03-22 23:01:45,753 Node[0] Epoch[12] Batch [120-140]	Speed: 39907.55 samples/sec	accuracy=nan
2023-03-22 23:01:47,389 Node[0] Epoch[12] Batch [140-160]	Speed: 39900.10 samples/sec	accuracy=nan
2023-03-22 23:01:49,026 Node[0] Epoch[12] Batch [160-180]	Speed: 39886.19 samples/sec	accuracy=nan
2023-03-22 23:01:50,658 Node[0] Epoch[12] Batch [180-200]	Speed: 39997.58 samples/sec	accuracy=nan
2023-03-22 23:01:52,290 Node[0] Epoch[12] Batch [200-220]	Speed: 40005.17 samples/sec	accuracy=nan
2023-03-22 23:01:53,925 Node[0] Epoch[12] Batch [220-240]	Speed: 39926.47 samples/sec	accuracy=nan
2023-03-22 23:01:55,561 Node[0] Epoch[12] Batch [240-260]	Speed: 39913.04 samples/sec	accuracy=nan
2023-03-22 23:01:57,198 Node[0] Epoch[12] Batch [260-280]	Speed: 39856.61 samples/sec	accuracy=nan
2023-03-22 23:01:58,832 Node[0] Epoch[12] Batch [280-300]	Speed: 39972.10 samples/sec	accuracy=nan
2023-03-22 23:02:00,464 Node[0] Epoch[12] Batch [300-320]	Speed: 39979.93 samples/sec	accuracy=nan
2023-03-22 23:02:02,100 Node[0] Epoch[12] Batch [320-340]	Speed: 39902.37 samples/sec	accuracy=nan
2023-03-22 23:02:03,731 Node[0] Epoch[12] Batch [340-360]	Speed: 40036.21 samples/sec	accuracy=nan
2023-03-22 23:02:05,365 Node[0] Epoch[12] Batch [360-380]	Speed: 39946.56 samples/sec	accuracy=nan
2023-03-22 23:02:06,264 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:06,264 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:06,264 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:06,265 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:06,264 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:06,264 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:06,265 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:06,265 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:06,265 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:06,265 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:06,265 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:06,265 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:06,265 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:06,265 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544126265, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-22 23:02:06,266 Node[0] Epoch[12] Time cost=32.030
:::MLLOG {"namespace": "", "time_ms": 1679544126266, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39998.753893879904}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-22 23:02:06,266 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544126266, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-22 23:02:06,266 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:07,978 Node[0] Epoch[13] Batch [0-20]	Speed: 40107.66 samples/sec	accuracy=nan
2023-03-22 23:02:09,614 Node[0] Epoch[13] Batch [20-40]	Speed: 39908.47 samples/sec	accuracy=nan
2023-03-22 23:02:11,251 Node[0] Epoch[13] Batch [40-60]	Speed: 39873.22 samples/sec	accuracy=nan
2023-03-22 23:02:12,886 Node[0] Epoch[13] Batch [60-80]	Speed: 39923.42 samples/sec	accuracy=nan
2023-03-22 23:02:14,524 Node[0] Epoch[13] Batch [80-100]	Speed: 39859.70 samples/sec	accuracy=nan
2023-03-22 23:02:16,155 Node[0] Epoch[13] Batch [100-120]	Speed: 40018.62 samples/sec	accuracy=nan
2023-03-22 23:02:17,787 Node[0] Epoch[13] Batch [120-140]	Speed: 40015.00 samples/sec	accuracy=nan
2023-03-22 23:02:19,422 Node[0] Epoch[13] Batch [140-160]	Speed: 39924.10 samples/sec	accuracy=nan
2023-03-22 23:02:21,050 Node[0] Epoch[13] Batch [160-180]	Speed: 40101.88 samples/sec	accuracy=nan
2023-03-22 23:02:22,688 Node[0] Epoch[13] Batch [180-200]	Speed: 39839.45 samples/sec	accuracy=nan
2023-03-22 23:02:24,323 Node[0] Epoch[13] Batch [200-220]	Speed: 39934.37 samples/sec	accuracy=nan
2023-03-22 23:02:25,957 Node[0] Epoch[13] Batch [220-240]	Speed: 39938.56 samples/sec	accuracy=nan
2023-03-22 23:02:27,590 Node[0] Epoch[13] Batch [240-260]	Speed: 39974.21 samples/sec	accuracy=nan
2023-03-22 23:02:29,225 Node[0] Epoch[13] Batch [260-280]	Speed: 39943.09 samples/sec	accuracy=nan
2023-03-22 23:02:30,859 Node[0] Epoch[13] Batch [280-300]	Speed: 39945.34 samples/sec	accuracy=nan
2023-03-22 23:02:32,493 Node[0] Epoch[13] Batch [300-320]	Speed: 39961.28 samples/sec	accuracy=nan
2023-03-22 23:02:34,126 Node[0] Epoch[13] Batch [320-340]	Speed: 39955.69 samples/sec	accuracy=nan
2023-03-22 23:02:35,761 Node[0] Epoch[13] Batch [340-360]	Speed: 39940.55 samples/sec	accuracy=nan
2023-03-22 23:02:37,398 Node[0] Epoch[13] Batch [360-380]	Speed: 39873.61 samples/sec	accuracy=nan
2023-03-22 23:02:38,372 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:38,372 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:38,372 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:38,372 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:38,372 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:38,372 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:38,372 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:38,372 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:38,372 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:38,372 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:38,372 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:38,373 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:38,373 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:38,373 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:38,373 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544158374, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-22 23:02:38,375 Node[0] Epoch[13] Time cost=32.108
:::MLLOG {"namespace": "", "time_ms": 1679544158375, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39901.282213651684}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679544158375, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-22 23:02:38,375 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:02:40,089 Node[0] Epoch[14] Batch [0-20]	Speed: 39939.84 samples/sec	accuracy=nan
2023-03-22 23:02:41,721 Node[0] Epoch[14] Batch [20-40]	Speed: 39996.13 samples/sec	accuracy=nan
2023-03-22 23:02:43,354 Node[0] Epoch[14] Batch [40-60]	Speed: 39990.09 samples/sec	accuracy=nan
2023-03-22 23:02:44,989 Node[0] Epoch[14] Batch [60-80]	Speed: 39929.76 samples/sec	accuracy=nan
2023-03-22 23:02:46,621 Node[0] Epoch[14] Batch [80-100]	Speed: 39994.88 samples/sec	accuracy=nan
2023-03-22 23:02:48,257 Node[0] Epoch[14] Batch [100-120]	Speed: 39897.15 samples/sec	accuracy=nan
2023-03-22 23:02:49,891 Node[0] Epoch[14] Batch [120-140]	Speed: 39944.65 samples/sec	accuracy=nan
2023-03-22 23:02:51,528 Node[0] Epoch[14] Batch [140-160]	Speed: 39891.33 samples/sec	accuracy=nan
2023-03-22 23:02:53,163 Node[0] Epoch[14] Batch [160-180]	Speed: 39925.86 samples/sec	accuracy=nan
2023-03-22 23:02:54,789 Node[0] Epoch[14] Batch [180-200]	Speed: 40150.32 samples/sec	accuracy=nan
2023-03-22 23:02:56,424 Node[0] Epoch[14] Batch [200-220]	Speed: 39912.21 samples/sec	accuracy=nan
2023-03-22 23:02:58,059 Node[0] Epoch[14] Batch [220-240]	Speed: 39934.02 samples/sec	accuracy=nan
2023-03-22 23:02:59,692 Node[0] Epoch[14] Batch [240-260]	Speed: 39970.35 samples/sec	accuracy=nan
2023-03-22 23:03:01,322 Node[0] Epoch[14] Batch [260-280]	Speed: 40038.97 samples/sec	accuracy=nan
2023-03-22 23:03:02,955 Node[0] Epoch[14] Batch [280-300]	Speed: 39984.69 samples/sec	accuracy=nan
2023-03-22 23:03:04,591 Node[0] Epoch[14] Batch [300-320]	Speed: 39896.96 samples/sec	accuracy=nan
2023-03-22 23:03:06,219 Node[0] Epoch[14] Batch [320-340]	Speed: 40113.71 samples/sec	accuracy=nan
2023-03-22 23:03:07,854 Node[0] Epoch[14] Batch [340-360]	Speed: 39927.86 samples/sec	accuracy=nan
2023-03-22 23:03:09,486 Node[0] Epoch[14] Batch [360-380]	Speed: 39995.44 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679544190382, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-22 23:03:10,383 Node[0] Epoch[14] Time cost=32.008
:::MLLOG {"namespace": "", "time_ms": 1679544190383, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40026.91336301666}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679544190460, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-22 23:03:11,176 Node[0] Epoch[14] Validation-accuracy=0.578240
2023-03-22 23:03:11,176 Node[0] Epoch[14] Validation-correct-count=1807.000000
2023-03-22 23:03:11,176 Node[0] Epoch[14] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679544191291, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679544191291, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.57636, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679544191291, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
2023-03-22 23:03:11,291 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544191291, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-22 23:03:11,291 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:11,291 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:11,291 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:11,291 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:11,291 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:11,291 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:11,291 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:11,291 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:11,291 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:11,291 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:11,291 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544191292, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-22 23:03:11,292 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:11,291 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:11,292 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:11,291 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:12,934 Node[0] Epoch[15] Batch [0-20]	Speed: 39971.64 samples/sec	accuracy=nan
2023-03-22 23:03:14,563 Node[0] Epoch[15] Batch [20-40]	Speed: 40067.54 samples/sec	accuracy=nan
2023-03-22 23:03:16,197 Node[0] Epoch[15] Batch [40-60]	Speed: 39949.28 samples/sec	accuracy=nan
2023-03-22 23:03:17,825 Node[0] Epoch[15] Batch [60-80]	Speed: 40101.46 samples/sec	accuracy=nan
2023-03-22 23:03:19,462 Node[0] Epoch[15] Batch [80-100]	Speed: 39879.32 samples/sec	accuracy=nan
2023-03-22 23:03:21,094 Node[0] Epoch[15] Batch [100-120]	Speed: 39992.79 samples/sec	accuracy=nan
2023-03-22 23:03:22,726 Node[0] Epoch[15] Batch [120-140]	Speed: 40017.21 samples/sec	accuracy=nan
2023-03-22 23:03:24,361 Node[0] Epoch[15] Batch [140-160]	Speed: 39920.27 samples/sec	accuracy=nan
2023-03-22 23:03:25,989 Node[0] Epoch[15] Batch [160-180]	Speed: 40096.95 samples/sec	accuracy=nan
2023-03-22 23:03:27,625 Node[0] Epoch[15] Batch [180-200]	Speed: 39901.07 samples/sec	accuracy=nan
2023-03-22 23:03:29,255 Node[0] Epoch[15] Batch [200-220]	Speed: 40059.47 samples/sec	accuracy=nan
2023-03-22 23:03:30,890 Node[0] Epoch[15] Batch [220-240]	Speed: 39919.66 samples/sec	accuracy=nan
2023-03-22 23:03:32,525 Node[0] Epoch[15] Batch [240-260]	Speed: 39932.71 samples/sec	accuracy=nan
2023-03-22 23:03:34,159 Node[0] Epoch[15] Batch [260-280]	Speed: 39942.98 samples/sec	accuracy=nan
2023-03-22 23:03:35,788 Node[0] Epoch[15] Batch [280-300]	Speed: 40064.26 samples/sec	accuracy=nan
2023-03-22 23:03:37,426 Node[0] Epoch[15] Batch [300-320]	Speed: 39865.36 samples/sec	accuracy=nan
2023-03-22 23:03:39,060 Node[0] Epoch[15] Batch [320-340]	Speed: 39933.17 samples/sec	accuracy=nan
2023-03-22 23:03:40,694 Node[0] Epoch[15] Batch [340-360]	Speed: 39955.68 samples/sec	accuracy=nan
2023-03-22 23:03:42,333 Node[0] Epoch[15] Batch [360-380]	Speed: 39828.73 samples/sec	accuracy=nan
2023-03-22 23:03:43,310 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:43,310 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:43,310 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:43,311 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:43,310 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:43,311 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:43,311 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:43,311 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:43,311 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:43,311 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:43,311 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:43,311 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:43,311 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:43,311 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:43,311 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544223311, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-22 23:03:43,312 Node[0] Epoch[15] Time cost=32.020
:::MLLOG {"namespace": "", "time_ms": 1679544223312, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40011.17530894698}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679544223312, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-22 23:03:43,313 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:03:45,033 Node[0] Epoch[16] Batch [0-20]	Speed: 39856.14 samples/sec	accuracy=nan
2023-03-22 23:03:46,670 Node[0] Epoch[16] Batch [20-40]	Speed: 39896.10 samples/sec	accuracy=nan
2023-03-22 23:03:48,302 Node[0] Epoch[16] Batch [40-60]	Speed: 39990.42 samples/sec	accuracy=nan
2023-03-22 23:03:49,932 Node[0] Epoch[16] Batch [60-80]	Speed: 40057.40 samples/sec	accuracy=nan
2023-03-22 23:03:51,567 Node[0] Epoch[16] Batch [80-100]	Speed: 39922.38 samples/sec	accuracy=nan
2023-03-22 23:03:53,203 Node[0] Epoch[16] Batch [100-120]	Speed: 39900.05 samples/sec	accuracy=nan
2023-03-22 23:03:54,840 Node[0] Epoch[16] Batch [120-140]	Speed: 39873.31 samples/sec	accuracy=nan
2023-03-22 23:03:56,469 Node[0] Epoch[16] Batch [140-160]	Speed: 40085.29 samples/sec	accuracy=nan
2023-03-22 23:03:58,101 Node[0] Epoch[16] Batch [160-180]	Speed: 40001.82 samples/sec	accuracy=nan
2023-03-22 23:03:59,738 Node[0] Epoch[16] Batch [180-200]	Speed: 39870.65 samples/sec	accuracy=nan
2023-03-22 23:04:01,374 Node[0] Epoch[16] Batch [200-220]	Speed: 39895.82 samples/sec	accuracy=nan
2023-03-22 23:04:03,006 Node[0] Epoch[16] Batch [220-240]	Speed: 40013.46 samples/sec	accuracy=nan
2023-03-22 23:04:04,640 Node[0] Epoch[16] Batch [240-260]	Speed: 39949.70 samples/sec	accuracy=nan
2023-03-22 23:04:06,272 Node[0] Epoch[16] Batch [260-280]	Speed: 39982.74 samples/sec	accuracy=nan
2023-03-22 23:04:07,904 Node[0] Epoch[16] Batch [280-300]	Speed: 39995.84 samples/sec	accuracy=nan
2023-03-22 23:04:09,538 Node[0] Epoch[16] Batch [300-320]	Speed: 39952.31 samples/sec	accuracy=nan
2023-03-22 23:04:11,171 Node[0] Epoch[16] Batch [320-340]	Speed: 39986.34 samples/sec	accuracy=nan
2023-03-22 23:04:12,806 Node[0] Epoch[16] Batch [340-360]	Speed: 39918.56 samples/sec	accuracy=nan
2023-03-22 23:04:14,443 Node[0] Epoch[16] Batch [360-380]	Speed: 39876.30 samples/sec	accuracy=nan
2023-03-22 23:04:15,342 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:15,342 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:15,343 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:15,343 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:15,343 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:15,343 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:15,343 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:15,343 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:15,343 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:15,343 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:15,343 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:15,343 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:15,343 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:15,343 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544255343, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-22 23:04:15,344 Node[0] Epoch[16] Time cost=32.031
:::MLLOG {"namespace": "", "time_ms": 1679544255344, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39997.10273367823}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1679544255344, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-22 23:04:15,344 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:15,345 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:17,055 Node[0] Epoch[17] Batch [0-20]	Speed: 40136.54 samples/sec	accuracy=nan
2023-03-22 23:04:18,690 Node[0] Epoch[17] Batch [20-40]	Speed: 39913.53 samples/sec	accuracy=nan
2023-03-22 23:04:20,328 Node[0] Epoch[17] Batch [40-60]	Speed: 39846.17 samples/sec	accuracy=nan
2023-03-22 23:04:21,952 Node[0] Epoch[17] Batch [60-80]	Speed: 40214.25 samples/sec	accuracy=nan
2023-03-22 23:04:23,586 Node[0] Epoch[17] Batch [80-100]	Speed: 39934.20 samples/sec	accuracy=nan
2023-03-22 23:04:25,218 Node[0] Epoch[17] Batch [100-120]	Speed: 40002.82 samples/sec	accuracy=nan
2023-03-22 23:04:26,854 Node[0] Epoch[17] Batch [120-140]	Speed: 39915.45 samples/sec	accuracy=nan
2023-03-22 23:04:28,491 Node[0] Epoch[17] Batch [140-160]	Speed: 39882.59 samples/sec	accuracy=nan
2023-03-22 23:04:30,124 Node[0] Epoch[17] Batch [160-180]	Speed: 39965.09 samples/sec	accuracy=nan
2023-03-22 23:04:31,759 Node[0] Epoch[17] Batch [180-200]	Speed: 39936.29 samples/sec	accuracy=nan
2023-03-22 23:04:33,395 Node[0] Epoch[17] Batch [200-220]	Speed: 39881.56 samples/sec	accuracy=nan
2023-03-22 23:04:35,028 Node[0] Epoch[17] Batch [220-240]	Speed: 39983.38 samples/sec	accuracy=nan
2023-03-22 23:04:36,661 Node[0] Epoch[17] Batch [240-260]	Speed: 39978.64 samples/sec	accuracy=nan
2023-03-22 23:04:38,298 Node[0] Epoch[17] Batch [260-280]	Speed: 39880.62 samples/sec	accuracy=nan
2023-03-22 23:04:39,931 Node[0] Epoch[17] Batch [280-300]	Speed: 39979.66 samples/sec	accuracy=nan
2023-03-22 23:04:41,563 Node[0] Epoch[17] Batch [300-320]	Speed: 39993.99 samples/sec	accuracy=nan
2023-03-22 23:04:43,198 Node[0] Epoch[17] Batch [320-340]	Speed: 39934.70 samples/sec	accuracy=nan
2023-03-22 23:04:44,836 Node[0] Epoch[17] Batch [340-360]	Speed: 39842.08 samples/sec	accuracy=nan
2023-03-22 23:04:46,471 Node[0] Epoch[17] Batch [360-380]	Speed: 39927.83 samples/sec	accuracy=nan
2023-03-22 23:04:47,446 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:47,447 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:47,447 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:47,447 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:47,447 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:47,447 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:47,447 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:47,447 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:47,447 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:47,447 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:47,447 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:47,447 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:47,447 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:47,448 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:47,448 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544287447, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-22 23:04:47,448 Node[0] Epoch[17] Time cost=32.104
:::MLLOG {"namespace": "", "time_ms": 1679544287448, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39907.30124008641}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679544287449, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-22 23:04:47,449 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:04:49,167 Node[0] Epoch[18] Batch [0-20]	Speed: 39862.70 samples/sec	accuracy=nan
2023-03-22 23:04:50,801 Node[0] Epoch[18] Batch [20-40]	Speed: 39949.75 samples/sec	accuracy=nan
2023-03-22 23:04:52,430 Node[0] Epoch[18] Batch [40-60]	Speed: 40087.11 samples/sec	accuracy=nan
2023-03-22 23:04:54,064 Node[0] Epoch[18] Batch [60-80]	Speed: 39927.62 samples/sec	accuracy=nan
2023-03-22 23:04:55,699 Node[0] Epoch[18] Batch [80-100]	Speed: 39929.49 samples/sec	accuracy=nan
2023-03-22 23:04:57,333 Node[0] Epoch[18] Batch [100-120]	Speed: 39947.87 samples/sec	accuracy=nan
2023-03-22 23:04:58,962 Node[0] Epoch[18] Batch [120-140]	Speed: 40080.54 samples/sec	accuracy=nan
2023-03-22 23:05:00,598 Node[0] Epoch[18] Batch [140-160]	Speed: 39911.57 samples/sec	accuracy=nan
2023-03-22 23:05:02,232 Node[0] Epoch[18] Batch [160-180]	Speed: 39938.89 samples/sec	accuracy=nan
2023-03-22 23:05:03,860 Node[0] Epoch[18] Batch [180-200]	Speed: 40108.88 samples/sec	accuracy=nan
2023-03-22 23:05:05,493 Node[0] Epoch[18] Batch [200-220]	Speed: 39965.80 samples/sec	accuracy=nan
2023-03-22 23:05:07,127 Node[0] Epoch[18] Batch [220-240]	Speed: 39960.61 samples/sec	accuracy=nan
2023-03-22 23:05:08,763 Node[0] Epoch[18] Batch [240-260]	Speed: 39909.82 samples/sec	accuracy=nan
2023-03-22 23:05:10,396 Node[0] Epoch[18] Batch [260-280]	Speed: 39967.30 samples/sec	accuracy=nan
2023-03-22 23:05:12,029 Node[0] Epoch[18] Batch [280-300]	Speed: 39974.81 samples/sec	accuracy=nan
2023-03-22 23:05:13,666 Node[0] Epoch[18] Batch [300-320]	Speed: 39865.73 samples/sec	accuracy=nan
2023-03-22 23:05:15,301 Node[0] Epoch[18] Batch [320-340]	Speed: 39932.79 samples/sec	accuracy=nan
2023-03-22 23:05:16,932 Node[0] Epoch[18] Batch [340-360]	Speed: 40029.77 samples/sec	accuracy=nan
2023-03-22 23:05:18,566 Node[0] Epoch[18] Batch [360-380]	Speed: 39950.30 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679544319463, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-22 23:05:19,464 Node[0] Epoch[18] Time cost=32.015
:::MLLOG {"namespace": "", "time_ms": 1679544319464, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40017.523164254235}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679544319541, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-22 23:05:20,257 Node[0] Epoch[18] Validation-accuracy=0.644160
2023-03-22 23:05:20,257 Node[0] Epoch[18] Validation-correct-count=2013.000000
2023-03-22 23:05:20,257 Node[0] Epoch[18] Validation-total-count=3125.000000
2023-03-22 23:05:20,374 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:20,374 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:20,374 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:20,374 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544320374, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
2023-03-22 23:05:20,374 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:20,374 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:20,374 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:20,374 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:20,374 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:20,374 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:20,374 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:20,374 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:20,374 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:20,374 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544320375, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.65002, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-22 23:05:20,375 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544320375, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679544320375, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679544320375, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-22 23:05:20,375 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:22,023 Node[0] Epoch[19] Batch [0-20]	Speed: 39833.33 samples/sec	accuracy=nan
2023-03-22 23:05:23,654 Node[0] Epoch[19] Batch [20-40]	Speed: 40033.28 samples/sec	accuracy=nan
2023-03-22 23:05:25,287 Node[0] Epoch[19] Batch [40-60]	Speed: 39961.50 samples/sec	accuracy=nan
2023-03-22 23:05:26,923 Node[0] Epoch[19] Batch [60-80]	Speed: 39918.92 samples/sec	accuracy=nan
2023-03-22 23:05:28,560 Node[0] Epoch[19] Batch [80-100]	Speed: 39861.65 samples/sec	accuracy=nan
2023-03-22 23:05:30,189 Node[0] Epoch[19] Batch [100-120]	Speed: 40089.47 samples/sec	accuracy=nan
2023-03-22 23:05:31,823 Node[0] Epoch[19] Batch [120-140]	Speed: 39935.57 samples/sec	accuracy=nan
2023-03-22 23:05:33,451 Node[0] Epoch[19] Batch [140-160]	Speed: 40101.20 samples/sec	accuracy=nan
2023-03-22 23:05:35,087 Node[0] Epoch[19] Batch [160-180]	Speed: 39903.39 samples/sec	accuracy=nan
2023-03-22 23:05:36,722 Node[0] Epoch[19] Batch [180-200]	Speed: 39926.04 samples/sec	accuracy=nan
2023-03-22 23:05:38,355 Node[0] Epoch[19] Batch [200-220]	Speed: 39969.01 samples/sec	accuracy=nan
2023-03-22 23:05:39,991 Node[0] Epoch[19] Batch [220-240]	Speed: 39902.67 samples/sec	accuracy=nan
2023-03-22 23:05:41,625 Node[0] Epoch[19] Batch [240-260]	Speed: 39959.42 samples/sec	accuracy=nan
2023-03-22 23:05:43,259 Node[0] Epoch[19] Batch [260-280]	Speed: 39945.97 samples/sec	accuracy=nan
2023-03-22 23:05:44,897 Node[0] Epoch[19] Batch [280-300]	Speed: 39860.44 samples/sec	accuracy=nan
2023-03-22 23:05:46,533 Node[0] Epoch[19] Batch [300-320]	Speed: 39911.15 samples/sec	accuracy=nan
2023-03-22 23:05:48,163 Node[0] Epoch[19] Batch [320-340]	Speed: 40037.02 samples/sec	accuracy=nan
2023-03-22 23:05:49,799 Node[0] Epoch[19] Batch [340-360]	Speed: 39911.01 samples/sec	accuracy=nan
2023-03-22 23:05:51,434 Node[0] Epoch[19] Batch [360-380]	Speed: 39929.91 samples/sec	accuracy=nan
2023-03-22 23:05:52,409 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:52,409 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:52,409 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:52,409 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:52,409 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:52,409 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:52,409 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:52,409 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:52,409 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:52,409 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:52,409 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:52,409 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:52,410 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:52,410 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544352409, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-22 23:05:52,410 Node[0] Epoch[19] Time cost=32.035
:::MLLOG {"namespace": "", "time_ms": 1679544352411, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39992.711715845886}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679544352411, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-22 23:05:52,411 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:52,411 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:05:54,129 Node[0] Epoch[20] Batch [0-20]	Speed: 39875.48 samples/sec	accuracy=nan
2023-03-22 23:05:55,764 Node[0] Epoch[20] Batch [20-40]	Speed: 39933.02 samples/sec	accuracy=nan
2023-03-22 23:05:57,399 Node[0] Epoch[20] Batch [40-60]	Speed: 39932.76 samples/sec	accuracy=nan
2023-03-22 23:05:59,028 Node[0] Epoch[20] Batch [60-80]	Speed: 40055.98 samples/sec	accuracy=nan
2023-03-22 23:06:00,666 Node[0] Epoch[20] Batch [80-100]	Speed: 39871.37 samples/sec	accuracy=nan
2023-03-22 23:06:02,301 Node[0] Epoch[20] Batch [100-120]	Speed: 39914.07 samples/sec	accuracy=nan
2023-03-22 23:06:03,938 Node[0] Epoch[20] Batch [120-140]	Speed: 39882.49 samples/sec	accuracy=nan
2023-03-22 23:06:05,574 Node[0] Epoch[20] Batch [140-160]	Speed: 39902.74 samples/sec	accuracy=nan
2023-03-22 23:06:07,207 Node[0] Epoch[20] Batch [160-180]	Speed: 39964.22 samples/sec	accuracy=nan
2023-03-22 23:06:08,840 Node[0] Epoch[20] Batch [180-200]	Speed: 39988.36 samples/sec	accuracy=nan
2023-03-22 23:06:10,474 Node[0] Epoch[20] Batch [200-220]	Speed: 39952.27 samples/sec	accuracy=nan
2023-03-22 23:06:12,110 Node[0] Epoch[20] Batch [220-240]	Speed: 39903.03 samples/sec	accuracy=nan
2023-03-22 23:06:13,744 Node[0] Epoch[20] Batch [240-260]	Speed: 39938.98 samples/sec	accuracy=nan
2023-03-22 23:06:15,375 Node[0] Epoch[20] Batch [260-280]	Speed: 40018.50 samples/sec	accuracy=nan
2023-03-22 23:06:17,009 Node[0] Epoch[20] Batch [280-300]	Speed: 39962.07 samples/sec	accuracy=nan
2023-03-22 23:06:18,645 Node[0] Epoch[20] Batch [300-320]	Speed: 39907.06 samples/sec	accuracy=nan
2023-03-22 23:06:20,277 Node[0] Epoch[20] Batch [320-340]	Speed: 40003.67 samples/sec	accuracy=nan
2023-03-22 23:06:21,908 Node[0] Epoch[20] Batch [340-360]	Speed: 40004.72 samples/sec	accuracy=nan
2023-03-22 23:06:23,546 Node[0] Epoch[20] Batch [360-380]	Speed: 39858.08 samples/sec	accuracy=nan
2023-03-22 23:06:24,444 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:24,444 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:24,444 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:24,444 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:24,444 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:24,444 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:24,444 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:24,445 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:24,445 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:24,445 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:24,445 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:24,445 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:24,445 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:24,445 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:24,445 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544384445, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-22 23:06:24,446 Node[0] Epoch[20] Time cost=32.034
:::MLLOG {"namespace": "", "time_ms": 1679544384446, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39993.369815929414}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1679544384446, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-22 23:06:24,446 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:26,161 Node[0] Epoch[21] Batch [0-20]	Speed: 40025.30 samples/sec	accuracy=nan
2023-03-22 23:06:27,796 Node[0] Epoch[21] Batch [20-40]	Speed: 39925.94 samples/sec	accuracy=nan
2023-03-22 23:06:29,433 Node[0] Epoch[21] Batch [40-60]	Speed: 39875.81 samples/sec	accuracy=nan
2023-03-22 23:06:31,060 Node[0] Epoch[21] Batch [60-80]	Speed: 40115.26 samples/sec	accuracy=nan
2023-03-22 23:06:32,693 Node[0] Epoch[21] Batch [80-100]	Speed: 39974.50 samples/sec	accuracy=nan
2023-03-22 23:06:34,325 Node[0] Epoch[21] Batch [100-120]	Speed: 39994.60 samples/sec	accuracy=nan
2023-03-22 23:06:35,960 Node[0] Epoch[21] Batch [120-140]	Speed: 39933.09 samples/sec	accuracy=nan
2023-03-22 23:06:37,595 Node[0] Epoch[21] Batch [140-160]	Speed: 39919.79 samples/sec	accuracy=nan
2023-03-22 23:06:39,231 Node[0] Epoch[21] Batch [160-180]	Speed: 39904.92 samples/sec	accuracy=nan
2023-03-22 23:06:40,862 Node[0] Epoch[21] Batch [180-200]	Speed: 40019.08 samples/sec	accuracy=nan
2023-03-22 23:06:42,498 Node[0] Epoch[21] Batch [200-220]	Speed: 39920.44 samples/sec	accuracy=nan
2023-03-22 23:06:44,135 Node[0] Epoch[21] Batch [220-240]	Speed: 39868.99 samples/sec	accuracy=nan
2023-03-22 23:06:45,770 Node[0] Epoch[21] Batch [240-260]	Speed: 39924.01 samples/sec	accuracy=nan
2023-03-22 23:06:47,405 Node[0] Epoch[21] Batch [260-280]	Speed: 39923.01 samples/sec	accuracy=nan
2023-03-22 23:06:49,042 Node[0] Epoch[21] Batch [280-300]	Speed: 39881.11 samples/sec	accuracy=nan
2023-03-22 23:06:50,672 Node[0] Epoch[21] Batch [300-320]	Speed: 40043.50 samples/sec	accuracy=nan
2023-03-22 23:06:52,308 Node[0] Epoch[21] Batch [320-340]	Speed: 39916.63 samples/sec	accuracy=nan
2023-03-22 23:06:53,944 Node[0] Epoch[21] Batch [340-360]	Speed: 39889.28 samples/sec	accuracy=nan
2023-03-22 23:06:55,575 Node[0] Epoch[21] Batch [360-380]	Speed: 40036.19 samples/sec	accuracy=nan
2023-03-22 23:06:56,555 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:56,555 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:56,556 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:56,556 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:56,556 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:56,556 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:56,556 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:56,556 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:56,556 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:56,556 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:56,556 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:56,556 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:56,556 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:56,556 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544416556, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-22 23:06:56,557 Node[0] Epoch[21] Time cost=32.111
:::MLLOG {"namespace": "", "time_ms": 1679544416557, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39898.24316487106}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
2023-03-22 23:06:56,557 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544416557, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-22 23:06:56,557 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:06:58,274 Node[0] Epoch[22] Batch [0-20]	Speed: 39919.22 samples/sec	accuracy=nan
2023-03-22 23:06:59,909 Node[0] Epoch[22] Batch [20-40]	Speed: 39919.43 samples/sec	accuracy=nan
2023-03-22 23:07:01,541 Node[0] Epoch[22] Batch [40-60]	Speed: 40021.99 samples/sec	accuracy=nan
2023-03-22 23:07:03,177 Node[0] Epoch[22] Batch [60-80]	Speed: 39900.21 samples/sec	accuracy=nan
2023-03-22 23:07:04,813 Node[0] Epoch[22] Batch [80-100]	Speed: 39886.29 samples/sec	accuracy=nan
2023-03-22 23:07:06,449 Node[0] Epoch[22] Batch [100-120]	Speed: 39909.73 samples/sec	accuracy=nan
2023-03-22 23:07:08,086 Node[0] Epoch[22] Batch [120-140]	Speed: 39886.80 samples/sec	accuracy=nan
2023-03-22 23:07:09,716 Node[0] Epoch[22] Batch [140-160]	Speed: 40036.73 samples/sec	accuracy=nan
2023-03-22 23:07:11,353 Node[0] Epoch[22] Batch [160-180]	Speed: 39868.68 samples/sec	accuracy=nan
2023-03-22 23:07:12,988 Node[0] Epoch[22] Batch [180-200]	Speed: 39933.17 samples/sec	accuracy=nan
2023-03-22 23:07:14,624 Node[0] Epoch[22] Batch [200-220]	Speed: 39907.15 samples/sec	accuracy=nan
2023-03-22 23:07:16,257 Node[0] Epoch[22] Batch [220-240]	Speed: 39982.43 samples/sec	accuracy=nan
2023-03-22 23:07:17,891 Node[0] Epoch[22] Batch [240-260]	Speed: 39945.78 samples/sec	accuracy=nan
2023-03-22 23:07:19,525 Node[0] Epoch[22] Batch [260-280]	Speed: 39943.75 samples/sec	accuracy=nan
2023-03-22 23:07:21,161 Node[0] Epoch[22] Batch [280-300]	Speed: 39908.91 samples/sec	accuracy=nan
2023-03-22 23:07:22,796 Node[0] Epoch[22] Batch [300-320]	Speed: 39936.12 samples/sec	accuracy=nan
2023-03-22 23:07:24,424 Node[0] Epoch[22] Batch [320-340]	Speed: 40077.35 samples/sec	accuracy=nan
2023-03-22 23:07:26,063 Node[0] Epoch[22] Batch [340-360]	Speed: 39837.90 samples/sec	accuracy=nan
2023-03-22 23:07:27,698 Node[0] Epoch[22] Batch [360-380]	Speed: 39934.90 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679544448597, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-22 23:07:28,598 Node[0] Epoch[22] Time cost=32.041
:::MLLOG {"namespace": "", "time_ms": 1679544448598, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39985.35354259031}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679544448676, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-22 23:07:29,434 Node[0] Epoch[22] Validation-accuracy=0.695360
2023-03-22 23:07:29,434 Node[0] Epoch[22] Validation-correct-count=2173.000000
2023-03-22 23:07:29,435 Node[0] Epoch[22] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679544449508, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679544449509, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.69538, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
2023-03-22 23:07:29,509 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:07:29,509 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544449509, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
2023-03-22 23:07:29,509 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:07:29,509 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544449509, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-22 23:07:29,509 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:07:29,509 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:07:29,509 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:07:29,509 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:07:29,509 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:07:29,509 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:07:29,509 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:07:29,509 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:07:29,509 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:07:29,509 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:07:29,509 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544449509, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-22 23:07:29,509 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:07:31,157 Node[0] Epoch[23] Batch [0-20]	Speed: 39858.60 samples/sec	accuracy=nan
2023-03-22 23:07:32,790 Node[0] Epoch[23] Batch [20-40]	Speed: 39969.40 samples/sec	accuracy=nan
2023-03-22 23:07:34,427 Node[0] Epoch[23] Batch [40-60]	Speed: 39890.83 samples/sec	accuracy=nan
2023-03-22 23:07:36,060 Node[0] Epoch[23] Batch [60-80]	Speed: 39972.79 samples/sec	accuracy=nan
2023-03-22 23:07:37,695 Node[0] Epoch[23] Batch [80-100]	Speed: 39926.82 samples/sec	accuracy=nan
2023-03-22 23:07:39,330 Node[0] Epoch[23] Batch [100-120]	Speed: 39913.71 samples/sec	accuracy=nan
2023-03-22 23:07:40,966 Node[0] Epoch[23] Batch [120-140]	Speed: 39915.90 samples/sec	accuracy=nan
2023-03-22 23:07:42,600 Node[0] Epoch[23] Batch [140-160]	Speed: 39957.76 samples/sec	accuracy=nan
2023-03-22 23:07:44,236 Node[0] Epoch[23] Batch [160-180]	Speed: 39892.20 samples/sec	accuracy=nan
2023-03-22 23:07:45,868 Node[0] Epoch[23] Batch [180-200]	Speed: 39987.93 samples/sec	accuracy=nan
2023-03-22 23:07:47,499 Node[0] Epoch[23] Batch [200-220]	Speed: 40031.65 samples/sec	accuracy=nan
2023-03-22 23:07:49,133 Node[0] Epoch[23] Batch [220-240]	Speed: 39958.28 samples/sec	accuracy=nan
2023-03-22 23:07:50,766 Node[0] Epoch[23] Batch [240-260]	Speed: 39958.98 samples/sec	accuracy=nan
2023-03-22 23:07:52,402 Node[0] Epoch[23] Batch [260-280]	Speed: 39911.17 samples/sec	accuracy=nan
2023-03-22 23:07:54,034 Node[0] Epoch[23] Batch [280-300]	Speed: 40008.96 samples/sec	accuracy=nan
2023-03-22 23:07:55,669 Node[0] Epoch[23] Batch [300-320]	Speed: 39923.63 samples/sec	accuracy=nan
2023-03-22 23:07:57,302 Node[0] Epoch[23] Batch [320-340]	Speed: 39979.70 samples/sec	accuracy=nan
2023-03-22 23:07:58,935 Node[0] Epoch[23] Batch [340-360]	Speed: 39962.26 samples/sec	accuracy=nan
2023-03-22 23:08:00,570 Node[0] Epoch[23] Batch [360-380]	Speed: 39942.65 samples/sec	accuracy=nan
2023-03-22 23:08:01,546 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:01,546 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:01,546 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:01,546 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:01,547 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:01,547 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:01,547 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:01,547 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:01,547 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:01,547 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:01,547 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:01,547 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:01,547 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:01,547 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544481547, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-22 23:08:01,548 Node[0] Epoch[23] Time cost=32.038
:::MLLOG {"namespace": "", "time_ms": 1679544481548, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39988.48979426177}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
2023-03-22 23:08:01,548 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544481548, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-22 23:08:01,548 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:03,266 Node[0] Epoch[24] Batch [0-20]	Speed: 39875.93 samples/sec	accuracy=nan
2023-03-22 23:08:04,902 Node[0] Epoch[24] Batch [20-40]	Speed: 39914.53 samples/sec	accuracy=nan
2023-03-22 23:08:06,534 Node[0] Epoch[24] Batch [40-60]	Speed: 39997.05 samples/sec	accuracy=nan
2023-03-22 23:08:08,167 Node[0] Epoch[24] Batch [60-80]	Speed: 39984.51 samples/sec	accuracy=nan
2023-03-22 23:08:09,802 Node[0] Epoch[24] Batch [80-100]	Speed: 39914.31 samples/sec	accuracy=nan
2023-03-22 23:08:11,439 Node[0] Epoch[24] Batch [100-120]	Speed: 39875.58 samples/sec	accuracy=nan
2023-03-22 23:08:13,072 Node[0] Epoch[24] Batch [120-140]	Speed: 39972.17 samples/sec	accuracy=nan
2023-03-22 23:08:14,705 Node[0] Epoch[24] Batch [140-160]	Speed: 39980.29 samples/sec	accuracy=nan
2023-03-22 23:08:16,343 Node[0] Epoch[24] Batch [160-180]	Speed: 39862.35 samples/sec	accuracy=nan
2023-03-22 23:08:17,978 Node[0] Epoch[24] Batch [180-200]	Speed: 39912.73 samples/sec	accuracy=nan
2023-03-22 23:08:19,613 Node[0] Epoch[24] Batch [200-220]	Speed: 39948.71 samples/sec	accuracy=nan
2023-03-22 23:08:21,247 Node[0] Epoch[24] Batch [220-240]	Speed: 39930.20 samples/sec	accuracy=nan
2023-03-22 23:08:22,885 Node[0] Epoch[24] Batch [240-260]	Speed: 39867.85 samples/sec	accuracy=nan
2023-03-22 23:08:24,518 Node[0] Epoch[24] Batch [260-280]	Speed: 39969.49 samples/sec	accuracy=nan
2023-03-22 23:08:26,154 Node[0] Epoch[24] Batch [280-300]	Speed: 39901.20 samples/sec	accuracy=nan
2023-03-22 23:08:27,790 Node[0] Epoch[24] Batch [300-320]	Speed: 39901.76 samples/sec	accuracy=nan
2023-03-22 23:08:29,422 Node[0] Epoch[24] Batch [320-340]	Speed: 39997.57 samples/sec	accuracy=nan
2023-03-22 23:08:31,060 Node[0] Epoch[24] Batch [340-360]	Speed: 39856.72 samples/sec	accuracy=nan
2023-03-22 23:08:32,694 Node[0] Epoch[24] Batch [360-380]	Speed: 39962.87 samples/sec	accuracy=nan
2023-03-22 23:08:33,594 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:33,594 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:33,594 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:33,594 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:33,594 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:33,594 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:33,594 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:33,594 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:33,594 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:33,594 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:33,595 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:33,595 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:33,595 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:33,595 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:33,595 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544513595, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-22 23:08:33,595 Node[0] Epoch[24] Time cost=32.047
:::MLLOG {"namespace": "", "time_ms": 1679544513595, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39977.62094602044}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679544513596, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-22 23:08:33,596 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:08:35,316 Node[0] Epoch[25] Batch [0-20]	Speed: 39875.46 samples/sec	accuracy=nan
2023-03-22 23:08:36,948 Node[0] Epoch[25] Batch [20-40]	Speed: 40003.33 samples/sec	accuracy=nan
2023-03-22 23:08:38,582 Node[0] Epoch[25] Batch [40-60]	Speed: 39957.71 samples/sec	accuracy=nan
2023-03-22 23:08:40,217 Node[0] Epoch[25] Batch [60-80]	Speed: 39906.72 samples/sec	accuracy=nan
2023-03-22 23:08:41,851 Node[0] Epoch[25] Batch [80-100]	Speed: 39958.51 samples/sec	accuracy=nan
2023-03-22 23:08:43,484 Node[0] Epoch[25] Batch [100-120]	Speed: 39971.56 samples/sec	accuracy=nan
2023-03-22 23:08:45,120 Node[0] Epoch[25] Batch [120-140]	Speed: 39911.21 samples/sec	accuracy=nan
2023-03-22 23:08:46,755 Node[0] Epoch[25] Batch [140-160]	Speed: 39912.51 samples/sec	accuracy=nan
2023-03-22 23:08:48,387 Node[0] Epoch[25] Batch [160-180]	Speed: 40021.45 samples/sec	accuracy=nan
2023-03-22 23:08:50,022 Node[0] Epoch[25] Batch [180-200]	Speed: 39920.05 samples/sec	accuracy=nan
2023-03-22 23:08:51,656 Node[0] Epoch[25] Batch [200-220]	Speed: 39947.80 samples/sec	accuracy=nan
2023-03-22 23:08:53,287 Node[0] Epoch[25] Batch [220-240]	Speed: 40031.00 samples/sec	accuracy=nan
2023-03-22 23:08:54,924 Node[0] Epoch[25] Batch [240-260]	Speed: 39871.90 samples/sec	accuracy=nan
2023-03-22 23:08:56,560 Node[0] Epoch[25] Batch [260-280]	Speed: 39901.25 samples/sec	accuracy=nan
2023-03-22 23:08:58,191 Node[0] Epoch[25] Batch [280-300]	Speed: 40028.72 samples/sec	accuracy=nan
2023-03-22 23:08:59,827 Node[0] Epoch[25] Batch [300-320]	Speed: 39902.77 samples/sec	accuracy=nan
2023-03-22 23:09:01,464 Node[0] Epoch[25] Batch [320-340]	Speed: 39878.99 samples/sec	accuracy=nan
2023-03-22 23:09:03,097 Node[0] Epoch[25] Batch [340-360]	Speed: 39964.52 samples/sec	accuracy=nan
2023-03-22 23:09:04,733 Node[0] Epoch[25] Batch [360-380]	Speed: 39905.32 samples/sec	accuracy=nan
2023-03-22 23:09:05,713 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:05,713 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:05,713 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:05,713 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:05,713 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:05,713 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:05,714 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:05,714 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:05,714 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:05,714 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:05,714 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:05,714 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:05,714 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:05,714 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544545714, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-22 23:09:05,715 Node[0] Epoch[25] Time cost=32.119
2023-03-22 23:09:05,714 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544545715, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39888.47678637593}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679544545715, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-22 23:09:05,715 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:07,430 Node[0] Epoch[26] Batch [0-20]	Speed: 39967.62 samples/sec	accuracy=nan
2023-03-22 23:09:09,067 Node[0] Epoch[26] Batch [20-40]	Speed: 39878.88 samples/sec	accuracy=nan
2023-03-22 23:09:10,705 Node[0] Epoch[26] Batch [40-60]	Speed: 39852.85 samples/sec	accuracy=nan
2023-03-22 23:09:12,336 Node[0] Epoch[26] Batch [60-80]	Speed: 40018.60 samples/sec	accuracy=nan
2023-03-22 23:09:13,971 Node[0] Epoch[26] Batch [80-100]	Speed: 39932.02 samples/sec	accuracy=nan
2023-03-22 23:09:15,609 Node[0] Epoch[26] Batch [100-120]	Speed: 39860.23 samples/sec	accuracy=nan
2023-03-22 23:09:17,243 Node[0] Epoch[26] Batch [120-140]	Speed: 39934.56 samples/sec	accuracy=nan
2023-03-22 23:09:18,874 Node[0] Epoch[26] Batch [140-160]	Speed: 40024.85 samples/sec	accuracy=nan
2023-03-22 23:09:20,510 Node[0] Epoch[26] Batch [160-180]	Speed: 39905.65 samples/sec	accuracy=nan
2023-03-22 23:09:22,142 Node[0] Epoch[26] Batch [180-200]	Speed: 39997.79 samples/sec	accuracy=nan
2023-03-22 23:09:23,777 Node[0] Epoch[26] Batch [200-220]	Speed: 39930.03 samples/sec	accuracy=nan
2023-03-22 23:09:25,418 Node[0] Epoch[26] Batch [220-240]	Speed: 39785.07 samples/sec	accuracy=nan
2023-03-22 23:09:27,055 Node[0] Epoch[26] Batch [240-260]	Speed: 39882.81 samples/sec	accuracy=nan
2023-03-22 23:09:28,686 Node[0] Epoch[26] Batch [260-280]	Speed: 40007.63 samples/sec	accuracy=nan
2023-03-22 23:09:30,326 Node[0] Epoch[26] Batch [280-300]	Speed: 39815.50 samples/sec	accuracy=nan
2023-03-22 23:09:31,957 Node[0] Epoch[26] Batch [300-320]	Speed: 40030.29 samples/sec	accuracy=nan
2023-03-22 23:09:33,595 Node[0] Epoch[26] Batch [320-340]	Speed: 39851.00 samples/sec	accuracy=nan
2023-03-22 23:09:35,230 Node[0] Epoch[26] Batch [340-360]	Speed: 39913.86 samples/sec	accuracy=nan
2023-03-22 23:09:36,866 Node[0] Epoch[26] Batch [360-380]	Speed: 39915.17 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679544577761, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-22 23:09:37,762 Node[0] Epoch[26] Time cost=32.047
:::MLLOG {"namespace": "", "time_ms": 1679544577763, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39977.30717177465}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679544577839, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-22 23:09:38,551 Node[0] Epoch[26] Validation-accuracy=0.732480
2023-03-22 23:09:38,551 Node[0] Epoch[26] Validation-correct-count=2289.000000
2023-03-22 23:09:38,551 Node[0] Epoch[26] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679544578682, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679544578682, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.73252, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679544578682, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
2023-03-22 23:09:38,682 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:38,682 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:38,682 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544578682, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-22 23:09:38,682 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:38,682 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:38,682 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:38,682 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:38,682 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:38,682 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:38,682 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:38,682 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:38,682 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:38,682 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:38,682 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:38,682 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544578683, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-22 23:09:38,683 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:09:40,330 Node[0] Epoch[27] Batch [0-20]	Speed: 39783.46 samples/sec	accuracy=nan
2023-03-22 23:09:41,964 Node[0] Epoch[27] Batch [20-40]	Speed: 39965.04 samples/sec	accuracy=nan
2023-03-22 23:09:43,597 Node[0] Epoch[27] Batch [40-60]	Speed: 39965.47 samples/sec	accuracy=nan
2023-03-22 23:09:45,233 Node[0] Epoch[27] Batch [60-80]	Speed: 39917.93 samples/sec	accuracy=nan
2023-03-22 23:09:46,868 Node[0] Epoch[27] Batch [80-100]	Speed: 39912.56 samples/sec	accuracy=nan
2023-03-22 23:09:48,499 Node[0] Epoch[27] Batch [100-120]	Speed: 40028.50 samples/sec	accuracy=nan
2023-03-22 23:09:50,131 Node[0] Epoch[27] Batch [120-140]	Speed: 40005.07 samples/sec	accuracy=nan
2023-03-22 23:09:51,767 Node[0] Epoch[27] Batch [140-160]	Speed: 39904.74 samples/sec	accuracy=nan
2023-03-22 23:09:53,398 Node[0] Epoch[27] Batch [160-180]	Speed: 40024.44 samples/sec	accuracy=nan
2023-03-22 23:09:55,034 Node[0] Epoch[27] Batch [180-200]	Speed: 39904.59 samples/sec	accuracy=nan
2023-03-22 23:09:56,670 Node[0] Epoch[27] Batch [200-220]	Speed: 39901.41 samples/sec	accuracy=nan
2023-03-22 23:09:58,297 Node[0] Epoch[27] Batch [220-240]	Speed: 40101.86 samples/sec	accuracy=nan
2023-03-22 23:09:59,937 Node[0] Epoch[27] Batch [240-260]	Speed: 39821.38 samples/sec	accuracy=nan
2023-03-22 23:10:01,574 Node[0] Epoch[27] Batch [260-280]	Speed: 39878.45 samples/sec	accuracy=nan
2023-03-22 23:10:03,205 Node[0] Epoch[27] Batch [280-300]	Speed: 40010.85 samples/sec	accuracy=nan
2023-03-22 23:10:04,839 Node[0] Epoch[27] Batch [300-320]	Speed: 39952.27 samples/sec	accuracy=nan
2023-03-22 23:10:06,474 Node[0] Epoch[27] Batch [320-340]	Speed: 39930.44 samples/sec	accuracy=nan
2023-03-22 23:10:08,113 Node[0] Epoch[27] Batch [340-360]	Speed: 39824.87 samples/sec	accuracy=nan
2023-03-22 23:10:09,747 Node[0] Epoch[27] Batch [360-380]	Speed: 39963.96 samples/sec	accuracy=nan
2023-03-22 23:10:10,728 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:10,728 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:10,728 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:10,728 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:10,728 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:10,728 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:10,728 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:10,728 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:10,728 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:10,728 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:10,728 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:10,729 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:10,728 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:10,729 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:10,729 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544610729, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-22 23:10:10,730 Node[0] Epoch[27] Time cost=32.047
:::MLLOG {"namespace": "", "time_ms": 1679544610730, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39977.64682146244}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679544610730, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-22 23:10:10,730 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:12,447 Node[0] Epoch[28] Batch [0-20]	Speed: 39907.22 samples/sec	accuracy=nan
2023-03-22 23:10:14,078 Node[0] Epoch[28] Batch [20-40]	Speed: 40016.22 samples/sec	accuracy=nan
2023-03-22 23:10:15,715 Node[0] Epoch[28] Batch [40-60]	Speed: 39902.08 samples/sec	accuracy=nan
2023-03-22 23:10:17,348 Node[0] Epoch[28] Batch [60-80]	Speed: 39974.10 samples/sec	accuracy=nan
2023-03-22 23:10:18,982 Node[0] Epoch[28] Batch [80-100]	Speed: 39939.00 samples/sec	accuracy=nan
2023-03-22 23:10:20,618 Node[0] Epoch[28] Batch [100-120]	Speed: 39914.13 samples/sec	accuracy=nan
2023-03-22 23:10:22,254 Node[0] Epoch[28] Batch [120-140]	Speed: 39881.37 samples/sec	accuracy=nan
2023-03-22 23:10:23,892 Node[0] Epoch[28] Batch [140-160]	Speed: 39874.08 samples/sec	accuracy=nan
2023-03-22 23:10:25,527 Node[0] Epoch[28] Batch [160-180]	Speed: 39920.58 samples/sec	accuracy=nan
2023-03-22 23:10:27,159 Node[0] Epoch[28] Batch [180-200]	Speed: 40002.13 samples/sec	accuracy=nan
2023-03-22 23:10:28,793 Node[0] Epoch[28] Batch [200-220]	Speed: 39944.29 samples/sec	accuracy=nan
2023-03-22 23:10:30,429 Node[0] Epoch[28] Batch [220-240]	Speed: 39904.33 samples/sec	accuracy=nan
2023-03-22 23:10:32,065 Node[0] Epoch[28] Batch [240-260]	Speed: 39912.16 samples/sec	accuracy=nan
2023-03-22 23:10:33,701 Node[0] Epoch[28] Batch [260-280]	Speed: 39889.09 samples/sec	accuracy=nan
2023-03-22 23:10:35,334 Node[0] Epoch[28] Batch [280-300]	Speed: 39967.56 samples/sec	accuracy=nan
2023-03-22 23:10:36,966 Node[0] Epoch[28] Batch [300-320]	Speed: 40020.50 samples/sec	accuracy=nan
2023-03-22 23:10:38,601 Node[0] Epoch[28] Batch [320-340]	Speed: 39914.16 samples/sec	accuracy=nan
2023-03-22 23:10:40,237 Node[0] Epoch[28] Batch [340-360]	Speed: 39907.68 samples/sec	accuracy=nan
2023-03-22 23:10:41,873 Node[0] Epoch[28] Batch [360-380]	Speed: 39891.14 samples/sec	accuracy=nan
2023-03-22 23:10:42,766 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:42,766 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:42,767 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:42,767 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:42,767 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:42,767 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:42,767 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:42,767 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:42,767 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:42,767 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:42,767 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:42,767 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:42,767 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:42,768 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544642767, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-22 23:10:42,768 Node[0] Epoch[28] Time cost=32.038
:::MLLOG {"namespace": "", "time_ms": 1679544642768, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39989.4016014696}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
2023-03-22 23:10:42,768 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544642768, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-22 23:10:42,769 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:10:44,487 Node[0] Epoch[29] Batch [0-20]	Speed: 39911.36 samples/sec	accuracy=nan
2023-03-22 23:10:46,120 Node[0] Epoch[29] Batch [20-40]	Speed: 39993.62 samples/sec	accuracy=nan
2023-03-22 23:10:47,756 Node[0] Epoch[29] Batch [40-60]	Speed: 39895.52 samples/sec	accuracy=nan
2023-03-22 23:10:49,391 Node[0] Epoch[29] Batch [60-80]	Speed: 39918.99 samples/sec	accuracy=nan
2023-03-22 23:10:51,026 Node[0] Epoch[29] Batch [80-100]	Speed: 39931.65 samples/sec	accuracy=nan
2023-03-22 23:10:52,662 Node[0] Epoch[29] Batch [100-120]	Speed: 39895.22 samples/sec	accuracy=nan
2023-03-22 23:10:54,297 Node[0] Epoch[29] Batch [120-140]	Speed: 39942.48 samples/sec	accuracy=nan
2023-03-22 23:10:55,934 Node[0] Epoch[29] Batch [140-160]	Speed: 39877.75 samples/sec	accuracy=nan
2023-03-22 23:10:57,567 Node[0] Epoch[29] Batch [160-180]	Speed: 39977.78 samples/sec	accuracy=nan
2023-03-22 23:10:59,204 Node[0] Epoch[29] Batch [180-200]	Speed: 39862.69 samples/sec	accuracy=nan
2023-03-22 23:11:00,844 Node[0] Epoch[29] Batch [200-220]	Speed: 39806.24 samples/sec	accuracy=nan
2023-03-22 23:11:02,482 Node[0] Epoch[29] Batch [220-240]	Speed: 39863.84 samples/sec	accuracy=nan
2023-03-22 23:11:04,110 Node[0] Epoch[29] Batch [240-260]	Speed: 40101.10 samples/sec	accuracy=nan
2023-03-22 23:11:05,745 Node[0] Epoch[29] Batch [260-280]	Speed: 39906.97 samples/sec	accuracy=nan
2023-03-22 23:11:07,384 Node[0] Epoch[29] Batch [280-300]	Speed: 39852.48 samples/sec	accuracy=nan
2023-03-22 23:11:09,019 Node[0] Epoch[29] Batch [300-320]	Speed: 39913.24 samples/sec	accuracy=nan
2023-03-22 23:11:10,652 Node[0] Epoch[29] Batch [320-340]	Speed: 39966.81 samples/sec	accuracy=nan
2023-03-22 23:11:12,288 Node[0] Epoch[29] Batch [340-360]	Speed: 39905.73 samples/sec	accuracy=nan
2023-03-22 23:11:13,925 Node[0] Epoch[29] Batch [360-380]	Speed: 39890.89 samples/sec	accuracy=nan
2023-03-22 23:11:14,902 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:14,902 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:14,902 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:14,902 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:14,902 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:14,903 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:14,903 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:14,903 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:14,903 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:14,903 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:14,903 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:14,903 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:14,903 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:14,903 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:14,903 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544674903, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-22 23:11:14,904 Node[0] Epoch[29] Time cost=32.135
:::MLLOG {"namespace": "", "time_ms": 1679544674904, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39867.89202106474}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679544674904, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-22 23:11:14,904 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:16,623 Node[0] Epoch[30] Batch [0-20]	Speed: 39860.03 samples/sec	accuracy=nan
2023-03-22 23:11:18,257 Node[0] Epoch[30] Batch [20-40]	Speed: 39948.99 samples/sec	accuracy=nan
2023-03-22 23:11:19,892 Node[0] Epoch[30] Batch [40-60]	Speed: 39928.25 samples/sec	accuracy=nan
2023-03-22 23:11:21,527 Node[0] Epoch[30] Batch [60-80]	Speed: 39928.24 samples/sec	accuracy=nan
2023-03-22 23:11:23,163 Node[0] Epoch[30] Batch [80-100]	Speed: 39898.37 samples/sec	accuracy=nan
2023-03-22 23:11:24,800 Node[0] Epoch[30] Batch [100-120]	Speed: 39889.04 samples/sec	accuracy=nan
2023-03-22 23:11:26,435 Node[0] Epoch[30] Batch [120-140]	Speed: 39925.53 samples/sec	accuracy=nan
2023-03-22 23:11:28,069 Node[0] Epoch[30] Batch [140-160]	Speed: 39937.30 samples/sec	accuracy=nan
2023-03-22 23:11:29,704 Node[0] Epoch[30] Batch [160-180]	Speed: 39930.09 samples/sec	accuracy=nan
2023-03-22 23:11:31,340 Node[0] Epoch[30] Batch [180-200]	Speed: 39895.29 samples/sec	accuracy=nan
2023-03-22 23:11:32,974 Node[0] Epoch[30] Batch [200-220]	Speed: 39965.09 samples/sec	accuracy=nan
2023-03-22 23:11:34,607 Node[0] Epoch[30] Batch [220-240]	Speed: 39959.63 samples/sec	accuracy=nan
2023-03-22 23:11:36,241 Node[0] Epoch[30] Batch [240-260]	Speed: 39969.50 samples/sec	accuracy=nan
2023-03-22 23:11:37,877 Node[0] Epoch[30] Batch [260-280]	Speed: 39897.77 samples/sec	accuracy=nan
2023-03-22 23:11:39,512 Node[0] Epoch[30] Batch [280-300]	Speed: 39928.61 samples/sec	accuracy=nan
2023-03-22 23:11:41,148 Node[0] Epoch[30] Batch [300-320]	Speed: 39900.62 samples/sec	accuracy=nan
2023-03-22 23:11:42,781 Node[0] Epoch[30] Batch [320-340]	Speed: 39978.72 samples/sec	accuracy=nan
2023-03-22 23:11:44,419 Node[0] Epoch[30] Batch [340-360]	Speed: 39841.16 samples/sec	accuracy=nan
2023-03-22 23:11:46,054 Node[0] Epoch[30] Batch [360-380]	Speed: 39927.40 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679544706950, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-22 23:11:46,951 Node[0] Epoch[30] Time cost=32.047
:::MLLOG {"namespace": "", "time_ms": 1679544706951, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39978.06707902066}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679544707029, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-22 23:11:47,763 Node[0] Epoch[30] Validation-accuracy=0.746240
2023-03-22 23:11:47,763 Node[0] Epoch[30] Validation-correct-count=2332.000000
2023-03-22 23:11:47,763 Node[0] Epoch[30] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679544707863, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679544707863, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75244, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679544707863, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679544707863, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-22 23:11:47,863 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:47,863 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:47,863 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:47,863 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:47,863 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:47,863 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:47,863 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:47,863 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:47,863 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544707864, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-22 23:11:47,863 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:47,863 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:47,863 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:47,863 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:47,864 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:47,863 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:47,863 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:11:49,509 Node[0] Epoch[31] Batch [0-20]	Speed: 39838.72 samples/sec	accuracy=nan
2023-03-22 23:11:51,141 Node[0] Epoch[31] Batch [20-40]	Speed: 39998.90 samples/sec	accuracy=nan
2023-03-22 23:11:52,774 Node[0] Epoch[31] Batch [40-60]	Speed: 39982.27 samples/sec	accuracy=nan
2023-03-22 23:11:54,409 Node[0] Epoch[31] Batch [60-80]	Speed: 39920.17 samples/sec	accuracy=nan
2023-03-22 23:11:56,044 Node[0] Epoch[31] Batch [80-100]	Speed: 39945.11 samples/sec	accuracy=nan
2023-03-22 23:11:57,676 Node[0] Epoch[31] Batch [100-120]	Speed: 39998.96 samples/sec	accuracy=nan
2023-03-22 23:11:59,308 Node[0] Epoch[31] Batch [120-140]	Speed: 39982.88 samples/sec	accuracy=nan
2023-03-22 23:12:00,945 Node[0] Epoch[31] Batch [140-160]	Speed: 39889.80 samples/sec	accuracy=nan
2023-03-22 23:12:02,582 Node[0] Epoch[31] Batch [160-180]	Speed: 39886.78 samples/sec	accuracy=nan
2023-03-22 23:12:04,213 Node[0] Epoch[31] Batch [180-200]	Speed: 40013.09 samples/sec	accuracy=nan
2023-03-22 23:12:05,845 Node[0] Epoch[31] Batch [200-220]	Speed: 40005.47 samples/sec	accuracy=nan
2023-03-22 23:12:07,482 Node[0] Epoch[31] Batch [220-240]	Speed: 39873.44 samples/sec	accuracy=nan
2023-03-22 23:12:09,118 Node[0] Epoch[31] Batch [240-260]	Speed: 39896.29 samples/sec	accuracy=nan
2023-03-22 23:12:10,755 Node[0] Epoch[31] Batch [260-280]	Speed: 39883.55 samples/sec	accuracy=nan
2023-03-22 23:12:12,393 Node[0] Epoch[31] Batch [280-300]	Speed: 39864.55 samples/sec	accuracy=nan
2023-03-22 23:12:14,031 Node[0] Epoch[31] Batch [300-320]	Speed: 39840.60 samples/sec	accuracy=nan
2023-03-22 23:12:15,669 Node[0] Epoch[31] Batch [320-340]	Speed: 39868.42 samples/sec	accuracy=nan
2023-03-22 23:12:17,307 Node[0] Epoch[31] Batch [340-360]	Speed: 39835.48 samples/sec	accuracy=nan
2023-03-22 23:12:18,947 Node[0] Epoch[31] Batch [360-380]	Speed: 39819.10 samples/sec	accuracy=nan
2023-03-22 23:12:19,923 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:19,923 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:19,923 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:19,924 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:19,924 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:19,924 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:19,924 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:19,924 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:19,924 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:19,924 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:19,924 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:19,924 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:19,924 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:19,924 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544739924, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-22 23:12:19,925 Node[0] Epoch[31] Time cost=32.061
:::MLLOG {"namespace": "", "time_ms": 1679544739925, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39960.022997134314}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
2023-03-22 23:12:19,925 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544739925, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-22 23:12:19,925 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:21,642 Node[0] Epoch[32] Batch [0-20]	Speed: 39904.27 samples/sec	accuracy=nan
2023-03-22 23:12:23,273 Node[0] Epoch[32] Batch [20-40]	Speed: 40010.59 samples/sec	accuracy=nan
2023-03-22 23:12:24,909 Node[0] Epoch[32] Batch [40-60]	Speed: 39914.31 samples/sec	accuracy=nan
2023-03-22 23:12:26,545 Node[0] Epoch[32] Batch [60-80]	Speed: 39884.82 samples/sec	accuracy=nan
2023-03-22 23:12:28,174 Node[0] Epoch[32] Batch [80-100]	Speed: 40074.29 samples/sec	accuracy=nan
2023-03-22 23:12:29,811 Node[0] Epoch[32] Batch [100-120]	Speed: 39893.78 samples/sec	accuracy=nan
2023-03-22 23:12:31,448 Node[0] Epoch[32] Batch [120-140]	Speed: 39874.83 samples/sec	accuracy=nan
2023-03-22 23:12:33,083 Node[0] Epoch[32] Batch [140-160]	Speed: 39929.17 samples/sec	accuracy=nan
2023-03-22 23:12:34,712 Node[0] Epoch[32] Batch [160-180]	Speed: 40078.73 samples/sec	accuracy=nan
2023-03-22 23:12:36,348 Node[0] Epoch[32] Batch [180-200]	Speed: 39891.30 samples/sec	accuracy=nan
2023-03-22 23:12:37,986 Node[0] Epoch[32] Batch [200-220]	Speed: 39861.38 samples/sec	accuracy=nan
2023-03-22 23:12:39,624 Node[0] Epoch[32] Batch [220-240]	Speed: 39849.08 samples/sec	accuracy=nan
2023-03-22 23:12:41,262 Node[0] Epoch[32] Batch [240-260]	Speed: 39859.29 samples/sec	accuracy=nan
2023-03-22 23:12:42,895 Node[0] Epoch[32] Batch [260-280]	Speed: 39957.67 samples/sec	accuracy=nan
2023-03-22 23:12:44,534 Node[0] Epoch[32] Batch [280-300]	Speed: 39833.05 samples/sec	accuracy=nan
2023-03-22 23:12:46,168 Node[0] Epoch[32] Batch [300-320]	Speed: 39948.57 samples/sec	accuracy=nan
2023-03-22 23:12:47,804 Node[0] Epoch[32] Batch [320-340]	Speed: 39909.83 samples/sec	accuracy=nan
2023-03-22 23:12:49,440 Node[0] Epoch[32] Batch [340-360]	Speed: 39897.91 samples/sec	accuracy=nan
2023-03-22 23:12:51,076 Node[0] Epoch[32] Batch [360-380]	Speed: 39906.22 samples/sec	accuracy=nan
2023-03-22 23:12:51,974 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:51,975 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:51,975 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:51,975 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:51,975 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:51,975 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:51,975 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:51,975 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:51,975 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:51,975 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:51,975 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:51,975 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:51,975 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544771975, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-22 23:12:51,976 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:51,976 Node[0] Epoch[32] Time cost=32.051
2023-03-22 23:12:51,976 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544771976, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39973.36117477619}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679544771976, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-22 23:12:51,976 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:12:53,696 Node[0] Epoch[33] Batch [0-20]	Speed: 39911.61 samples/sec	accuracy=nan
2023-03-22 23:12:55,332 Node[0] Epoch[33] Batch [20-40]	Speed: 39888.64 samples/sec	accuracy=nan
2023-03-22 23:12:56,974 Node[0] Epoch[33] Batch [40-60]	Speed: 39766.88 samples/sec	accuracy=nan
2023-03-22 23:12:58,605 Node[0] Epoch[33] Batch [60-80]	Speed: 40030.19 samples/sec	accuracy=nan
2023-03-22 23:13:00,241 Node[0] Epoch[33] Batch [80-100]	Speed: 39903.58 samples/sec	accuracy=nan
2023-03-22 23:13:01,877 Node[0] Epoch[33] Batch [100-120]	Speed: 39897.69 samples/sec	accuracy=nan
2023-03-22 23:13:03,511 Node[0] Epoch[33] Batch [120-140]	Speed: 39958.30 samples/sec	accuracy=nan
2023-03-22 23:13:05,149 Node[0] Epoch[33] Batch [140-160]	Speed: 39846.70 samples/sec	accuracy=nan
2023-03-22 23:13:06,784 Node[0] Epoch[33] Batch [160-180]	Speed: 39926.61 samples/sec	accuracy=nan
2023-03-22 23:13:08,423 Node[0] Epoch[33] Batch [180-200]	Speed: 39827.90 samples/sec	accuracy=nan
2023-03-22 23:13:10,057 Node[0] Epoch[33] Batch [200-220]	Speed: 39960.12 samples/sec	accuracy=nan
2023-03-22 23:13:11,692 Node[0] Epoch[33] Batch [220-240]	Speed: 39923.42 samples/sec	accuracy=nan
2023-03-22 23:13:13,326 Node[0] Epoch[33] Batch [240-260]	Speed: 39933.21 samples/sec	accuracy=nan
2023-03-22 23:13:14,959 Node[0] Epoch[33] Batch [260-280]	Speed: 39976.44 samples/sec	accuracy=nan
2023-03-22 23:13:16,596 Node[0] Epoch[33] Batch [280-300]	Speed: 39886.47 samples/sec	accuracy=nan
2023-03-22 23:13:18,230 Node[0] Epoch[33] Batch [300-320]	Speed: 39941.58 samples/sec	accuracy=nan
2023-03-22 23:13:19,866 Node[0] Epoch[33] Batch [320-340]	Speed: 39902.31 samples/sec	accuracy=nan
2023-03-22 23:13:21,504 Node[0] Epoch[33] Batch [340-360]	Speed: 39869.04 samples/sec	accuracy=nan
2023-03-22 23:13:23,140 Node[0] Epoch[33] Batch [360-380]	Speed: 39892.89 samples/sec	accuracy=nan
2023-03-22 23:13:24,116 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:13:24,116 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:13:24,116 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:13:24,116 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:13:24,116 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:13:24,116 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:13:24,116 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:13:24,116 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:13:24,116 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:13:24,116 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:13:24,116 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:13:24,116 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:13:24,116 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:13:24,117 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679544804116, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-22 23:13:24,117 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:13:24,117 Node[0] Epoch[33] Time cost=32.141
:::MLLOG {"namespace": "", "time_ms": 1679544804117, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39860.986857715405}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679544804118, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-22 23:13:24,118 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:13:25,835 Node[0] Epoch[34] Batch [0-20]	Speed: 39897.88 samples/sec	accuracy=nan
2023-03-22 23:13:27,468 Node[0] Epoch[34] Batch [20-40]	Speed: 39977.27 samples/sec	accuracy=nan
2023-03-22 23:13:29,098 Node[0] Epoch[34] Batch [40-60]	Speed: 40059.95 samples/sec	accuracy=nan
2023-03-22 23:13:30,734 Node[0] Epoch[34] Batch [60-80]	Speed: 39884.15 samples/sec	accuracy=nan
2023-03-22 23:13:32,370 Node[0] Epoch[34] Batch [80-100]	Speed: 39907.76 samples/sec	accuracy=nan
2023-03-22 23:13:34,002 Node[0] Epoch[34] Batch [100-120]	Speed: 39993.49 samples/sec	accuracy=nan
2023-03-22 23:13:35,638 Node[0] Epoch[34] Batch [120-140]	Speed: 39901.81 samples/sec	accuracy=nan
2023-03-22 23:13:37,267 Node[0] Epoch[34] Batch [140-160]	Speed: 40090.47 samples/sec	accuracy=nan
2023-03-22 23:13:38,902 Node[0] Epoch[34] Batch [160-180]	Speed: 39922.43 samples/sec	accuracy=nan
2023-03-22 23:13:40,538 Node[0] Epoch[34] Batch [180-200]	Speed: 39891.78 samples/sec	accuracy=nan
2023-03-22 23:13:42,172 Node[0] Epoch[34] Batch [200-220]	Speed: 39961.53 samples/sec	accuracy=nan
2023-03-22 23:13:43,804 Node[0] Epoch[34] Batch [220-240]	Speed: 40001.57 samples/sec	accuracy=nan
2023-03-22 23:13:45,442 Node[0] Epoch[34] Batch [240-260]	Speed: 39862.20 samples/sec	accuracy=nan
2023-03-22 23:13:47,078 Node[0] Epoch[34] Batch [260-280]	Speed: 39896.35 samples/sec	accuracy=nan
2023-03-22 23:13:48,713 Node[0] Epoch[34] Batch [280-300]	Speed: 39917.75 samples/sec	accuracy=nan
2023-03-22 23:13:50,348 Node[0] Epoch[34] Batch [300-320]	Speed: 39940.43 samples/sec	accuracy=nan
2023-03-22 23:13:51,980 Node[0] Epoch[34] Batch [320-340]	Speed: 39998.18 samples/sec	accuracy=nan
2023-03-22 23:13:53,613 Node[0] Epoch[34] Batch [340-360]	Speed: 39971.87 samples/sec	accuracy=nan
2023-03-22 23:13:55,251 Node[0] Epoch[34] Batch [360-380]	Speed: 39851.73 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679544836231, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-22 23:13:56,231 Node[0] Epoch[34] Time cost=32.114
:::MLLOG {"namespace": "", "time_ms": 1679544836232, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39894.852111658256}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679544836310, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-22 23:13:57,065 Node[0] Epoch[34] Validation-accuracy=0.764160
2023-03-22 23:13:57,065 Node[0] Epoch[34] Validation-correct-count=2388.000000
2023-03-22 23:13:57,065 Node[0] Epoch[34] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679544837138, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679544837138, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76114, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679544837138, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679544837139, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679544861
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:14:21 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:14:21 PM'
ENDING TIMING RUN AT 2023-03-22 11:14:21 PM
+ result=1294
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1294,root,2023-03-22 10:52:47 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1294,root,2023-03-22 10:52:47 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679544861
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:14:21 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:14:21 PM'
ENDING TIMING RUN AT 2023-03-22 11:14:21 PM
+ result=1294
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1294,root,2023-03-22 10:52:47 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1294,root,2023-03-22 10:52:47 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679544861
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:14:21 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:14:21 PM'
ENDING TIMING RUN AT 2023-03-22 11:14:21 PM
+ result=1294
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1294,root,2023-03-22 10:52:47 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1294,root,2023-03-22 10:52:47 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679544861
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:14:21 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:14:21 PM'
ENDING TIMING RUN AT 2023-03-22 11:14:21 PM
+ result=1294
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1294,root,2023-03-22 10:52:47 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1294,root,2023-03-22 10:52:47 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679544861
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:14:21 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:14:21 PM'
ENDING TIMING RUN AT 2023-03-22 11:14:21 PM
+ result=1294
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1294,root,2023-03-22 10:52:47 PM'
RESULT,IMAGE_CLASSIFICATION,,1294,root,2023-03-22 10:52:47 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679544862
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:14:22 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:14:22 PM'
ENDING TIMING RUN AT 2023-03-22 11:14:22 PM
+ result=1295
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1295,root,2023-03-22 10:52:47 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1295,root,2023-03-22 10:52:47 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679544862
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:14:22 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:14:22 PM'
ENDING TIMING RUN AT 2023-03-22 11:14:22 PM
+ result=1295
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1295,root,2023-03-22 10:52:47 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1295,root,2023-03-22 10:52:47 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679544862
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:14:22 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:14:22 PM'
ENDING TIMING RUN AT 2023-03-22 11:14:22 PM
+ result=1295
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1295,root,2023-03-22 10:52:47 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1295,root,2023-03-22 10:52:47 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679544862
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:14:22 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:14:22 PM'
ENDING TIMING RUN AT 2023-03-22 11:14:22 PM
+ result=1295
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1295,root,2023-03-22 10:52:47 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1295,root,2023-03-22 10:52:47 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679544862
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:14:22 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:14:22 PM'
ENDING TIMING RUN AT 2023-03-22 11:14:22 PM
+ result=1295
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1295,root,2023-03-22 10:52:47 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1295,root,2023-03-22 10:52:47 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679544862
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:14:22 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:14:22 PM'
ENDING TIMING RUN AT 2023-03-22 11:14:22 PM
+ result=1295
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1295,root,2023-03-22 10:52:47 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1295,root,2023-03-22 10:52:47 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679544862
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:14:22 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:14:22 PM'
ENDING TIMING RUN AT 2023-03-22 11:14:22 PM
+ result=1295
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1295,root,2023-03-22 10:52:47 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1295,root,2023-03-22 10:52:47 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679544862
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:14:22 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:14:22 PM'
ENDING TIMING RUN AT 2023-03-22 11:14:22 PM
+ result=1295
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1295,root,2023-03-22 10:52:47 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1295,root,2023-03-22 10:52:47 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679544862
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:14:22 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:14:22 PM'
ENDING TIMING RUN AT 2023-03-22 11:14:22 PM
+ result=1295
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1295,root,2023-03-22 10:52:47 PM'
RESULT,IMAGE_CLASSIFICATION,,1295,root,2023-03-22 10:52:47 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679544863
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:14:23 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:14:23 PM'
ENDING TIMING RUN AT 2023-03-22 11:14:23 PM
+ result=1296
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1296,root,2023-03-22 10:52:47 PM'
RESULT,IMAGE_CLASSIFICATION,,1296,root,2023-03-22 10:52:47 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679544863
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:14:23 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:14:23 PM'
ENDING TIMING RUN AT 2023-03-22 11:14:23 PM
+ result=1296
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1296,root,2023-03-22 10:52:47 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1296,root,2023-03-22 10:52:47 PM'
+ export PROFILE=0
+ PROFILE=0
