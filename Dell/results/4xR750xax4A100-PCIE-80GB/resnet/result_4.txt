+ echo 'Beginning trial 5 of 5'
Beginning trial 5 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node044 node045 node046 node047 '
+ echo 'hosts=node044 node045 node046 node047 '
hosts=node044 node045 node046 node047 
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679547600449, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679547600484, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679547600485, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679547600487, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679547600488, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679547613754, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679547619770, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679547619805, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679547619807, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679547619808, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679547619809, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node045 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node045
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679547631732, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679547636675, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679547636709, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679547636711, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679547636712, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679547636713, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node046 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node046
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679547648557, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679547653492, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679547653527, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679547653528, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679547653529, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679547653531, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node047 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node047
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679547665589, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=8767
+ SEED=8767
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16 singularity exec --nv -B /dev/shm/resnet/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node045: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node046: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node047: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_4xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ dirname ./config_4xR750xax4A100.sh
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+ source ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+ start=1679547666
++ date '+%Y-%m-%d %r'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+ start_fmt='2023-03-23 12:01:06 AM'
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+ echo 'STARTING TIMING RUN AT 2023-03-23 12:01:06 AM'
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
STARTING TIMING RUN AT 2023-03-23 12:01:06 AM
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=8767
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ date +%s
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679547666
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-23 12:01:06 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-23 12:01:06 AM'
STARTING TIMING RUN AT 2023-03-23 12:01:06 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=8767
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start=1679547666
++ seq 0 3
++ tr '\n' ,
++ date '+%Y-%m-%d %r'
++ sed 's/,$//'
+ start_fmt='2023-03-23 12:01:06 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-23 12:01:06 AM'
STARTING TIMING RUN AT 2023-03-23 12:01:06 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=8767
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ GPUS=0,1,2,3
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+ start=1679547666
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-23 12:01:06 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-23 12:01:06 AM'
STARTING TIMING RUN AT 2023-03-23 12:01:06 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=8767
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ sed 's/^config_//'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ sed 's/\.sh$//'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
++++ readlink -f ./config_4xR750xax4A100.sh
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
+ source ./config_4xR750xax4A100.sh
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
+ source ./config_4xR750xax4A100.sh
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+ source ./config_4xR750xax4A100.sh
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
+++ dirname ./config_4xR750xax4A100.sh
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++++ readlink -f ./config_4xR750xax4A100.sh
++ date +%s
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ source ./config_4xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+ source ./config_4xR750xax4A100.sh
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
++ date +%s
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
+++ dirname ./config_4xR750xax4A100.sh
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+++ dirname ./config_4xR750xax4A100.sh
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ start=1679547666
++ date '+%Y-%m-%d %r'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ start_fmt='2023-03-23 12:01:06 AM'
+ start=1679547666
+ echo 'STARTING TIMING RUN AT 2023-03-23 12:01:06 AM'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
STARTING TIMING RUN AT 2023-03-23 12:01:06 AM
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ readonly global_rank=1
+ global_rank=1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=8767
+ EVAL_OFFSET=2
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+ DALI_NVJPEG_MEMPADDING=256
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ date '+%Y-%m-%d %r'
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
++ export LRSCHED=pow2
++ LRSCHED=pow2
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
running benchmark
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ export LARSETA=0.001
++ LARSETA=0.001
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DGXNNODES=4
++ DGXNNODES=4
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+ start_fmt='2023-03-23 12:01:06 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-23 12:01:06 AM'
STARTING TIMING RUN AT 2023-03-23 12:01:06 AM
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+ readonly global_rank=1
+ global_rank=1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=8767
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/\.sh$//'
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ date +%s
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ date +%s
+ start=1679547666
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start=1679547666
++ date '+%Y-%m-%d %r'
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ date '+%Y-%m-%d %r'
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start_fmt='2023-03-23 12:01:06 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-23 12:01:06 AM'
+ GPUS=0,1,2,3
STARTING TIMING RUN AT 2023-03-23 12:01:06 AM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=8767
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ start_fmt='2023-03-23 12:01:06 AM'
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ echo 'STARTING TIMING RUN AT 2023-03-23 12:01:06 AM'
+ readonly global_rank=0
STARTING TIMING RUN AT 2023-03-23 12:01:06 AM
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ LABELSMOOTHING=0.1
+ SEED=8767
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ [[ '' -ge 1 ]]
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679547666
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ seq 0 3
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ tr '\n' ,
++ date '+%Y-%m-%d %r'
++ sed 's/,$//'
++ date +%s
++ date +%s
+ start_fmt='2023-03-23 12:01:06 AM'
STARTING TIMING RUN AT 2023-03-23 12:01:06 AM
+ echo 'STARTING TIMING RUN AT 2023-03-23 12:01:06 AM'
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=8767
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679547666
+ start=1679547666
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
++ date '+%Y-%m-%d %r'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ start_fmt='2023-03-23 12:01:06 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-23 12:01:06 AM'
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
STARTING TIMING RUN AT 2023-03-23 12:01:06 AM
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ readonly global_rank=1
+ global_rank=1
+++ dirname ./config_4xR750xax4A100.sh
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ start_fmt='2023-03-23 12:01:06 AM'
+ LARSETA=0.001
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=8767
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ echo 'STARTING TIMING RUN AT 2023-03-23 12:01:06 AM'
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
STARTING TIMING RUN AT 2023-03-23 12:01:06 AM
+ DALI_PREALLOCATE_HEIGHT=6430
+ readonly global_rank=0
+ global_rank=0
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ readonly local_rank=0
+ local_rank=0
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ SLURM_NTASKS_PER_NODE=1
+ NUMEPOCHS=37
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ INPUT_BATCH_MULTIPLIER=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ KVSTORE=horovod
+ LR=10.5
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ MOM=0.9
+ LRSCHED=pow2
+ echo 'running benchmark'
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
running benchmark
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ export NGPUS=1
+ NGPUS=1
+ LABELSMOOTHING=0.1
+ SEED=8767
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
+ GPUS=0,1,2,3
++ sed 's/,$//'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+ source ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
+ source ./config_4xR750xax4A100.sh
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ dirname ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+ start=1679547666
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
++ date '+%Y-%m-%d %r'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ start_fmt='2023-03-23 12:01:06 AM'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ echo 'STARTING TIMING RUN AT 2023-03-23 12:01:06 AM'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
STARTING TIMING RUN AT 2023-03-23 12:01:06 AM
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+ readonly global_rank=0
+ global_rank=0
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+ readonly local_rank=0
+ local_rank=0
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+ SLURM_NTASKS_PER_NODE=1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+ INPUT_BATCH_MULTIPLIER=1
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+ KVSTORE=horovod
+ LR=10.5
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+ LABELSMOOTHING=0.1
+ SEED=8767
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
++ export BATCHSIZE=204
++ BATCHSIZE=204
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
++ export KVSTORE=horovod
++ KVSTORE=horovod
+ DALI_PREALLOCATE_HEIGHT=6430
++ export LR=10.5
++ LR=10.5
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
+ DALI_CROP_BUFFER_HINT=165581
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
+ NUMEPOCHS=37
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+ PROFILE=0
+ PROFILE_EXCEL=0
++ export LRSCHED=pow2
++ LRSCHED=pow2
+ NODALI=0
+ NUMEXAMPLES=
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
+ [[ 0 == 1 ]]
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
+ DATAROOT=/data
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
running benchmark
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
+ [[ 0 -ge 1 ]]
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
++ seq 0 3
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ tr '\n' ,
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ sed 's/,$//'
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
+++ sed 's/^config_//'
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+++ sed 's/\.sh$//'
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++++ readlink -f ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=4xR750xax4A100
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ date +%s
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+ start=1679547666
+ start=1679547666
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ start=1679547666
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-23 12:01:06 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-23 12:01:06 AM'
STARTING TIMING RUN AT 2023-03-23 12:01:06 AM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ start_fmt='2023-03-23 12:01:06 AM'
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ echo 'STARTING TIMING RUN AT 2023-03-23 12:01:06 AM'
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
STARTING TIMING RUN AT 2023-03-23 12:01:06 AM
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ readonly global_rank=2
+ global_rank=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ readonly local_rank=0
+ local_rank=0
+ LABELSMOOTHING=0.1
+ SEED=8767
+ EVAL_OFFSET=2
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=8767
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start=1679547666
+ start_fmt='2023-03-23 12:01:06 AM'
+ echo 'STARTING TIMING RUN AT 2023-03-23 12:01:06 AM'
STARTING TIMING RUN AT 2023-03-23 12:01:06 AM
++ date '+%Y-%m-%d %r'
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
++ seq 0 3
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=8767
++ tr '\n' ,
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
++ seq 0 3
++ sed 's/,$//'
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
++ tr '\n' ,
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
+ start_fmt='2023-03-23 12:01:07 AM'
STARTING TIMING RUN AT 2023-03-23 12:01:07 AM
+ echo 'STARTING TIMING RUN AT 2023-03-23 12:01:07 AM'
++ sed 's/,$//'
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=8767
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 8767 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node044:48389] MCW rank 0 is not bound (or bound to all available processors)
[node044:48391] MCW rank 2 is not bound (or bound to all available processors)
[node044:48390] MCW rank 1 is not bound (or bound to all available processors)
[node044:48406] MCW rank 3 is not bound (or bound to all available processors)
[node046:34175] MCW rank 9 is not bound (or bound to all available processors)
[node046:34178] MCW rank 8 is not bound (or bound to all available processors)
[node046:34189] MCW rank 11 is not bound (or bound to all available processors)
[node046:34188] MCW rank 10 is not bound (or bound to all available processors)
[node045:39951] MCW rank 6 is not bound (or bound to all available processors)
[node045:39933] MCW rank 4 is not bound (or bound to all available processors)
[node045:39944] MCW rank 5 is not bound (or bound to all available processors)
[node045:39937] MCW rank 7 is not bound (or bound to all available processors)
[node047:43875] MCW rank 15 is not bound (or bound to all available processors)
[node047:43874] MCW rank 14 is not bound (or bound to all available processors)
[node047:43873] MCW rank 12 is not bound (or bound to all available processors)
[node047:43872] MCW rank 13 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679547672042, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[00:01:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[00:01:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[00:01:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[00:01:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[00:01:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[00:01:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[00:01:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[00:01:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[00:01:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[00:01:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[00:01:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679547679578, "event_type": "POINT_IN_TIME", "key": "seed", "value": 8767, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[00:01:19] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[00:01:20] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[00:01:20] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[00:01:20] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[00:01:20] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679547681727, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 204, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[00:01:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[00:01:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[00:01:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[00:01:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[00:01:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[00:01:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[00:01:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[00:01:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for [00:01:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
CPU
:::MLLOG {"namespace": "", "time_ms": 1679547686480, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686481, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686481, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686481, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686482, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686482, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686482, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686482, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686483, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686483, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686483, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686483, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686484, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686484, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686484, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686484, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686485, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686485, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686485, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686485, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686486, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686486, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686486, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686486, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686487, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686487, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686487, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686487, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686487, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686488, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686488, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686488, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686488, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686489, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686489, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686489, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686489, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686490, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686490, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686490, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686490, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686491, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686491, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686491, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686491, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686491, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686492, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686492, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686492, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686492, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686493, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686493, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686493, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686493, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686494, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686494, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686494, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686494, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686495, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686495, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686495, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686495, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686496, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686496, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686496, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686496, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686496, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686497, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686497, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686497, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686497, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686498, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686498, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686498, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686498, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686499, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686499, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686499, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686499, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686500, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686500, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686500, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686500, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686500, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686501, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686501, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686501, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686501, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686502, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686502, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686502, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686502, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686503, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686503, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686503, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686503, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686503, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686504, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686504, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686504, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686504, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686505, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686505, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686505, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686505, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686506, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686506, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686506, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686506, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686507, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686507, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686507, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686507, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686508, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686508, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686508, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686508, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686509, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686509, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686509, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686509, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686510, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686510, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686510, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686510, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686511, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686511, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686511, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686511, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686512, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686512, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686512, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686512, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686513, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686513, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686513, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686513, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686514, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686514, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686514, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686514, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686514, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686515, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686515, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686515, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686515, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686516, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686516, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686516, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686516, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686517, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686517, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686517, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686517, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686518, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686518, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686518, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686518, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686518, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686519, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679547686519, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[00:01:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[00:01:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[00:01:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[00:01:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[00:01:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[00:01:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[00:01:26] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-23 00:01:28,322 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=29999, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-23 00:01:28,322 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=24985, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-23 00:01:28,322 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=5032, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-23 00:01:28,322 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=11434, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-23 00:01:28,323 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=36686, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-23 00:01:28,322 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=33717, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-23 00:01:28,322 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=12881, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-23 00:01:28,323 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=282, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-23 00:01:28,322 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=64388, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-23 00:01:28,322 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=31120, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-23 00:01:28,323 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=25820, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-23 00:01:28,322 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=10355, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-23 00:01:28,323 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=24482, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-23 00:01:28,323 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=15254, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-23 00:01:28,323 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=21885, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-23 00:01:28,323 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=7621, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679547688323, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679547688324, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679547688324, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679547688325, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679547688325, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 204, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679547688325, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679547688325, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679547688325, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679547688325, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679547688325, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679547688325, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679547688325, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679547688325, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679547688325, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679547688325, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679547688325, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679547688325, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679547688326, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679547688326, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679547688326, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679547775731, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679547775733, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679547775733, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679547776289, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679547776372, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679547776375, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-23 00:02:58,009 Node[0] Epoch[0] Batch [0-20]	Speed: 40119.94 samples/sec	accuracy=nan
2023-03-23 00:02:59,625 Node[0] Epoch[0] Batch [20-40]	Speed: 40402.35 samples/sec	accuracy=nan
2023-03-23 00:03:01,242 Node[0] Epoch[0] Batch [40-60]	Speed: 40372.62 samples/sec	accuracy=nan
2023-03-23 00:03:02,857 Node[0] Epoch[0] Batch [60-80]	Speed: 40421.46 samples/sec	accuracy=nan
2023-03-23 00:03:04,475 Node[0] Epoch[0] Batch [80-100]	Speed: 40347.05 samples/sec	accuracy=nan
2023-03-23 00:03:06,098 Node[0] Epoch[0] Batch [100-120]	Speed: 40211.04 samples/sec	accuracy=nan
2023-03-23 00:03:07,717 Node[0] Epoch[0] Batch [120-140]	Speed: 40334.40 samples/sec	accuracy=nan
2023-03-23 00:03:09,335 Node[0] Epoch[0] Batch [140-160]	Speed: 40340.84 samples/sec	accuracy=nan
2023-03-23 00:03:10,955 Node[0] Epoch[0] Batch [160-180]	Speed: 40302.81 samples/sec	accuracy=nan
2023-03-23 00:03:12,577 Node[0] Epoch[0] Batch [180-200]	Speed: 40235.02 samples/sec	accuracy=nan
2023-03-23 00:03:14,199 Node[0] Epoch[0] Batch [200-220]	Speed: 40241.93 samples/sec	accuracy=nan
2023-03-23 00:03:15,818 Node[0] Epoch[0] Batch [220-240]	Speed: 40320.81 samples/sec	accuracy=nan
2023-03-23 00:03:17,437 Node[0] Epoch[0] Batch [240-260]	Speed: 40318.50 samples/sec	accuracy=nan
2023-03-23 00:03:19,057 Node[0] Epoch[0] Batch [260-280]	Speed: 40303.60 samples/sec	accuracy=nan
2023-03-23 00:03:20,679 Node[0] Epoch[0] Batch [280-300]	Speed: 40263.37 samples/sec	accuracy=nan
2023-03-23 00:03:22,299 Node[0] Epoch[0] Batch [300-320]	Speed: 40291.25 samples/sec	accuracy=nan
2023-03-23 00:03:23,926 Node[0] Epoch[0] Batch [320-340]	Speed: 40124.52 samples/sec	accuracy=nan
2023-03-23 00:03:25,555 Node[0] Epoch[0] Batch [340-360]	Speed: 40056.32 samples/sec	accuracy=nan
2023-03-23 00:03:27,177 Node[0] Epoch[0] Batch [360-380]	Speed: 40266.14 samples/sec	accuracy=nan
2023-03-23 00:03:28,150 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:03:28,150 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:03:28,150 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:03:28,150 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:03:28,150 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547808150, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-23 00:03:28,151 Node[0] Epoch[0] Time cost=31.775
2023-03-23 00:03:28,150 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:03:28,150 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:03:28,150 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:03:28,150 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547808151, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40319.865546281035}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-23 00:03:28,150 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:03:28,150 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:03:28,150 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:03:28,151 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:03:28,151 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:03:28,151 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547808152, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-23 00:03:28,152 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:03:29,863 Node[0] Epoch[1] Batch [0-20]	Speed: 40024.90 samples/sec	accuracy=nan
2023-03-23 00:03:31,490 Node[0] Epoch[1] Batch [20-40]	Speed: 40117.11 samples/sec	accuracy=nan
2023-03-23 00:03:33,122 Node[0] Epoch[1] Batch [40-60]	Speed: 40012.83 samples/sec	accuracy=nan
2023-03-23 00:03:34,743 Node[0] Epoch[1] Batch [60-80]	Speed: 40261.12 samples/sec	accuracy=nan
2023-03-23 00:03:36,371 Node[0] Epoch[1] Batch [80-100]	Speed: 40095.78 samples/sec	accuracy=nan
2023-03-23 00:03:37,999 Node[0] Epoch[1] Batch [100-120]	Speed: 40088.35 samples/sec	accuracy=nan
2023-03-23 00:03:39,626 Node[0] Epoch[1] Batch [120-140]	Speed: 40138.78 samples/sec	accuracy=nan
2023-03-23 00:03:41,258 Node[0] Epoch[1] Batch [140-160]	Speed: 40005.21 samples/sec	accuracy=nan
2023-03-23 00:03:45,263 Node[0] Epoch[1] Batch [160-180]	Speed: 16298.58 samples/sec	accuracy=nan
2023-03-23 00:03:46,891 Node[0] Epoch[1] Batch [180-200]	Speed: 40087.34 samples/sec	accuracy=nan
2023-03-23 00:03:48,514 Node[0] Epoch[1] Batch [200-220]	Speed: 40238.44 samples/sec	accuracy=nan
2023-03-23 00:03:52,571 Node[0] Epoch[1] Batch [220-240]	Speed: 16088.72 samples/sec	accuracy=nan
2023-03-23 00:03:54,195 Node[0] Epoch[1] Batch [240-260]	Speed: 40210.79 samples/sec	accuracy=nan
2023-03-23 00:03:58,760 Node[0] Epoch[1] Batch [260-280]	Speed: 14297.50 samples/sec	accuracy=nan
2023-03-23 00:04:00,380 Node[0] Epoch[1] Batch [280-300]	Speed: 40317.81 samples/sec	accuracy=nan
2023-03-23 00:04:02,001 Node[0] Epoch[1] Batch [300-320]	Speed: 40268.52 samples/sec	accuracy=nan
2023-03-23 00:04:03,629 Node[0] Epoch[1] Batch [320-340]	Speed: 40095.30 samples/sec	accuracy=nan
2023-03-23 00:04:05,256 Node[0] Epoch[1] Batch [340-360]	Speed: 40123.38 samples/sec	accuracy=nan
2023-03-23 00:04:06,883 Node[0] Epoch[1] Batch [360-380]	Speed: 40106.62 samples/sec	accuracy=nan
2023-03-23 00:04:07,856 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:04:07,856 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:04:07,857 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:04:07,857 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:04:07,857 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:04:07,857 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:04:07,857 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:04:07,857 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:04:07,857 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:04:07,857 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:04:07,857 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:04:07,857 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:04:07,857 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547847857, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-23 00:04:07,858 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:04:07,858 Node[0] Epoch[1] Time cost=39.706
2023-03-23 00:04:07,857 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547847858, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 32266.303796914868}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679547847858, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-23 00:04:07,858 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:04:09,562 Node[0] Epoch[2] Batch [0-20]	Speed: 40224.54 samples/sec	accuracy=nan
2023-03-23 00:04:11,183 Node[0] Epoch[2] Batch [20-40]	Speed: 40265.24 samples/sec	accuracy=nan
2023-03-23 00:04:12,807 Node[0] Epoch[2] Batch [40-60]	Speed: 40202.75 samples/sec	accuracy=nan
2023-03-23 00:04:14,439 Node[0] Epoch[2] Batch [60-80]	Speed: 39996.00 samples/sec	accuracy=nan
2023-03-23 00:04:16,062 Node[0] Epoch[2] Batch [80-100]	Speed: 40210.25 samples/sec	accuracy=nan
2023-03-23 00:04:20,092 Node[0] Epoch[2] Batch [100-120]	Speed: 16198.78 samples/sec	accuracy=nan
2023-03-23 00:04:26,585 Node[0] Epoch[2] Batch [120-140]	Speed: 10054.12 samples/sec	accuracy=nan
2023-03-23 00:04:28,204 Node[0] Epoch[2] Batch [140-160]	Speed: 40314.95 samples/sec	accuracy=nan
2023-03-23 00:04:32,228 Node[0] Epoch[2] Batch [160-180]	Speed: 16222.71 samples/sec	accuracy=nan
2023-03-23 00:04:43,365 Node[0] Epoch[2] Batch [180-200]	Speed: 5861.53 samples/sec	accuracy=nan
2023-03-23 00:04:44,982 Node[0] Epoch[2] Batch [200-220]	Speed: 40392.84 samples/sec	accuracy=nan
2023-03-23 00:04:48,994 Node[0] Epoch[2] Batch [220-240]	Speed: 16270.37 samples/sec	accuracy=nan
2023-03-23 00:04:50,613 Node[0] Epoch[2] Batch [240-260]	Speed: 40304.37 samples/sec	accuracy=nan
2023-03-23 00:04:52,234 Node[0] Epoch[2] Batch [260-280]	Speed: 40286.06 samples/sec	accuracy=nan
2023-03-23 00:04:53,856 Node[0] Epoch[2] Batch [280-300]	Speed: 40252.62 samples/sec	accuracy=nan
2023-03-23 00:04:55,473 Node[0] Epoch[2] Batch [300-320]	Speed: 40354.48 samples/sec	accuracy=nan
2023-03-23 00:04:57,090 Node[0] Epoch[2] Batch [320-340]	Speed: 40365.62 samples/sec	accuracy=nan
2023-03-23 00:04:58,711 Node[0] Epoch[2] Batch [340-360]	Speed: 40277.57 samples/sec	accuracy=nan
2023-03-23 00:05:00,331 Node[0] Epoch[2] Batch [360-380]	Speed: 40294.47 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679547903599, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-23 00:05:03,600 Node[0] Epoch[2] Time cost=55.742
:::MLLOG {"namespace": "", "time_ms": 1679547903600, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 22983.942273494173}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
2023-03-23 00:05:03,676 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:03,676 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:03,676 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:03,676 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:03,676 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:03,677 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:03,677 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:03,677 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:03,677 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547903677, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-23 00:05:03,677 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:03,677 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:03,677 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:03,677 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:03,677 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:03,677 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:03,677 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:04,355 Node[0] Epoch[2] Validation-accuracy=0.347840
2023-03-23 00:05:04,355 Node[0] Epoch[2] Validation-correct-count=1087.000000
2023-03-23 00:05:04,355 Node[0] Epoch[2] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679547904470, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679547904470, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.33282, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-23 00:05:04,470 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:04,470 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547904470, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-23 00:05:04,470 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:04,470 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:04,470 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547904470, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-23 00:05:04,470 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:04,470 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:04,470 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:04,470 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:04,470 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:04,470 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:04,470 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:04,470 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:04,470 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:04,470 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547904471, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-23 00:05:04,471 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:06,106 Node[0] Epoch[3] Batch [0-20]	Speed: 40090.22 samples/sec	accuracy=nan
2023-03-23 00:05:07,731 Node[0] Epoch[3] Batch [20-40]	Speed: 40170.45 samples/sec	accuracy=nan
2023-03-23 00:05:09,355 Node[0] Epoch[3] Batch [40-60]	Speed: 40211.65 samples/sec	accuracy=nan
2023-03-23 00:05:10,976 Node[0] Epoch[3] Batch [60-80]	Speed: 40278.79 samples/sec	accuracy=nan
2023-03-23 00:05:12,599 Node[0] Epoch[3] Batch [80-100]	Speed: 40204.31 samples/sec	accuracy=nan
2023-03-23 00:05:14,223 Node[0] Epoch[3] Batch [100-120]	Speed: 40192.25 samples/sec	accuracy=nan
2023-03-23 00:05:15,844 Node[0] Epoch[3] Batch [120-140]	Speed: 40289.88 samples/sec	accuracy=nan
2023-03-23 00:05:17,472 Node[0] Epoch[3] Batch [140-160]	Speed: 40093.29 samples/sec	accuracy=nan
2023-03-23 00:05:19,103 Node[0] Epoch[3] Batch [160-180]	Speed: 40025.03 samples/sec	accuracy=nan
2023-03-23 00:05:20,728 Node[0] Epoch[3] Batch [180-200]	Speed: 40162.48 samples/sec	accuracy=nan
2023-03-23 00:05:22,358 Node[0] Epoch[3] Batch [200-220]	Speed: 40049.64 samples/sec	accuracy=nan
2023-03-23 00:05:23,985 Node[0] Epoch[3] Batch [220-240]	Speed: 40118.19 samples/sec	accuracy=nan
2023-03-23 00:05:25,617 Node[0] Epoch[3] Batch [240-260]	Speed: 40019.22 samples/sec	accuracy=nan
2023-03-23 00:05:27,247 Node[0] Epoch[3] Batch [260-280]	Speed: 40049.65 samples/sec	accuracy=nan
2023-03-23 00:05:28,877 Node[0] Epoch[3] Batch [280-300]	Speed: 40046.95 samples/sec	accuracy=nan
2023-03-23 00:05:30,508 Node[0] Epoch[3] Batch [300-320]	Speed: 40012.42 samples/sec	accuracy=nan
2023-03-23 00:05:32,134 Node[0] Epoch[3] Batch [320-340]	Speed: 40139.79 samples/sec	accuracy=nan
2023-03-23 00:05:33,759 Node[0] Epoch[3] Batch [340-360]	Speed: 40190.23 samples/sec	accuracy=nan
2023-03-23 00:05:35,390 Node[0] Epoch[3] Batch [360-380]	Speed: 40009.36 samples/sec	accuracy=nan
2023-03-23 00:05:36,364 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:36,364 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:36,364 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:36,364 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:36,364 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:36,364 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:36,364 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:36,364 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:36,364 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:36,364 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:36,364 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:36,364 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:36,364 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:36,364 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:36,364 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547936365, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-23 00:05:36,366 Node[0] Epoch[3] Time cost=31.895
:::MLLOG {"namespace": "", "time_ms": 1679547936366, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40167.93522256844}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679547936367, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-23 00:05:36,367 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:05:38,078 Node[0] Epoch[4] Batch [0-20]	Speed: 40011.17 samples/sec	accuracy=nan
2023-03-23 00:05:39,706 Node[0] Epoch[4] Batch [20-40]	Speed: 40109.05 samples/sec	accuracy=nan
2023-03-23 00:05:41,337 Node[0] Epoch[4] Batch [40-60]	Speed: 40027.51 samples/sec	accuracy=nan
2023-03-23 00:05:42,961 Node[0] Epoch[4] Batch [60-80]	Speed: 40174.48 samples/sec	accuracy=nan
2023-03-23 00:05:44,593 Node[0] Epoch[4] Batch [80-100]	Speed: 40009.57 samples/sec	accuracy=nan
2023-03-23 00:05:46,221 Node[0] Epoch[4] Batch [100-120]	Speed: 40107.15 samples/sec	accuracy=nan
2023-03-23 00:05:47,854 Node[0] Epoch[4] Batch [120-140]	Speed: 39968.51 samples/sec	accuracy=nan
2023-03-23 00:05:49,482 Node[0] Epoch[4] Batch [140-160]	Speed: 40095.09 samples/sec	accuracy=nan
2023-03-23 00:05:51,115 Node[0] Epoch[4] Batch [160-180]	Speed: 39975.11 samples/sec	accuracy=nan
2023-03-23 00:05:52,744 Node[0] Epoch[4] Batch [180-200]	Speed: 40082.15 samples/sec	accuracy=nan
2023-03-23 00:05:54,373 Node[0] Epoch[4] Batch [200-220]	Speed: 40056.78 samples/sec	accuracy=nan
2023-03-23 00:05:56,006 Node[0] Epoch[4] Batch [220-240]	Speed: 39981.20 samples/sec	accuracy=nan
2023-03-23 00:05:57,636 Node[0] Epoch[4] Batch [240-260]	Speed: 40041.40 samples/sec	accuracy=nan
2023-03-23 00:05:59,268 Node[0] Epoch[4] Batch [260-280]	Speed: 40002.71 samples/sec	accuracy=nan
2023-03-23 00:06:00,901 Node[0] Epoch[4] Batch [280-300]	Speed: 39980.43 samples/sec	accuracy=nan
2023-03-23 00:06:02,531 Node[0] Epoch[4] Batch [300-320]	Speed: 40044.22 samples/sec	accuracy=nan
2023-03-23 00:06:04,159 Node[0] Epoch[4] Batch [320-340]	Speed: 40098.27 samples/sec	accuracy=nan
2023-03-23 00:06:05,790 Node[0] Epoch[4] Batch [340-360]	Speed: 40038.89 samples/sec	accuracy=nan
2023-03-23 00:06:07,429 Node[0] Epoch[4] Batch [360-380]	Speed: 39828.75 samples/sec	accuracy=nan
2023-03-23 00:06:08,320 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:08,321 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:08,320 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:08,321 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:08,321 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:08,321 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:08,321 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:08,321 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:08,321 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:08,321 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:08,321 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547968320, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-23 00:06:08,321 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:08,321 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:08,321 Node[0] Epoch[4] Time cost=31.955
2023-03-23 00:06:08,321 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:08,321 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679547968321, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40093.32594385874}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1679547968322, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-23 00:06:08,322 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:10,040 Node[0] Epoch[5] Batch [0-20]	Speed: 39943.38 samples/sec	accuracy=nan
2023-03-23 00:06:11,669 Node[0] Epoch[5] Batch [20-40]	Speed: 40059.22 samples/sec	accuracy=nan
2023-03-23 00:06:13,304 Node[0] Epoch[5] Batch [40-60]	Speed: 39917.94 samples/sec	accuracy=nan
2023-03-23 00:06:14,931 Node[0] Epoch[5] Batch [60-80]	Speed: 40126.05 samples/sec	accuracy=nan
2023-03-23 00:06:16,565 Node[0] Epoch[5] Batch [80-100]	Speed: 39954.79 samples/sec	accuracy=nan
2023-03-23 00:06:18,195 Node[0] Epoch[5] Batch [100-120]	Speed: 40040.70 samples/sec	accuracy=nan
2023-03-23 00:06:19,830 Node[0] Epoch[5] Batch [120-140]	Speed: 39940.53 samples/sec	accuracy=nan
2023-03-23 00:06:21,459 Node[0] Epoch[5] Batch [140-160]	Speed: 40083.56 samples/sec	accuracy=nan
2023-03-23 00:06:23,095 Node[0] Epoch[5] Batch [160-180]	Speed: 39893.67 samples/sec	accuracy=nan
2023-03-23 00:06:24,727 Node[0] Epoch[5] Batch [180-200]	Speed: 40007.06 samples/sec	accuracy=nan
2023-03-23 00:06:26,362 Node[0] Epoch[5] Batch [200-220]	Speed: 39915.00 samples/sec	accuracy=nan
2023-03-23 00:06:27,997 Node[0] Epoch[5] Batch [220-240]	Speed: 39920.94 samples/sec	accuracy=nan
2023-03-23 00:06:29,627 Node[0] Epoch[5] Batch [240-260]	Speed: 40058.28 samples/sec	accuracy=nan
2023-03-23 00:06:31,260 Node[0] Epoch[5] Batch [260-280]	Speed: 39977.88 samples/sec	accuracy=nan
2023-03-23 00:06:32,893 Node[0] Epoch[5] Batch [280-300]	Speed: 39975.76 samples/sec	accuracy=nan
2023-03-23 00:06:34,524 Node[0] Epoch[5] Batch [300-320]	Speed: 40028.64 samples/sec	accuracy=nan
2023-03-23 00:06:36,159 Node[0] Epoch[5] Batch [320-340]	Speed: 39919.41 samples/sec	accuracy=nan
2023-03-23 00:06:37,793 Node[0] Epoch[5] Batch [340-360]	Speed: 39946.46 samples/sec	accuracy=nan
2023-03-23 00:06:39,428 Node[0] Epoch[5] Batch [360-380]	Speed: 39924.00 samples/sec	accuracy=nan
2023-03-23 00:06:40,405 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:40,405 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:40,405 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:40,405 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:40,405 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:40,405 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:40,406 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:40,406 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:40,406 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:40,406 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:40,406 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:40,406 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:40,406 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:40,406 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:40,406 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548000406, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-23 00:06:40,407 Node[0] Epoch[5] Time cost=32.085
:::MLLOG {"namespace": "", "time_ms": 1679548000407, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39930.498220721434}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679548000407, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-23 00:06:40,407 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:06:42,125 Node[0] Epoch[6] Batch [0-20]	Speed: 39893.64 samples/sec	accuracy=nan
2023-03-23 00:06:43,760 Node[0] Epoch[6] Batch [20-40]	Speed: 39940.42 samples/sec	accuracy=nan
2023-03-23 00:06:45,397 Node[0] Epoch[6] Batch [40-60]	Speed: 39878.89 samples/sec	accuracy=nan
2023-03-23 00:06:47,032 Node[0] Epoch[6] Batch [60-80]	Speed: 39928.35 samples/sec	accuracy=nan
2023-03-23 00:06:48,663 Node[0] Epoch[6] Batch [80-100]	Speed: 40017.41 samples/sec	accuracy=nan
2023-03-23 00:06:50,297 Node[0] Epoch[6] Batch [100-120]	Speed: 39956.82 samples/sec	accuracy=nan
2023-03-23 00:06:51,929 Node[0] Epoch[6] Batch [120-140]	Speed: 40000.87 samples/sec	accuracy=nan
2023-03-23 00:06:53,560 Node[0] Epoch[6] Batch [140-160]	Speed: 40023.47 samples/sec	accuracy=nan
2023-03-23 00:06:55,194 Node[0] Epoch[6] Batch [160-180]	Speed: 39949.07 samples/sec	accuracy=nan
2023-03-23 00:06:56,829 Node[0] Epoch[6] Batch [180-200]	Speed: 39911.15 samples/sec	accuracy=nan
2023-03-23 00:06:58,458 Node[0] Epoch[6] Batch [200-220]	Speed: 40087.17 samples/sec	accuracy=nan
2023-03-23 00:07:00,097 Node[0] Epoch[6] Batch [220-240]	Speed: 39828.44 samples/sec	accuracy=nan
2023-03-23 00:07:01,731 Node[0] Epoch[6] Batch [240-260]	Speed: 39943.95 samples/sec	accuracy=nan
2023-03-23 00:07:03,364 Node[0] Epoch[6] Batch [260-280]	Speed: 39977.32 samples/sec	accuracy=nan
2023-03-23 00:07:04,996 Node[0] Epoch[6] Batch [280-300]	Speed: 40012.25 samples/sec	accuracy=nan
2023-03-23 00:07:06,632 Node[0] Epoch[6] Batch [300-320]	Speed: 39885.91 samples/sec	accuracy=nan
2023-03-23 00:07:08,267 Node[0] Epoch[6] Batch [320-340]	Speed: 39941.96 samples/sec	accuracy=nan
2023-03-23 00:07:09,901 Node[0] Epoch[6] Batch [340-360]	Speed: 39950.42 samples/sec	accuracy=nan
2023-03-23 00:07:11,531 Node[0] Epoch[6] Batch [360-380]	Speed: 40036.64 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679548032433, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-23 00:07:12,434 Node[0] Epoch[6] Time cost=32.026
:::MLLOG {"namespace": "", "time_ms": 1679548032434, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40003.43004277169}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679548032511, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-23 00:07:13,244 Node[0] Epoch[6] Validation-accuracy=0.399360
2023-03-23 00:07:13,244 Node[0] Epoch[6] Validation-correct-count=1248.000000
2023-03-23 00:07:13,244 Node[0] Epoch[6] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679548033345, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679548033345, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.3997, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679548033345, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
2023-03-23 00:07:13,345 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:13,345 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548033345, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-23 00:07:13,345 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:13,345 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:13,345 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:13,345 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548033346, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-23 00:07:13,345 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:13,345 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:13,345 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:13,345 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:13,345 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:13,345 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:13,345 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:13,346 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:13,345 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:13,346 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:14,991 Node[0] Epoch[7] Batch [0-20]	Speed: 39884.58 samples/sec	accuracy=nan
2023-03-23 00:07:16,620 Node[0] Epoch[7] Batch [20-40]	Speed: 40079.52 samples/sec	accuracy=nan
2023-03-23 00:07:18,253 Node[0] Epoch[7] Batch [40-60]	Speed: 39975.76 samples/sec	accuracy=nan
2023-03-23 00:07:19,889 Node[0] Epoch[7] Batch [60-80]	Speed: 39899.85 samples/sec	accuracy=nan
2023-03-23 00:07:21,520 Node[0] Epoch[7] Batch [80-100]	Speed: 40031.25 samples/sec	accuracy=nan
2023-03-23 00:07:23,155 Node[0] Epoch[7] Batch [100-120]	Speed: 39911.11 samples/sec	accuracy=nan
2023-03-23 00:07:24,790 Node[0] Epoch[7] Batch [120-140]	Speed: 39935.84 samples/sec	accuracy=nan
2023-03-23 00:07:26,426 Node[0] Epoch[7] Batch [140-160]	Speed: 39897.61 samples/sec	accuracy=nan
2023-03-23 00:07:28,059 Node[0] Epoch[7] Batch [160-180]	Speed: 39978.82 samples/sec	accuracy=nan
2023-03-23 00:07:29,688 Node[0] Epoch[7] Batch [180-200]	Speed: 40060.34 samples/sec	accuracy=nan
2023-03-23 00:07:31,321 Node[0] Epoch[7] Batch [200-220]	Speed: 39995.64 samples/sec	accuracy=nan
2023-03-23 00:07:32,953 Node[0] Epoch[7] Batch [220-240]	Speed: 39984.24 samples/sec	accuracy=nan
2023-03-23 00:07:34,584 Node[0] Epoch[7] Batch [240-260]	Speed: 40023.85 samples/sec	accuracy=nan
2023-03-23 00:07:36,219 Node[0] Epoch[7] Batch [260-280]	Speed: 39926.07 samples/sec	accuracy=nan
2023-03-23 00:07:37,858 Node[0] Epoch[7] Batch [280-300]	Speed: 39833.18 samples/sec	accuracy=nan
2023-03-23 00:07:39,485 Node[0] Epoch[7] Batch [300-320]	Speed: 40129.71 samples/sec	accuracy=nan
2023-03-23 00:07:41,119 Node[0] Epoch[7] Batch [320-340]	Speed: 39953.84 samples/sec	accuracy=nan
2023-03-23 00:07:42,750 Node[0] Epoch[7] Batch [340-360]	Speed: 40030.01 samples/sec	accuracy=nan
2023-03-23 00:07:44,382 Node[0] Epoch[7] Batch [360-380]	Speed: 39982.27 samples/sec	accuracy=nan
2023-03-23 00:07:45,359 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:45,359 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:45,359 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:45,359 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:45,359 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:45,359 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:45,359 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:45,359 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:45,359 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:45,360 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:45,360 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:45,360 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:45,360 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:45,360 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:45,360 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548065361, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-23 00:07:45,362 Node[0] Epoch[7] Time cost=32.016
:::MLLOG {"namespace": "", "time_ms": 1679548065362, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40016.601432226315}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679548065362, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-23 00:07:45,362 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:07:47,077 Node[0] Epoch[8] Batch [0-20]	Speed: 39942.45 samples/sec	accuracy=nan
2023-03-23 00:07:48,712 Node[0] Epoch[8] Batch [20-40]	Speed: 39924.17 samples/sec	accuracy=nan
2023-03-23 00:07:50,341 Node[0] Epoch[8] Batch [40-60]	Speed: 40059.86 samples/sec	accuracy=nan
2023-03-23 00:07:51,973 Node[0] Epoch[8] Batch [60-80]	Speed: 39992.22 samples/sec	accuracy=nan
2023-03-23 00:07:53,610 Node[0] Epoch[8] Batch [80-100]	Speed: 39890.35 samples/sec	accuracy=nan
2023-03-23 00:07:55,244 Node[0] Epoch[8] Batch [100-120]	Speed: 39959.50 samples/sec	accuracy=nan
2023-03-23 00:07:56,876 Node[0] Epoch[8] Batch [120-140]	Speed: 39988.94 samples/sec	accuracy=nan
2023-03-23 00:07:58,512 Node[0] Epoch[8] Batch [140-160]	Speed: 39903.61 samples/sec	accuracy=nan
2023-03-23 00:08:00,147 Node[0] Epoch[8] Batch [160-180]	Speed: 39927.42 samples/sec	accuracy=nan
2023-03-23 00:08:01,781 Node[0] Epoch[8] Batch [180-200]	Speed: 39949.79 samples/sec	accuracy=nan
2023-03-23 00:08:03,412 Node[0] Epoch[8] Batch [200-220]	Speed: 40013.62 samples/sec	accuracy=nan
2023-03-23 00:08:05,044 Node[0] Epoch[8] Batch [220-240]	Speed: 40021.34 samples/sec	accuracy=nan
2023-03-23 00:08:06,679 Node[0] Epoch[8] Batch [240-260]	Speed: 39916.65 samples/sec	accuracy=nan
2023-03-23 00:08:08,318 Node[0] Epoch[8] Batch [260-280]	Speed: 39827.14 samples/sec	accuracy=nan
2023-03-23 00:08:09,951 Node[0] Epoch[8] Batch [280-300]	Speed: 39975.93 samples/sec	accuracy=nan
2023-03-23 00:08:11,581 Node[0] Epoch[8] Batch [300-320]	Speed: 40055.93 samples/sec	accuracy=nan
2023-03-23 00:08:13,215 Node[0] Epoch[8] Batch [320-340]	Speed: 39957.99 samples/sec	accuracy=nan
2023-03-23 00:08:14,849 Node[0] Epoch[8] Batch [340-360]	Speed: 39947.97 samples/sec	accuracy=nan
2023-03-23 00:08:16,482 Node[0] Epoch[8] Batch [360-380]	Speed: 39964.22 samples/sec	accuracy=nan
2023-03-23 00:08:17,380 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:17,381 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:17,381 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:17,381 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:17,381 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:17,381 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:17,381 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:17,381 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:17,381 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:17,381 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:17,381 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:17,381 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:17,381 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:17,381 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:17,381 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548097382, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-23 00:08:17,383 Node[0] Epoch[8] Time cost=32.021
:::MLLOG {"namespace": "", "time_ms": 1679548097383, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40010.210077411764}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679548097384, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-23 00:08:17,384 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:19,095 Node[0] Epoch[9] Batch [0-20]	Speed: 40093.44 samples/sec	accuracy=nan
2023-03-23 00:08:20,730 Node[0] Epoch[9] Batch [20-40]	Speed: 39937.79 samples/sec	accuracy=nan
2023-03-23 00:08:22,366 Node[0] Epoch[9] Batch [40-60]	Speed: 39887.33 samples/sec	accuracy=nan
2023-03-23 00:08:23,995 Node[0] Epoch[9] Batch [60-80]	Speed: 40088.48 samples/sec	accuracy=nan
2023-03-23 00:08:25,626 Node[0] Epoch[9] Batch [80-100]	Speed: 40007.81 samples/sec	accuracy=nan
2023-03-23 00:08:27,261 Node[0] Epoch[9] Batch [100-120]	Speed: 39941.78 samples/sec	accuracy=nan
2023-03-23 00:08:28,896 Node[0] Epoch[9] Batch [120-140]	Speed: 39907.98 samples/sec	accuracy=nan
2023-03-23 00:08:30,525 Node[0] Epoch[9] Batch [140-160]	Speed: 40075.11 samples/sec	accuracy=nan
2023-03-23 00:08:32,162 Node[0] Epoch[9] Batch [160-180]	Speed: 39880.46 samples/sec	accuracy=nan
2023-03-23 00:08:33,793 Node[0] Epoch[9] Batch [180-200]	Speed: 40027.79 samples/sec	accuracy=nan
2023-03-23 00:08:35,428 Node[0] Epoch[9] Batch [200-220]	Speed: 39930.84 samples/sec	accuracy=nan
2023-03-23 00:08:37,065 Node[0] Epoch[9] Batch [220-240]	Speed: 39887.23 samples/sec	accuracy=nan
2023-03-23 00:08:38,692 Node[0] Epoch[9] Batch [240-260]	Speed: 40100.86 samples/sec	accuracy=nan
2023-03-23 00:08:40,329 Node[0] Epoch[9] Batch [260-280]	Speed: 39886.21 samples/sec	accuracy=nan
2023-03-23 00:08:41,960 Node[0] Epoch[9] Batch [280-300]	Speed: 40033.77 samples/sec	accuracy=nan
2023-03-23 00:08:43,592 Node[0] Epoch[9] Batch [300-320]	Speed: 40002.70 samples/sec	accuracy=nan
2023-03-23 00:08:45,224 Node[0] Epoch[9] Batch [320-340]	Speed: 39991.39 samples/sec	accuracy=nan
2023-03-23 00:08:46,858 Node[0] Epoch[9] Batch [340-360]	Speed: 39955.87 samples/sec	accuracy=nan
2023-03-23 00:08:48,491 Node[0] Epoch[9] Batch [360-380]	Speed: 39959.05 samples/sec	accuracy=nan
2023-03-23 00:08:49,470 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:49,470 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:49,471 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:49,471 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:49,471 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:49,471 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:49,471 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:49,471 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:49,471 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:49,471 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:49,471 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:49,471 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:49,471 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:49,471 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:49,471 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548129471, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-23 00:08:49,472 Node[0] Epoch[9] Time cost=32.088
:::MLLOG {"namespace": "", "time_ms": 1679548129472, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39926.418765819384}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1679548129472, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-23 00:08:49,473 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:08:51,184 Node[0] Epoch[10] Batch [0-20]	Speed: 40032.71 samples/sec	accuracy=nan
2023-03-23 00:08:52,820 Node[0] Epoch[10] Batch [20-40]	Speed: 39919.05 samples/sec	accuracy=nan
2023-03-23 00:08:54,456 Node[0] Epoch[10] Batch [40-60]	Speed: 39899.50 samples/sec	accuracy=nan
2023-03-23 00:08:56,090 Node[0] Epoch[10] Batch [60-80]	Speed: 39934.90 samples/sec	accuracy=nan
2023-03-23 00:08:57,721 Node[0] Epoch[10] Batch [80-100]	Speed: 40040.86 samples/sec	accuracy=nan
2023-03-23 00:08:59,352 Node[0] Epoch[10] Batch [100-120]	Speed: 40010.29 samples/sec	accuracy=nan
2023-03-23 00:09:00,987 Node[0] Epoch[10] Batch [120-140]	Speed: 39924.29 samples/sec	accuracy=nan
2023-03-23 00:09:02,618 Node[0] Epoch[10] Batch [140-160]	Speed: 40031.90 samples/sec	accuracy=nan
2023-03-23 00:09:04,252 Node[0] Epoch[10] Batch [160-180]	Speed: 39964.69 samples/sec	accuracy=nan
2023-03-23 00:09:05,888 Node[0] Epoch[10] Batch [180-200]	Speed: 39885.17 samples/sec	accuracy=nan
2023-03-23 00:09:07,518 Node[0] Epoch[10] Batch [200-220]	Speed: 40052.66 samples/sec	accuracy=nan
2023-03-23 00:09:09,151 Node[0] Epoch[10] Batch [220-240]	Speed: 39978.87 samples/sec	accuracy=nan
2023-03-23 00:09:10,786 Node[0] Epoch[10] Batch [240-260]	Speed: 39932.79 samples/sec	accuracy=nan
2023-03-23 00:09:12,420 Node[0] Epoch[10] Batch [260-280]	Speed: 39935.21 samples/sec	accuracy=nan
2023-03-23 00:09:14,058 Node[0] Epoch[10] Batch [280-300]	Speed: 39863.76 samples/sec	accuracy=nan
2023-03-23 00:09:15,688 Node[0] Epoch[10] Batch [300-320]	Speed: 40056.76 samples/sec	accuracy=nan
2023-03-23 00:09:17,324 Node[0] Epoch[10] Batch [320-340]	Speed: 39905.39 samples/sec	accuracy=nan
2023-03-23 00:09:18,950 Node[0] Epoch[10] Batch [340-360]	Speed: 40146.08 samples/sec	accuracy=nan
2023-03-23 00:09:20,584 Node[0] Epoch[10] Batch [360-380]	Speed: 39946.68 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679548161479, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-23 00:09:21,480 Node[0] Epoch[10] Time cost=32.007
:::MLLOG {"namespace": "", "time_ms": 1679548161480, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40027.173353744576}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679548161557, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-23 00:09:22,341 Node[0] Epoch[10] Validation-accuracy=0.538880
2023-03-23 00:09:22,341 Node[0] Epoch[10] Validation-correct-count=1684.000000
2023-03-23 00:09:22,341 Node[0] Epoch[10] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679548162392, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679548162393, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.52776, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679548162393, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679548162393, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-23 00:09:22,393 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:22,392 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:22,393 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:22,393 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:22,393 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:22,393 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:22,393 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:22,393 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:22,393 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:22,393 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:22,393 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:22,393 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:22,393 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:22,393 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:22,393 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548162393, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-23 00:09:22,393 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:24,042 Node[0] Epoch[11] Batch [0-20]	Speed: 40097.48 samples/sec	accuracy=nan
2023-03-23 00:09:25,671 Node[0] Epoch[11] Batch [20-40]	Speed: 40075.37 samples/sec	accuracy=nan
2023-03-23 00:09:27,305 Node[0] Epoch[11] Batch [40-60]	Speed: 39949.10 samples/sec	accuracy=nan
2023-03-23 00:09:28,941 Node[0] Epoch[11] Batch [60-80]	Speed: 39910.73 samples/sec	accuracy=nan
2023-03-23 00:09:30,573 Node[0] Epoch[11] Batch [80-100]	Speed: 39989.76 samples/sec	accuracy=nan
2023-03-23 00:09:32,206 Node[0] Epoch[11] Batch [100-120]	Speed: 39985.18 samples/sec	accuracy=nan
2023-03-23 00:09:33,832 Node[0] Epoch[11] Batch [120-140]	Speed: 40140.18 samples/sec	accuracy=nan
2023-03-23 00:09:35,468 Node[0] Epoch[11] Batch [140-160]	Speed: 39895.13 samples/sec	accuracy=nan
2023-03-23 00:09:37,098 Node[0] Epoch[11] Batch [160-180]	Speed: 40062.84 samples/sec	accuracy=nan
2023-03-23 00:09:38,734 Node[0] Epoch[11] Batch [180-200]	Speed: 39890.17 samples/sec	accuracy=nan
2023-03-23 00:09:40,371 Node[0] Epoch[11] Batch [200-220]	Speed: 39893.26 samples/sec	accuracy=nan
2023-03-23 00:09:42,000 Node[0] Epoch[11] Batch [220-240]	Speed: 40069.12 samples/sec	accuracy=nan
2023-03-23 00:09:43,638 Node[0] Epoch[11] Batch [240-260]	Speed: 39841.99 samples/sec	accuracy=nan
2023-03-23 00:09:45,271 Node[0] Epoch[11] Batch [260-280]	Speed: 39985.57 samples/sec	accuracy=nan
2023-03-23 00:09:46,901 Node[0] Epoch[11] Batch [280-300]	Speed: 40036.35 samples/sec	accuracy=nan
2023-03-23 00:09:48,536 Node[0] Epoch[11] Batch [300-320]	Speed: 39944.13 samples/sec	accuracy=nan
2023-03-23 00:09:50,163 Node[0] Epoch[11] Batch [320-340]	Speed: 40118.58 samples/sec	accuracy=nan
2023-03-23 00:09:51,798 Node[0] Epoch[11] Batch [340-360]	Speed: 39919.85 samples/sec	accuracy=nan
2023-03-23 00:09:53,435 Node[0] Epoch[11] Batch [360-380]	Speed: 39867.63 samples/sec	accuracy=nan
2023-03-23 00:09:54,411 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:54,411 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:54,411 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:54,411 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:54,411 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:54,411 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:54,411 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:54,411 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:54,411 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:54,411 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:54,411 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:54,411 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:54,411 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:54,412 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:54,412 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548194411, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-23 00:09:54,412 Node[0] Epoch[11] Time cost=32.019
:::MLLOG {"namespace": "", "time_ms": 1679548194412, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40012.61519920417}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679548194413, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-23 00:09:54,413 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:09:56,131 Node[0] Epoch[12] Batch [0-20]	Speed: 39863.21 samples/sec	accuracy=nan
2023-03-23 00:09:57,767 Node[0] Epoch[12] Batch [20-40]	Speed: 39896.45 samples/sec	accuracy=nan
2023-03-23 00:09:59,400 Node[0] Epoch[12] Batch [40-60]	Speed: 39968.79 samples/sec	accuracy=nan
2023-03-23 00:10:01,030 Node[0] Epoch[12] Batch [60-80]	Speed: 40050.56 samples/sec	accuracy=nan
2023-03-23 00:10:02,666 Node[0] Epoch[12] Batch [80-100]	Speed: 39914.77 samples/sec	accuracy=nan
2023-03-23 00:10:04,301 Node[0] Epoch[12] Batch [100-120]	Speed: 39925.27 samples/sec	accuracy=nan
2023-03-23 00:10:05,930 Node[0] Epoch[12] Batch [120-140]	Speed: 40068.34 samples/sec	accuracy=nan
2023-03-23 00:10:07,564 Node[0] Epoch[12] Batch [140-160]	Speed: 39942.87 samples/sec	accuracy=nan
2023-03-23 00:10:09,200 Node[0] Epoch[12] Batch [160-180]	Speed: 39915.42 samples/sec	accuracy=nan
2023-03-23 00:10:10,831 Node[0] Epoch[12] Batch [180-200]	Speed: 40029.51 samples/sec	accuracy=nan
2023-03-23 00:10:12,464 Node[0] Epoch[12] Batch [200-220]	Speed: 39975.47 samples/sec	accuracy=nan
2023-03-23 00:10:14,102 Node[0] Epoch[12] Batch [220-240]	Speed: 39832.18 samples/sec	accuracy=nan
2023-03-23 00:10:15,738 Node[0] Epoch[12] Batch [240-260]	Speed: 39913.75 samples/sec	accuracy=nan
2023-03-23 00:10:17,373 Node[0] Epoch[12] Batch [260-280]	Speed: 39926.90 samples/sec	accuracy=nan
2023-03-23 00:10:19,007 Node[0] Epoch[12] Batch [280-300]	Speed: 39955.63 samples/sec	accuracy=nan
2023-03-23 00:10:20,636 Node[0] Epoch[12] Batch [300-320]	Speed: 40072.34 samples/sec	accuracy=nan
2023-03-23 00:10:22,273 Node[0] Epoch[12] Batch [320-340]	Speed: 39882.42 samples/sec	accuracy=nan
2023-03-23 00:10:23,907 Node[0] Epoch[12] Batch [340-360]	Speed: 39941.92 samples/sec	accuracy=nan
2023-03-23 00:10:25,536 Node[0] Epoch[12] Batch [360-380]	Speed: 40070.31 samples/sec	accuracy=nan
2023-03-23 00:10:26,435 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:26,435 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:26,435 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:26,435 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:26,435 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:26,435 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:26,436 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:26,436 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:26,436 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:26,436 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:26,436 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:26,436 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:26,436 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:26,436 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548226436, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-23 00:10:26,436 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:26,436 Node[0] Epoch[12] Time cost=32.024
:::MLLOG {"namespace": "", "time_ms": 1679548226437, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40006.82736809577}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1679548226437, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-23 00:10:26,437 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:28,147 Node[0] Epoch[13] Batch [0-20]	Speed: 40145.77 samples/sec	accuracy=nan
2023-03-23 00:10:29,785 Node[0] Epoch[13] Batch [20-40]	Speed: 39838.58 samples/sec	accuracy=nan
2023-03-23 00:10:31,422 Node[0] Epoch[13] Batch [40-60]	Speed: 39886.97 samples/sec	accuracy=nan
2023-03-23 00:10:33,055 Node[0] Epoch[13] Batch [60-80]	Speed: 39971.08 samples/sec	accuracy=nan
2023-03-23 00:10:34,687 Node[0] Epoch[13] Batch [80-100]	Speed: 40011.00 samples/sec	accuracy=nan
2023-03-23 00:10:36,321 Node[0] Epoch[13] Batch [100-120]	Speed: 39928.99 samples/sec	accuracy=nan
2023-03-23 00:10:37,954 Node[0] Epoch[13] Batch [120-140]	Speed: 39993.27 samples/sec	accuracy=nan
2023-03-23 00:10:39,588 Node[0] Epoch[13] Batch [140-160]	Speed: 39934.09 samples/sec	accuracy=nan
2023-03-23 00:10:41,224 Node[0] Epoch[13] Batch [160-180]	Speed: 39901.13 samples/sec	accuracy=nan
2023-03-23 00:10:42,861 Node[0] Epoch[13] Batch [180-200]	Speed: 39887.23 samples/sec	accuracy=nan
2023-03-23 00:10:44,494 Node[0] Epoch[13] Batch [200-220]	Speed: 39974.49 samples/sec	accuracy=nan
2023-03-23 00:10:46,132 Node[0] Epoch[13] Batch [220-240]	Speed: 39864.20 samples/sec	accuracy=nan
2023-03-23 00:10:47,759 Node[0] Epoch[13] Batch [240-260]	Speed: 40103.76 samples/sec	accuracy=nan
2023-03-23 00:10:49,397 Node[0] Epoch[13] Batch [260-280]	Speed: 39860.24 samples/sec	accuracy=nan
2023-03-23 00:10:51,027 Node[0] Epoch[13] Batch [280-300]	Speed: 40050.15 samples/sec	accuracy=nan
2023-03-23 00:10:52,664 Node[0] Epoch[13] Batch [300-320]	Speed: 39888.07 samples/sec	accuracy=nan
2023-03-23 00:10:54,293 Node[0] Epoch[13] Batch [320-340]	Speed: 40062.62 samples/sec	accuracy=nan
2023-03-23 00:10:55,925 Node[0] Epoch[13] Batch [340-360]	Speed: 40009.14 samples/sec	accuracy=nan
2023-03-23 00:10:57,560 Node[0] Epoch[13] Batch [360-380]	Speed: 39928.26 samples/sec	accuracy=nan
2023-03-23 00:10:58,533 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:58,533 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:58,533 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:58,533 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:58,533 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:58,533 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:58,533 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:58,534 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:58,533 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:58,533 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:58,534 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:58,534 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:58,534 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:58,534 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:10:58,534 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548258534, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-23 00:10:58,535 Node[0] Epoch[13] Time cost=32.098
:::MLLOG {"namespace": "", "time_ms": 1679548258535, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39914.304287908555}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679548258535, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-23 00:10:58,535 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:11:00,252 Node[0] Epoch[14] Batch [0-20]	Speed: 39895.53 samples/sec	accuracy=nan
2023-03-23 00:11:01,877 Node[0] Epoch[14] Batch [20-40]	Speed: 40175.11 samples/sec	accuracy=nan
2023-03-23 00:11:03,513 Node[0] Epoch[14] Batch [40-60]	Speed: 39908.77 samples/sec	accuracy=nan
2023-03-23 00:11:05,147 Node[0] Epoch[14] Batch [60-80]	Speed: 39944.07 samples/sec	accuracy=nan
2023-03-23 00:11:06,782 Node[0] Epoch[14] Batch [80-100]	Speed: 39930.99 samples/sec	accuracy=nan
2023-03-23 00:11:08,416 Node[0] Epoch[14] Batch [100-120]	Speed: 39951.04 samples/sec	accuracy=nan
2023-03-23 00:11:10,050 Node[0] Epoch[14] Batch [120-140]	Speed: 39938.52 samples/sec	accuracy=nan
2023-03-23 00:11:11,683 Node[0] Epoch[14] Batch [140-160]	Speed: 39973.90 samples/sec	accuracy=nan
2023-03-23 00:11:13,319 Node[0] Epoch[14] Batch [160-180]	Speed: 39901.93 samples/sec	accuracy=nan
2023-03-23 00:11:14,950 Node[0] Epoch[14] Batch [180-200]	Speed: 40032.61 samples/sec	accuracy=nan
2023-03-23 00:11:16,583 Node[0] Epoch[14] Batch [200-220]	Speed: 39974.35 samples/sec	accuracy=nan
2023-03-23 00:11:18,219 Node[0] Epoch[14] Batch [220-240]	Speed: 39907.86 samples/sec	accuracy=nan
2023-03-23 00:11:19,853 Node[0] Epoch[14] Batch [240-260]	Speed: 39944.96 samples/sec	accuracy=nan
2023-03-23 00:11:21,482 Node[0] Epoch[14] Batch [260-280]	Speed: 40069.57 samples/sec	accuracy=nan
2023-03-23 00:11:23,116 Node[0] Epoch[14] Batch [280-300]	Speed: 39949.40 samples/sec	accuracy=nan
2023-03-23 00:11:24,750 Node[0] Epoch[14] Batch [300-320]	Speed: 39957.94 samples/sec	accuracy=nan
2023-03-23 00:11:26,382 Node[0] Epoch[14] Batch [320-340]	Speed: 39999.75 samples/sec	accuracy=nan
2023-03-23 00:11:28,016 Node[0] Epoch[14] Batch [340-360]	Speed: 39940.49 samples/sec	accuracy=nan
2023-03-23 00:11:29,650 Node[0] Epoch[14] Batch [360-380]	Speed: 39963.82 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679548290546, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-23 00:11:30,546 Node[0] Epoch[14] Time cost=32.011
:::MLLOG {"namespace": "", "time_ms": 1679548290546, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40022.85919691811}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679548290623, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-23 00:11:31,336 Node[0] Epoch[14] Validation-accuracy=0.592640
2023-03-23 00:11:31,336 Node[0] Epoch[14] Validation-correct-count=1852.000000
2023-03-23 00:11:31,336 Node[0] Epoch[14] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679548291456, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679548291457, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.59368, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679548291457, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
2023-03-23 00:11:31,457 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:11:31,457 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548291457, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-23 00:11:31,457 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:11:31,457 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:11:31,457 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:11:31,457 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:11:31,457 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:11:31,457 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:11:31,457 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:11:31,457 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:11:31,457 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:11:31,457 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:11:31,457 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548291457, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-23 00:11:31,457 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:11:31,457 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:11:31,457 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:11:33,098 Node[0] Epoch[15] Batch [0-20]	Speed: 40035.95 samples/sec	accuracy=nan
2023-03-23 00:11:34,732 Node[0] Epoch[15] Batch [20-40]	Speed: 39954.90 samples/sec	accuracy=nan
2023-03-23 00:11:36,360 Node[0] Epoch[15] Batch [40-60]	Speed: 40081.21 samples/sec	accuracy=nan
2023-03-23 00:11:37,992 Node[0] Epoch[15] Batch [60-80]	Speed: 39996.78 samples/sec	accuracy=nan
2023-03-23 00:11:39,629 Node[0] Epoch[15] Batch [80-100]	Speed: 39896.54 samples/sec	accuracy=nan
2023-03-23 00:11:41,257 Node[0] Epoch[15] Batch [100-120]	Speed: 40087.53 samples/sec	accuracy=nan
2023-03-23 00:11:42,891 Node[0] Epoch[15] Batch [120-140]	Speed: 39965.26 samples/sec	accuracy=nan
2023-03-23 00:11:44,523 Node[0] Epoch[15] Batch [140-160]	Speed: 39996.47 samples/sec	accuracy=nan
2023-03-23 00:11:46,157 Node[0] Epoch[15] Batch [160-180]	Speed: 39943.22 samples/sec	accuracy=nan
2023-03-23 00:11:47,793 Node[0] Epoch[15] Batch [180-200]	Speed: 39909.79 samples/sec	accuracy=nan
2023-03-23 00:11:49,424 Node[0] Epoch[15] Batch [200-220]	Speed: 40026.84 samples/sec	accuracy=nan
2023-03-23 00:11:51,057 Node[0] Epoch[15] Batch [220-240]	Speed: 39955.85 samples/sec	accuracy=nan
2023-03-23 00:11:52,694 Node[0] Epoch[15] Batch [240-260]	Speed: 39896.34 samples/sec	accuracy=nan
2023-03-23 00:11:54,326 Node[0] Epoch[15] Batch [260-280]	Speed: 39982.40 samples/sec	accuracy=nan
2023-03-23 00:11:55,960 Node[0] Epoch[15] Batch [280-300]	Speed: 39958.05 samples/sec	accuracy=nan
2023-03-23 00:11:57,593 Node[0] Epoch[15] Batch [300-320]	Speed: 39976.41 samples/sec	accuracy=nan
2023-03-23 00:11:59,223 Node[0] Epoch[15] Batch [320-340]	Speed: 40037.96 samples/sec	accuracy=nan
2023-03-23 00:12:00,862 Node[0] Epoch[15] Batch [340-360]	Speed: 39845.71 samples/sec	accuracy=nan
2023-03-23 00:12:02,500 Node[0] Epoch[15] Batch [360-380]	Speed: 39838.33 samples/sec	accuracy=nan
2023-03-23 00:12:03,475 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:03,474 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:03,475 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:03,475 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:03,475 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:03,475 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:03,475 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:03,475 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:03,475 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:03,475 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:03,475 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:03,475 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:03,475 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:03,475 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:03,476 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548323475, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-23 00:12:03,476 Node[0] Epoch[15] Time cost=32.019
:::MLLOG {"namespace": "", "time_ms": 1679548323476, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40012.71202980769}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679548323477, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-23 00:12:03,477 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:05,192 Node[0] Epoch[16] Batch [0-20]	Speed: 39921.97 samples/sec	accuracy=nan
2023-03-23 00:12:06,819 Node[0] Epoch[16] Batch [20-40]	Speed: 40120.46 samples/sec	accuracy=nan
2023-03-23 00:12:08,454 Node[0] Epoch[16] Batch [40-60]	Speed: 39923.86 samples/sec	accuracy=nan
2023-03-23 00:12:10,087 Node[0] Epoch[16] Batch [60-80]	Speed: 39969.18 samples/sec	accuracy=nan
2023-03-23 00:12:11,718 Node[0] Epoch[16] Batch [80-100]	Speed: 40023.15 samples/sec	accuracy=nan
2023-03-23 00:12:13,354 Node[0] Epoch[16] Batch [100-120]	Speed: 39902.07 samples/sec	accuracy=nan
2023-03-23 00:12:14,987 Node[0] Epoch[16] Batch [120-140]	Speed: 39985.91 samples/sec	accuracy=nan
2023-03-23 00:12:16,619 Node[0] Epoch[16] Batch [140-160]	Speed: 39996.80 samples/sec	accuracy=nan
2023-03-23 00:12:18,255 Node[0] Epoch[16] Batch [160-180]	Speed: 39917.50 samples/sec	accuracy=nan
2023-03-23 00:12:19,891 Node[0] Epoch[16] Batch [180-200]	Speed: 39891.07 samples/sec	accuracy=nan
2023-03-23 00:12:21,526 Node[0] Epoch[16] Batch [200-220]	Speed: 39931.25 samples/sec	accuracy=nan
2023-03-23 00:12:23,155 Node[0] Epoch[16] Batch [220-240]	Speed: 40056.56 samples/sec	accuracy=nan
2023-03-23 00:12:24,789 Node[0] Epoch[16] Batch [240-260]	Speed: 39961.32 samples/sec	accuracy=nan
2023-03-23 00:12:26,423 Node[0] Epoch[16] Batch [260-280]	Speed: 39945.19 samples/sec	accuracy=nan
2023-03-23 00:12:28,058 Node[0] Epoch[16] Batch [280-300]	Speed: 39937.15 samples/sec	accuracy=nan
2023-03-23 00:12:29,690 Node[0] Epoch[16] Batch [300-320]	Speed: 40002.95 samples/sec	accuracy=nan
2023-03-23 00:12:31,324 Node[0] Epoch[16] Batch [320-340]	Speed: 39934.34 samples/sec	accuracy=nan
2023-03-23 00:12:32,960 Node[0] Epoch[16] Batch [340-360]	Speed: 39913.53 samples/sec	accuracy=nan
2023-03-23 00:12:34,592 Node[0] Epoch[16] Batch [360-380]	Speed: 40005.31 samples/sec	accuracy=nan
2023-03-23 00:12:35,488 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:35,488 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:35,488 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:35,488 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:35,488 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:35,488 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:35,488 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:35,488 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:35,488 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:35,488 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:35,488 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:35,488 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548355488, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-23 00:12:35,489 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:35,489 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:35,489 Node[0] Epoch[16] Time cost=32.012
2023-03-23 00:12:35,489 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548355489, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40021.50500999453}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1679548355489, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-23 00:12:35,489 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:12:37,200 Node[0] Epoch[17] Batch [0-20]	Speed: 40109.66 samples/sec	accuracy=nan
2023-03-23 00:12:38,833 Node[0] Epoch[17] Batch [20-40]	Speed: 39975.85 samples/sec	accuracy=nan
2023-03-23 00:12:40,468 Node[0] Epoch[17] Batch [40-60]	Speed: 39924.75 samples/sec	accuracy=nan
2023-03-23 00:12:42,102 Node[0] Epoch[17] Batch [60-80]	Speed: 39963.30 samples/sec	accuracy=nan
2023-03-23 00:12:43,732 Node[0] Epoch[17] Batch [80-100]	Speed: 40048.41 samples/sec	accuracy=nan
2023-03-23 00:12:45,367 Node[0] Epoch[17] Batch [100-120]	Speed: 39937.34 samples/sec	accuracy=nan
2023-03-23 00:12:46,995 Node[0] Epoch[17] Batch [120-140]	Speed: 40083.15 samples/sec	accuracy=nan
2023-03-23 00:12:48,628 Node[0] Epoch[17] Batch [140-160]	Speed: 39968.37 samples/sec	accuracy=nan
2023-03-23 00:12:50,263 Node[0] Epoch[17] Batch [160-180]	Speed: 39927.30 samples/sec	accuracy=nan
2023-03-23 00:12:51,893 Node[0] Epoch[17] Batch [180-200]	Speed: 40063.23 samples/sec	accuracy=nan
2023-03-23 00:12:53,528 Node[0] Epoch[17] Batch [200-220]	Speed: 39927.89 samples/sec	accuracy=nan
2023-03-23 00:12:55,159 Node[0] Epoch[17] Batch [220-240]	Speed: 40021.50 samples/sec	accuracy=nan
2023-03-23 00:12:56,793 Node[0] Epoch[17] Batch [240-260]	Speed: 39957.97 samples/sec	accuracy=nan
2023-03-23 00:12:58,430 Node[0] Epoch[17] Batch [260-280]	Speed: 39875.12 samples/sec	accuracy=nan
2023-03-23 00:13:00,056 Node[0] Epoch[17] Batch [280-300]	Speed: 40133.73 samples/sec	accuracy=nan
2023-03-23 00:13:01,691 Node[0] Epoch[17] Batch [300-320]	Speed: 39923.77 samples/sec	accuracy=nan
2023-03-23 00:13:03,327 Node[0] Epoch[17] Batch [320-340]	Speed: 39922.54 samples/sec	accuracy=nan
2023-03-23 00:13:04,958 Node[0] Epoch[17] Batch [340-360]	Speed: 40019.22 samples/sec	accuracy=nan
2023-03-23 00:13:06,592 Node[0] Epoch[17] Batch [360-380]	Speed: 39953.06 samples/sec	accuracy=nan
2023-03-23 00:13:07,568 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:07,568 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:07,568 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:07,568 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:07,568 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:07,568 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:07,568 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:07,568 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:07,569 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:07,569 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:07,569 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:07,569 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:07,569 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:07,569 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:07,569 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548387569, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-23 00:13:07,570 Node[0] Epoch[17] Time cost=32.080
:::MLLOG {"namespace": "", "time_ms": 1679548387570, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39936.14852978396}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679548387570, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-23 00:13:07,570 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:09,284 Node[0] Epoch[18] Batch [0-20]	Speed: 39953.63 samples/sec	accuracy=nan
2023-03-23 00:13:10,917 Node[0] Epoch[18] Batch [20-40]	Speed: 39983.11 samples/sec	accuracy=nan
2023-03-23 00:13:12,553 Node[0] Epoch[18] Batch [40-60]	Speed: 39898.56 samples/sec	accuracy=nan
2023-03-23 00:13:14,184 Node[0] Epoch[18] Batch [60-80]	Speed: 40032.25 samples/sec	accuracy=nan
2023-03-23 00:13:15,817 Node[0] Epoch[18] Batch [80-100]	Speed: 39971.93 samples/sec	accuracy=nan
2023-03-23 00:13:17,452 Node[0] Epoch[18] Batch [100-120]	Speed: 39921.78 samples/sec	accuracy=nan
2023-03-23 00:13:19,087 Node[0] Epoch[18] Batch [120-140]	Speed: 39937.18 samples/sec	accuracy=nan
2023-03-23 00:13:20,713 Node[0] Epoch[18] Batch [140-160]	Speed: 40130.04 samples/sec	accuracy=nan
2023-03-23 00:13:22,348 Node[0] Epoch[18] Batch [160-180]	Speed: 39947.87 samples/sec	accuracy=nan
2023-03-23 00:13:23,980 Node[0] Epoch[18] Batch [180-200]	Speed: 39986.30 samples/sec	accuracy=nan
2023-03-23 00:13:25,609 Node[0] Epoch[18] Batch [200-220]	Speed: 40073.74 samples/sec	accuracy=nan
2023-03-23 00:13:27,244 Node[0] Epoch[18] Batch [220-240]	Speed: 39919.10 samples/sec	accuracy=nan
2023-03-23 00:13:28,878 Node[0] Epoch[18] Batch [240-260]	Speed: 39952.50 samples/sec	accuracy=nan
2023-03-23 00:13:30,512 Node[0] Epoch[18] Batch [260-280]	Speed: 39968.76 samples/sec	accuracy=nan
2023-03-23 00:13:32,145 Node[0] Epoch[18] Batch [280-300]	Speed: 39968.69 samples/sec	accuracy=nan
2023-03-23 00:13:33,780 Node[0] Epoch[18] Batch [300-320]	Speed: 39912.72 samples/sec	accuracy=nan
2023-03-23 00:13:35,416 Node[0] Epoch[18] Batch [320-340]	Speed: 39904.26 samples/sec	accuracy=nan
2023-03-23 00:13:37,045 Node[0] Epoch[18] Batch [340-360]	Speed: 40075.67 samples/sec	accuracy=nan
2023-03-23 00:13:38,680 Node[0] Epoch[18] Batch [360-380]	Speed: 39930.77 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679548419580, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-23 00:13:39,581 Node[0] Epoch[18] Time cost=32.010
:::MLLOG {"namespace": "", "time_ms": 1679548419581, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40023.40292442935}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679548419658, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-23 00:13:40,373 Node[0] Epoch[18] Validation-accuracy=0.640320
2023-03-23 00:13:40,373 Node[0] Epoch[18] Validation-correct-count=2001.000000
2023-03-23 00:13:40,373 Node[0] Epoch[18] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679548420491, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
2023-03-23 00:13:40,491 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:40,491 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548420491, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.63056, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-23 00:13:40,491 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:40,491 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548420491, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
2023-03-23 00:13:40,491 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:40,491 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:40,491 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:40,491 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:40,491 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:40,491 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:40,491 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:40,491 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548420491, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-23 00:13:40,491 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:40,491 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:40,491 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548420492, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-23 00:13:40,492 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:13:42,135 Node[0] Epoch[19] Batch [0-20]	Speed: 39907.51 samples/sec	accuracy=nan
2023-03-23 00:13:43,761 Node[0] Epoch[19] Batch [20-40]	Speed: 40136.17 samples/sec	accuracy=nan
2023-03-23 00:13:45,393 Node[0] Epoch[19] Batch [40-60]	Speed: 40000.80 samples/sec	accuracy=nan
2023-03-23 00:13:47,023 Node[0] Epoch[19] Batch [60-80]	Speed: 40048.34 samples/sec	accuracy=nan
2023-03-23 00:13:48,659 Node[0] Epoch[19] Batch [80-100]	Speed: 39917.50 samples/sec	accuracy=nan
2023-03-23 00:13:50,293 Node[0] Epoch[19] Batch [100-120]	Speed: 39946.37 samples/sec	accuracy=nan
2023-03-23 00:13:51,923 Node[0] Epoch[19] Batch [120-140]	Speed: 40057.67 samples/sec	accuracy=nan
2023-03-23 00:13:53,557 Node[0] Epoch[19] Batch [140-160]	Speed: 39952.06 samples/sec	accuracy=nan
2023-03-23 00:13:55,194 Node[0] Epoch[19] Batch [160-180]	Speed: 39858.06 samples/sec	accuracy=nan
2023-03-23 00:13:56,828 Node[0] Epoch[19] Batch [180-200]	Speed: 39959.57 samples/sec	accuracy=nan
2023-03-23 00:13:58,459 Node[0] Epoch[19] Batch [200-220]	Speed: 40017.02 samples/sec	accuracy=nan
2023-03-23 00:14:00,095 Node[0] Epoch[19] Batch [220-240]	Speed: 39915.84 samples/sec	accuracy=nan
2023-03-23 00:14:01,723 Node[0] Epoch[19] Batch [240-260]	Speed: 40092.24 samples/sec	accuracy=nan
2023-03-23 00:14:03,359 Node[0] Epoch[19] Batch [260-280]	Speed: 39913.07 samples/sec	accuracy=nan
2023-03-23 00:14:04,989 Node[0] Epoch[19] Batch [280-300]	Speed: 40039.27 samples/sec	accuracy=nan
2023-03-23 00:14:06,623 Node[0] Epoch[19] Batch [300-320]	Speed: 39962.11 samples/sec	accuracy=nan
2023-03-23 00:14:08,253 Node[0] Epoch[19] Batch [320-340]	Speed: 40039.05 samples/sec	accuracy=nan
2023-03-23 00:14:09,887 Node[0] Epoch[19] Batch [340-360]	Speed: 39962.18 samples/sec	accuracy=nan
2023-03-23 00:14:11,524 Node[0] Epoch[19] Batch [360-380]	Speed: 39865.43 samples/sec	accuracy=nan
2023-03-23 00:14:12,500 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:12,501 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:12,501 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:12,501 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:12,501 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:12,501 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:12,501 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:12,501 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:12,501 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:12,501 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:12,501 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:12,501 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:12,502 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:12,502 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:12,501 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548452501, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-23 00:14:12,502 Node[0] Epoch[19] Time cost=32.011
:::MLLOG {"namespace": "", "time_ms": 1679548452502, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40023.198428686905}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679548452503, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-23 00:14:12,503 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:14,221 Node[0] Epoch[20] Batch [0-20]	Speed: 39871.48 samples/sec	accuracy=nan
2023-03-23 00:14:15,849 Node[0] Epoch[20] Batch [20-40]	Speed: 40086.01 samples/sec	accuracy=nan
2023-03-23 00:14:17,486 Node[0] Epoch[20] Batch [40-60]	Speed: 39888.55 samples/sec	accuracy=nan
2023-03-23 00:14:19,123 Node[0] Epoch[20] Batch [60-80]	Speed: 39869.51 samples/sec	accuracy=nan
2023-03-23 00:14:20,757 Node[0] Epoch[20] Batch [80-100]	Speed: 39958.60 samples/sec	accuracy=nan
2023-03-23 00:14:22,387 Node[0] Epoch[20] Batch [100-120]	Speed: 40040.58 samples/sec	accuracy=nan
2023-03-23 00:14:24,023 Node[0] Epoch[20] Batch [120-140]	Speed: 39900.44 samples/sec	accuracy=nan
2023-03-23 00:14:25,658 Node[0] Epoch[20] Batch [140-160]	Speed: 39930.47 samples/sec	accuracy=nan
2023-03-23 00:14:27,293 Node[0] Epoch[20] Batch [160-180]	Speed: 39932.21 samples/sec	accuracy=nan
2023-03-23 00:14:28,928 Node[0] Epoch[20] Batch [180-200]	Speed: 39929.63 samples/sec	accuracy=nan
2023-03-23 00:14:30,562 Node[0] Epoch[20] Batch [200-220]	Speed: 39945.57 samples/sec	accuracy=nan
2023-03-23 00:14:32,197 Node[0] Epoch[20] Batch [220-240]	Speed: 39926.79 samples/sec	accuracy=nan
2023-03-23 00:14:33,831 Node[0] Epoch[20] Batch [240-260]	Speed: 39941.68 samples/sec	accuracy=nan
2023-03-23 00:14:35,461 Node[0] Epoch[20] Batch [260-280]	Speed: 40048.13 samples/sec	accuracy=nan
2023-03-23 00:14:37,097 Node[0] Epoch[20] Batch [280-300]	Speed: 39897.46 samples/sec	accuracy=nan
2023-03-23 00:14:38,729 Node[0] Epoch[20] Batch [300-320]	Speed: 40018.73 samples/sec	accuracy=nan
2023-03-23 00:14:40,360 Node[0] Epoch[20] Batch [320-340]	Speed: 40015.91 samples/sec	accuracy=nan
2023-03-23 00:14:41,995 Node[0] Epoch[20] Batch [340-360]	Speed: 39914.23 samples/sec	accuracy=nan
2023-03-23 00:14:43,632 Node[0] Epoch[20] Batch [360-380]	Speed: 39879.75 samples/sec	accuracy=nan
2023-03-23 00:14:44,530 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:44,530 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:44,530 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:44,530 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:44,531 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:44,531 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:44,531 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:44,531 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:44,531 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:44,531 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:44,531 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:44,531 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:44,531 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:44,531 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:44,531 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548484531, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-23 00:14:44,532 Node[0] Epoch[20] Time cost=32.029
:::MLLOG {"namespace": "", "time_ms": 1679548484532, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40000.130361861346}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1679548484532, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-23 00:14:44,533 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:14:46,251 Node[0] Epoch[21] Batch [0-20]	Speed: 39918.06 samples/sec	accuracy=nan
2023-03-23 00:14:47,887 Node[0] Epoch[21] Batch [20-40]	Speed: 39893.53 samples/sec	accuracy=nan
2023-03-23 00:14:49,523 Node[0] Epoch[21] Batch [40-60]	Speed: 39901.43 samples/sec	accuracy=nan
2023-03-23 00:14:51,156 Node[0] Epoch[21] Batch [60-80]	Speed: 39982.61 samples/sec	accuracy=nan
2023-03-23 00:14:52,789 Node[0] Epoch[21] Batch [80-100]	Speed: 39964.49 samples/sec	accuracy=nan
2023-03-23 00:14:54,421 Node[0] Epoch[21] Batch [100-120]	Speed: 40006.61 samples/sec	accuracy=nan
2023-03-23 00:14:56,060 Node[0] Epoch[21] Batch [120-140]	Speed: 39840.14 samples/sec	accuracy=nan
2023-03-23 00:14:57,697 Node[0] Epoch[21] Batch [140-160]	Speed: 39874.03 samples/sec	accuracy=nan
2023-03-23 00:14:59,326 Node[0] Epoch[21] Batch [160-180]	Speed: 40070.29 samples/sec	accuracy=nan
2023-03-23 00:15:00,961 Node[0] Epoch[21] Batch [180-200]	Speed: 39924.22 samples/sec	accuracy=nan
2023-03-23 00:15:02,598 Node[0] Epoch[21] Batch [200-220]	Speed: 39876.86 samples/sec	accuracy=nan
2023-03-23 00:15:04,229 Node[0] Epoch[21] Batch [220-240]	Speed: 40016.74 samples/sec	accuracy=nan
2023-03-23 00:15:05,862 Node[0] Epoch[21] Batch [240-260]	Speed: 39991.17 samples/sec	accuracy=nan
2023-03-23 00:15:07,498 Node[0] Epoch[21] Batch [260-280]	Speed: 39904.12 samples/sec	accuracy=nan
2023-03-23 00:15:09,132 Node[0] Epoch[21] Batch [280-300]	Speed: 39933.12 samples/sec	accuracy=nan
2023-03-23 00:15:10,766 Node[0] Epoch[21] Batch [300-320]	Speed: 39967.58 samples/sec	accuracy=nan
2023-03-23 00:15:12,403 Node[0] Epoch[21] Batch [320-340]	Speed: 39870.50 samples/sec	accuracy=nan
2023-03-23 00:15:14,040 Node[0] Epoch[21] Batch [340-360]	Speed: 39875.01 samples/sec	accuracy=nan
2023-03-23 00:15:15,673 Node[0] Epoch[21] Batch [360-380]	Speed: 39974.77 samples/sec	accuracy=nan
2023-03-23 00:15:16,652 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:16,652 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:16,652 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:16,653 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:16,653 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:16,653 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:16,653 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:16,653 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:16,653 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:16,653 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:16,653 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:16,653 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:16,653 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:16,653 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548516653, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-23 00:15:16,654 Node[0] Epoch[21] Time cost=32.121
:::MLLOG {"namespace": "", "time_ms": 1679548516654, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39885.35472204969}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679548516654, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-23 00:15:16,654 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:16,654 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:18,370 Node[0] Epoch[22] Batch [0-20]	Speed: 39940.79 samples/sec	accuracy=nan
2023-03-23 00:15:20,007 Node[0] Epoch[22] Batch [20-40]	Speed: 39888.75 samples/sec	accuracy=nan
2023-03-23 00:15:21,640 Node[0] Epoch[22] Batch [40-60]	Speed: 39971.70 samples/sec	accuracy=nan
2023-03-23 00:15:23,274 Node[0] Epoch[22] Batch [60-80]	Speed: 39951.76 samples/sec	accuracy=nan
2023-03-23 00:15:24,909 Node[0] Epoch[22] Batch [80-100]	Speed: 39920.57 samples/sec	accuracy=nan
2023-03-23 00:15:26,542 Node[0] Epoch[22] Batch [100-120]	Speed: 39977.56 samples/sec	accuracy=nan
2023-03-23 00:15:28,178 Node[0] Epoch[22] Batch [120-140]	Speed: 39906.02 samples/sec	accuracy=nan
2023-03-23 00:15:29,812 Node[0] Epoch[22] Batch [140-160]	Speed: 39948.99 samples/sec	accuracy=nan
2023-03-23 00:15:31,448 Node[0] Epoch[22] Batch [160-180]	Speed: 39916.14 samples/sec	accuracy=nan
2023-03-23 00:15:33,080 Node[0] Epoch[22] Batch [180-200]	Speed: 39980.15 samples/sec	accuracy=nan
2023-03-23 00:15:34,711 Node[0] Epoch[22] Batch [200-220]	Speed: 40035.89 samples/sec	accuracy=nan
2023-03-23 00:15:36,346 Node[0] Epoch[22] Batch [220-240]	Speed: 39917.82 samples/sec	accuracy=nan
2023-03-23 00:15:37,983 Node[0] Epoch[22] Batch [240-260]	Speed: 39879.18 samples/sec	accuracy=nan
2023-03-23 00:15:39,616 Node[0] Epoch[22] Batch [260-280]	Speed: 39982.61 samples/sec	accuracy=nan
2023-03-23 00:15:41,249 Node[0] Epoch[22] Batch [280-300]	Speed: 39960.35 samples/sec	accuracy=nan
2023-03-23 00:15:42,884 Node[0] Epoch[22] Batch [300-320]	Speed: 39929.39 samples/sec	accuracy=nan
2023-03-23 00:15:44,520 Node[0] Epoch[22] Batch [320-340]	Speed: 39900.37 samples/sec	accuracy=nan
2023-03-23 00:15:46,160 Node[0] Epoch[22] Batch [340-360]	Speed: 39817.96 samples/sec	accuracy=nan
2023-03-23 00:15:47,798 Node[0] Epoch[22] Batch [360-380]	Speed: 39860.51 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679548548697, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-23 00:15:48,698 Node[0] Epoch[22] Time cost=32.043
:::MLLOG {"namespace": "", "time_ms": 1679548548698, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39982.305541707545}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679548548776, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-23 00:15:49,534 Node[0] Epoch[22] Validation-accuracy=0.692480
2023-03-23 00:15:49,534 Node[0] Epoch[22] Validation-correct-count=2164.000000
2023-03-23 00:15:49,534 Node[0] Epoch[22] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679548549605, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679548549606, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.69816, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679548549606, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
2023-03-23 00:15:49,606 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:49,606 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548549606, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-23 00:15:49,606 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:49,606 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:49,606 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:49,606 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:49,606 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:49,606 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:49,606 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:49,606 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:49,606 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:49,606 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:49,606 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548549606, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-23 00:15:49,606 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:49,606 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:49,606 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:15:51,250 Node[0] Epoch[23] Batch [0-20]	Speed: 39886.02 samples/sec	accuracy=nan
2023-03-23 00:15:52,878 Node[0] Epoch[23] Batch [20-40]	Speed: 40104.96 samples/sec	accuracy=nan
2023-03-23 00:15:54,515 Node[0] Epoch[23] Batch [40-60]	Speed: 39870.49 samples/sec	accuracy=nan
2023-03-23 00:15:56,151 Node[0] Epoch[23] Batch [60-80]	Speed: 39925.53 samples/sec	accuracy=nan
2023-03-23 00:15:57,784 Node[0] Epoch[23] Batch [80-100]	Speed: 39965.54 samples/sec	accuracy=nan
2023-03-23 00:15:59,418 Node[0] Epoch[23] Batch [100-120]	Speed: 39954.75 samples/sec	accuracy=nan
2023-03-23 00:16:01,053 Node[0] Epoch[23] Batch [120-140]	Speed: 39928.51 samples/sec	accuracy=nan
2023-03-23 00:16:02,689 Node[0] Epoch[23] Batch [140-160]	Speed: 39889.09 samples/sec	accuracy=nan
2023-03-23 00:16:04,318 Node[0] Epoch[23] Batch [160-180]	Speed: 40070.87 samples/sec	accuracy=nan
2023-03-23 00:16:05,951 Node[0] Epoch[23] Batch [180-200]	Speed: 39978.23 samples/sec	accuracy=nan
2023-03-23 00:16:07,587 Node[0] Epoch[23] Batch [200-220]	Speed: 39915.28 samples/sec	accuracy=nan
2023-03-23 00:16:09,218 Node[0] Epoch[23] Batch [220-240]	Speed: 40028.89 samples/sec	accuracy=nan
2023-03-23 00:16:10,852 Node[0] Epoch[23] Batch [240-260]	Speed: 39948.35 samples/sec	accuracy=nan
2023-03-23 00:16:12,487 Node[0] Epoch[23] Batch [260-280]	Speed: 39908.05 samples/sec	accuracy=nan
2023-03-23 00:16:14,125 Node[0] Epoch[23] Batch [280-300]	Speed: 39852.30 samples/sec	accuracy=nan
2023-03-23 00:16:15,757 Node[0] Epoch[23] Batch [300-320]	Speed: 40003.34 samples/sec	accuracy=nan
2023-03-23 00:16:17,393 Node[0] Epoch[23] Batch [320-340]	Speed: 39913.44 samples/sec	accuracy=nan
2023-03-23 00:16:19,019 Node[0] Epoch[23] Batch [340-360]	Speed: 40138.47 samples/sec	accuracy=nan
2023-03-23 00:16:20,655 Node[0] Epoch[23] Batch [360-380]	Speed: 39896.29 samples/sec	accuracy=nan
2023-03-23 00:16:21,630 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:21,631 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:21,631 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:21,631 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:21,631 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:21,631 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:21,631 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:21,631 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:21,631 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:21,631 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:21,631 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:21,631 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:21,631 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:21,632 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:21,632 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548581631, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-23 00:16:21,632 Node[0] Epoch[23] Time cost=32.026
:::MLLOG {"namespace": "", "time_ms": 1679548581633, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40003.50568483234}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679548581633, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-23 00:16:21,633 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:23,351 Node[0] Epoch[24] Batch [0-20]	Speed: 39857.38 samples/sec	accuracy=nan
2023-03-23 00:16:24,984 Node[0] Epoch[24] Batch [20-40]	Speed: 39979.55 samples/sec	accuracy=nan
2023-03-23 00:16:26,619 Node[0] Epoch[24] Batch [40-60]	Speed: 39917.82 samples/sec	accuracy=nan
2023-03-23 00:16:28,256 Node[0] Epoch[24] Batch [60-80]	Speed: 39888.75 samples/sec	accuracy=nan
2023-03-23 00:16:29,883 Node[0] Epoch[24] Batch [80-100]	Speed: 40134.92 samples/sec	accuracy=nan
2023-03-23 00:16:31,522 Node[0] Epoch[24] Batch [100-120]	Speed: 39826.87 samples/sec	accuracy=nan
2023-03-23 00:16:33,157 Node[0] Epoch[24] Batch [120-140]	Speed: 39917.46 samples/sec	accuracy=nan
2023-03-23 00:16:34,791 Node[0] Epoch[24] Batch [140-160]	Speed: 39961.99 samples/sec	accuracy=nan
2023-03-23 00:16:36,424 Node[0] Epoch[24] Batch [160-180]	Speed: 39967.46 samples/sec	accuracy=nan
2023-03-23 00:16:38,059 Node[0] Epoch[24] Batch [180-200]	Speed: 39929.84 samples/sec	accuracy=nan
2023-03-23 00:16:39,689 Node[0] Epoch[24] Batch [200-220]	Speed: 40053.15 samples/sec	accuracy=nan
2023-03-23 00:16:41,321 Node[0] Epoch[24] Batch [220-240]	Speed: 39995.88 samples/sec	accuracy=nan
2023-03-23 00:16:42,957 Node[0] Epoch[24] Batch [240-260]	Speed: 39899.17 samples/sec	accuracy=nan
2023-03-23 00:16:44,589 Node[0] Epoch[24] Batch [260-280]	Speed: 39999.12 samples/sec	accuracy=nan
2023-03-23 00:16:46,219 Node[0] Epoch[24] Batch [280-300]	Speed: 40039.01 samples/sec	accuracy=nan
2023-03-23 00:16:47,858 Node[0] Epoch[24] Batch [300-320]	Speed: 39845.37 samples/sec	accuracy=nan
2023-03-23 00:16:49,493 Node[0] Epoch[24] Batch [320-340]	Speed: 39920.05 samples/sec	accuracy=nan
2023-03-23 00:16:51,132 Node[0] Epoch[24] Batch [340-360]	Speed: 39828.54 samples/sec	accuracy=nan
2023-03-23 00:16:52,768 Node[0] Epoch[24] Batch [360-380]	Speed: 39905.16 samples/sec	accuracy=nan
2023-03-23 00:16:53,662 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:53,662 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:53,662 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:53,662 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:53,662 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:53,662 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:53,662 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:53,662 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:53,662 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:53,662 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:53,662 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:53,662 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:53,662 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:53,663 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:53,663 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548613662, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-23 00:16:53,663 Node[0] Epoch[24] Time cost=32.030
:::MLLOG {"namespace": "", "time_ms": 1679548613663, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39998.58180482677}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679548613664, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-23 00:16:53,664 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:16:55,383 Node[0] Epoch[25] Batch [0-20]	Speed: 39904.94 samples/sec	accuracy=nan
2023-03-23 00:16:57,016 Node[0] Epoch[25] Batch [20-40]	Speed: 39983.06 samples/sec	accuracy=nan
2023-03-23 00:16:58,652 Node[0] Epoch[25] Batch [40-60]	Speed: 39911.75 samples/sec	accuracy=nan
2023-03-23 00:17:00,284 Node[0] Epoch[25] Batch [60-80]	Speed: 39977.97 samples/sec	accuracy=nan
2023-03-23 00:17:01,919 Node[0] Epoch[25] Batch [80-100]	Speed: 39928.49 samples/sec	accuracy=nan
2023-03-23 00:17:03,553 Node[0] Epoch[25] Batch [100-120]	Speed: 39949.79 samples/sec	accuracy=nan
2023-03-23 00:17:05,188 Node[0] Epoch[25] Batch [120-140]	Speed: 39936.41 samples/sec	accuracy=nan
2023-03-23 00:17:06,825 Node[0] Epoch[25] Batch [140-160]	Speed: 39882.05 samples/sec	accuracy=nan
2023-03-23 00:17:08,463 Node[0] Epoch[25] Batch [160-180]	Speed: 39849.38 samples/sec	accuracy=nan
2023-03-23 00:17:10,098 Node[0] Epoch[25] Batch [180-200]	Speed: 39932.92 samples/sec	accuracy=nan
2023-03-23 00:17:11,734 Node[0] Epoch[25] Batch [200-220]	Speed: 39903.21 samples/sec	accuracy=nan
2023-03-23 00:17:13,371 Node[0] Epoch[25] Batch [220-240]	Speed: 39866.13 samples/sec	accuracy=nan
2023-03-23 00:17:15,002 Node[0] Epoch[25] Batch [240-260]	Speed: 40026.80 samples/sec	accuracy=nan
2023-03-23 00:17:16,636 Node[0] Epoch[25] Batch [260-280]	Speed: 39946.24 samples/sec	accuracy=nan
2023-03-23 00:17:18,272 Node[0] Epoch[25] Batch [280-300]	Speed: 39910.72 samples/sec	accuracy=nan
2023-03-23 00:17:19,903 Node[0] Epoch[25] Batch [300-320]	Speed: 40020.59 samples/sec	accuracy=nan
2023-03-23 00:17:21,538 Node[0] Epoch[25] Batch [320-340]	Speed: 39918.85 samples/sec	accuracy=nan
2023-03-23 00:17:23,174 Node[0] Epoch[25] Batch [340-360]	Speed: 39903.52 samples/sec	accuracy=nan
2023-03-23 00:17:24,809 Node[0] Epoch[25] Batch [360-380]	Speed: 39942.48 samples/sec	accuracy=nan
2023-03-23 00:17:25,787 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:25,787 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:25,787 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:25,787 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:25,787 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:25,787 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:25,787 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:25,787 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:25,788 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:25,787 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:25,788 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:25,788 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:25,788 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:25,788 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:25,788 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548645788, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-23 00:17:25,789 Node[0] Epoch[25] Time cost=32.125
:::MLLOG {"namespace": "", "time_ms": 1679548645789, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39880.88076336237}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679548645789, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-23 00:17:25,789 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:27,504 Node[0] Epoch[26] Batch [0-20]	Speed: 39923.40 samples/sec	accuracy=nan
2023-03-23 00:17:29,138 Node[0] Epoch[26] Batch [20-40]	Speed: 39954.27 samples/sec	accuracy=nan
2023-03-23 00:17:30,776 Node[0] Epoch[26] Batch [40-60]	Speed: 39867.18 samples/sec	accuracy=nan
2023-03-23 00:17:32,416 Node[0] Epoch[26] Batch [60-80]	Speed: 39805.27 samples/sec	accuracy=nan
2023-03-23 00:17:34,048 Node[0] Epoch[26] Batch [80-100]	Speed: 39981.09 samples/sec	accuracy=nan
2023-03-23 00:17:35,681 Node[0] Epoch[26] Batch [100-120]	Speed: 39991.73 samples/sec	accuracy=nan
2023-03-23 00:17:37,318 Node[0] Epoch[26] Batch [120-140]	Speed: 39876.39 samples/sec	accuracy=nan
2023-03-23 00:17:38,946 Node[0] Epoch[26] Batch [140-160]	Speed: 40086.17 samples/sec	accuracy=nan
2023-03-23 00:17:40,583 Node[0] Epoch[26] Batch [160-180]	Speed: 39897.01 samples/sec	accuracy=nan
2023-03-23 00:17:42,215 Node[0] Epoch[26] Batch [180-200]	Speed: 39981.53 samples/sec	accuracy=nan
2023-03-23 00:17:43,850 Node[0] Epoch[26] Batch [200-220]	Speed: 39940.34 samples/sec	accuracy=nan
2023-03-23 00:17:45,487 Node[0] Epoch[26] Batch [220-240]	Speed: 39867.58 samples/sec	accuracy=nan
2023-03-23 00:17:47,122 Node[0] Epoch[26] Batch [240-260]	Speed: 39919.31 samples/sec	accuracy=nan
2023-03-23 00:17:48,753 Node[0] Epoch[26] Batch [260-280]	Speed: 40046.77 samples/sec	accuracy=nan
2023-03-23 00:17:50,387 Node[0] Epoch[26] Batch [280-300]	Speed: 39931.47 samples/sec	accuracy=nan
2023-03-23 00:17:52,022 Node[0] Epoch[26] Batch [300-320]	Speed: 39944.77 samples/sec	accuracy=nan
2023-03-23 00:17:53,661 Node[0] Epoch[26] Batch [320-340]	Speed: 39819.51 samples/sec	accuracy=nan
2023-03-23 00:17:55,298 Node[0] Epoch[26] Batch [340-360]	Speed: 39879.56 samples/sec	accuracy=nan
2023-03-23 00:17:56,933 Node[0] Epoch[26] Batch [360-380]	Speed: 39927.60 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679548677828, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-23 00:17:57,829 Node[0] Epoch[26] Time cost=32.040
:::MLLOG {"namespace": "", "time_ms": 1679548677829, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39987.06264948582}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679548677906, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-23 00:17:58,614 Node[0] Epoch[26] Validation-accuracy=0.722880
2023-03-23 00:17:58,614 Node[0] Epoch[26] Validation-correct-count=2259.000000
2023-03-23 00:17:58,614 Node[0] Epoch[26] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679548678740, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679548678740, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72478, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679548678740, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
2023-03-23 00:17:58,740 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:58,740 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:58,740 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548678740, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-23 00:17:58,740 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:58,740 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:58,740 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:58,740 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:58,740 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:58,740 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:58,740 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:58,740 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:58,740 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:58,740 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548678740, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-23 00:17:58,740 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:58,740 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:17:58,740 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:18:00,380 Node[0] Epoch[27] Batch [0-20]	Speed: 39984.60 samples/sec	accuracy=nan
2023-03-23 00:18:02,015 Node[0] Epoch[27] Batch [20-40]	Speed: 39929.97 samples/sec	accuracy=nan
2023-03-23 00:18:03,650 Node[0] Epoch[27] Batch [40-60]	Speed: 39913.47 samples/sec	accuracy=nan
2023-03-23 00:18:05,280 Node[0] Epoch[27] Batch [60-80]	Speed: 40066.28 samples/sec	accuracy=nan
2023-03-23 00:18:06,913 Node[0] Epoch[27] Batch [80-100]	Speed: 39968.93 samples/sec	accuracy=nan
2023-03-23 00:18:08,548 Node[0] Epoch[27] Batch [100-120]	Speed: 39914.93 samples/sec	accuracy=nan
2023-03-23 00:18:10,183 Node[0] Epoch[27] Batch [120-140]	Speed: 39939.76 samples/sec	accuracy=nan
2023-03-23 00:18:11,813 Node[0] Epoch[27] Batch [140-160]	Speed: 40050.29 samples/sec	accuracy=nan
2023-03-23 00:18:13,447 Node[0] Epoch[27] Batch [160-180]	Speed: 39942.10 samples/sec	accuracy=nan
2023-03-23 00:18:15,084 Node[0] Epoch[27] Batch [180-200]	Speed: 39881.77 samples/sec	accuracy=nan
2023-03-23 00:18:16,720 Node[0] Epoch[27] Batch [200-220]	Speed: 39898.68 samples/sec	accuracy=nan
2023-03-23 00:18:18,354 Node[0] Epoch[27] Batch [220-240]	Speed: 39961.66 samples/sec	accuracy=nan
2023-03-23 00:18:19,985 Node[0] Epoch[27] Batch [240-260]	Speed: 40024.30 samples/sec	accuracy=nan
2023-03-23 00:18:21,620 Node[0] Epoch[27] Batch [260-280]	Speed: 39911.93 samples/sec	accuracy=nan
2023-03-23 00:18:23,253 Node[0] Epoch[27] Batch [280-300]	Speed: 39990.65 samples/sec	accuracy=nan
2023-03-23 00:18:24,885 Node[0] Epoch[27] Batch [300-320]	Speed: 39991.51 samples/sec	accuracy=nan
2023-03-23 00:18:26,521 Node[0] Epoch[27] Batch [320-340]	Speed: 39908.72 samples/sec	accuracy=nan
2023-03-23 00:18:28,157 Node[0] Epoch[27] Batch [340-360]	Speed: 39907.62 samples/sec	accuracy=nan
2023-03-23 00:18:29,790 Node[0] Epoch[27] Batch [360-380]	Speed: 39965.05 samples/sec	accuracy=nan
2023-03-23 00:18:30,769 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:18:30,769 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:18:30,769 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:18:30,769 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:18:30,770 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:18:30,769 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:18:30,770 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:18:30,770 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:18:30,770 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:18:30,770 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:18:30,770 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:18:30,770 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:18:30,770 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:18:30,770 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:18:30,770 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548710770, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-23 00:18:30,771 Node[0] Epoch[27] Time cost=32.030
:::MLLOG {"namespace": "", "time_ms": 1679548710771, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39998.40912179826}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679548710771, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-23 00:18:30,771 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:18:32,489 Node[0] Epoch[28] Batch [0-20]	Speed: 39896.20 samples/sec	accuracy=nan
2023-03-23 00:18:34,122 Node[0] Epoch[28] Batch [20-40]	Speed: 39980.46 samples/sec	accuracy=nan
2023-03-23 00:18:35,756 Node[0] Epoch[28] Batch [40-60]	Speed: 39956.24 samples/sec	accuracy=nan
2023-03-23 00:18:37,389 Node[0] Epoch[28] Batch [60-80]	Speed: 39958.40 samples/sec	accuracy=nan
2023-03-23 00:18:39,021 Node[0] Epoch[28] Batch [80-100]	Speed: 40014.31 samples/sec	accuracy=nan
2023-03-23 00:18:40,658 Node[0] Epoch[28] Batch [100-120]	Speed: 39866.65 samples/sec	accuracy=nan
2023-03-23 00:18:42,292 Node[0] Epoch[28] Batch [120-140]	Speed: 39954.80 samples/sec	accuracy=nan
2023-03-23 00:18:43,926 Node[0] Epoch[28] Batch [140-160]	Speed: 39949.44 samples/sec	accuracy=nan
2023-03-23 00:18:45,563 Node[0] Epoch[28] Batch [160-180]	Speed: 39870.34 samples/sec	accuracy=nan
2023-03-23 00:18:47,201 Node[0] Epoch[28] Batch [180-200]	Speed: 39866.96 samples/sec	accuracy=nan
2023-03-23 00:18:48,832 Node[0] Epoch[28] Batch [200-220]	Speed: 40016.73 samples/sec	accuracy=nan
2023-03-23 00:18:50,468 Node[0] Epoch[28] Batch [220-240]	Speed: 39914.24 samples/sec	accuracy=nan
2023-03-23 00:18:52,103 Node[0] Epoch[28] Batch [240-260]	Speed: 39925.62 samples/sec	accuracy=nan
2023-03-23 00:18:53,740 Node[0] Epoch[28] Batch [260-280]	Speed: 39881.05 samples/sec	accuracy=nan
2023-03-23 00:18:55,371 Node[0] Epoch[28] Batch [280-300]	Speed: 40008.45 samples/sec	accuracy=nan
2023-03-23 00:18:57,005 Node[0] Epoch[28] Batch [300-320]	Speed: 39964.18 samples/sec	accuracy=nan
2023-03-23 00:18:58,640 Node[0] Epoch[28] Batch [320-340]	Speed: 39912.76 samples/sec	accuracy=nan
2023-03-23 00:19:00,274 Node[0] Epoch[28] Batch [340-360]	Speed: 39957.98 samples/sec	accuracy=nan
2023-03-23 00:19:01,906 Node[0] Epoch[28] Batch [360-380]	Speed: 39994.13 samples/sec	accuracy=nan
2023-03-23 00:19:02,805 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:02,806 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:02,806 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:02,806 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:02,806 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:02,806 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:02,806 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:02,806 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:02,806 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:02,806 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:02,806 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:02,806 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:02,806 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:02,806 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548742806, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-23 00:19:02,807 Node[0] Epoch[28] Time cost=32.036
:::MLLOG {"namespace": "", "time_ms": 1679548742807, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39991.99589661103}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1679548742807, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-23 00:19:02,807 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:02,808 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:04,523 Node[0] Epoch[29] Batch [0-20]	Speed: 40021.53 samples/sec	accuracy=nan
2023-03-23 00:19:06,154 Node[0] Epoch[29] Batch [20-40]	Speed: 40007.36 samples/sec	accuracy=nan
2023-03-23 00:19:07,787 Node[0] Epoch[29] Batch [40-60]	Speed: 39982.19 samples/sec	accuracy=nan
2023-03-23 00:19:09,423 Node[0] Epoch[29] Batch [60-80]	Speed: 39904.98 samples/sec	accuracy=nan
2023-03-23 00:19:11,055 Node[0] Epoch[29] Batch [80-100]	Speed: 39993.29 samples/sec	accuracy=nan
2023-03-23 00:19:12,691 Node[0] Epoch[29] Batch [100-120]	Speed: 39915.59 samples/sec	accuracy=nan
2023-03-23 00:19:14,326 Node[0] Epoch[29] Batch [120-140]	Speed: 39913.10 samples/sec	accuracy=nan
2023-03-23 00:19:15,958 Node[0] Epoch[29] Batch [140-160]	Speed: 39992.52 samples/sec	accuracy=nan
2023-03-23 00:19:17,592 Node[0] Epoch[29] Batch [160-180]	Speed: 39968.16 samples/sec	accuracy=nan
2023-03-23 00:19:19,225 Node[0] Epoch[29] Batch [180-200]	Speed: 39964.77 samples/sec	accuracy=nan
2023-03-23 00:19:20,864 Node[0] Epoch[29] Batch [200-220]	Speed: 39845.51 samples/sec	accuracy=nan
2023-03-23 00:19:22,501 Node[0] Epoch[29] Batch [220-240]	Speed: 39860.68 samples/sec	accuracy=nan
2023-03-23 00:19:24,139 Node[0] Epoch[29] Batch [240-260]	Speed: 39857.66 samples/sec	accuracy=nan
2023-03-23 00:19:25,774 Node[0] Epoch[29] Batch [260-280]	Speed: 39936.74 samples/sec	accuracy=nan
2023-03-23 00:19:27,409 Node[0] Epoch[29] Batch [280-300]	Speed: 39912.79 samples/sec	accuracy=nan
2023-03-23 00:19:29,042 Node[0] Epoch[29] Batch [300-320]	Speed: 39969.33 samples/sec	accuracy=nan
2023-03-23 00:19:30,679 Node[0] Epoch[29] Batch [320-340]	Speed: 39879.62 samples/sec	accuracy=nan
2023-03-23 00:19:32,317 Node[0] Epoch[29] Batch [340-360]	Speed: 39857.10 samples/sec	accuracy=nan
2023-03-23 00:19:33,953 Node[0] Epoch[29] Batch [360-380]	Speed: 39906.19 samples/sec	accuracy=nan
2023-03-23 00:19:34,929 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:34,929 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:34,929 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:34,930 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:34,930 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:34,930 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:34,930 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:34,930 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:34,930 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:34,930 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:34,930 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:34,930 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:34,930 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:34,930 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:34,930 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548774930, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-23 00:19:34,931 Node[0] Epoch[29] Time cost=32.124
:::MLLOG {"namespace": "", "time_ms": 1679548774931, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39882.53062971098}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679548774931, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-23 00:19:34,932 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:19:36,647 Node[0] Epoch[30] Batch [0-20]	Speed: 39958.01 samples/sec	accuracy=nan
2023-03-23 00:19:38,276 Node[0] Epoch[30] Batch [20-40]	Speed: 40063.22 samples/sec	accuracy=nan
2023-03-23 00:19:39,911 Node[0] Epoch[30] Batch [40-60]	Speed: 39927.28 samples/sec	accuracy=nan
2023-03-23 00:19:41,548 Node[0] Epoch[30] Batch [60-80]	Speed: 39896.96 samples/sec	accuracy=nan
2023-03-23 00:19:43,180 Node[0] Epoch[30] Batch [80-100]	Speed: 40000.67 samples/sec	accuracy=nan
2023-03-23 00:19:44,815 Node[0] Epoch[30] Batch [100-120]	Speed: 39907.56 samples/sec	accuracy=nan
2023-03-23 00:19:46,453 Node[0] Epoch[30] Batch [120-140]	Speed: 39872.05 samples/sec	accuracy=nan
2023-03-23 00:19:48,084 Node[0] Epoch[30] Batch [140-160]	Speed: 40012.08 samples/sec	accuracy=nan
2023-03-23 00:19:49,720 Node[0] Epoch[30] Batch [160-180]	Speed: 39915.74 samples/sec	accuracy=nan
2023-03-23 00:19:51,356 Node[0] Epoch[30] Batch [180-200]	Speed: 39880.01 samples/sec	accuracy=nan
2023-03-23 00:19:52,991 Node[0] Epoch[30] Batch [200-220]	Speed: 39944.81 samples/sec	accuracy=nan
2023-03-23 00:19:54,622 Node[0] Epoch[30] Batch [220-240]	Speed: 40022.90 samples/sec	accuracy=nan
2023-03-23 00:19:56,258 Node[0] Epoch[30] Batch [240-260]	Speed: 39892.17 samples/sec	accuracy=nan
2023-03-23 00:19:57,891 Node[0] Epoch[30] Batch [260-280]	Speed: 39971.39 samples/sec	accuracy=nan
2023-03-23 00:19:59,524 Node[0] Epoch[30] Batch [280-300]	Speed: 39990.92 samples/sec	accuracy=nan
2023-03-23 00:20:01,157 Node[0] Epoch[30] Batch [300-320]	Speed: 39970.03 samples/sec	accuracy=nan
2023-03-23 00:20:02,792 Node[0] Epoch[30] Batch [320-340]	Speed: 39928.22 samples/sec	accuracy=nan
2023-03-23 00:20:04,430 Node[0] Epoch[30] Batch [340-360]	Speed: 39854.92 samples/sec	accuracy=nan
2023-03-23 00:20:06,064 Node[0] Epoch[30] Batch [360-380]	Speed: 39953.09 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679548806964, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-23 00:20:06,965 Node[0] Epoch[30] Time cost=32.034
:::MLLOG {"namespace": "", "time_ms": 1679548806965, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39994.595886464704}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679548807042, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-23 00:20:07,773 Node[0] Epoch[30] Validation-accuracy=0.747200
2023-03-23 00:20:07,773 Node[0] Epoch[30] Validation-correct-count=2335.000000
2023-03-23 00:20:07,773 Node[0] Epoch[30] Validation-total-count=3125.000000
2023-03-23 00:20:07,872 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:07,872 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:07,872 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:07,872 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:07,872 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:07,872 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:07,872 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:07,872 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:07,872 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:07,872 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:07,872 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:07,872 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:07,872 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:07,872 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:07,872 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548807872, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679548807881, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75384, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679548807881, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679548807881, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679548807882, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-23 00:20:07,882 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:09,527 Node[0] Epoch[31] Batch [0-20]	Speed: 39840.93 samples/sec	accuracy=nan
2023-03-23 00:20:11,156 Node[0] Epoch[31] Batch [20-40]	Speed: 40067.52 samples/sec	accuracy=nan
2023-03-23 00:20:12,790 Node[0] Epoch[31] Batch [40-60]	Speed: 39956.42 samples/sec	accuracy=nan
2023-03-23 00:20:14,422 Node[0] Epoch[31] Batch [60-80]	Speed: 39992.76 samples/sec	accuracy=nan
2023-03-23 00:20:16,055 Node[0] Epoch[31] Batch [80-100]	Speed: 39988.20 samples/sec	accuracy=nan
2023-03-23 00:20:17,688 Node[0] Epoch[31] Batch [100-120]	Speed: 39964.95 samples/sec	accuracy=nan
2023-03-23 00:20:19,322 Node[0] Epoch[31] Batch [120-140]	Speed: 39958.80 samples/sec	accuracy=nan
2023-03-23 00:20:20,954 Node[0] Epoch[31] Batch [140-160]	Speed: 40005.65 samples/sec	accuracy=nan
2023-03-23 00:20:22,591 Node[0] Epoch[31] Batch [160-180]	Speed: 39878.17 samples/sec	accuracy=nan
2023-03-23 00:20:24,224 Node[0] Epoch[31] Batch [180-200]	Speed: 39966.50 samples/sec	accuracy=nan
2023-03-23 00:20:25,861 Node[0] Epoch[31] Batch [200-220]	Speed: 39889.65 samples/sec	accuracy=nan
2023-03-23 00:20:27,491 Node[0] Epoch[31] Batch [220-240]	Speed: 40038.23 samples/sec	accuracy=nan
2023-03-23 00:20:29,124 Node[0] Epoch[31] Batch [240-260]	Speed: 39969.03 samples/sec	accuracy=nan
2023-03-23 00:20:30,762 Node[0] Epoch[31] Batch [260-280]	Speed: 39863.59 samples/sec	accuracy=nan
2023-03-23 00:20:32,398 Node[0] Epoch[31] Batch [280-300]	Speed: 39893.29 samples/sec	accuracy=nan
2023-03-23 00:20:34,027 Node[0] Epoch[31] Batch [300-320]	Speed: 40069.95 samples/sec	accuracy=nan
2023-03-23 00:20:35,662 Node[0] Epoch[31] Batch [320-340]	Speed: 39935.52 samples/sec	accuracy=nan
2023-03-23 00:20:37,299 Node[0] Epoch[31] Batch [340-360]	Speed: 39876.06 samples/sec	accuracy=nan
2023-03-23 00:20:38,939 Node[0] Epoch[31] Batch [360-380]	Speed: 39802.53 samples/sec	accuracy=nan
2023-03-23 00:20:39,913 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:39,913 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:39,913 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:39,914 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:39,914 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:39,914 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:39,914 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:39,914 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:39,914 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:39,914 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:39,914 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:39,914 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:39,914 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:39,914 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548839914, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-23 00:20:39,915 Node[0] Epoch[31] Time cost=32.034
2023-03-23 00:20:39,915 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548839915, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39994.58606331391}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679548839916, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-23 00:20:39,916 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:20:41,634 Node[0] Epoch[32] Batch [0-20]	Speed: 39843.76 samples/sec	accuracy=nan
2023-03-23 00:20:43,271 Node[0] Epoch[32] Batch [20-40]	Speed: 39886.94 samples/sec	accuracy=nan
2023-03-23 00:20:44,900 Node[0] Epoch[32] Batch [40-60]	Speed: 40075.85 samples/sec	accuracy=nan
2023-03-23 00:20:46,538 Node[0] Epoch[32] Batch [60-80]	Speed: 39859.30 samples/sec	accuracy=nan
2023-03-23 00:20:48,174 Node[0] Epoch[32] Batch [80-100]	Speed: 39885.54 samples/sec	accuracy=nan
2023-03-23 00:20:49,804 Node[0] Epoch[32] Batch [100-120]	Speed: 40065.72 samples/sec	accuracy=nan
2023-03-23 00:20:51,442 Node[0] Epoch[32] Batch [120-140]	Speed: 39846.02 samples/sec	accuracy=nan
2023-03-23 00:20:53,077 Node[0] Epoch[32] Batch [140-160]	Speed: 39927.65 samples/sec	accuracy=nan
2023-03-23 00:20:54,703 Node[0] Epoch[32] Batch [160-180]	Speed: 40153.10 samples/sec	accuracy=nan
2023-03-23 00:20:56,341 Node[0] Epoch[32] Batch [180-200]	Speed: 39852.70 samples/sec	accuracy=nan
2023-03-23 00:20:57,966 Node[0] Epoch[32] Batch [200-220]	Speed: 40163.90 samples/sec	accuracy=nan
2023-03-23 00:20:59,603 Node[0] Epoch[32] Batch [220-240]	Speed: 39866.58 samples/sec	accuracy=nan
2023-03-23 00:21:01,233 Node[0] Epoch[32] Batch [240-260]	Speed: 40052.66 samples/sec	accuracy=nan
2023-03-23 00:21:02,869 Node[0] Epoch[32] Batch [260-280]	Speed: 39903.05 samples/sec	accuracy=nan
2023-03-23 00:21:04,506 Node[0] Epoch[32] Batch [280-300]	Speed: 39893.54 samples/sec	accuracy=nan
2023-03-23 00:21:06,138 Node[0] Epoch[32] Batch [300-320]	Speed: 39993.27 samples/sec	accuracy=nan
2023-03-23 00:21:07,768 Node[0] Epoch[32] Batch [320-340]	Speed: 40057.35 samples/sec	accuracy=nan
2023-03-23 00:21:09,405 Node[0] Epoch[32] Batch [340-360]	Speed: 39868.33 samples/sec	accuracy=nan
2023-03-23 00:21:11,041 Node[0] Epoch[32] Batch [360-380]	Speed: 39904.07 samples/sec	accuracy=nan
2023-03-23 00:21:11,936 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:11,936 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:11,936 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:11,936 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:11,936 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:11,936 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:11,936 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:11,937 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:11,937 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:11,937 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:11,937 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:11,937 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:11,937 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:11,937 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:11,937 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548871937, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-23 00:21:11,938 Node[0] Epoch[32] Time cost=32.022
:::MLLOG {"namespace": "", "time_ms": 1679548871938, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40009.242509330885}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679548871938, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-23 00:21:11,938 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:13,656 Node[0] Epoch[33] Batch [0-20]	Speed: 39934.43 samples/sec	accuracy=nan
2023-03-23 00:21:15,293 Node[0] Epoch[33] Batch [20-40]	Speed: 39860.95 samples/sec	accuracy=nan
2023-03-23 00:21:16,929 Node[0] Epoch[33] Batch [40-60]	Speed: 39901.98 samples/sec	accuracy=nan
2023-03-23 00:21:18,559 Node[0] Epoch[33] Batch [60-80]	Speed: 40060.72 samples/sec	accuracy=nan
2023-03-23 00:21:20,193 Node[0] Epoch[33] Batch [80-100]	Speed: 39957.76 samples/sec	accuracy=nan
2023-03-23 00:21:21,829 Node[0] Epoch[33] Batch [100-120]	Speed: 39899.78 samples/sec	accuracy=nan
2023-03-23 00:21:23,458 Node[0] Epoch[33] Batch [120-140]	Speed: 40062.16 samples/sec	accuracy=nan
2023-03-23 00:21:25,095 Node[0] Epoch[33] Batch [140-160]	Speed: 39893.26 samples/sec	accuracy=nan
2023-03-23 00:21:26,728 Node[0] Epoch[33] Batch [160-180]	Speed: 39978.29 samples/sec	accuracy=nan
2023-03-23 00:21:28,366 Node[0] Epoch[33] Batch [180-200]	Speed: 39835.34 samples/sec	accuracy=nan
2023-03-23 00:21:30,003 Node[0] Epoch[33] Batch [200-220]	Speed: 39884.20 samples/sec	accuracy=nan
2023-03-23 00:21:31,637 Node[0] Epoch[33] Batch [220-240]	Speed: 39953.52 samples/sec	accuracy=nan
2023-03-23 00:21:33,268 Node[0] Epoch[33] Batch [240-260]	Speed: 40030.22 samples/sec	accuracy=nan
2023-03-23 00:21:34,899 Node[0] Epoch[33] Batch [260-280]	Speed: 40020.57 samples/sec	accuracy=nan
2023-03-23 00:21:36,536 Node[0] Epoch[33] Batch [280-300]	Speed: 39863.68 samples/sec	accuracy=nan
2023-03-23 00:21:38,168 Node[0] Epoch[33] Batch [300-320]	Speed: 40014.28 samples/sec	accuracy=nan
2023-03-23 00:21:39,805 Node[0] Epoch[33] Batch [320-340]	Speed: 39870.43 samples/sec	accuracy=nan
2023-03-23 00:21:41,440 Node[0] Epoch[33] Batch [340-360]	Speed: 39922.41 samples/sec	accuracy=nan
2023-03-23 00:21:43,074 Node[0] Epoch[33] Batch [360-380]	Speed: 39970.37 samples/sec	accuracy=nan
2023-03-23 00:21:44,057 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:44,057 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:44,057 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:44,057 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:44,057 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:44,057 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:44,057 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:44,058 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:44,058 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:44,058 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:44,058 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:44,058 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:44,058 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:44,058 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:44,058 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679548904058, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-23 00:21:44,059 Node[0] Epoch[33] Time cost=32.121
:::MLLOG {"namespace": "", "time_ms": 1679548904059, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39885.67860054871}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679548904060, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-23 00:21:44,060 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-23 00:21:45,773 Node[0] Epoch[34] Batch [0-20]	Speed: 40015.21 samples/sec	accuracy=nan
2023-03-23 00:21:47,409 Node[0] Epoch[34] Batch [20-40]	Speed: 39883.26 samples/sec	accuracy=nan
2023-03-23 00:21:49,046 Node[0] Epoch[34] Batch [40-60]	Speed: 39895.12 samples/sec	accuracy=nan
2023-03-23 00:21:50,676 Node[0] Epoch[34] Batch [60-80]	Speed: 40030.34 samples/sec	accuracy=nan
2023-03-23 00:21:52,310 Node[0] Epoch[34] Batch [80-100]	Speed: 39967.66 samples/sec	accuracy=nan
2023-03-23 00:21:53,946 Node[0] Epoch[34] Batch [100-120]	Speed: 39902.28 samples/sec	accuracy=nan
2023-03-23 00:21:55,577 Node[0] Epoch[34] Batch [120-140]	Speed: 40009.47 samples/sec	accuracy=nan
2023-03-23 00:21:57,210 Node[0] Epoch[34] Batch [140-160]	Speed: 39982.17 samples/sec	accuracy=nan
2023-03-23 00:21:58,848 Node[0] Epoch[34] Batch [160-180]	Speed: 39849.53 samples/sec	accuracy=nan
2023-03-23 00:22:00,481 Node[0] Epoch[34] Batch [180-200]	Speed: 39988.25 samples/sec	accuracy=nan
2023-03-23 00:22:02,114 Node[0] Epoch[34] Batch [200-220]	Speed: 39960.94 samples/sec	accuracy=nan
2023-03-23 00:22:03,749 Node[0] Epoch[34] Batch [220-240]	Speed: 39934.05 samples/sec	accuracy=nan
2023-03-23 00:22:05,382 Node[0] Epoch[34] Batch [240-260]	Speed: 39970.98 samples/sec	accuracy=nan
2023-03-23 00:22:07,018 Node[0] Epoch[34] Batch [260-280]	Speed: 39908.16 samples/sec	accuracy=nan
2023-03-23 00:22:08,655 Node[0] Epoch[34] Batch [280-300]	Speed: 39870.65 samples/sec	accuracy=nan
2023-03-23 00:22:10,284 Node[0] Epoch[34] Batch [300-320]	Speed: 40077.61 samples/sec	accuracy=nan
2023-03-23 00:22:11,923 Node[0] Epoch[34] Batch [320-340]	Speed: 39819.43 samples/sec	accuracy=nan
2023-03-23 00:22:13,558 Node[0] Epoch[34] Batch [340-360]	Speed: 39938.81 samples/sec	accuracy=nan
2023-03-23 00:22:15,196 Node[0] Epoch[34] Batch [360-380]	Speed: 39850.30 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679548936175, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-23 00:22:16,176 Node[0] Epoch[34] Time cost=32.116
:::MLLOG {"namespace": "", "time_ms": 1679548936176, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39892.13565647396}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679548936253, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-23 00:22:17,007 Node[0] Epoch[34] Validation-accuracy=0.761920
2023-03-23 00:22:17,007 Node[0] Epoch[34] Validation-correct-count=2381.000000
2023-03-23 00:22:17,007 Node[0] Epoch[34] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679548937090, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679548937091, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76306, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679548937091, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679548937091, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ ret_code=0
+ sleep 3
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679548952
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-23 12:22:32 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-23 12:22:32 AM'
ENDING TIMING RUN AT 2023-03-23 12:22:32 AM
+ result=1286
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679548952
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-23 12:22:32 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-23 12:22:32 AM'
ENDING TIMING RUN AT 2023-03-23 12:22:32 AM
+ result=1286
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679548952
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-23 12:22:32 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-23 12:22:32 AM'
ENDING TIMING RUN AT 2023-03-23 12:22:32 AM
+ result=1286
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679548952
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-23 12:22:32 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-23 12:22:32 AM'
ENDING TIMING RUN AT 2023-03-23 12:22:32 AM
+ result=1286
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:07 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:07 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679548952
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-23 12:22:32 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-23 12:22:32 AM'
ENDING TIMING RUN AT 2023-03-23 12:22:32 AM
+ result=1286
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
+ [[ 0 != 0 ]]
++ date +%s
++ date +%s
+ end=1679548952
+ end=1679548952
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-23 12:22:32 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-23 12:22:32 AM'
ENDING TIMING RUN AT 2023-03-23 12:22:32 AM
+ result=1286
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM'
+ export PROFILE=0
+ PROFILE=0
+ end_fmt='2023-03-23 12:22:32 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-23 12:22:32 AM'
ENDING TIMING RUN AT 2023-03-23 12:22:32 AM
+ result=1286
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679548952
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-23 12:22:32 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-23 12:22:32 AM'
ENDING TIMING RUN AT 2023-03-23 12:22:32 AM
+ result=1286
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679548952
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-23 12:22:32 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-23 12:22:32 AM'
ENDING TIMING RUN AT 2023-03-23 12:22:32 AM
+ result=1286
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679548952
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-23 12:22:32 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-23 12:22:32 AM'
ENDING TIMING RUN AT 2023-03-23 12:22:32 AM
+ result=1286
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM'
RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679548952
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-23 12:22:32 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-23 12:22:32 AM'
ENDING TIMING RUN AT 2023-03-23 12:22:32 AM
+ result=1286
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679548952
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-23 12:22:32 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-23 12:22:32 AM'
ENDING TIMING RUN AT 2023-03-23 12:22:32 AM
+ result=1286
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679548952
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-23 12:22:32 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-23 12:22:32 AM'
ENDING TIMING RUN AT 2023-03-23 12:22:32 AM
+ result=1286
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM'
RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679548952
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-23 12:22:32 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-23 12:22:32 AM'
ENDING TIMING RUN AT 2023-03-23 12:22:32 AM
+ result=1286
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1286,root,2023-03-23 12:01:06 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679548953
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-23 12:22:33 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-23 12:22:33 AM'
ENDING TIMING RUN AT 2023-03-23 12:22:33 AM
+ result=1287
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1287,root,2023-03-23 12:01:06 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1287,root,2023-03-23 12:01:06 AM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679548953
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-23 12:22:33 AM'
+ echo 'ENDING TIMING RUN AT 2023-03-23 12:22:33 AM'
ENDING TIMING RUN AT 2023-03-23 12:22:33 AM
+ result=1287
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1287,root,2023-03-23 12:01:06 AM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1287,root,2023-03-23 12:01:06 AM'
+ export PROFILE=0
+ PROFILE=0
