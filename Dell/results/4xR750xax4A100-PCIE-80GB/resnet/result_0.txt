+ echo 'Beginning trial 1 of 5'
Beginning trial 1 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node044 node045 node046 node047 '
+ echo 'hosts=node044 node045 node046 node047 '
hosts=node044 node045 node046 node047 
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679542124839, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679542124874, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679542124876, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679542124877, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679542124878, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679542136953, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679542142978, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679542143013, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679542143014, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679542143015, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679542143017, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node045 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node045
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679542155780, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679542160715, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679542160749, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679542160751, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679542160752, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679542160753, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node046 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node046
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679542172483, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679542177428, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679542177462, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679542177464, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679542177465, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679542177466, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node047 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node047
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679542189350, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=16515
+ SEED=16515
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16 singularity exec --nv -B /dev/shm/resnet/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node045: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node046: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node047: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+ start=1679542190
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 10:29:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:29:50 PM'
STARTING TIMING RUN AT 2023-03-22 10:29:50 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=16515
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ source ./config_4xR750xax4A100.sh
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ start=1679542190
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 10:29:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:29:50 PM'
STARTING TIMING RUN AT 2023-03-22 10:29:50 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=16515
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ start=1679542190
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ date '+%Y-%m-%d %r'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start_fmt='2023-03-22 10:29:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:29:50 PM'
STARTING TIMING RUN AT 2023-03-22 10:29:50 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=16515
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ start=1679542190
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date '+%Y-%m-%d %r'
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start_fmt='2023-03-22 10:29:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:29:50 PM'
STARTING TIMING RUN AT 2023-03-22 10:29:50 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=16515
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++++ readlink -f ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+++ sed 's/^config_//'
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
+++ sed 's/\.sh$//'
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++++ readlink -f ./config_4xR750xax4A100.sh
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+++ sed 's/^config_//'
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ date +%s
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ UCX_NET_DEVICES=mlx5_0:1
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ date +%s
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ date +%s
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ start=1679542190
++ date '+%Y-%m-%d %r'
+ start=1679542190
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 10:29:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:29:50 PM'
+ start=1679542190
STARTING TIMING RUN AT 2023-03-22 10:29:50 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=16515
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
++ date '+%Y-%m-%d %r'
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ start=1679542190
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start_fmt='2023-03-22 10:29:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:29:50 PM'
STARTING TIMING RUN AT 2023-03-22 10:29:50 PM
+ readonly global_rank=1
+ global_rank=1
++ date '+%Y-%m-%d %r'
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=16515
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
++ seq 0 3
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ tr '\n' ,
++ sed 's/,$//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ start_fmt='2023-03-22 10:29:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:29:50 PM'
STARTING TIMING RUN AT 2023-03-22 10:29:50 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=16515
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
++ seq 0 3
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
++ tr '\n' ,
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ start_fmt='2023-03-22 10:29:50 PM'
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:29:50 PM'
++ date +%s
++ sed 's/,$//'
STARTING TIMING RUN AT 2023-03-22 10:29:50 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=16515
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+ start=1679542190
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ GPUS=0,1,2,3
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start_fmt='2023-03-22 10:29:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:29:50 PM'
STARTING TIMING RUN AT 2023-03-22 10:29:50 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ [[ '' -ge 1 ]]
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=16515
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ NUMEPOCHS=37
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ GPUS=0,1,2,3
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ GPUS=0,1,2,3
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
++ seq 0 3
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ tr '\n' ,
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ start=1679542190
++ sed 's/,$//'
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date '+%Y-%m-%d %r'
+ source ./config_4xR750xax4A100.sh
+ start_fmt='2023-03-22 10:29:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:29:50 PM'
STARTING TIMING RUN AT 2023-03-22 10:29:50 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=16515
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ dirname ./config_4xR750xax4A100.sh
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+ source ./config_4xR750xax4A100.sh
+++ export DGXHT=1
+++ DGXHT=1
+ source ./config_4xR750xax4A100.sh
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+ source ./config_4xR750xax4A100.sh
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
+ source ./config_4xR750xax4A100.sh
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ dirname ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ start=1679542190
++ date '+%Y-%m-%d %r'
+ source ./config_4xR750xax4A100.sh
+ start_fmt='2023-03-22 10:29:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:29:50 PM'
STARTING TIMING RUN AT 2023-03-22 10:29:50 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=16515
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+++ dirname ./config_4xR750xax4A100.sh
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ date +%s
++ date +%s
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ date +%s
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start=1679542190
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ start=1679542190
+ [[ '' -ge 1 ]]
+ start=1679542190
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date '+%Y-%m-%d %r'
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start_fmt='2023-03-22 10:29:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:29:50 PM'
STARTING TIMING RUN AT 2023-03-22 10:29:50 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ start_fmt='2023-03-22 10:29:50 PM'
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:29:50 PM'
+ start_fmt='2023-03-22 10:29:50 PM'
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
STARTING TIMING RUN AT 2023-03-22 10:29:50 PM
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:29:50 PM'
STARTING TIMING RUN AT 2023-03-22 10:29:50 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=16515
+ EVAL_OFFSET=2
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=16515
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ LABELSMOOTHING=0.1
+ SEED=16515
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ [[ 0 -ge 1 ]]
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ [[ 0 -ge 1 ]]
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start=1679542190
++ seq 0 3
++ seq 0 3
++ tr '\n' ,
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ seq 0 3
++ sed 's/,$//'
++ tr '\n' ,
++ tr '\n' ,
++ date '+%Y-%m-%d %r'
++ sed 's/,$//'
++ sed 's/,$//'
+ start_fmt='2023-03-22 10:29:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:29:50 PM'
STARTING TIMING RUN AT 2023-03-22 10:29:50 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=16515
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start=1679542190
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ date '+%Y-%m-%d %r'
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start_fmt='2023-03-22 10:29:50 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 10:29:50 PM'
STARTING TIMING RUN AT 2023-03-22 10:29:50 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=16515
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ export NGPUS=1
running benchmark
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 16515 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node044:37160] MCW rank 0 is not bound (or bound to all available processors)
[node044:37155] MCW rank 3 is not bound (or bound to all available processors)
[node044:37121] MCW rank 2 is not bound (or bound to all available processors)
[node044:37153] MCW rank 1 is not bound (or bound to all available processors)
[node046:26239] MCW rank 9 is not bound (or bound to all available processors)
[node046:26238] MCW rank 8 is not bound (or bound to all available processors)
[node045:31886] MCW rank 4 is not bound (or bound to all available processors)
[node045:31922] MCW rank 6 is not bound (or bound to all available processors)
[node046:26241] MCW rank 10 is not bound (or bound to all available processors)
[node046:26240] MCW rank 11 is not bound (or bound to all available processors)
[node045:31915] MCW rank 5 is not bound (or bound to all available processors)
[node045:31900] MCW rank 7 is not bound (or bound to all available processors)
[node047:34694] MCW rank 14 is not bound (or bound to all available processors)
[node047:34691] MCW rank 12 is not bound (or bound to all available processors)
[node047:34693] MCW rank 13 is not bound (or bound to all available processors)
[node047:34692] MCW rank 15 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679542195839, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[22:30:03] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:30:03] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:30:03] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:30:03] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:30:03] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:30:03] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:30:03] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:30:03] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:30:03] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:30:03] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:30:03] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679542203199, "event_type": "POINT_IN_TIME", "key": "seed", "value": 16515, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
[22:30:03] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:30:03] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:30:03] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:30:03] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[22:30:03] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679542206329, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 204, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[22:30:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:30:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:30:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:30:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679542210925, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210925, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210926, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210926, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210926, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210927, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210927, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210927, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210928, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210928, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210928, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210928, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210929, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210929, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210929, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210929, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210930, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210930, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210930, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210930, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210931, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210931, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210931, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210931, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210932, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210932, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210932, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210932, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210933, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210933, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210933, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210933, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210934, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210934, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210934, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210934, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210935, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210935, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210935, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210935, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210936, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210936, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210936, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210936, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210937, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210937, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210937, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210937, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210938, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210938, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210938, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210938, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210939, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210939, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210939, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210939, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210940, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210940, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210940, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210940, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210941, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210941, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210941, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210941, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210942, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210942, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210942, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210942, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210943, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210943, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210943, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210943, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210944, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210944, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210944, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210944, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210945, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210945, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210945, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210945, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210946, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210946, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210946, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210946, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210947, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210947, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210947, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210947, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210948, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210948, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210948, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210948, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210949, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210949, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210949, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210949, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210950, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210950, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210950, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210951, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210951, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210951, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210951, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210952, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210952, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210952, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210952, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210953, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210953, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210953, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210954, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210954, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210954, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210954, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210955, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210955, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210955, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210955, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210956, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210956, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210956, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210957, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210957, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210957, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210958, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210958, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210958, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210958, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210959, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210959, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210959, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210959, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210960, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210960, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210960, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210960, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210961, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210961, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210961, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210961, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210962, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210962, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210962, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210962, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210963, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210963, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210963, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210963, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210964, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210964, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210964, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210964, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210965, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210965, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210965, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210965, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210966, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210966, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210966, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210966, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679542210967, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
[22:30:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:30:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:30:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:30:10] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:30:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:30:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:30:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:30:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:30:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:30:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:30:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[22:30:11] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:30:12,792 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=13585, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:30:12,792 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=55837, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:30:12,792 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61487, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:30:12,792 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=14157, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:30:12,792 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=23777, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:30:12,792 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=6100, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:30:12,792 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=29161, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:30:12,792 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=6329, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:30:12,792 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=26554, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:30:12,792 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=53888, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:30:12,793 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=40574, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:30:12,793 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=58162, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:30:12,793 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=54200, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:30:12,793 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=55254, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:30:12,793 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=56227, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679542212792, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679542212794, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679542212794, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 22:30:12,794 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=42483, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679542212794, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679542212794, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 204, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679542212795, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679542212795, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679542212795, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679542212795, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679542212795, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679542212795, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679542212795, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679542212795, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679542212795, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679542212795, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679542212795, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679542212795, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679542212795, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679542212795, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679542212795, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679542300868, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679542300869, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679542300869, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679542301434, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679542301514, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679542301514, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-22 22:31:43,164 Node[0] Epoch[0] Batch [0-20]	Speed: 39771.02 samples/sec	accuracy=nan
2023-03-22 22:31:44,785 Node[0] Epoch[0] Batch [20-40]	Speed: 40280.37 samples/sec	accuracy=nan
2023-03-22 22:31:46,406 Node[0] Epoch[0] Batch [40-60]	Speed: 40270.77 samples/sec	accuracy=nan
2023-03-22 22:31:48,032 Node[0] Epoch[0] Batch [60-80]	Speed: 40127.26 samples/sec	accuracy=nan
2023-03-22 22:31:49,667 Node[0] Epoch[0] Batch [80-100]	Speed: 39944.04 samples/sec	accuracy=nan
2023-03-22 22:31:51,298 Node[0] Epoch[0] Batch [100-120]	Speed: 40011.94 samples/sec	accuracy=nan
2023-03-22 22:31:52,935 Node[0] Epoch[0] Batch [120-140]	Speed: 39888.53 samples/sec	accuracy=nan
2023-03-22 22:31:54,568 Node[0] Epoch[0] Batch [140-160]	Speed: 39966.42 samples/sec	accuracy=nan
2023-03-22 22:31:56,197 Node[0] Epoch[0] Batch [160-180]	Speed: 40076.01 samples/sec	accuracy=nan
2023-03-22 22:31:57,835 Node[0] Epoch[0] Batch [180-200]	Speed: 39841.30 samples/sec	accuracy=nan
2023-03-22 22:31:59,478 Node[0] Epoch[0] Batch [200-220]	Speed: 39733.98 samples/sec	accuracy=nan
2023-03-22 22:32:01,122 Node[0] Epoch[0] Batch [220-240]	Speed: 39729.97 samples/sec	accuracy=nan
2023-03-22 22:32:02,762 Node[0] Epoch[0] Batch [240-260]	Speed: 39794.48 samples/sec	accuracy=nan
2023-03-22 22:32:04,403 Node[0] Epoch[0] Batch [260-280]	Speed: 39788.86 samples/sec	accuracy=nan
2023-03-22 22:32:06,045 Node[0] Epoch[0] Batch [280-300]	Speed: 39753.50 samples/sec	accuracy=nan
2023-03-22 22:32:07,692 Node[0] Epoch[0] Batch [300-320]	Speed: 39630.13 samples/sec	accuracy=nan
2023-03-22 22:32:09,337 Node[0] Epoch[0] Batch [320-340]	Speed: 39675.09 samples/sec	accuracy=nan
2023-03-22 22:32:10,982 Node[0] Epoch[0] Batch [340-360]	Speed: 39688.35 samples/sec	accuracy=nan
2023-03-22 22:32:12,634 Node[0] Epoch[0] Batch [360-380]	Speed: 39510.00 samples/sec	accuracy=nan
2023-03-22 22:32:13,623 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:13,623 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:13,623 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:13,623 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:13,623 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:13,623 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:13,623 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542333623, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-22 22:32:13,623 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:13,623 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:13,623 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:13,623 Node[0] Epoch[0] Time cost=32.109
2023-03-22 22:32:13,623 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:13,623 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542333623, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39900.827423046096}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-22 22:32:13,623 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:13,623 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:13,624 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542333625, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-22 22:32:13,625 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:15,355 Node[0] Epoch[1] Batch [0-20]	Speed: 39565.41 samples/sec	accuracy=nan
2023-03-22 22:32:17,011 Node[0] Epoch[1] Batch [20-40]	Speed: 39439.77 samples/sec	accuracy=nan
2023-03-22 22:32:18,726 Node[0] Epoch[1] Batch [40-60]	Speed: 38061.72 samples/sec	accuracy=nan
2023-03-22 22:32:20,375 Node[0] Epoch[1] Batch [60-80]	Speed: 39588.21 samples/sec	accuracy=nan
2023-03-22 22:32:22,077 Node[0] Epoch[1] Batch [80-100]	Speed: 38346.06 samples/sec	accuracy=nan
2023-03-22 22:32:23,755 Node[0] Epoch[1] Batch [100-120]	Speed: 38905.81 samples/sec	accuracy=nan
2023-03-22 22:32:25,486 Node[0] Epoch[1] Batch [120-140]	Speed: 37720.90 samples/sec	accuracy=nan
2023-03-22 22:32:27,159 Node[0] Epoch[1] Batch [140-160]	Speed: 39016.99 samples/sec	accuracy=nan
2023-03-22 22:32:28,837 Node[0] Epoch[1] Batch [160-180]	Speed: 38893.64 samples/sec	accuracy=nan
2023-03-22 22:32:35,520 Node[0] Epoch[1] Batch [180-200]	Speed: 9768.62 samples/sec	accuracy=nan
2023-03-22 22:32:37,153 Node[0] Epoch[1] Batch [200-220]	Speed: 39973.41 samples/sec	accuracy=nan
2023-03-22 22:32:43,580 Node[0] Epoch[1] Batch [220-240]	Speed: 10157.75 samples/sec	accuracy=nan
2023-03-22 22:32:45,208 Node[0] Epoch[1] Batch [240-260]	Speed: 40078.82 samples/sec	accuracy=nan
2023-03-22 22:32:49,224 Node[0] Epoch[1] Batch [260-280]	Speed: 16256.94 samples/sec	accuracy=nan
2023-03-22 22:32:50,856 Node[0] Epoch[1] Batch [280-300]	Speed: 39993.77 samples/sec	accuracy=nan
2023-03-22 22:32:52,495 Node[0] Epoch[1] Batch [300-320]	Speed: 39840.76 samples/sec	accuracy=nan
2023-03-22 22:32:54,138 Node[0] Epoch[1] Batch [320-340]	Speed: 39728.33 samples/sec	accuracy=nan
2023-03-22 22:32:55,780 Node[0] Epoch[1] Batch [340-360]	Speed: 39755.94 samples/sec	accuracy=nan
2023-03-22 22:32:57,422 Node[0] Epoch[1] Batch [360-380]	Speed: 39740.85 samples/sec	accuracy=nan
2023-03-22 22:32:58,408 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:58,408 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:58,408 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:58,408 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:58,408 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:58,408 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:58,409 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:58,409 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:58,409 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:58,409 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:58,409 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:58,409 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:58,409 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:58,409 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:32:58,409 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542378409, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-22 22:32:58,410 Node[0] Epoch[1] Time cost=44.785
:::MLLOG {"namespace": "", "time_ms": 1679542378410, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 28606.989327081537}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679542378410, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-22 22:32:58,410 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:02,514 Node[0] Epoch[2] Batch [0-20]	Speed: 16228.50 samples/sec	accuracy=nan
2023-03-22 22:33:04,154 Node[0] Epoch[2] Batch [20-40]	Speed: 39803.24 samples/sec	accuracy=nan
2023-03-22 22:33:05,797 Node[0] Epoch[2] Batch [40-60]	Speed: 39719.84 samples/sec	accuracy=nan
2023-03-22 22:33:07,442 Node[0] Epoch[2] Batch [60-80]	Speed: 39697.01 samples/sec	accuracy=nan
2023-03-22 22:33:11,462 Node[0] Epoch[2] Batch [80-100]	Speed: 16239.39 samples/sec	accuracy=nan
2023-03-22 22:33:13,101 Node[0] Epoch[2] Batch [100-120]	Speed: 39822.53 samples/sec	accuracy=nan
2023-03-22 22:33:14,742 Node[0] Epoch[2] Batch [120-140]	Speed: 39782.90 samples/sec	accuracy=nan
2023-03-22 22:33:16,386 Node[0] Epoch[2] Batch [140-160]	Speed: 39713.45 samples/sec	accuracy=nan
2023-03-22 22:33:22,793 Node[0] Epoch[2] Batch [160-180]	Speed: 10188.89 samples/sec	accuracy=nan
2023-03-22 22:33:29,146 Node[0] Epoch[2] Batch [180-200]	Speed: 10274.20 samples/sec	accuracy=nan
2023-03-22 22:33:33,289 Node[0] Epoch[2] Batch [200-220]	Speed: 15758.21 samples/sec	accuracy=nan
2023-03-22 22:33:39,837 Node[0] Epoch[2] Batch [220-240]	Speed: 9968.92 samples/sec	accuracy=nan
2023-03-22 22:33:41,460 Node[0] Epoch[2] Batch [240-260]	Speed: 40239.33 samples/sec	accuracy=nan
2023-03-22 22:33:43,083 Node[0] Epoch[2] Batch [260-280]	Speed: 40219.43 samples/sec	accuracy=nan
2023-03-22 22:33:44,716 Node[0] Epoch[2] Batch [280-300]	Speed: 39976.06 samples/sec	accuracy=nan
2023-03-22 22:33:46,348 Node[0] Epoch[2] Batch [300-320]	Speed: 39993.78 samples/sec	accuracy=nan
2023-03-22 22:33:47,987 Node[0] Epoch[2] Batch [320-340]	Speed: 39832.50 samples/sec	accuracy=nan
2023-03-22 22:33:49,621 Node[0] Epoch[2] Batch [340-360]	Speed: 39935.01 samples/sec	accuracy=nan
2023-03-22 22:33:51,261 Node[0] Epoch[2] Batch [360-380]	Speed: 39809.60 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679542432161, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-22 22:33:52,162 Node[0] Epoch[2] Time cost=53.752
:::MLLOG {"namespace": "", "time_ms": 1679542432162, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 23834.983826270098}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
2023-03-22 22:33:52,238 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:52,239 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:52,239 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:52,239 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:52,239 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:52,239 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:52,239 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:52,239 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:52,239 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542432239, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-22 22:33:52,239 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:52,239 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:52,239 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:52,239 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:52,239 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:52,239 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:52,239 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:52,921 Node[0] Epoch[2] Validation-accuracy=0.272320
2023-03-22 22:33:52,921 Node[0] Epoch[2] Validation-correct-count=851.000000
2023-03-22 22:33:52,921 Node[0] Epoch[2] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679542433030, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-22 22:33:53,030 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542433030, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.27112, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-22 22:33:53,030 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542433031, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-22 22:33:53,030 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:53,030 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:53,031 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542433031, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
2023-03-22 22:33:53,030 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:53,030 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:53,030 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:53,030 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:53,030 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:53,030 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:53,030 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:53,030 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:53,030 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:53,031 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542433031, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-22 22:33:53,031 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:33:54,679 Node[0] Epoch[3] Batch [0-20]	Speed: 39789.05 samples/sec	accuracy=nan
2023-03-22 22:33:56,318 Node[0] Epoch[3] Batch [20-40]	Speed: 39817.97 samples/sec	accuracy=nan
2023-03-22 22:34:00,362 Node[0] Epoch[3] Batch [40-60]	Speed: 16144.58 samples/sec	accuracy=nan
2023-03-22 22:34:02,000 Node[0] Epoch[3] Batch [60-80]	Speed: 39844.25 samples/sec	accuracy=nan
2023-03-22 22:34:03,638 Node[0] Epoch[3] Batch [80-100]	Speed: 39858.50 samples/sec	accuracy=nan
2023-03-22 22:34:05,274 Node[0] Epoch[3] Batch [100-120]	Speed: 39911.56 samples/sec	accuracy=nan
2023-03-22 22:34:06,912 Node[0] Epoch[3] Batch [120-140]	Speed: 39848.04 samples/sec	accuracy=nan
2023-03-22 22:34:08,551 Node[0] Epoch[3] Batch [140-160]	Speed: 39839.59 samples/sec	accuracy=nan
2023-03-22 22:34:10,188 Node[0] Epoch[3] Batch [160-180]	Speed: 39856.03 samples/sec	accuracy=nan
2023-03-22 22:34:11,829 Node[0] Epoch[3] Batch [180-200]	Speed: 39787.02 samples/sec	accuracy=nan
2023-03-22 22:34:13,469 Node[0] Epoch[3] Batch [200-220]	Speed: 39807.40 samples/sec	accuracy=nan
2023-03-22 22:34:15,107 Node[0] Epoch[3] Batch [220-240]	Speed: 39848.78 samples/sec	accuracy=nan
2023-03-22 22:34:16,746 Node[0] Epoch[3] Batch [240-260]	Speed: 39830.20 samples/sec	accuracy=nan
2023-03-22 22:34:18,387 Node[0] Epoch[3] Batch [260-280]	Speed: 39787.54 samples/sec	accuracy=nan
2023-03-22 22:34:20,027 Node[0] Epoch[3] Batch [280-300]	Speed: 39808.62 samples/sec	accuracy=nan
2023-03-22 22:34:21,667 Node[0] Epoch[3] Batch [300-320]	Speed: 39794.85 samples/sec	accuracy=nan
2023-03-22 22:34:23,307 Node[0] Epoch[3] Batch [320-340]	Speed: 39815.10 samples/sec	accuracy=nan
2023-03-22 22:34:24,948 Node[0] Epoch[3] Batch [340-360]	Speed: 39774.52 samples/sec	accuracy=nan
2023-03-22 22:34:26,587 Node[0] Epoch[3] Batch [360-380]	Speed: 39827.90 samples/sec	accuracy=nan
2023-03-22 22:34:27,568 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:27,568 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:27,568 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:27,568 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:27,568 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:27,568 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:27,568 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:27,568 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:27,568 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:27,568 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:27,568 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:27,568 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:27,568 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:27,569 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:27,569 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542467569, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-22 22:34:27,570 Node[0] Epoch[3] Time cost=34.539
:::MLLOG {"namespace": "", "time_ms": 1679542467570, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 37093.4594548334}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679542467570, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-22 22:34:27,571 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:29,293 Node[0] Epoch[4] Batch [0-20]	Speed: 39782.51 samples/sec	accuracy=nan
2023-03-22 22:34:30,933 Node[0] Epoch[4] Batch [20-40]	Speed: 39808.28 samples/sec	accuracy=nan
2023-03-22 22:34:32,574 Node[0] Epoch[4] Batch [40-60]	Speed: 39780.49 samples/sec	accuracy=nan
2023-03-22 22:34:34,212 Node[0] Epoch[4] Batch [60-80]	Speed: 39850.16 samples/sec	accuracy=nan
2023-03-22 22:34:35,853 Node[0] Epoch[4] Batch [80-100]	Speed: 39795.94 samples/sec	accuracy=nan
2023-03-22 22:34:37,493 Node[0] Epoch[4] Batch [100-120]	Speed: 39802.16 samples/sec	accuracy=nan
2023-03-22 22:34:39,132 Node[0] Epoch[4] Batch [120-140]	Speed: 39820.70 samples/sec	accuracy=nan
2023-03-22 22:34:40,777 Node[0] Epoch[4] Batch [140-160]	Speed: 39682.43 samples/sec	accuracy=nan
2023-03-22 22:34:42,417 Node[0] Epoch[4] Batch [160-180]	Speed: 39820.95 samples/sec	accuracy=nan
2023-03-22 22:34:44,057 Node[0] Epoch[4] Batch [180-200]	Speed: 39787.82 samples/sec	accuracy=nan
2023-03-22 22:34:45,700 Node[0] Epoch[4] Batch [200-220]	Speed: 39736.92 samples/sec	accuracy=nan
2023-03-22 22:34:47,343 Node[0] Epoch[4] Batch [220-240]	Speed: 39725.62 samples/sec	accuracy=nan
2023-03-22 22:34:48,984 Node[0] Epoch[4] Batch [240-260]	Speed: 39796.50 samples/sec	accuracy=nan
2023-03-22 22:34:50,625 Node[0] Epoch[4] Batch [260-280]	Speed: 39783.26 samples/sec	accuracy=nan
2023-03-22 22:34:52,268 Node[0] Epoch[4] Batch [280-300]	Speed: 39732.78 samples/sec	accuracy=nan
2023-03-22 22:34:53,907 Node[0] Epoch[4] Batch [300-320]	Speed: 39829.66 samples/sec	accuracy=nan
2023-03-22 22:34:55,546 Node[0] Epoch[4] Batch [320-340]	Speed: 39826.15 samples/sec	accuracy=nan
2023-03-22 22:34:57,186 Node[0] Epoch[4] Batch [340-360]	Speed: 39798.96 samples/sec	accuracy=nan
2023-03-22 22:34:58,828 Node[0] Epoch[4] Batch [360-380]	Speed: 39750.70 samples/sec	accuracy=nan
2023-03-22 22:34:59,727 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:59,727 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:59,727 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:59,727 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:59,728 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:59,728 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:59,728 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:59,728 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:59,728 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:59,728 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:59,728 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:59,728 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:59,728 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:59,728 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:34:59,728 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542499728, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-22 22:34:59,729 Node[0] Epoch[4] Time cost=32.158
:::MLLOG {"namespace": "", "time_ms": 1679542499729, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39839.16921163371}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1679542499729, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-22 22:34:59,730 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:35:01,448 Node[0] Epoch[5] Batch [0-20]	Speed: 39939.34 samples/sec	accuracy=nan
2023-03-22 22:35:03,087 Node[0] Epoch[5] Batch [20-40]	Speed: 39829.03 samples/sec	accuracy=nan
2023-03-22 22:35:04,725 Node[0] Epoch[5] Batch [40-60]	Speed: 39859.85 samples/sec	accuracy=nan
2023-03-22 22:35:06,363 Node[0] Epoch[5] Batch [60-80]	Speed: 39849.04 samples/sec	accuracy=nan
2023-03-22 22:35:08,000 Node[0] Epoch[5] Batch [80-100]	Speed: 39883.82 samples/sec	accuracy=nan
2023-03-22 22:35:09,637 Node[0] Epoch[5] Batch [100-120]	Speed: 39867.38 samples/sec	accuracy=nan
2023-03-22 22:35:11,276 Node[0] Epoch[5] Batch [120-140]	Speed: 39843.21 samples/sec	accuracy=nan
2023-03-22 22:35:12,908 Node[0] Epoch[5] Batch [140-160]	Speed: 40007.84 samples/sec	accuracy=nan
2023-03-22 22:35:14,547 Node[0] Epoch[5] Batch [160-180]	Speed: 39809.99 samples/sec	accuracy=nan
2023-03-22 22:35:16,182 Node[0] Epoch[5] Batch [180-200]	Speed: 39923.48 samples/sec	accuracy=nan
2023-03-22 22:35:17,814 Node[0] Epoch[5] Batch [200-220]	Speed: 40004.49 samples/sec	accuracy=nan
2023-03-22 22:35:19,453 Node[0] Epoch[5] Batch [220-240]	Speed: 39840.72 samples/sec	accuracy=nan
2023-03-22 22:35:21,092 Node[0] Epoch[5] Batch [240-260]	Speed: 39833.10 samples/sec	accuracy=nan
2023-03-22 22:35:22,729 Node[0] Epoch[5] Batch [260-280]	Speed: 39870.76 samples/sec	accuracy=nan
2023-03-22 22:35:24,361 Node[0] Epoch[5] Batch [280-300]	Speed: 39997.52 samples/sec	accuracy=nan
2023-03-22 22:35:25,999 Node[0] Epoch[5] Batch [300-320]	Speed: 39851.32 samples/sec	accuracy=nan
2023-03-22 22:35:27,638 Node[0] Epoch[5] Batch [320-340]	Speed: 39828.66 samples/sec	accuracy=nan
2023-03-22 22:35:29,275 Node[0] Epoch[5] Batch [340-360]	Speed: 39890.07 samples/sec	accuracy=nan
2023-03-22 22:35:30,910 Node[0] Epoch[5] Batch [360-380]	Speed: 39928.43 samples/sec	accuracy=nan
2023-03-22 22:35:31,888 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:35:31,888 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:35:31,888 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:35:31,888 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:35:31,888 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:35:31,888 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:35:31,888 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:35:31,888 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:35:31,888 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:35:31,888 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:35:31,888 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:35:31,888 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:35:31,888 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:35:31,888 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:35:31,889 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542531888, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-22 22:35:31,889 Node[0] Epoch[5] Time cost=32.160
:::MLLOG {"namespace": "", "time_ms": 1679542531889, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39837.46593071395}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679542531890, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-22 22:35:31,890 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:35:33,611 Node[0] Epoch[6] Batch [0-20]	Speed: 39822.42 samples/sec	accuracy=nan
2023-03-22 22:35:35,247 Node[0] Epoch[6] Batch [20-40]	Speed: 39890.25 samples/sec	accuracy=nan
2023-03-22 22:35:36,884 Node[0] Epoch[6] Batch [40-60]	Speed: 39875.85 samples/sec	accuracy=nan
2023-03-22 22:35:38,523 Node[0] Epoch[6] Batch [60-80]	Speed: 39826.16 samples/sec	accuracy=nan
2023-03-22 22:35:40,158 Node[0] Epoch[6] Batch [80-100]	Speed: 39927.61 samples/sec	accuracy=nan
2023-03-22 22:35:41,797 Node[0] Epoch[6] Batch [100-120]	Speed: 39829.97 samples/sec	accuracy=nan
2023-03-22 22:35:43,436 Node[0] Epoch[6] Batch [120-140]	Speed: 39821.54 samples/sec	accuracy=nan
2023-03-22 22:35:45,069 Node[0] Epoch[6] Batch [140-160]	Speed: 39978.92 samples/sec	accuracy=nan
2023-03-22 22:35:46,708 Node[0] Epoch[6] Batch [160-180]	Speed: 39844.41 samples/sec	accuracy=nan
2023-03-22 22:35:48,342 Node[0] Epoch[6] Batch [180-200]	Speed: 39932.17 samples/sec	accuracy=nan
2023-03-22 22:35:49,977 Node[0] Epoch[6] Batch [200-220]	Speed: 39941.17 samples/sec	accuracy=nan
2023-03-22 22:35:51,611 Node[0] Epoch[6] Batch [220-240]	Speed: 39933.51 samples/sec	accuracy=nan
2023-03-22 22:35:53,247 Node[0] Epoch[6] Batch [240-260]	Speed: 39913.29 samples/sec	accuracy=nan
2023-03-22 22:35:54,881 Node[0] Epoch[6] Batch [260-280]	Speed: 39949.93 samples/sec	accuracy=nan
2023-03-22 22:35:56,512 Node[0] Epoch[6] Batch [280-300]	Speed: 40028.94 samples/sec	accuracy=nan
2023-03-22 22:35:58,152 Node[0] Epoch[6] Batch [300-320]	Speed: 39810.74 samples/sec	accuracy=nan
2023-03-22 22:35:59,786 Node[0] Epoch[6] Batch [320-340]	Speed: 39955.03 samples/sec	accuracy=nan
2023-03-22 22:36:01,422 Node[0] Epoch[6] Batch [340-360]	Speed: 39900.74 samples/sec	accuracy=nan
2023-03-22 22:36:03,061 Node[0] Epoch[6] Batch [360-380]	Speed: 39825.97 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679542563956, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-22 22:36:03,957 Node[0] Epoch[6] Time cost=32.067
:::MLLOG {"namespace": "", "time_ms": 1679542563957, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39953.14084032601}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679542564034, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-22 22:36:04,768 Node[0] Epoch[6] Validation-accuracy=0.462080
2023-03-22 22:36:04,768 Node[0] Epoch[6] Validation-correct-count=1444.000000
2023-03-22 22:36:04,768 Node[0] Epoch[6] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679542564866, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679542564867, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.45396, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679542564867, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
2023-03-22 22:36:04,867 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:04,867 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:04,867 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542564867, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-22 22:36:04,866 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:04,866 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:04,866 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:04,866 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:04,866 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:04,866 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:04,866 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:04,866 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:04,866 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:04,867 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:04,866 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:04,867 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542564867, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-22 22:36:04,867 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:06,525 Node[0] Epoch[7] Batch [0-20]	Speed: 39547.73 samples/sec	accuracy=nan
2023-03-22 22:36:08,156 Node[0] Epoch[7] Batch [20-40]	Speed: 40019.14 samples/sec	accuracy=nan
2023-03-22 22:36:09,788 Node[0] Epoch[7] Batch [40-60]	Speed: 40001.22 samples/sec	accuracy=nan
2023-03-22 22:36:11,424 Node[0] Epoch[7] Batch [60-80]	Speed: 39894.10 samples/sec	accuracy=nan
2023-03-22 22:36:13,062 Node[0] Epoch[7] Batch [80-100]	Speed: 39867.42 samples/sec	accuracy=nan
2023-03-22 22:36:14,697 Node[0] Epoch[7] Batch [100-120]	Speed: 39914.00 samples/sec	accuracy=nan
2023-03-22 22:36:16,334 Node[0] Epoch[7] Batch [120-140]	Speed: 39880.58 samples/sec	accuracy=nan
2023-03-22 22:36:17,971 Node[0] Epoch[7] Batch [140-160]	Speed: 39885.03 samples/sec	accuracy=nan
2023-03-22 22:36:19,607 Node[0] Epoch[7] Batch [160-180]	Speed: 39911.58 samples/sec	accuracy=nan
2023-03-22 22:36:21,238 Node[0] Epoch[7] Batch [180-200]	Speed: 40016.97 samples/sec	accuracy=nan
2023-03-22 22:36:22,872 Node[0] Epoch[7] Batch [200-220]	Speed: 39953.53 samples/sec	accuracy=nan
2023-03-22 22:36:24,505 Node[0] Epoch[7] Batch [220-240]	Speed: 39976.13 samples/sec	accuracy=nan
2023-03-22 22:36:26,140 Node[0] Epoch[7] Batch [240-260]	Speed: 39928.63 samples/sec	accuracy=nan
2023-03-22 22:36:27,772 Node[0] Epoch[7] Batch [260-280]	Speed: 39999.02 samples/sec	accuracy=nan
2023-03-22 22:36:29,402 Node[0] Epoch[7] Batch [280-300]	Speed: 40033.83 samples/sec	accuracy=nan
2023-03-22 22:36:31,039 Node[0] Epoch[7] Batch [300-320]	Speed: 39889.76 samples/sec	accuracy=nan
2023-03-22 22:36:32,667 Node[0] Epoch[7] Batch [320-340]	Speed: 40095.19 samples/sec	accuracy=nan
2023-03-22 22:36:34,303 Node[0] Epoch[7] Batch [340-360]	Speed: 39903.87 samples/sec	accuracy=nan
2023-03-22 22:36:35,939 Node[0] Epoch[7] Batch [360-380]	Speed: 39898.14 samples/sec	accuracy=nan
2023-03-22 22:36:36,912 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:36,912 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:36,912 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:36,912 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:36,912 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:36,912 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:36,912 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:36,912 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:36,912 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:36,912 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:36,912 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:36,912 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:36,913 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:36,913 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:36,913 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542596913, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-22 22:36:36,913 Node[0] Epoch[7] Time cost=32.046
:::MLLOG {"namespace": "", "time_ms": 1679542596914, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39978.52006291449}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679542596914, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-22 22:36:36,914 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:36:38,629 Node[0] Epoch[8] Batch [0-20]	Speed: 39956.80 samples/sec	accuracy=nan
2023-03-22 22:36:40,263 Node[0] Epoch[8] Batch [20-40]	Speed: 39965.07 samples/sec	accuracy=nan
2023-03-22 22:36:41,888 Node[0] Epoch[8] Batch [40-60]	Speed: 40160.19 samples/sec	accuracy=nan
2023-03-22 22:36:43,526 Node[0] Epoch[8] Batch [60-80]	Speed: 39871.20 samples/sec	accuracy=nan
2023-03-22 22:36:45,159 Node[0] Epoch[8] Batch [80-100]	Speed: 39976.55 samples/sec	accuracy=nan
2023-03-22 22:36:46,788 Node[0] Epoch[8] Batch [100-120]	Speed: 40058.01 samples/sec	accuracy=nan
2023-03-22 22:36:48,422 Node[0] Epoch[8] Batch [120-140]	Speed: 39965.21 samples/sec	accuracy=nan
2023-03-22 22:36:50,051 Node[0] Epoch[8] Batch [140-160]	Speed: 40075.03 samples/sec	accuracy=nan
2023-03-22 22:36:51,684 Node[0] Epoch[8] Batch [160-180]	Speed: 39954.54 samples/sec	accuracy=nan
2023-03-22 22:36:53,317 Node[0] Epoch[8] Batch [180-200]	Speed: 39985.23 samples/sec	accuracy=nan
2023-03-22 22:36:54,953 Node[0] Epoch[8] Batch [200-220]	Speed: 39897.20 samples/sec	accuracy=nan
2023-03-22 22:36:56,583 Node[0] Epoch[8] Batch [220-240]	Speed: 40053.81 samples/sec	accuracy=nan
2023-03-22 22:36:58,217 Node[0] Epoch[8] Batch [240-260]	Speed: 39957.31 samples/sec	accuracy=nan
2023-03-22 22:36:59,853 Node[0] Epoch[8] Batch [260-280]	Speed: 39888.45 samples/sec	accuracy=nan
2023-03-22 22:37:01,484 Node[0] Epoch[8] Batch [280-300]	Speed: 40031.05 samples/sec	accuracy=nan
2023-03-22 22:37:03,116 Node[0] Epoch[8] Batch [300-320]	Speed: 40008.91 samples/sec	accuracy=nan
2023-03-22 22:37:04,751 Node[0] Epoch[8] Batch [320-340]	Speed: 39909.86 samples/sec	accuracy=nan
2023-03-22 22:37:06,382 Node[0] Epoch[8] Batch [340-360]	Speed: 40041.93 samples/sec	accuracy=nan
2023-03-22 22:37:08,015 Node[0] Epoch[8] Batch [360-380]	Speed: 39969.46 samples/sec	accuracy=nan
2023-03-22 22:37:08,912 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:08,912 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:08,912 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:08,912 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:08,912 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:08,912 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:08,912 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:08,912 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:08,912 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:08,912 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:08,912 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:08,913 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:08,913 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:08,913 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542628913, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-22 22:37:08,914 Node[0] Epoch[8] Time cost=32.000
:::MLLOG {"namespace": "", "time_ms": 1679542628914, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40036.89770271552}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
2023-03-22 22:37:08,914 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542628914, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-22 22:37:08,914 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:10,628 Node[0] Epoch[9] Batch [0-20]	Speed: 40034.79 samples/sec	accuracy=nan
2023-03-22 22:37:12,262 Node[0] Epoch[9] Batch [20-40]	Speed: 39948.02 samples/sec	accuracy=nan
2023-03-22 22:37:13,899 Node[0] Epoch[9] Batch [40-60]	Speed: 39885.57 samples/sec	accuracy=nan
2023-03-22 22:37:15,528 Node[0] Epoch[9] Batch [60-80]	Speed: 40075.47 samples/sec	accuracy=nan
2023-03-22 22:37:17,162 Node[0] Epoch[9] Batch [80-100]	Speed: 39949.19 samples/sec	accuracy=nan
2023-03-22 22:37:18,796 Node[0] Epoch[9] Batch [100-120]	Speed: 39948.93 samples/sec	accuracy=nan
2023-03-22 22:37:20,435 Node[0] Epoch[9] Batch [120-140]	Speed: 39825.76 samples/sec	accuracy=nan
2023-03-22 22:37:22,069 Node[0] Epoch[9] Batch [140-160]	Speed: 39963.16 samples/sec	accuracy=nan
2023-03-22 22:37:23,700 Node[0] Epoch[9] Batch [160-180]	Speed: 40004.08 samples/sec	accuracy=nan
2023-03-22 22:37:25,334 Node[0] Epoch[9] Batch [180-200]	Speed: 39959.78 samples/sec	accuracy=nan
2023-03-22 22:37:26,971 Node[0] Epoch[9] Batch [200-220]	Speed: 39890.50 samples/sec	accuracy=nan
2023-03-22 22:37:28,599 Node[0] Epoch[9] Batch [220-240]	Speed: 40077.34 samples/sec	accuracy=nan
2023-03-22 22:37:30,233 Node[0] Epoch[9] Batch [240-260]	Speed: 39950.69 samples/sec	accuracy=nan
2023-03-22 22:37:31,868 Node[0] Epoch[9] Batch [260-280]	Speed: 39941.77 samples/sec	accuracy=nan
2023-03-22 22:37:33,497 Node[0] Epoch[9] Batch [280-300]	Speed: 40079.42 samples/sec	accuracy=nan
2023-03-22 22:37:35,133 Node[0] Epoch[9] Batch [300-320]	Speed: 39889.11 samples/sec	accuracy=nan
2023-03-22 22:37:36,769 Node[0] Epoch[9] Batch [320-340]	Speed: 39909.79 samples/sec	accuracy=nan
2023-03-22 22:37:38,400 Node[0] Epoch[9] Batch [340-360]	Speed: 40030.26 samples/sec	accuracy=nan
2023-03-22 22:37:40,039 Node[0] Epoch[9] Batch [360-380]	Speed: 39827.02 samples/sec	accuracy=nan
2023-03-22 22:37:41,018 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:41,018 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:41,018 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:41,018 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:41,018 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:41,018 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:41,018 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:41,018 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:41,018 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:41,018 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:41,018 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:41,018 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:41,019 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:41,019 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:41,019 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542661019, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-22 22:37:41,019 Node[0] Epoch[9] Time cost=32.105
:::MLLOG {"namespace": "", "time_ms": 1679542661020, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39905.19413721117}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1679542661020, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-22 22:37:41,020 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:37:42,730 Node[0] Epoch[10] Batch [0-20]	Speed: 40072.81 samples/sec	accuracy=nan
2023-03-22 22:37:44,368 Node[0] Epoch[10] Batch [20-40]	Speed: 39874.69 samples/sec	accuracy=nan
2023-03-22 22:37:46,002 Node[0] Epoch[10] Batch [40-60]	Speed: 39949.46 samples/sec	accuracy=nan
2023-03-22 22:37:47,631 Node[0] Epoch[10] Batch [60-80]	Speed: 40051.53 samples/sec	accuracy=nan
2023-03-22 22:37:49,267 Node[0] Epoch[10] Batch [80-100]	Speed: 39926.00 samples/sec	accuracy=nan
2023-03-22 22:37:50,903 Node[0] Epoch[10] Batch [100-120]	Speed: 39891.67 samples/sec	accuracy=nan
2023-03-22 22:37:52,533 Node[0] Epoch[10] Batch [120-140]	Speed: 40045.05 samples/sec	accuracy=nan
2023-03-22 22:37:54,170 Node[0] Epoch[10] Batch [140-160]	Speed: 39883.52 samples/sec	accuracy=nan
2023-03-22 22:37:55,801 Node[0] Epoch[10] Batch [160-180]	Speed: 40012.83 samples/sec	accuracy=nan
2023-03-22 22:37:57,438 Node[0] Epoch[10] Batch [180-200]	Speed: 39895.97 samples/sec	accuracy=nan
2023-03-22 22:37:59,072 Node[0] Epoch[10] Batch [200-220]	Speed: 39952.72 samples/sec	accuracy=nan
2023-03-22 22:38:00,707 Node[0] Epoch[10] Batch [220-240]	Speed: 39917.18 samples/sec	accuracy=nan
2023-03-22 22:38:02,337 Node[0] Epoch[10] Batch [240-260]	Speed: 40053.21 samples/sec	accuracy=nan
2023-03-22 22:38:03,972 Node[0] Epoch[10] Batch [260-280]	Speed: 39919.41 samples/sec	accuracy=nan
2023-03-22 22:38:05,607 Node[0] Epoch[10] Batch [280-300]	Speed: 39923.20 samples/sec	accuracy=nan
2023-03-22 22:38:07,237 Node[0] Epoch[10] Batch [300-320]	Speed: 40044.22 samples/sec	accuracy=nan
2023-03-22 22:38:08,871 Node[0] Epoch[10] Batch [320-340]	Speed: 39973.37 samples/sec	accuracy=nan
2023-03-22 22:38:10,506 Node[0] Epoch[10] Batch [340-360]	Speed: 39918.65 samples/sec	accuracy=nan
2023-03-22 22:38:12,136 Node[0] Epoch[10] Batch [360-380]	Speed: 40053.66 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679542693034, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-22 22:38:13,035 Node[0] Epoch[10] Time cost=32.015
:::MLLOG {"namespace": "", "time_ms": 1679542693035, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40017.79346359234}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679542693112, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-22 22:38:13,899 Node[0] Epoch[10] Validation-accuracy=0.528000
2023-03-22 22:38:13,899 Node[0] Epoch[10] Validation-correct-count=1650.000000
2023-03-22 22:38:13,899 Node[0] Epoch[10] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679542693943, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679542693943, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.52832, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679542693943, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
2023-03-22 22:38:13,943 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:13,943 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542693943, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-22 22:38:13,943 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:13,943 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:13,943 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:13,943 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:13,943 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:13,943 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:13,943 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:13,943 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:13,943 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:13,943 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:13,943 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:13,943 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:13,943 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542693943, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-22 22:38:13,943 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:15,589 Node[0] Epoch[11] Batch [0-20]	Speed: 39848.03 samples/sec	accuracy=nan
2023-03-22 22:38:17,221 Node[0] Epoch[11] Batch [20-40]	Speed: 39989.51 samples/sec	accuracy=nan
2023-03-22 22:38:18,852 Node[0] Epoch[11] Batch [40-60]	Speed: 40024.86 samples/sec	accuracy=nan
2023-03-22 22:38:20,485 Node[0] Epoch[11] Batch [60-80]	Speed: 39990.10 samples/sec	accuracy=nan
2023-03-22 22:38:22,115 Node[0] Epoch[11] Batch [80-100]	Speed: 40053.30 samples/sec	accuracy=nan
2023-03-22 22:38:23,745 Node[0] Epoch[11] Batch [100-120]	Speed: 40037.82 samples/sec	accuracy=nan
2023-03-22 22:38:25,378 Node[0] Epoch[11] Batch [120-140]	Speed: 39969.29 samples/sec	accuracy=nan
2023-03-22 22:38:27,007 Node[0] Epoch[11] Batch [140-160]	Speed: 40076.44 samples/sec	accuracy=nan
2023-03-22 22:38:28,641 Node[0] Epoch[11] Batch [160-180]	Speed: 39959.67 samples/sec	accuracy=nan
2023-03-22 22:38:30,273 Node[0] Epoch[11] Batch [180-200]	Speed: 40000.11 samples/sec	accuracy=nan
2023-03-22 22:38:31,905 Node[0] Epoch[11] Batch [200-220]	Speed: 39987.63 samples/sec	accuracy=nan
2023-03-22 22:38:33,531 Node[0] Epoch[11] Batch [220-240]	Speed: 40153.26 samples/sec	accuracy=nan
2023-03-22 22:38:35,168 Node[0] Epoch[11] Batch [240-260]	Speed: 39885.36 samples/sec	accuracy=nan
2023-03-22 22:38:36,795 Node[0] Epoch[11] Batch [260-280]	Speed: 40129.26 samples/sec	accuracy=nan
2023-03-22 22:38:38,432 Node[0] Epoch[11] Batch [280-300]	Speed: 39871.15 samples/sec	accuracy=nan
2023-03-22 22:38:40,068 Node[0] Epoch[11] Batch [300-320]	Speed: 39889.35 samples/sec	accuracy=nan
2023-03-22 22:38:41,694 Node[0] Epoch[11] Batch [320-340]	Speed: 40150.38 samples/sec	accuracy=nan
2023-03-22 22:38:43,332 Node[0] Epoch[11] Batch [340-360]	Speed: 39862.73 samples/sec	accuracy=nan
2023-03-22 22:38:44,960 Node[0] Epoch[11] Batch [360-380]	Speed: 40093.82 samples/sec	accuracy=nan
2023-03-22 22:38:45,934 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:45,934 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:45,935 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:45,935 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:45,935 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:45,935 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:45,935 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:45,935 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:45,935 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:45,935 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:45,935 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:45,935 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:45,935 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:45,935 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:45,935 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542725935, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-22 22:38:45,936 Node[0] Epoch[11] Time cost=31.993
:::MLLOG {"namespace": "", "time_ms": 1679542725936, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40045.49301229156}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1679542725937, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-22 22:38:45,937 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:38:47,655 Node[0] Epoch[12] Batch [0-20]	Speed: 39864.19 samples/sec	accuracy=nan
2023-03-22 22:38:49,289 Node[0] Epoch[12] Batch [20-40]	Speed: 39942.75 samples/sec	accuracy=nan
2023-03-22 22:38:50,921 Node[0] Epoch[12] Batch [40-60]	Speed: 40015.50 samples/sec	accuracy=nan
2023-03-22 22:38:52,553 Node[0] Epoch[12] Batch [60-80]	Speed: 39984.14 samples/sec	accuracy=nan
2023-03-22 22:38:54,186 Node[0] Epoch[12] Batch [80-100]	Speed: 39981.51 samples/sec	accuracy=nan
2023-03-22 22:38:55,821 Node[0] Epoch[12] Batch [100-120]	Speed: 39938.53 samples/sec	accuracy=nan
2023-03-22 22:38:57,452 Node[0] Epoch[12] Batch [120-140]	Speed: 40010.83 samples/sec	accuracy=nan
2023-03-22 22:38:59,090 Node[0] Epoch[12] Batch [140-160]	Speed: 39863.16 samples/sec	accuracy=nan
2023-03-22 22:39:00,725 Node[0] Epoch[12] Batch [160-180]	Speed: 39913.64 samples/sec	accuracy=nan
2023-03-22 22:39:02,358 Node[0] Epoch[12] Batch [180-200]	Speed: 39976.20 samples/sec	accuracy=nan
2023-03-22 22:39:03,992 Node[0] Epoch[12] Batch [200-220]	Speed: 39969.61 samples/sec	accuracy=nan
2023-03-22 22:39:05,628 Node[0] Epoch[12] Batch [220-240]	Speed: 39898.96 samples/sec	accuracy=nan
2023-03-22 22:39:07,262 Node[0] Epoch[12] Batch [240-260]	Speed: 39937.62 samples/sec	accuracy=nan
2023-03-22 22:39:08,897 Node[0] Epoch[12] Batch [260-280]	Speed: 39932.11 samples/sec	accuracy=nan
2023-03-22 22:39:10,531 Node[0] Epoch[12] Batch [280-300]	Speed: 39940.84 samples/sec	accuracy=nan
2023-03-22 22:39:12,160 Node[0] Epoch[12] Batch [300-320]	Speed: 40079.72 samples/sec	accuracy=nan
2023-03-22 22:39:13,795 Node[0] Epoch[12] Batch [320-340]	Speed: 39922.72 samples/sec	accuracy=nan
2023-03-22 22:39:15,425 Node[0] Epoch[12] Batch [340-360]	Speed: 40061.29 samples/sec	accuracy=nan
2023-03-22 22:39:17,060 Node[0] Epoch[12] Batch [360-380]	Speed: 39929.76 samples/sec	accuracy=nan
2023-03-22 22:39:17,954 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:17,954 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:17,954 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:17,954 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:17,954 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:17,954 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:17,955 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:17,955 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:17,955 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:17,955 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:17,955 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:17,955 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:17,955 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:17,955 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:17,955 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542757955, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-22 22:39:17,956 Node[0] Epoch[12] Time cost=32.019
:::MLLOG {"namespace": "", "time_ms": 1679542757956, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40012.67478721241}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1679542757956, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-22 22:39:17,956 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:19,671 Node[0] Epoch[13] Batch [0-20]	Speed: 40045.40 samples/sec	accuracy=nan
2023-03-22 22:39:21,307 Node[0] Epoch[13] Batch [20-40]	Speed: 39904.98 samples/sec	accuracy=nan
2023-03-22 22:39:22,943 Node[0] Epoch[13] Batch [40-60]	Speed: 39888.04 samples/sec	accuracy=nan
2023-03-22 22:39:24,573 Node[0] Epoch[13] Batch [60-80]	Speed: 40049.91 samples/sec	accuracy=nan
2023-03-22 22:39:26,207 Node[0] Epoch[13] Batch [80-100]	Speed: 39945.29 samples/sec	accuracy=nan
2023-03-22 22:39:27,840 Node[0] Epoch[13] Batch [100-120]	Speed: 39981.98 samples/sec	accuracy=nan
2023-03-22 22:39:29,472 Node[0] Epoch[13] Batch [120-140]	Speed: 40011.40 samples/sec	accuracy=nan
2023-03-22 22:39:31,106 Node[0] Epoch[13] Batch [140-160]	Speed: 39947.17 samples/sec	accuracy=nan
2023-03-22 22:39:32,740 Node[0] Epoch[13] Batch [160-180]	Speed: 39944.21 samples/sec	accuracy=nan
2023-03-22 22:39:34,369 Node[0] Epoch[13] Batch [180-200]	Speed: 40072.99 samples/sec	accuracy=nan
2023-03-22 22:39:36,005 Node[0] Epoch[13] Batch [200-220]	Speed: 39904.72 samples/sec	accuracy=nan
2023-03-22 22:39:37,641 Node[0] Epoch[13] Batch [220-240]	Speed: 39910.12 samples/sec	accuracy=nan
2023-03-22 22:39:39,273 Node[0] Epoch[13] Batch [240-260]	Speed: 39991.93 samples/sec	accuracy=nan
2023-03-22 22:39:40,907 Node[0] Epoch[13] Batch [260-280]	Speed: 39945.27 samples/sec	accuracy=nan
2023-03-22 22:39:42,537 Node[0] Epoch[13] Batch [280-300]	Speed: 40058.65 samples/sec	accuracy=nan
2023-03-22 22:39:44,172 Node[0] Epoch[13] Batch [300-320]	Speed: 39920.21 samples/sec	accuracy=nan
2023-03-22 22:39:45,806 Node[0] Epoch[13] Batch [320-340]	Speed: 39963.66 samples/sec	accuracy=nan
2023-03-22 22:39:47,439 Node[0] Epoch[13] Batch [340-360]	Speed: 39964.98 samples/sec	accuracy=nan
2023-03-22 22:39:49,075 Node[0] Epoch[13] Batch [360-380]	Speed: 39898.50 samples/sec	accuracy=nan
2023-03-22 22:39:50,047 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:50,047 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:50,047 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:50,047 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:50,047 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:50,047 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:50,047 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:50,047 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:50,047 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:50,047 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:50,048 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:50,047 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:50,048 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:50,048 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542790048, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-22 22:39:50,049 Node[0] Epoch[13] Time cost=32.092
:::MLLOG {"namespace": "", "time_ms": 1679542790049, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39921.38898138364}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
2023-03-22 22:39:50,048 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542790049, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-22 22:39:50,049 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:39:51,763 Node[0] Epoch[14] Batch [0-20]	Speed: 39980.97 samples/sec	accuracy=nan
2023-03-22 22:39:53,393 Node[0] Epoch[14] Batch [20-40]	Speed: 40028.33 samples/sec	accuracy=nan
2023-03-22 22:39:55,029 Node[0] Epoch[14] Batch [40-60]	Speed: 39912.33 samples/sec	accuracy=nan
2023-03-22 22:39:56,656 Node[0] Epoch[14] Batch [60-80]	Speed: 40111.85 samples/sec	accuracy=nan
2023-03-22 22:39:58,291 Node[0] Epoch[14] Batch [80-100]	Speed: 39945.61 samples/sec	accuracy=nan
2023-03-22 22:39:59,926 Node[0] Epoch[14] Batch [100-120]	Speed: 39911.19 samples/sec	accuracy=nan
2023-03-22 22:40:01,560 Node[0] Epoch[14] Batch [120-140]	Speed: 39955.84 samples/sec	accuracy=nan
2023-03-22 22:40:03,189 Node[0] Epoch[14] Batch [140-160]	Speed: 40078.80 samples/sec	accuracy=nan
2023-03-22 22:40:04,823 Node[0] Epoch[14] Batch [160-180]	Speed: 39941.90 samples/sec	accuracy=nan
2023-03-22 22:40:06,459 Node[0] Epoch[14] Batch [180-200]	Speed: 39914.14 samples/sec	accuracy=nan
2023-03-22 22:40:08,088 Node[0] Epoch[14] Batch [200-220]	Speed: 40067.91 samples/sec	accuracy=nan
2023-03-22 22:40:09,725 Node[0] Epoch[14] Batch [220-240]	Speed: 39882.24 samples/sec	accuracy=nan
2023-03-22 22:40:11,358 Node[0] Epoch[14] Batch [240-260]	Speed: 39961.93 samples/sec	accuracy=nan
2023-03-22 22:40:12,989 Node[0] Epoch[14] Batch [260-280]	Speed: 40033.98 samples/sec	accuracy=nan
2023-03-22 22:40:14,623 Node[0] Epoch[14] Batch [280-300]	Speed: 39950.85 samples/sec	accuracy=nan
2023-03-22 22:40:16,259 Node[0] Epoch[14] Batch [300-320]	Speed: 39908.12 samples/sec	accuracy=nan
2023-03-22 22:40:17,887 Node[0] Epoch[14] Batch [320-340]	Speed: 40099.78 samples/sec	accuracy=nan
2023-03-22 22:40:19,518 Node[0] Epoch[14] Batch [340-360]	Speed: 40013.13 samples/sec	accuracy=nan
2023-03-22 22:40:21,157 Node[0] Epoch[14] Batch [360-380]	Speed: 39833.46 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679542822051, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-22 22:40:22,051 Node[0] Epoch[14] Time cost=32.002
:::MLLOG {"namespace": "", "time_ms": 1679542822051, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40033.67929011046}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679542822129, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-22 22:40:22,843 Node[0] Epoch[14] Validation-accuracy=0.594240
2023-03-22 22:40:22,844 Node[0] Epoch[14] Validation-correct-count=1857.000000
2023-03-22 22:40:22,844 Node[0] Epoch[14] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679542822960, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
2023-03-22 22:40:22,961 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:22,961 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542822961, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.60128, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
2023-03-22 22:40:22,961 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542822961, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
2023-03-22 22:40:22,960 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:22,961 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:22,961 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:22,961 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542822961, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
2023-03-22 22:40:22,961 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:22,961 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:22,961 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:22,961 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:22,961 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:22,961 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:22,961 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:22,961 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542822961, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-22 22:40:22,961 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:24,606 Node[0] Epoch[15] Batch [0-20]	Speed: 39943.08 samples/sec	accuracy=nan
2023-03-22 22:40:26,236 Node[0] Epoch[15] Batch [20-40]	Speed: 40045.65 samples/sec	accuracy=nan
2023-03-22 22:40:27,869 Node[0] Epoch[15] Batch [40-60]	Speed: 39960.14 samples/sec	accuracy=nan
2023-03-22 22:40:29,497 Node[0] Epoch[15] Batch [60-80]	Speed: 40113.07 samples/sec	accuracy=nan
2023-03-22 22:40:31,134 Node[0] Epoch[15] Batch [80-100]	Speed: 39882.06 samples/sec	accuracy=nan
2023-03-22 22:40:32,766 Node[0] Epoch[15] Batch [100-120]	Speed: 39986.70 samples/sec	accuracy=nan
2023-03-22 22:40:34,396 Node[0] Epoch[15] Batch [120-140]	Speed: 40054.63 samples/sec	accuracy=nan
2023-03-22 22:40:36,030 Node[0] Epoch[15] Batch [140-160]	Speed: 39943.54 samples/sec	accuracy=nan
2023-03-22 22:40:37,660 Node[0] Epoch[15] Batch [160-180]	Speed: 40057.56 samples/sec	accuracy=nan
2023-03-22 22:40:39,295 Node[0] Epoch[15] Batch [180-200]	Speed: 39934.75 samples/sec	accuracy=nan
2023-03-22 22:40:40,932 Node[0] Epoch[15] Batch [200-220]	Speed: 39870.57 samples/sec	accuracy=nan
2023-03-22 22:40:42,568 Node[0] Epoch[15] Batch [220-240]	Speed: 39905.86 samples/sec	accuracy=nan
2023-03-22 22:40:44,200 Node[0] Epoch[15] Batch [240-260]	Speed: 40000.32 samples/sec	accuracy=nan
2023-03-22 22:40:45,835 Node[0] Epoch[15] Batch [260-280]	Speed: 39921.28 samples/sec	accuracy=nan
2023-03-22 22:40:47,470 Node[0] Epoch[15] Batch [280-300]	Speed: 39915.72 samples/sec	accuracy=nan
2023-03-22 22:40:49,099 Node[0] Epoch[15] Batch [300-320]	Speed: 40073.02 samples/sec	accuracy=nan
2023-03-22 22:40:50,727 Node[0] Epoch[15] Batch [320-340]	Speed: 40118.81 samples/sec	accuracy=nan
2023-03-22 22:40:52,362 Node[0] Epoch[15] Batch [340-360]	Speed: 39912.95 samples/sec	accuracy=nan
2023-03-22 22:40:53,998 Node[0] Epoch[15] Batch [360-380]	Speed: 39898.30 samples/sec	accuracy=nan
2023-03-22 22:40:54,976 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:54,976 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:54,976 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:54,976 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:54,976 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:54,976 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:54,976 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:54,976 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:54,976 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:54,976 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:54,976 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:54,976 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:54,977 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542854976, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-22 22:40:54,977 Node[0] Epoch[15] Time cost=32.016
:::MLLOG {"namespace": "", "time_ms": 1679542854977, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40016.448559341494}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679542854978, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-22 22:40:54,978 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:54,978 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:54,978 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:40:56,695 Node[0] Epoch[16] Batch [0-20]	Speed: 39899.51 samples/sec	accuracy=nan
2023-03-22 22:40:58,325 Node[0] Epoch[16] Batch [20-40]	Speed: 40028.34 samples/sec	accuracy=nan
2023-03-22 22:40:59,959 Node[0] Epoch[16] Batch [40-60]	Speed: 39966.60 samples/sec	accuracy=nan
2023-03-22 22:41:01,593 Node[0] Epoch[16] Batch [60-80]	Speed: 39938.89 samples/sec	accuracy=nan
2023-03-22 22:41:03,226 Node[0] Epoch[16] Batch [80-100]	Speed: 39987.48 samples/sec	accuracy=nan
2023-03-22 22:41:04,860 Node[0] Epoch[16] Batch [100-120]	Speed: 39946.10 samples/sec	accuracy=nan
2023-03-22 22:41:06,496 Node[0] Epoch[16] Batch [120-140]	Speed: 39908.86 samples/sec	accuracy=nan
2023-03-22 22:41:08,132 Node[0] Epoch[16] Batch [140-160]	Speed: 39907.17 samples/sec	accuracy=nan
2023-03-22 22:41:09,760 Node[0] Epoch[16] Batch [160-180]	Speed: 40076.96 samples/sec	accuracy=nan
2023-03-22 22:41:11,397 Node[0] Epoch[16] Batch [180-200]	Speed: 39876.55 samples/sec	accuracy=nan
2023-03-22 22:41:13,033 Node[0] Epoch[16] Batch [200-220]	Speed: 39903.76 samples/sec	accuracy=nan
2023-03-22 22:41:14,663 Node[0] Epoch[16] Batch [220-240]	Speed: 40050.35 samples/sec	accuracy=nan
2023-03-22 22:41:16,296 Node[0] Epoch[16] Batch [240-260]	Speed: 39978.89 samples/sec	accuracy=nan
2023-03-22 22:41:17,928 Node[0] Epoch[16] Batch [260-280]	Speed: 39991.94 samples/sec	accuracy=nan
2023-03-22 22:41:19,559 Node[0] Epoch[16] Batch [280-300]	Speed: 40048.35 samples/sec	accuracy=nan
2023-03-22 22:41:21,191 Node[0] Epoch[16] Batch [300-320]	Speed: 39993.25 samples/sec	accuracy=nan
2023-03-22 22:41:22,825 Node[0] Epoch[16] Batch [320-340]	Speed: 39950.78 samples/sec	accuracy=nan
2023-03-22 22:41:24,458 Node[0] Epoch[16] Batch [340-360]	Speed: 39974.00 samples/sec	accuracy=nan
2023-03-22 22:41:26,092 Node[0] Epoch[16] Batch [360-380]	Speed: 39951.66 samples/sec	accuracy=nan
2023-03-22 22:41:26,990 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:26,990 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:26,990 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:26,990 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:26,990 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:26,990 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:26,990 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:26,990 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:26,990 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:26,990 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:26,990 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:26,990 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:26,990 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:26,991 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542886990, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-22 22:41:26,991 Node[0] Epoch[16] Time cost=32.013
:::MLLOG {"namespace": "", "time_ms": 1679542886991, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40019.737521085735}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1679542886992, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-22 22:41:26,992 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:26,992 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:28,708 Node[0] Epoch[17] Batch [0-20]	Speed: 39987.38 samples/sec	accuracy=nan
2023-03-22 22:41:30,340 Node[0] Epoch[17] Batch [20-40]	Speed: 40004.47 samples/sec	accuracy=nan
2023-03-22 22:41:31,974 Node[0] Epoch[17] Batch [40-60]	Speed: 39942.26 samples/sec	accuracy=nan
2023-03-22 22:41:33,610 Node[0] Epoch[17] Batch [60-80]	Speed: 39892.17 samples/sec	accuracy=nan
2023-03-22 22:41:35,244 Node[0] Epoch[17] Batch [80-100]	Speed: 39966.38 samples/sec	accuracy=nan
2023-03-22 22:41:36,878 Node[0] Epoch[17] Batch [100-120]	Speed: 39948.39 samples/sec	accuracy=nan
2023-03-22 22:41:38,511 Node[0] Epoch[17] Batch [120-140]	Speed: 39973.56 samples/sec	accuracy=nan
2023-03-22 22:41:40,148 Node[0] Epoch[17] Batch [140-160]	Speed: 39874.55 samples/sec	accuracy=nan
2023-03-22 22:41:41,779 Node[0] Epoch[17] Batch [160-180]	Speed: 40031.86 samples/sec	accuracy=nan
2023-03-22 22:41:43,416 Node[0] Epoch[17] Batch [180-200]	Speed: 39886.19 samples/sec	accuracy=nan
2023-03-22 22:41:45,048 Node[0] Epoch[17] Batch [200-220]	Speed: 39978.47 samples/sec	accuracy=nan
2023-03-22 22:41:46,684 Node[0] Epoch[17] Batch [220-240]	Speed: 39914.27 samples/sec	accuracy=nan
2023-03-22 22:41:48,313 Node[0] Epoch[17] Batch [240-260]	Speed: 40066.15 samples/sec	accuracy=nan
2023-03-22 22:41:49,948 Node[0] Epoch[17] Batch [260-280]	Speed: 39937.08 samples/sec	accuracy=nan
2023-03-22 22:41:51,580 Node[0] Epoch[17] Batch [280-300]	Speed: 39998.70 samples/sec	accuracy=nan
2023-03-22 22:41:53,211 Node[0] Epoch[17] Batch [300-320]	Speed: 40009.48 samples/sec	accuracy=nan
2023-03-22 22:41:54,852 Node[0] Epoch[17] Batch [320-340]	Speed: 39786.80 samples/sec	accuracy=nan
2023-03-22 22:41:56,487 Node[0] Epoch[17] Batch [340-360]	Speed: 39929.87 samples/sec	accuracy=nan
2023-03-22 22:41:58,118 Node[0] Epoch[17] Batch [360-380]	Speed: 40036.35 samples/sec	accuracy=nan
2023-03-22 22:41:59,098 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:59,099 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:59,099 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:59,099 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:59,099 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:59,099 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:59,099 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:59,099 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:59,099 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:59,099 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:59,099 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:59,099 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:59,099 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:59,099 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:41:59,100 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542919100, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-22 22:41:59,101 Node[0] Epoch[17] Time cost=32.109
:::MLLOG {"namespace": "", "time_ms": 1679542919101, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39900.029564641285}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1679542919102, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-22 22:41:59,102 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:42:00,814 Node[0] Epoch[18] Batch [0-20]	Speed: 39997.21 samples/sec	accuracy=nan
2023-03-22 22:42:02,447 Node[0] Epoch[18] Batch [20-40]	Speed: 39968.49 samples/sec	accuracy=nan
2023-03-22 22:42:04,077 Node[0] Epoch[18] Batch [40-60]	Speed: 40043.20 samples/sec	accuracy=nan
2023-03-22 22:42:05,710 Node[0] Epoch[18] Batch [60-80]	Speed: 39983.64 samples/sec	accuracy=nan
2023-03-22 22:42:07,342 Node[0] Epoch[18] Batch [80-100]	Speed: 39985.43 samples/sec	accuracy=nan
2023-03-22 22:42:08,974 Node[0] Epoch[18] Batch [100-120]	Speed: 40001.93 samples/sec	accuracy=nan
2023-03-22 22:42:10,608 Node[0] Epoch[18] Batch [120-140]	Speed: 39957.29 samples/sec	accuracy=nan
2023-03-22 22:42:12,237 Node[0] Epoch[18] Batch [140-160]	Speed: 40069.20 samples/sec	accuracy=nan
2023-03-22 22:42:13,876 Node[0] Epoch[18] Batch [160-180]	Speed: 39845.58 samples/sec	accuracy=nan
2023-03-22 22:42:15,511 Node[0] Epoch[18] Batch [180-200]	Speed: 39919.50 samples/sec	accuracy=nan
2023-03-22 22:42:17,142 Node[0] Epoch[18] Batch [200-220]	Speed: 40025.20 samples/sec	accuracy=nan
2023-03-22 22:42:18,772 Node[0] Epoch[18] Batch [220-240]	Speed: 40040.68 samples/sec	accuracy=nan
2023-03-22 22:42:20,408 Node[0] Epoch[18] Batch [240-260]	Speed: 39913.29 samples/sec	accuracy=nan
2023-03-22 22:42:22,041 Node[0] Epoch[18] Batch [260-280]	Speed: 39964.75 samples/sec	accuracy=nan
2023-03-22 22:42:23,674 Node[0] Epoch[18] Batch [280-300]	Speed: 39989.87 samples/sec	accuracy=nan
2023-03-22 22:42:25,307 Node[0] Epoch[18] Batch [300-320]	Speed: 39956.30 samples/sec	accuracy=nan
2023-03-22 22:42:26,942 Node[0] Epoch[18] Batch [320-340]	Speed: 39926.68 samples/sec	accuracy=nan
2023-03-22 22:42:28,575 Node[0] Epoch[18] Batch [340-360]	Speed: 39996.06 samples/sec	accuracy=nan
2023-03-22 22:42:30,206 Node[0] Epoch[18] Batch [360-380]	Speed: 40015.36 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679542951106, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-22 22:42:31,106 Node[0] Epoch[18] Time cost=32.005
:::MLLOG {"namespace": "", "time_ms": 1679542951107, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40030.77063631261}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679542951184, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-22 22:42:31,902 Node[0] Epoch[18] Validation-accuracy=0.641920
2023-03-22 22:42:31,902 Node[0] Epoch[18] Validation-correct-count=2006.000000
2023-03-22 22:42:31,902 Node[0] Epoch[18] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679542952020, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
2023-03-22 22:42:32,020 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542952020, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.64448, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-22 22:42:32,020 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:42:32,020 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542952020, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679542952020, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-22 22:42:32,020 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:42:32,020 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:42:32,020 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:42:32,020 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:42:32,020 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:42:32,020 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:42:32,020 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:42:32,020 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:42:32,020 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:42:32,020 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:42:32,020 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:42:32,020 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542952021, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-22 22:42:32,021 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:42:33,660 Node[0] Epoch[19] Batch [0-20]	Speed: 40012.97 samples/sec	accuracy=nan
2023-03-22 22:42:35,293 Node[0] Epoch[19] Batch [20-40]	Speed: 39973.86 samples/sec	accuracy=nan
2023-03-22 22:42:36,924 Node[0] Epoch[19] Batch [40-60]	Speed: 40033.95 samples/sec	accuracy=nan
2023-03-22 22:42:38,556 Node[0] Epoch[19] Batch [60-80]	Speed: 39988.93 samples/sec	accuracy=nan
2023-03-22 22:42:40,191 Node[0] Epoch[19] Batch [80-100]	Speed: 39935.17 samples/sec	accuracy=nan
2023-03-22 22:42:41,824 Node[0] Epoch[19] Batch [100-120]	Speed: 39985.74 samples/sec	accuracy=nan
2023-03-22 22:42:43,455 Node[0] Epoch[19] Batch [120-140]	Speed: 40012.40 samples/sec	accuracy=nan
2023-03-22 22:42:45,087 Node[0] Epoch[19] Batch [140-160]	Speed: 40002.19 samples/sec	accuracy=nan
2023-03-22 22:42:46,717 Node[0] Epoch[19] Batch [160-180]	Speed: 40044.54 samples/sec	accuracy=nan
2023-03-22 22:42:48,353 Node[0] Epoch[19] Batch [180-200]	Speed: 39914.84 samples/sec	accuracy=nan
2023-03-22 22:42:49,988 Node[0] Epoch[19] Batch [200-220]	Speed: 39909.09 samples/sec	accuracy=nan
2023-03-22 22:42:51,625 Node[0] Epoch[19] Batch [220-240]	Speed: 39887.28 samples/sec	accuracy=nan
2023-03-22 22:42:53,255 Node[0] Epoch[19] Batch [240-260]	Speed: 40056.98 samples/sec	accuracy=nan
2023-03-22 22:42:54,889 Node[0] Epoch[19] Batch [260-280]	Speed: 39948.89 samples/sec	accuracy=nan
2023-03-22 22:42:56,524 Node[0] Epoch[19] Batch [280-300]	Speed: 39917.40 samples/sec	accuracy=nan
2023-03-22 22:42:58,160 Node[0] Epoch[19] Batch [300-320]	Speed: 39914.20 samples/sec	accuracy=nan
2023-03-22 22:42:59,788 Node[0] Epoch[19] Batch [320-340]	Speed: 40082.18 samples/sec	accuracy=nan
2023-03-22 22:43:01,424 Node[0] Epoch[19] Batch [340-360]	Speed: 39906.48 samples/sec	accuracy=nan
2023-03-22 22:43:03,055 Node[0] Epoch[19] Batch [360-380]	Speed: 40025.00 samples/sec	accuracy=nan
2023-03-22 22:43:04,034 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:04,034 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:04,034 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:04,034 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:04,034 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:04,034 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:04,034 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:04,034 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:04,034 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:04,034 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:04,034 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:04,035 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:04,035 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:04,035 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:04,035 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679542984035, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-22 22:43:04,036 Node[0] Epoch[19] Time cost=32.015
:::MLLOG {"namespace": "", "time_ms": 1679542984036, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40017.59379338708}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679542984036, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-22 22:43:04,036 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:05,757 Node[0] Epoch[20] Batch [0-20]	Speed: 39834.62 samples/sec	accuracy=nan
2023-03-22 22:43:07,391 Node[0] Epoch[20] Batch [20-40]	Speed: 39948.02 samples/sec	accuracy=nan
2023-03-22 22:43:09,027 Node[0] Epoch[20] Batch [40-60]	Speed: 39889.69 samples/sec	accuracy=nan
2023-03-22 22:43:10,655 Node[0] Epoch[20] Batch [60-80]	Speed: 40096.05 samples/sec	accuracy=nan
2023-03-22 22:43:12,291 Node[0] Epoch[20] Batch [80-100]	Speed: 39904.80 samples/sec	accuracy=nan
2023-03-22 22:43:13,919 Node[0] Epoch[20] Batch [100-120]	Speed: 40113.91 samples/sec	accuracy=nan
2023-03-22 22:43:15,555 Node[0] Epoch[20] Batch [120-140]	Speed: 39889.58 samples/sec	accuracy=nan
2023-03-22 22:43:17,186 Node[0] Epoch[20] Batch [140-160]	Speed: 40020.28 samples/sec	accuracy=nan
2023-03-22 22:43:18,826 Node[0] Epoch[20] Batch [160-180]	Speed: 39823.29 samples/sec	accuracy=nan
2023-03-22 22:43:20,459 Node[0] Epoch[20] Batch [180-200]	Speed: 39962.95 samples/sec	accuracy=nan
2023-03-22 22:43:22,096 Node[0] Epoch[20] Batch [200-220]	Speed: 39878.20 samples/sec	accuracy=nan
2023-03-22 22:43:23,733 Node[0] Epoch[20] Batch [220-240]	Speed: 39889.22 samples/sec	accuracy=nan
2023-03-22 22:43:25,363 Node[0] Epoch[20] Batch [240-260]	Speed: 40050.06 samples/sec	accuracy=nan
2023-03-22 22:43:26,996 Node[0] Epoch[20] Batch [260-280]	Speed: 39970.12 samples/sec	accuracy=nan
2023-03-22 22:43:28,632 Node[0] Epoch[20] Batch [280-300]	Speed: 39908.13 samples/sec	accuracy=nan
2023-03-22 22:43:30,265 Node[0] Epoch[20] Batch [300-320]	Speed: 39974.96 samples/sec	accuracy=nan
2023-03-22 22:43:31,898 Node[0] Epoch[20] Batch [320-340]	Speed: 39958.08 samples/sec	accuracy=nan
2023-03-22 22:43:33,532 Node[0] Epoch[20] Batch [340-360]	Speed: 39956.46 samples/sec	accuracy=nan
2023-03-22 22:43:35,172 Node[0] Epoch[20] Batch [360-380]	Speed: 39803.92 samples/sec	accuracy=nan
2023-03-22 22:43:36,072 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:36,072 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:36,072 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:36,072 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:36,072 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:36,072 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:36,072 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:36,072 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:36,072 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:36,072 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:36,072 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:36,072 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:36,072 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:36,073 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:36,073 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543016072, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-22 22:43:36,073 Node[0] Epoch[20] Time cost=32.037
:::MLLOG {"namespace": "", "time_ms": 1679543016073, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39990.24202457167}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1679543016074, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-22 22:43:36,074 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:43:37,787 Node[0] Epoch[21] Batch [0-20]	Speed: 40058.74 samples/sec	accuracy=nan
2023-03-22 22:43:39,417 Node[0] Epoch[21] Batch [20-40]	Speed: 40038.10 samples/sec	accuracy=nan
2023-03-22 22:43:41,054 Node[0] Epoch[21] Batch [40-60]	Speed: 39871.57 samples/sec	accuracy=nan
2023-03-22 22:43:42,691 Node[0] Epoch[21] Batch [60-80]	Speed: 39889.12 samples/sec	accuracy=nan
2023-03-22 22:43:44,318 Node[0] Epoch[21] Batch [80-100]	Speed: 40122.04 samples/sec	accuracy=nan
2023-03-22 22:43:45,952 Node[0] Epoch[21] Batch [100-120]	Speed: 39949.51 samples/sec	accuracy=nan
2023-03-22 22:43:47,588 Node[0] Epoch[21] Batch [120-140]	Speed: 39914.27 samples/sec	accuracy=nan
2023-03-22 22:43:49,221 Node[0] Epoch[21] Batch [140-160]	Speed: 39973.38 samples/sec	accuracy=nan
2023-03-22 22:43:50,853 Node[0] Epoch[21] Batch [160-180]	Speed: 39980.38 samples/sec	accuracy=nan
2023-03-22 22:43:52,489 Node[0] Epoch[21] Batch [180-200]	Speed: 39902.91 samples/sec	accuracy=nan
2023-03-22 22:43:54,120 Node[0] Epoch[21] Batch [200-220]	Speed: 40046.49 samples/sec	accuracy=nan
2023-03-22 22:43:55,752 Node[0] Epoch[21] Batch [220-240]	Speed: 39980.55 samples/sec	accuracy=nan
2023-03-22 22:43:57,388 Node[0] Epoch[21] Batch [240-260]	Speed: 39898.49 samples/sec	accuracy=nan
2023-03-22 22:43:59,018 Node[0] Epoch[21] Batch [260-280]	Speed: 40055.67 samples/sec	accuracy=nan
2023-03-22 22:44:00,651 Node[0] Epoch[21] Batch [280-300]	Speed: 39974.11 samples/sec	accuracy=nan
2023-03-22 22:44:02,288 Node[0] Epoch[21] Batch [300-320]	Speed: 39881.31 samples/sec	accuracy=nan
2023-03-22 22:44:03,921 Node[0] Epoch[21] Batch [320-340]	Speed: 39977.99 samples/sec	accuracy=nan
2023-03-22 22:44:05,555 Node[0] Epoch[21] Batch [340-360]	Speed: 39946.92 samples/sec	accuracy=nan
2023-03-22 22:44:07,189 Node[0] Epoch[21] Batch [360-380]	Speed: 39961.53 samples/sec	accuracy=nan
2023-03-22 22:44:08,163 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:08,163 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:08,163 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:08,163 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:08,163 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:08,164 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:08,164 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:08,164 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:08,164 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:08,164 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:08,164 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:08,164 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:08,164 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:08,164 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543048164, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-22 22:44:08,165 Node[0] Epoch[21] Time cost=32.091
:::MLLOG {"namespace": "", "time_ms": 1679543048165, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39922.90072003592}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1679543048165, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-22 22:44:08,166 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:08,165 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:09,887 Node[0] Epoch[22] Batch [0-20]	Speed: 39835.31 samples/sec	accuracy=nan
2023-03-22 22:44:11,524 Node[0] Epoch[22] Batch [20-40]	Speed: 39883.27 samples/sec	accuracy=nan
2023-03-22 22:44:13,156 Node[0] Epoch[22] Batch [40-60]	Speed: 39987.39 samples/sec	accuracy=nan
2023-03-22 22:44:14,792 Node[0] Epoch[22] Batch [60-80]	Speed: 39900.00 samples/sec	accuracy=nan
2023-03-22 22:44:16,429 Node[0] Epoch[22] Batch [80-100]	Speed: 39891.08 samples/sec	accuracy=nan
2023-03-22 22:44:18,063 Node[0] Epoch[22] Batch [100-120]	Speed: 39936.40 samples/sec	accuracy=nan
2023-03-22 22:44:19,696 Node[0] Epoch[22] Batch [120-140]	Speed: 39975.09 samples/sec	accuracy=nan
2023-03-22 22:44:21,332 Node[0] Epoch[22] Batch [140-160]	Speed: 39898.59 samples/sec	accuracy=nan
2023-03-22 22:44:22,968 Node[0] Epoch[22] Batch [160-180]	Speed: 39915.51 samples/sec	accuracy=nan
2023-03-22 22:44:24,596 Node[0] Epoch[22] Batch [180-200]	Speed: 40083.25 samples/sec	accuracy=nan
2023-03-22 22:44:26,232 Node[0] Epoch[22] Batch [200-220]	Speed: 39921.54 samples/sec	accuracy=nan
2023-03-22 22:44:27,867 Node[0] Epoch[22] Batch [220-240]	Speed: 39914.00 samples/sec	accuracy=nan
2023-03-22 22:44:29,501 Node[0] Epoch[22] Batch [240-260]	Speed: 39964.05 samples/sec	accuracy=nan
2023-03-22 22:44:31,136 Node[0] Epoch[22] Batch [260-280]	Speed: 39926.66 samples/sec	accuracy=nan
2023-03-22 22:44:32,768 Node[0] Epoch[22] Batch [280-300]	Speed: 39978.33 samples/sec	accuracy=nan
2023-03-22 22:44:34,406 Node[0] Epoch[22] Batch [300-320]	Speed: 39875.08 samples/sec	accuracy=nan
2023-03-22 22:44:36,041 Node[0] Epoch[22] Batch [320-340]	Speed: 39919.33 samples/sec	accuracy=nan
2023-03-22 22:44:37,672 Node[0] Epoch[22] Batch [340-360]	Speed: 40026.29 samples/sec	accuracy=nan
2023-03-22 22:44:39,308 Node[0] Epoch[22] Batch [360-380]	Speed: 39898.80 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679543080208, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-22 22:44:40,209 Node[0] Epoch[22] Time cost=32.043
:::MLLOG {"namespace": "", "time_ms": 1679543080209, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39982.42245498608}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679543080286, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-22 22:44:41,047 Node[0] Epoch[22] Validation-accuracy=0.698560
2023-03-22 22:44:41,047 Node[0] Epoch[22] Validation-correct-count=2183.000000
2023-03-22 22:44:41,047 Node[0] Epoch[22] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679543081124, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
2023-03-22 22:44:41,125 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:41,125 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543081125, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.69502, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
2023-03-22 22:44:41,125 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543081125, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
2023-03-22 22:44:41,125 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:41,125 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543081125, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-22 22:44:41,125 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:41,125 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:41,125 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:41,125 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:41,125 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:41,125 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:41,125 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:41,125 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:41,125 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:41,125 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543081125, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-22 22:44:41,126 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:44:42,773 Node[0] Epoch[23] Batch [0-20]	Speed: 39838.62 samples/sec	accuracy=nan
2023-03-22 22:44:44,405 Node[0] Epoch[23] Batch [20-40]	Speed: 39990.88 samples/sec	accuracy=nan
2023-03-22 22:44:46,039 Node[0] Epoch[23] Batch [40-60]	Speed: 39954.48 samples/sec	accuracy=nan
2023-03-22 22:44:47,675 Node[0] Epoch[23] Batch [60-80]	Speed: 39909.51 samples/sec	accuracy=nan
2023-03-22 22:44:49,313 Node[0] Epoch[23] Batch [80-100]	Speed: 39853.42 samples/sec	accuracy=nan
2023-03-22 22:44:50,942 Node[0] Epoch[23] Batch [100-120]	Speed: 40066.49 samples/sec	accuracy=nan
2023-03-22 22:44:52,580 Node[0] Epoch[23] Batch [120-140]	Speed: 39854.18 samples/sec	accuracy=nan
2023-03-22 22:44:54,216 Node[0] Epoch[23] Batch [140-160]	Speed: 39912.39 samples/sec	accuracy=nan
2023-03-22 22:44:55,850 Node[0] Epoch[23] Batch [160-180]	Speed: 39951.02 samples/sec	accuracy=nan
2023-03-22 22:44:57,483 Node[0] Epoch[23] Batch [180-200]	Speed: 39963.07 samples/sec	accuracy=nan
2023-03-22 22:44:59,121 Node[0] Epoch[23] Batch [200-220]	Speed: 39848.26 samples/sec	accuracy=nan
2023-03-22 22:45:00,752 Node[0] Epoch[23] Batch [220-240]	Speed: 40028.23 samples/sec	accuracy=nan
2023-03-22 22:45:02,387 Node[0] Epoch[23] Batch [240-260]	Speed: 39942.20 samples/sec	accuracy=nan
2023-03-22 22:45:04,022 Node[0] Epoch[23] Batch [260-280]	Speed: 39915.24 samples/sec	accuracy=nan
2023-03-22 22:45:05,661 Node[0] Epoch[23] Batch [280-300]	Speed: 39830.63 samples/sec	accuracy=nan
2023-03-22 22:45:07,293 Node[0] Epoch[23] Batch [300-320]	Speed: 39997.35 samples/sec	accuracy=nan
2023-03-22 22:45:08,925 Node[0] Epoch[23] Batch [320-340]	Speed: 40006.07 samples/sec	accuracy=nan
2023-03-22 22:45:10,561 Node[0] Epoch[23] Batch [340-360]	Speed: 39899.63 samples/sec	accuracy=nan
2023-03-22 22:45:12,194 Node[0] Epoch[23] Batch [360-380]	Speed: 39971.74 samples/sec	accuracy=nan
2023-03-22 22:45:13,173 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:13,173 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:13,173 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:13,173 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:13,173 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:13,173 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:13,173 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:13,173 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:13,173 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:13,173 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:13,173 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:13,174 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:13,174 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:13,174 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:13,174 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543113174, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-22 22:45:13,175 Node[0] Epoch[23] Time cost=32.049
:::MLLOG {"namespace": "", "time_ms": 1679543113175, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39974.95595488493}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1679543113175, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-22 22:45:13,175 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:14,891 Node[0] Epoch[24] Batch [0-20]	Speed: 39903.52 samples/sec	accuracy=nan
2023-03-22 22:45:16,524 Node[0] Epoch[24] Batch [20-40]	Speed: 39974.67 samples/sec	accuracy=nan
2023-03-22 22:45:18,161 Node[0] Epoch[24] Batch [40-60]	Speed: 39870.83 samples/sec	accuracy=nan
2023-03-22 22:45:19,796 Node[0] Epoch[24] Batch [60-80]	Speed: 39938.63 samples/sec	accuracy=nan
2023-03-22 22:45:21,426 Node[0] Epoch[24] Batch [80-100]	Speed: 40026.05 samples/sec	accuracy=nan
2023-03-22 22:45:23,065 Node[0] Epoch[24] Batch [100-120]	Speed: 39846.10 samples/sec	accuracy=nan
2023-03-22 22:45:24,699 Node[0] Epoch[24] Batch [120-140]	Speed: 39936.01 samples/sec	accuracy=nan
2023-03-22 22:45:26,333 Node[0] Epoch[24] Batch [140-160]	Speed: 39961.03 samples/sec	accuracy=nan
2023-03-22 22:45:27,970 Node[0] Epoch[24] Batch [160-180]	Speed: 39886.54 samples/sec	accuracy=nan
2023-03-22 22:45:29,606 Node[0] Epoch[24] Batch [180-200]	Speed: 39901.30 samples/sec	accuracy=nan
2023-03-22 22:45:31,237 Node[0] Epoch[24] Batch [200-220]	Speed: 40010.55 samples/sec	accuracy=nan
2023-03-22 22:45:32,872 Node[0] Epoch[24] Batch [220-240]	Speed: 39920.19 samples/sec	accuracy=nan
2023-03-22 22:45:34,511 Node[0] Epoch[24] Batch [240-260]	Speed: 39849.59 samples/sec	accuracy=nan
2023-03-22 22:45:36,145 Node[0] Epoch[24] Batch [260-280]	Speed: 39936.20 samples/sec	accuracy=nan
2023-03-22 22:45:37,775 Node[0] Epoch[24] Batch [280-300]	Speed: 40054.94 samples/sec	accuracy=nan
2023-03-22 22:45:39,409 Node[0] Epoch[24] Batch [300-320]	Speed: 39959.13 samples/sec	accuracy=nan
2023-03-22 22:45:41,041 Node[0] Epoch[24] Batch [320-340]	Speed: 39980.87 samples/sec	accuracy=nan
2023-03-22 22:45:42,677 Node[0] Epoch[24] Batch [340-360]	Speed: 39913.50 samples/sec	accuracy=nan
2023-03-22 22:45:44,309 Node[0] Epoch[24] Batch [360-380]	Speed: 39988.52 samples/sec	accuracy=nan
2023-03-22 22:45:45,209 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:45,210 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:45,210 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:45,210 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:45,210 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:45,210 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:45,210 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:45,210 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:45,210 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:45,210 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:45,210 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:45,211 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:45,210 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:45,211 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:45,211 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543145211, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-22 22:45:45,212 Node[0] Epoch[24] Time cost=32.037
:::MLLOG {"namespace": "", "time_ms": 1679543145212, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39990.3054148573}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679543145213, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-22 22:45:45,213 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:45:46,932 Node[0] Epoch[25] Batch [0-20]	Speed: 39895.17 samples/sec	accuracy=nan
2023-03-22 22:45:48,559 Node[0] Epoch[25] Batch [20-40]	Speed: 40107.64 samples/sec	accuracy=nan
2023-03-22 22:45:50,196 Node[0] Epoch[25] Batch [40-60]	Speed: 39897.50 samples/sec	accuracy=nan
2023-03-22 22:45:51,832 Node[0] Epoch[25] Batch [60-80]	Speed: 39880.61 samples/sec	accuracy=nan
2023-03-22 22:45:53,467 Node[0] Epoch[25] Batch [80-100]	Speed: 39937.16 samples/sec	accuracy=nan
2023-03-22 22:45:55,098 Node[0] Epoch[25] Batch [100-120]	Speed: 40014.14 samples/sec	accuracy=nan
2023-03-22 22:45:56,733 Node[0] Epoch[25] Batch [120-140]	Speed: 39936.28 samples/sec	accuracy=nan
2023-03-22 22:45:58,370 Node[0] Epoch[25] Batch [140-160]	Speed: 39875.82 samples/sec	accuracy=nan
2023-03-22 22:46:00,000 Node[0] Epoch[25] Batch [160-180]	Speed: 40055.07 samples/sec	accuracy=nan
2023-03-22 22:46:01,633 Node[0] Epoch[25] Batch [180-200]	Speed: 39969.06 samples/sec	accuracy=nan
2023-03-22 22:46:03,266 Node[0] Epoch[25] Batch [200-220]	Speed: 39987.73 samples/sec	accuracy=nan
2023-03-22 22:46:04,903 Node[0] Epoch[25] Batch [220-240]	Speed: 39866.59 samples/sec	accuracy=nan
2023-03-22 22:46:06,537 Node[0] Epoch[25] Batch [240-260]	Speed: 39966.17 samples/sec	accuracy=nan
2023-03-22 22:46:08,170 Node[0] Epoch[25] Batch [260-280]	Speed: 39964.16 samples/sec	accuracy=nan
2023-03-22 22:46:09,805 Node[0] Epoch[25] Batch [280-300]	Speed: 39936.08 samples/sec	accuracy=nan
2023-03-22 22:46:11,440 Node[0] Epoch[25] Batch [300-320]	Speed: 39908.20 samples/sec	accuracy=nan
2023-03-22 22:46:13,076 Node[0] Epoch[25] Batch [320-340]	Speed: 39919.27 samples/sec	accuracy=nan
2023-03-22 22:46:14,712 Node[0] Epoch[25] Batch [340-360]	Speed: 39883.55 samples/sec	accuracy=nan
2023-03-22 22:46:16,347 Node[0] Epoch[25] Batch [360-380]	Speed: 39934.54 samples/sec	accuracy=nan
2023-03-22 22:46:17,332 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:17,332 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:17,332 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:17,332 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:17,332 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:17,332 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:17,332 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:17,333 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:17,333 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:17,333 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:17,333 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:17,333 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:17,333 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:17,333 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:17,333 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543177333, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-22 22:46:17,334 Node[0] Epoch[25] Time cost=32.121
:::MLLOG {"namespace": "", "time_ms": 1679543177334, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39885.43643130288}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679543177335, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-22 22:46:17,335 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:19,045 Node[0] Epoch[26] Batch [0-20]	Speed: 40057.03 samples/sec	accuracy=nan
2023-03-22 22:46:20,681 Node[0] Epoch[26] Batch [20-40]	Speed: 39903.55 samples/sec	accuracy=nan
2023-03-22 22:46:22,320 Node[0] Epoch[26] Batch [40-60]	Speed: 39829.30 samples/sec	accuracy=nan
2023-03-22 22:46:23,959 Node[0] Epoch[26] Batch [60-80]	Speed: 39840.52 samples/sec	accuracy=nan
2023-03-22 22:46:25,591 Node[0] Epoch[26] Batch [80-100]	Speed: 39981.46 samples/sec	accuracy=nan
2023-03-22 22:46:27,223 Node[0] Epoch[26] Batch [100-120]	Speed: 40008.14 samples/sec	accuracy=nan
2023-03-22 22:46:28,853 Node[0] Epoch[26] Batch [120-140]	Speed: 40047.26 samples/sec	accuracy=nan
2023-03-22 22:46:30,490 Node[0] Epoch[26] Batch [140-160]	Speed: 39891.62 samples/sec	accuracy=nan
2023-03-22 22:46:32,128 Node[0] Epoch[26] Batch [160-180]	Speed: 39853.45 samples/sec	accuracy=nan
2023-03-22 22:46:33,762 Node[0] Epoch[26] Batch [180-200]	Speed: 39937.76 samples/sec	accuracy=nan
2023-03-22 22:46:35,392 Node[0] Epoch[26] Batch [200-220]	Speed: 40055.89 samples/sec	accuracy=nan
2023-03-22 22:46:37,030 Node[0] Epoch[26] Batch [220-240]	Speed: 39863.04 samples/sec	accuracy=nan
2023-03-22 22:46:38,663 Node[0] Epoch[26] Batch [240-260]	Speed: 39964.39 samples/sec	accuracy=nan
2023-03-22 22:46:40,294 Node[0] Epoch[26] Batch [260-280]	Speed: 40034.73 samples/sec	accuracy=nan
2023-03-22 22:46:41,931 Node[0] Epoch[26] Batch [280-300]	Speed: 39863.81 samples/sec	accuracy=nan
2023-03-22 22:46:43,566 Node[0] Epoch[26] Batch [300-320]	Speed: 39920.62 samples/sec	accuracy=nan
2023-03-22 22:46:45,201 Node[0] Epoch[26] Batch [320-340]	Speed: 39939.62 samples/sec	accuracy=nan
2023-03-22 22:46:46,836 Node[0] Epoch[26] Batch [340-360]	Speed: 39921.02 samples/sec	accuracy=nan
2023-03-22 22:46:48,471 Node[0] Epoch[26] Batch [360-380]	Speed: 39933.41 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679543209362, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-22 22:46:49,363 Node[0] Epoch[26] Time cost=32.028
:::MLLOG {"namespace": "", "time_ms": 1679543209363, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40001.50603125965}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679543209440, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-22 22:46:50,153 Node[0] Epoch[26] Validation-accuracy=0.728320
2023-03-22 22:46:50,154 Node[0] Epoch[26] Validation-correct-count=2276.000000
2023-03-22 22:46:50,154 Node[0] Epoch[26] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679543210270, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
2023-03-22 22:46:50,270 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543210270, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.73178, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
2023-03-22 22:46:50,270 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:50,270 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:50,270 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:50,270 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543210271, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
2023-03-22 22:46:50,270 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:50,270 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:50,270 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:50,270 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:50,270 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543210271, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-22 22:46:50,270 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:50,270 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:50,270 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:50,270 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:50,270 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543210271, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-22 22:46:50,271 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:46:51,917 Node[0] Epoch[27] Batch [0-20]	Speed: 39864.03 samples/sec	accuracy=nan
2023-03-22 22:46:53,550 Node[0] Epoch[27] Batch [20-40]	Speed: 39966.55 samples/sec	accuracy=nan
2023-03-22 22:46:55,188 Node[0] Epoch[27] Batch [40-60]	Speed: 39847.45 samples/sec	accuracy=nan
2023-03-22 22:46:56,823 Node[0] Epoch[27] Batch [60-80]	Speed: 39925.08 samples/sec	accuracy=nan
2023-03-22 22:46:58,457 Node[0] Epoch[27] Batch [80-100]	Speed: 39947.26 samples/sec	accuracy=nan
2023-03-22 22:47:00,089 Node[0] Epoch[27] Batch [100-120]	Speed: 40003.47 samples/sec	accuracy=nan
2023-03-22 22:47:01,724 Node[0] Epoch[27] Batch [120-140]	Speed: 39937.64 samples/sec	accuracy=nan
2023-03-22 22:47:03,360 Node[0] Epoch[27] Batch [140-160]	Speed: 39907.21 samples/sec	accuracy=nan
2023-03-22 22:47:04,990 Node[0] Epoch[27] Batch [160-180]	Speed: 40047.69 samples/sec	accuracy=nan
2023-03-22 22:47:06,627 Node[0] Epoch[27] Batch [180-200]	Speed: 39861.67 samples/sec	accuracy=nan
2023-03-22 22:47:08,260 Node[0] Epoch[27] Batch [200-220]	Speed: 39983.30 samples/sec	accuracy=nan
2023-03-22 22:47:09,897 Node[0] Epoch[27] Batch [220-240]	Speed: 39868.83 samples/sec	accuracy=nan
2023-03-22 22:47:11,536 Node[0] Epoch[27] Batch [240-260]	Speed: 39845.37 samples/sec	accuracy=nan
2023-03-22 22:47:13,168 Node[0] Epoch[27] Batch [260-280]	Speed: 39992.00 samples/sec	accuracy=nan
2023-03-22 22:47:14,802 Node[0] Epoch[27] Batch [280-300]	Speed: 39939.10 samples/sec	accuracy=nan
2023-03-22 22:47:16,439 Node[0] Epoch[27] Batch [300-320]	Speed: 39877.57 samples/sec	accuracy=nan
2023-03-22 22:47:18,070 Node[0] Epoch[27] Batch [320-340]	Speed: 40031.58 samples/sec	accuracy=nan
2023-03-22 22:47:19,704 Node[0] Epoch[27] Batch [340-360]	Speed: 39947.34 samples/sec	accuracy=nan
2023-03-22 22:47:21,342 Node[0] Epoch[27] Batch [360-380]	Speed: 39863.36 samples/sec	accuracy=nan
2023-03-22 22:47:22,323 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:22,323 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:22,323 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:22,323 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:22,323 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:22,323 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:22,323 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:22,324 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:22,323 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:22,324 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:22,324 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:22,324 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:22,324 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:22,324 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:22,324 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543242324, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-22 22:47:22,325 Node[0] Epoch[27] Time cost=32.054
:::MLLOG {"namespace": "", "time_ms": 1679543242325, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39968.93731487807}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679543242326, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-22 22:47:22,326 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:24,039 Node[0] Epoch[28] Batch [0-20]	Speed: 39986.45 samples/sec	accuracy=nan
2023-03-22 22:47:25,671 Node[0] Epoch[28] Batch [20-40]	Speed: 40002.37 samples/sec	accuracy=nan
2023-03-22 22:47:27,307 Node[0] Epoch[28] Batch [40-60]	Speed: 39898.83 samples/sec	accuracy=nan
2023-03-22 22:47:28,938 Node[0] Epoch[28] Batch [60-80]	Speed: 40041.11 samples/sec	accuracy=nan
2023-03-22 22:47:30,576 Node[0] Epoch[28] Batch [80-100]	Speed: 39846.97 samples/sec	accuracy=nan
2023-03-22 22:47:32,214 Node[0] Epoch[28] Batch [100-120]	Speed: 39865.03 samples/sec	accuracy=nan
2023-03-22 22:47:33,848 Node[0] Epoch[28] Batch [120-140]	Speed: 39931.31 samples/sec	accuracy=nan
2023-03-22 22:47:35,484 Node[0] Epoch[28] Batch [140-160]	Speed: 39908.26 samples/sec	accuracy=nan
2023-03-22 22:47:37,120 Node[0] Epoch[28] Batch [160-180]	Speed: 39907.73 samples/sec	accuracy=nan
2023-03-22 22:47:38,758 Node[0] Epoch[28] Batch [180-200]	Speed: 39844.53 samples/sec	accuracy=nan
2023-03-22 22:47:40,391 Node[0] Epoch[28] Batch [200-220]	Speed: 39970.89 samples/sec	accuracy=nan
2023-03-22 22:47:42,028 Node[0] Epoch[28] Batch [220-240]	Speed: 39883.03 samples/sec	accuracy=nan
2023-03-22 22:47:43,665 Node[0] Epoch[28] Batch [240-260]	Speed: 39892.31 samples/sec	accuracy=nan
2023-03-22 22:47:45,305 Node[0] Epoch[28] Batch [260-280]	Speed: 39791.14 samples/sec	accuracy=nan
2023-03-22 22:47:46,942 Node[0] Epoch[28] Batch [280-300]	Speed: 39874.03 samples/sec	accuracy=nan
2023-03-22 22:47:48,573 Node[0] Epoch[28] Batch [300-320]	Speed: 40028.37 samples/sec	accuracy=nan
2023-03-22 22:47:50,209 Node[0] Epoch[28] Batch [320-340]	Speed: 39903.42 samples/sec	accuracy=nan
2023-03-22 22:47:51,843 Node[0] Epoch[28] Batch [340-360]	Speed: 39953.45 samples/sec	accuracy=nan
2023-03-22 22:47:53,479 Node[0] Epoch[28] Batch [360-380]	Speed: 39900.65 samples/sec	accuracy=nan
2023-03-22 22:47:54,372 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:54,372 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:54,372 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:54,372 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:54,372 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:54,373 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:54,373 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:54,373 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:54,373 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:54,373 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:54,373 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:54,373 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:54,373 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:54,373 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543274373, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-22 22:47:54,375 Node[0] Epoch[28] Time cost=32.049
:::MLLOG {"namespace": "", "time_ms": 1679543274375, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39975.35444675655}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
2023-03-22 22:47:54,375 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543274375, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-22 22:47:54,375 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:47:56,093 Node[0] Epoch[29] Batch [0-20]	Speed: 39924.49 samples/sec	accuracy=nan
2023-03-22 22:47:57,727 Node[0] Epoch[29] Batch [20-40]	Speed: 39952.30 samples/sec	accuracy=nan
2023-03-22 22:47:59,361 Node[0] Epoch[29] Batch [40-60]	Speed: 39949.32 samples/sec	accuracy=nan
2023-03-22 22:48:00,993 Node[0] Epoch[29] Batch [60-80]	Speed: 40022.94 samples/sec	accuracy=nan
2023-03-22 22:48:02,628 Node[0] Epoch[29] Batch [80-100]	Speed: 39921.38 samples/sec	accuracy=nan
2023-03-22 22:48:04,265 Node[0] Epoch[29] Batch [100-120]	Speed: 39863.41 samples/sec	accuracy=nan
2023-03-22 22:48:05,897 Node[0] Epoch[29] Batch [120-140]	Speed: 40012.51 samples/sec	accuracy=nan
2023-03-22 22:48:07,530 Node[0] Epoch[29] Batch [140-160]	Speed: 39975.70 samples/sec	accuracy=nan
2023-03-22 22:48:09,164 Node[0] Epoch[29] Batch [160-180]	Speed: 39949.09 samples/sec	accuracy=nan
2023-03-22 22:48:10,801 Node[0] Epoch[29] Batch [180-200]	Speed: 39868.52 samples/sec	accuracy=nan
2023-03-22 22:48:12,439 Node[0] Epoch[29] Batch [200-220]	Speed: 39867.13 samples/sec	accuracy=nan
2023-03-22 22:48:14,077 Node[0] Epoch[29] Batch [220-240]	Speed: 39857.41 samples/sec	accuracy=nan
2023-03-22 22:48:15,705 Node[0] Epoch[29] Batch [240-260]	Speed: 40077.62 samples/sec	accuracy=nan
2023-03-22 22:48:17,339 Node[0] Epoch[29] Batch [260-280]	Speed: 39970.58 samples/sec	accuracy=nan
2023-03-22 22:48:18,974 Node[0] Epoch[29] Batch [280-300]	Speed: 39906.70 samples/sec	accuracy=nan
2023-03-22 22:48:20,608 Node[0] Epoch[29] Batch [300-320]	Speed: 39964.51 samples/sec	accuracy=nan
2023-03-22 22:48:22,238 Node[0] Epoch[29] Batch [320-340]	Speed: 40039.95 samples/sec	accuracy=nan
2023-03-22 22:48:23,877 Node[0] Epoch[29] Batch [340-360]	Speed: 39844.39 samples/sec	accuracy=nan
2023-03-22 22:48:25,514 Node[0] Epoch[29] Batch [360-380]	Speed: 39880.15 samples/sec	accuracy=nan
2023-03-22 22:48:26,490 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:26,490 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:26,490 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:26,490 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:26,490 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:26,491 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:26,490 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:26,491 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:26,491 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:26,491 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:26,491 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:26,491 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:26,491 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:26,491 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:26,491 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543306491, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-22 22:48:26,492 Node[0] Epoch[29] Time cost=32.117
:::MLLOG {"namespace": "", "time_ms": 1679543306492, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39890.99788798935}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679543306492, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-22 22:48:26,493 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:28,208 Node[0] Epoch[30] Batch [0-20]	Speed: 39933.90 samples/sec	accuracy=nan
2023-03-22 22:48:29,843 Node[0] Epoch[30] Batch [20-40]	Speed: 39931.65 samples/sec	accuracy=nan
2023-03-22 22:48:31,478 Node[0] Epoch[30] Batch [40-60]	Speed: 39938.04 samples/sec	accuracy=nan
2023-03-22 22:48:33,108 Node[0] Epoch[30] Batch [60-80]	Speed: 40032.20 samples/sec	accuracy=nan
2023-03-22 22:48:34,746 Node[0] Epoch[30] Batch [80-100]	Speed: 39857.92 samples/sec	accuracy=nan
2023-03-22 22:48:36,384 Node[0] Epoch[30] Batch [100-120]	Speed: 39856.71 samples/sec	accuracy=nan
2023-03-22 22:48:38,019 Node[0] Epoch[30] Batch [120-140]	Speed: 39929.96 samples/sec	accuracy=nan
2023-03-22 22:48:39,653 Node[0] Epoch[30] Batch [140-160]	Speed: 39941.01 samples/sec	accuracy=nan
2023-03-22 22:48:41,287 Node[0] Epoch[30] Batch [160-180]	Speed: 39954.12 samples/sec	accuracy=nan
2023-03-22 22:48:42,927 Node[0] Epoch[30] Batch [180-200]	Speed: 39811.21 samples/sec	accuracy=nan
2023-03-22 22:48:44,557 Node[0] Epoch[30] Batch [200-220]	Speed: 40050.08 samples/sec	accuracy=nan
2023-03-22 22:48:46,194 Node[0] Epoch[30] Batch [220-240]	Speed: 39882.87 samples/sec	accuracy=nan
2023-03-22 22:48:47,826 Node[0] Epoch[30] Batch [240-260]	Speed: 39984.56 samples/sec	accuracy=nan
2023-03-22 22:48:49,462 Node[0] Epoch[30] Batch [260-280]	Speed: 39908.72 samples/sec	accuracy=nan
2023-03-22 22:48:51,097 Node[0] Epoch[30] Batch [280-300]	Speed: 39932.95 samples/sec	accuracy=nan
2023-03-22 22:48:52,733 Node[0] Epoch[30] Batch [300-320]	Speed: 39904.37 samples/sec	accuracy=nan
2023-03-22 22:48:54,365 Node[0] Epoch[30] Batch [320-340]	Speed: 39987.10 samples/sec	accuracy=nan
2023-03-22 22:48:56,002 Node[0] Epoch[30] Batch [340-360]	Speed: 39877.53 samples/sec	accuracy=nan
2023-03-22 22:48:57,635 Node[0] Epoch[30] Batch [360-380]	Speed: 39972.67 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679543338535, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-22 22:48:58,535 Node[0] Epoch[30] Time cost=32.043
:::MLLOG {"namespace": "", "time_ms": 1679543338536, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39982.80146100218}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679543338613, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-22 22:48:59,349 Node[0] Epoch[30] Validation-accuracy=0.738240
2023-03-22 22:48:59,349 Node[0] Epoch[30] Validation-correct-count=2307.000000
2023-03-22 22:48:59,349 Node[0] Epoch[30] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679543339460, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
2023-03-22 22:48:59,460 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543339461, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.74898, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
2023-03-22 22:48:59,461 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543339461, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
2023-03-22 22:48:59,460 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543339461, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-22 22:48:59,461 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:59,461 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:59,461 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:59,461 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:59,461 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:59,460 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:59,461 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:59,461 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:59,461 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:59,461 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:59,461 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:48:59,461 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543339461, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-22 22:48:59,461 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:49:01,107 Node[0] Epoch[31] Batch [0-20]	Speed: 39854.15 samples/sec	accuracy=nan
2023-03-22 22:49:02,738 Node[0] Epoch[31] Batch [20-40]	Speed: 40036.73 samples/sec	accuracy=nan
2023-03-22 22:49:04,371 Node[0] Epoch[31] Batch [40-60]	Speed: 39981.01 samples/sec	accuracy=nan
2023-03-22 22:49:06,004 Node[0] Epoch[31] Batch [60-80]	Speed: 39957.15 samples/sec	accuracy=nan
2023-03-22 22:49:07,636 Node[0] Epoch[31] Batch [80-100]	Speed: 40013.96 samples/sec	accuracy=nan
2023-03-22 22:49:09,270 Node[0] Epoch[31] Batch [100-120]	Speed: 39935.29 samples/sec	accuracy=nan
2023-03-22 22:49:10,905 Node[0] Epoch[31] Batch [120-140]	Speed: 39946.82 samples/sec	accuracy=nan
2023-03-22 22:49:12,541 Node[0] Epoch[31] Batch [140-160]	Speed: 39886.98 samples/sec	accuracy=nan
2023-03-22 22:49:14,175 Node[0] Epoch[31] Batch [160-180]	Speed: 39956.47 samples/sec	accuracy=nan
2023-03-22 22:49:15,808 Node[0] Epoch[31] Batch [180-200]	Speed: 39983.86 samples/sec	accuracy=nan
2023-03-22 22:49:17,447 Node[0] Epoch[31] Batch [200-220]	Speed: 39822.06 samples/sec	accuracy=nan
2023-03-22 22:49:19,081 Node[0] Epoch[31] Batch [220-240]	Speed: 39944.84 samples/sec	accuracy=nan
2023-03-22 22:49:20,717 Node[0] Epoch[31] Batch [240-260]	Speed: 39911.93 samples/sec	accuracy=nan
2023-03-22 22:49:22,349 Node[0] Epoch[31] Batch [260-280]	Speed: 40002.12 samples/sec	accuracy=nan
2023-03-22 22:49:23,981 Node[0] Epoch[31] Batch [280-300]	Speed: 39990.88 samples/sec	accuracy=nan
2023-03-22 22:49:25,618 Node[0] Epoch[31] Batch [300-320]	Speed: 39883.18 samples/sec	accuracy=nan
2023-03-22 22:49:27,252 Node[0] Epoch[31] Batch [320-340]	Speed: 39951.99 samples/sec	accuracy=nan
2023-03-22 22:49:28,890 Node[0] Epoch[31] Batch [340-360]	Speed: 39860.23 samples/sec	accuracy=nan
2023-03-22 22:49:30,529 Node[0] Epoch[31] Batch [360-380]	Speed: 39810.89 samples/sec	accuracy=nan
2023-03-22 22:49:31,505 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:49:31,506 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:49:31,505 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:49:31,506 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:49:31,506 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:49:31,506 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:49:31,506 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:49:31,506 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:49:31,506 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:49:31,506 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:49:31,506 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:49:31,506 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:49:31,506 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543371506, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-22 22:49:31,507 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:49:31,507 Node[0] Epoch[31] Time cost=32.046
:::MLLOG {"namespace": "", "time_ms": 1679543371507, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39979.253841272846}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
2023-03-22 22:49:31,507 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543371507, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-22 22:49:31,508 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:49:33,224 Node[0] Epoch[32] Batch [0-20]	Speed: 39911.71 samples/sec	accuracy=nan
2023-03-22 22:49:34,861 Node[0] Epoch[32] Batch [20-40]	Speed: 39875.43 samples/sec	accuracy=nan
2023-03-22 22:49:36,493 Node[0] Epoch[32] Batch [40-60]	Speed: 39985.00 samples/sec	accuracy=nan
2023-03-22 22:49:38,125 Node[0] Epoch[32] Batch [60-80]	Speed: 40015.31 samples/sec	accuracy=nan
2023-03-22 22:49:39,762 Node[0] Epoch[32] Batch [80-100]	Speed: 39860.49 samples/sec	accuracy=nan
2023-03-22 22:49:41,398 Node[0] Epoch[32] Batch [100-120]	Speed: 39913.25 samples/sec	accuracy=nan
2023-03-22 22:49:43,031 Node[0] Epoch[32] Batch [120-140]	Speed: 39962.04 samples/sec	accuracy=nan
2023-03-22 22:49:44,666 Node[0] Epoch[32] Batch [140-160]	Speed: 39944.95 samples/sec	accuracy=nan
2023-03-22 22:49:46,301 Node[0] Epoch[32] Batch [160-180]	Speed: 39925.15 samples/sec	accuracy=nan
2023-03-22 22:49:47,934 Node[0] Epoch[32] Batch [180-200]	Speed: 39970.82 samples/sec	accuracy=nan
2023-03-22 22:49:49,572 Node[0] Epoch[32] Batch [200-220]	Speed: 39865.07 samples/sec	accuracy=nan
2023-03-22 22:49:51,208 Node[0] Epoch[32] Batch [220-240]	Speed: 39879.84 samples/sec	accuracy=nan
2023-03-22 22:49:52,844 Node[0] Epoch[32] Batch [240-260]	Speed: 39917.61 samples/sec	accuracy=nan
2023-03-22 22:49:54,475 Node[0] Epoch[32] Batch [260-280]	Speed: 40022.49 samples/sec	accuracy=nan
2023-03-22 22:49:56,113 Node[0] Epoch[32] Batch [280-300]	Speed: 39852.82 samples/sec	accuracy=nan
2023-03-22 22:49:57,746 Node[0] Epoch[32] Batch [300-320]	Speed: 39973.01 samples/sec	accuracy=nan
2023-03-22 22:49:59,382 Node[0] Epoch[32] Batch [320-340]	Speed: 39907.34 samples/sec	accuracy=nan
2023-03-22 22:50:01,018 Node[0] Epoch[32] Batch [340-360]	Speed: 39895.82 samples/sec	accuracy=nan
2023-03-22 22:50:02,657 Node[0] Epoch[32] Batch [360-380]	Speed: 39830.34 samples/sec	accuracy=nan
2023-03-22 22:50:03,550 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:03,551 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:03,551 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:03,551 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:03,551 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:03,551 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:03,551 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:03,551 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:03,551 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:03,551 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:03,551 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:03,551 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:03,551 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:03,552 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:03,552 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543403551, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-22 22:50:03,552 Node[0] Epoch[32] Time cost=32.045
:::MLLOG {"namespace": "", "time_ms": 1679543403552, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39980.66347324547}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679543403553, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-22 22:50:03,553 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:05,271 Node[0] Epoch[33] Batch [0-20]	Speed: 39914.95 samples/sec	accuracy=nan
2023-03-22 22:50:06,908 Node[0] Epoch[33] Batch [20-40]	Speed: 39887.46 samples/sec	accuracy=nan
2023-03-22 22:50:08,547 Node[0] Epoch[33] Batch [40-60]	Speed: 39836.22 samples/sec	accuracy=nan
2023-03-22 22:50:10,180 Node[0] Epoch[33] Batch [60-80]	Speed: 39971.84 samples/sec	accuracy=nan
2023-03-22 22:50:11,814 Node[0] Epoch[33] Batch [80-100]	Speed: 39940.33 samples/sec	accuracy=nan
2023-03-22 22:50:13,448 Node[0] Epoch[33] Batch [100-120]	Speed: 39956.27 samples/sec	accuracy=nan
2023-03-22 22:50:15,083 Node[0] Epoch[33] Batch [120-140]	Speed: 39938.52 samples/sec	accuracy=nan
2023-03-22 22:50:16,719 Node[0] Epoch[33] Batch [140-160]	Speed: 39890.04 samples/sec	accuracy=nan
2023-03-22 22:50:18,356 Node[0] Epoch[33] Batch [160-180]	Speed: 39872.27 samples/sec	accuracy=nan
2023-03-22 22:50:19,995 Node[0] Epoch[33] Batch [180-200]	Speed: 39849.54 samples/sec	accuracy=nan
2023-03-22 22:50:21,628 Node[0] Epoch[33] Batch [200-220]	Speed: 39956.66 samples/sec	accuracy=nan
2023-03-22 22:50:23,265 Node[0] Epoch[33] Batch [220-240]	Speed: 39882.66 samples/sec	accuracy=nan
2023-03-22 22:50:24,899 Node[0] Epoch[33] Batch [240-260]	Speed: 39965.06 samples/sec	accuracy=nan
2023-03-22 22:50:26,533 Node[0] Epoch[33] Batch [260-280]	Speed: 39949.76 samples/sec	accuracy=nan
2023-03-22 22:50:28,168 Node[0] Epoch[33] Batch [280-300]	Speed: 39905.78 samples/sec	accuracy=nan
2023-03-22 22:50:29,803 Node[0] Epoch[33] Batch [300-320]	Speed: 39937.08 samples/sec	accuracy=nan
2023-03-22 22:50:31,438 Node[0] Epoch[33] Batch [320-340]	Speed: 39921.55 samples/sec	accuracy=nan
2023-03-22 22:50:33,072 Node[0] Epoch[33] Batch [340-360]	Speed: 39963.99 samples/sec	accuracy=nan
2023-03-22 22:50:34,709 Node[0] Epoch[33] Batch [360-380]	Speed: 39858.96 samples/sec	accuracy=nan
2023-03-22 22:50:35,690 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:35,691 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:35,690 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:35,691 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:35,691 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:35,691 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:35,691 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:35,691 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:35,691 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:35,691 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:35,691 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:35,691 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:35,691 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:35,691 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:35,691 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679543435692, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-22 22:50:35,693 Node[0] Epoch[33] Time cost=32.140
:::MLLOG {"namespace": "", "time_ms": 1679543435693, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39861.564931806104}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679543435694, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-22 22:50:35,694 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 22:50:37,409 Node[0] Epoch[34] Batch [0-20]	Speed: 39932.25 samples/sec	accuracy=nan
2023-03-22 22:50:39,038 Node[0] Epoch[34] Batch [20-40]	Speed: 40061.62 samples/sec	accuracy=nan
2023-03-22 22:50:40,674 Node[0] Epoch[34] Batch [40-60]	Speed: 39914.03 samples/sec	accuracy=nan
2023-03-22 22:50:42,311 Node[0] Epoch[34] Batch [60-80]	Speed: 39879.23 samples/sec	accuracy=nan
2023-03-22 22:50:43,944 Node[0] Epoch[34] Batch [80-100]	Speed: 39967.62 samples/sec	accuracy=nan
2023-03-22 22:50:45,580 Node[0] Epoch[34] Batch [100-120]	Speed: 39904.34 samples/sec	accuracy=nan
2023-03-22 22:50:47,216 Node[0] Epoch[34] Batch [120-140]	Speed: 39909.26 samples/sec	accuracy=nan
2023-03-22 22:50:48,850 Node[0] Epoch[34] Batch [140-160]	Speed: 39936.65 samples/sec	accuracy=nan
2023-03-22 22:50:50,483 Node[0] Epoch[34] Batch [160-180]	Speed: 39974.36 samples/sec	accuracy=nan
2023-03-22 22:50:52,119 Node[0] Epoch[34] Batch [180-200]	Speed: 39903.52 samples/sec	accuracy=nan
2023-03-22 22:50:53,756 Node[0] Epoch[34] Batch [200-220]	Speed: 39887.23 samples/sec	accuracy=nan
2023-03-22 22:50:55,387 Node[0] Epoch[34] Batch [220-240]	Speed: 40017.24 samples/sec	accuracy=nan
2023-03-22 22:50:57,023 Node[0] Epoch[34] Batch [240-260]	Speed: 39899.25 samples/sec	accuracy=nan
2023-03-22 22:50:58,661 Node[0] Epoch[34] Batch [260-280]	Speed: 39855.16 samples/sec	accuracy=nan
2023-03-22 22:51:00,301 Node[0] Epoch[34] Batch [280-300]	Speed: 39799.44 samples/sec	accuracy=nan
2023-03-22 22:51:01,935 Node[0] Epoch[34] Batch [300-320]	Speed: 39949.67 samples/sec	accuracy=nan
2023-03-22 22:51:03,570 Node[0] Epoch[34] Batch [320-340]	Speed: 39948.00 samples/sec	accuracy=nan
2023-03-22 22:51:05,205 Node[0] Epoch[34] Batch [340-360]	Speed: 39909.94 samples/sec	accuracy=nan
2023-03-22 22:51:06,842 Node[0] Epoch[34] Batch [360-380]	Speed: 39878.11 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679543467817, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-22 22:51:07,818 Node[0] Epoch[34] Time cost=32.124
:::MLLOG {"namespace": "", "time_ms": 1679543467818, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39881.742086675724}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679543467895, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-22 22:51:08,651 Node[0] Epoch[34] Validation-accuracy=0.768960
2023-03-22 22:51:08,651 Node[0] Epoch[34] Validation-correct-count=2403.000000
2023-03-22 22:51:08,651 Node[0] Epoch[34] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679543468738, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679543468738, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76006, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679543468738, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679543468738, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679543493
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 10:51:33 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 10:51:33 PM'
ENDING TIMING RUN AT 2023-03-22 10:51:33 PM
+ result=1303
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 10:29:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 10:29:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679543493
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 10:51:33 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 10:51:33 PM'
ENDING TIMING RUN AT 2023-03-22 10:51:33 PM
+ result=1303
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 10:29:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 10:29:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679543493
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 10:51:33 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 10:51:33 PM'
ENDING TIMING RUN AT 2023-03-22 10:51:33 PM
+ result=1303
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 10:29:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 10:29:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679543493
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 10:51:33 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 10:51:33 PM'
ENDING TIMING RUN AT 2023-03-22 10:51:33 PM
+ result=1303
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 10:29:50 PM'
RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 10:29:50 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679543493
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 10:51:33 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 10:51:33 PM'
ENDING TIMING RUN AT 2023-03-22 10:51:33 PM
+ result=1303
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 10:29:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 10:29:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679543493
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 10:51:33 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 10:51:33 PM'
ENDING TIMING RUN AT 2023-03-22 10:51:33 PM
+ result=1303
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 10:29:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 10:29:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679543493
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 10:51:33 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 10:51:33 PM'
ENDING TIMING RUN AT 2023-03-22 10:51:33 PM
+ result=1303
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 10:29:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 10:29:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679543494
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 10:51:34 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 10:51:34 PM'
ENDING TIMING RUN AT 2023-03-22 10:51:34 PM
+ result=1304
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1304,root,2023-03-22 10:29:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1304,root,2023-03-22 10:29:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679543494
++ date '+%Y-%m-%d %r'
+ [[ 0 != 0 ]]
++ date +%s
+ end_fmt='2023-03-22 10:51:34 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 10:51:34 PM'
ENDING TIMING RUN AT 2023-03-22 10:51:34 PM
+ result=1304
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1304,root,2023-03-22 10:29:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1304,root,2023-03-22 10:29:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ end=1679543494
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 10:51:34 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 10:51:34 PM'
ENDING TIMING RUN AT 2023-03-22 10:51:34 PM
+ result=1304
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1304,root,2023-03-22 10:29:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1304,root,2023-03-22 10:29:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ [[ 0 != 0 ]]
+ end=1679543494
++ date +%s
++ date '+%Y-%m-%d %r'
+ end=1679543494
+ end_fmt='2023-03-22 10:51:34 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 10:51:34 PM'
ENDING TIMING RUN AT 2023-03-22 10:51:34 PM
+ result=1304
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1304,root,2023-03-22 10:29:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1304,root,2023-03-22 10:29:50 PM'
+ export PROFILE=0
+ PROFILE=0
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 10:51:34 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 10:51:34 PM'
ENDING TIMING RUN AT 2023-03-22 10:51:34 PM
+ result=1304
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1304,root,2023-03-22 10:29:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1304,root,2023-03-22 10:29:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679543494
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 10:51:34 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 10:51:34 PM'
ENDING TIMING RUN AT 2023-03-22 10:51:34 PM
+ result=1304
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1304,root,2023-03-22 10:29:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1304,root,2023-03-22 10:29:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679543494
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 10:51:34 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 10:51:34 PM'
ENDING TIMING RUN AT 2023-03-22 10:51:34 PM
+ result=1304
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1304,root,2023-03-22 10:29:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1304,root,2023-03-22 10:29:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679543495
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 10:51:35 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 10:51:35 PM'
ENDING TIMING RUN AT 2023-03-22 10:51:35 PM
+ result=1305
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1305,root,2023-03-22 10:29:50 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1305,root,2023-03-22 10:29:50 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679543495
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 10:51:35 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 10:51:35 PM'
ENDING TIMING RUN AT 2023-03-22 10:51:35 PM
+ result=1305
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1305,root,2023-03-22 10:29:50 PM'
RESULT,IMAGE_CLASSIFICATION,,1305,root,2023-03-22 10:29:50 PM
+ export PROFILE=0
+ PROFILE=0
