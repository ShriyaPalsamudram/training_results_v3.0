+ echo 'Beginning trial 3 of 5'
Beginning trial 3 of 5
++ scontrol show hostname
++ tr '\n' ' '
+ hosts='node044 node045 node046 node047 '
+ echo 'hosts=node044 node045 node046 node047 '
hosts=node044 node045 node046 node047 
+ for node in $hosts
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679544867865, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679544867899, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679544867901, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679544867902, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679544867903, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node044 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node044
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node044 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679544881195, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679544887206, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679544887241, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679544887242, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679544887243, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679544887245, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node045 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node045
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node045 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679544899168, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679544904105, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679544904140, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679544904141, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679544904143, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679544904144, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node046 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node046
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node046 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679544916000, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ for node in $hosts
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.mlperf_submission_log(mllogger.constants.RESNET)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679544920938, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679544920973, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Dell", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679544920974, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679544920975, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "<string>", "lineno": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679544920977, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "4xR750xax4A100-PCIE-80GB", "metadata": {"file": "<string>", "lineno": 3}}
+ '[' 1 -eq 1 ']'
+ srun -N 1 -n 1 -w node047 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on node047
vm.drop_caches = 3
+ srun -N 1 -n 1 -w node047 mpirun --allow-run-as-root -np 1 singularity exec --nv -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif python -c '
from mlperf_log_utils import mllogger
mllogger.event(key=mllogger.constants.CACHE_CLEAR, value=True)'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
:::MLLOG {"namespace": "", "time_ms": 1679544932986, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 3}}
+ export SEED=29099
+ SEED=29099
+ MPIRUN='mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16'
+ mpirun --display-allocation --allow-run-as-root --bind-to none --report-bindings -np 16 singularity exec --nv -B /dev/shm/resnet/ilsvrc12_passthrough:/data -B /home/frank/mlperf-training-v2.1/resnet/scripts:/workspace/image_classification --pwd /workspace/image_classification /mnt/data/resnet/resnet_20230124.sif bash ./run_and_time_multi.sh

======================   ALLOCATED NODES   ======================
	node044: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node045: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node046: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
	node047: flags=0x11 slots=4 max_slots=0 slots_inuse=0 state=UP
=================================================================
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+ source ./config_4xR750xax4A100.sh
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ date +%s
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+ start=1679544934
+++ dirname ./config_4xR750xax4A100.sh
++ date '+%Y-%m-%d %r'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+ start_fmt='2023-03-22 11:15:34 PM'
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:15:34 PM'
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
STARTING TIMING RUN AT 2023-03-22 11:15:34 PM
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+ readonly global_rank=0
+ global_rank=0
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+ readonly local_rank=0
+ local_rank=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+ SLURM_NTASKS_PER_NODE=4
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
+ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
+ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
+ INPUT_BATCH_MULTIPLIER=1
++ export LR=10.5
++ LR=10.5
+ KVSTORE=horovod
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
+ LR=10.5
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
+ MOM=0.9
+ LRSCHED=pow2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
+ WARMUP_EPOCHS=2
++ export WD=5.0e-05
++ WD=5.0e-05
+ LARSETA=0.001
++ export MOM=0.9
++ MOM=0.9
+ DALI_HW_DECODER_LOAD=0
++ export LARSETA=0.001
++ LARSETA=0.001
+ WD=5.0e-05
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
+ LABELSMOOTHING=0.1
+ SEED=29099
++ export LRSCHED=pow2
++ LRSCHED=pow2
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
+ DALI_PREFETCH_QUEUE=5
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
+ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_THREADS=6
++ DALI_THREADS=6
+ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
+ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
+ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
+ DALI_CROP_BUFFER_HINT=165581
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
+ PROFILE_EXCEL=0
+ NODALI=0
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
+ NUMEXAMPLES=
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
+ PROFILE_ALL_LOCAL_RANKS=0
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
+ THR=0.759
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
+ [[ 0 == 1 ]]
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
+ DATAROOT=/data
running benchmark
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+ echo 'running benchmark'
+ export NGPUS=4
+ NGPUS=4
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+ [[ 0 -ge 1 ]]
++ export DGXNNODES=4
++ DGXNNODES=4
++ seq 0 3
+++ sed 's/^config_//'
++ tr '\n' ,
+++ sed 's/\.sh$//'
13:4: not a valid test operator: (
13:4: not a valid test operator: 525.60.13
++ sed 's/,$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+ start=1679544934
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 11:15:34 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:15:34 PM'
STARTING TIMING RUN AT 2023-03-22 11:15:34 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=29099
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start=1679544934
++ date '+%Y-%m-%d %r'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start_fmt='2023-03-22 11:15:34 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:15:34 PM'
STARTING TIMING RUN AT 2023-03-22 11:15:34 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=29099
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+ start=1679544934
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 11:15:34 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:15:34 PM'
STARTING TIMING RUN AT 2023-03-22 11:15:34 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=4
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=29099
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=4
+ NGPUS=4
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+ source ./config_4xR750xax4A100.sh
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ dirname ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ source ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ start=1679544934
++ date '+%Y-%m-%d %r'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ start_fmt='2023-03-22 11:15:34 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:15:34 PM'
STARTING TIMING RUN AT 2023-03-22 11:15:34 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
++ date +%s
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=29099
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ seq 0 3
++ tr '\n' ,
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ sed 's/,$//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ date +%s
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ start=1679544934
++ date '+%Y-%m-%d %r'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+ start=1679544934
+ start_fmt='2023-03-22 11:15:34 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:15:34 PM'
STARTING TIMING RUN AT 2023-03-22 11:15:34 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
++ date '+%Y-%m-%d %r'
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=29099
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ source ./config_4xR750xax4A100.sh
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ dirname ./config_4xR750xax4A100.sh
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ seq 0 3
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ [[ '' -ge 1 ]]
++ tr '\n' ,
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ sed 's/,$//'
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start_fmt='2023-03-22 11:15:34 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:15:34 PM'
STARTING TIMING RUN AT 2023-03-22 11:15:34 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=29099
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
+ start=1679544934
++ sed 's/,$//'
++ date '+%Y-%m-%d %r'
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
+ start_fmt='2023-03-22 11:15:34 PM'
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:15:34 PM'
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
STARTING TIMING RUN AT 2023-03-22 11:15:34 PM
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
+ readonly global_rank=1
+ global_rank=1
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
+ readonly local_rank=0
+ local_rank=0
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
+ SLURM_NTASKS_PER_NODE=1
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
+ MOM=0.9
+ LRSCHED=pow2
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
+ WARMUP_EPOCHS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ SEED=29099
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
+ [[ 0 == 1 ]]
+ DATAROOT=/data
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ date +%s
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++ seq 0 3
++++ readlink -f ./config_4xR750xax4A100.sh
++ tr '\n' ,
+ source ./config_4xR750xax4A100.sh
++ sed 's/,$//'
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ dirname ./config_4xR750xax4A100.sh
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679544934
++ date '+%Y-%m-%d %r'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ start_fmt='2023-03-22 11:15:34 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:15:34 PM'
+ GPUS=0,1,2,3
STARTING TIMING RUN AT 2023-03-22 11:15:34 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=29099
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
++ seq 0 3
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
++ tr '\n' ,
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ sed 's/,$//'
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
+ source ./config_4xR750xax4A100.sh
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
+ source ./config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ date +%s
+++ dirname ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ GPUS=0,1,2,3
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+ start=1679544934
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+ [[ '' -ge 1 ]]
++ date '+%Y-%m-%d %r'
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ sed 's/^config_//'
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++++ readlink -f ./config_4xR750xax4A100.sh
+ start_fmt='2023-03-22 11:15:34 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:15:34 PM'
STARTING TIMING RUN AT 2023-03-22 11:15:34 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=29099
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
running benchmark
+ echo 'running benchmark'
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ source ./config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
+ source ./config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+++ dirname ./config_4xR750xax4A100.sh
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+ GPUS=0,1,2,3
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
+ [[ '' -ge 1 ]]
++ DALI_HW_DECODER_LOAD=0
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ source ./config_R750xax4A100-SXM-80GB_common.sh
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
++ export DGXNNODES=4
++ DGXNNODES=4
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export DGXSYSTEM=4xR750xax4A100
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
++ export MOM=0.9
++ MOM=0.9
++ DGXSYSTEM=4xR750xax4A100
++ export LARSETA=0.001
++ LARSETA=0.001
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
++ date +%s
++ date +%s
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++++ readlink -f ./config_4xR750xax4A100.sh
+ start=1679544934
+ source ./config_4xR750xax4A100.sh
++ date '+%Y-%m-%d %r'
+++ dirname ./config_4xR750xax4A100.sh
+ start_fmt='2023-03-22 11:15:34 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:15:34 PM'
STARTING TIMING RUN AT 2023-03-22 11:15:34 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=29099
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ start=1679544934
+ start=1679544934
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
++ source ./config_R750xax4A100-SXM-80GB_common.sh
+++ export 'OMPI_MCA_btl=^openib'
+++ OMPI_MCA_btl='^openib'
+++ export DALI_DONT_USE_MMAP=0
+++ DALI_DONT_USE_MMAP=0
+++ export MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ MXNET_EXTENDED_NORMCONV_SUPPORT=1
+++ export DGXNGPU=4
+++ DGXNGPU=4
+++ export DGXNSOCKET=2
+++ DGXNSOCKET=2
+++ export DGXSOCKETCORES=32
+++ DGXSOCKETCORES=32
+++ export DGXHT=1
+++ DGXHT=1
+++ export HOROVOD_NUM_NCCL_STREAMS=1
+++ HOROVOD_NUM_NCCL_STREAMS=1
+++ export MXNET_HOROVOD_NUM_GROUPS=1
+++ MXNET_HOROVOD_NUM_GROUPS=1
+++ export HOROVOD_CYCLE_TIME=0.1
+++ HOROVOD_CYCLE_TIME=0.1
+++ export MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ MXNET_OPTIMIZER_AGGREGATION_SIZE=54
+++ export MXNET_ENABLE_CUDA_GRAPHS=1
+++ MXNET_ENABLE_CUDA_GRAPHS=1
+++ export MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ MXNET_CUDNN_WARN_ON_IGNORED_FLAGS=0
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD=1
+++ export MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=1
+++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=1
+++ export RUN_NCCL_BW_TEST=0
+++ RUN_NCCL_BW_TEST=0
+ start_fmt='2023-03-22 11:15:34 PM'
++ export MXNET_DETERMINISTIC=1
++ MXNET_DETERMINISTIC=1
++ export OPTIMIZER=sgdwfastlars
++ OPTIMIZER=sgdwfastlars
++ export BATCHSIZE=204
++ BATCHSIZE=204
+ start_fmt='2023-03-22 11:15:34 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:15:34 PM'
++ export KVSTORE=horovod
++ KVSTORE=horovod
++ export LR=10.5
++ LR=10.5
++ export WARMUP_EPOCHS=2
++ WARMUP_EPOCHS=2
++ export EVAL_OFFSET=2
++ EVAL_OFFSET=2
++ export EVAL_PERIOD=4
++ EVAL_PERIOD=4
++ export WD=5.0e-05
++ WD=5.0e-05
STARTING TIMING RUN AT 2023-03-22 11:15:34 PM
++ export MOM=0.9
++ MOM=0.9
++ export LARSETA=0.001
++ LARSETA=0.001
++ export LABELSMOOTHING=0.1
++ LABELSMOOTHING=0.1
++ export LRSCHED=pow2
++ LRSCHED=pow2
++ export NUMEPOCHS=37
++ NUMEPOCHS=37
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:15:34 PM'
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
++ export NETWORK=resnet-v1b-stats-fl
++ NETWORK=resnet-v1b-stats-fl
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD=0
++ export MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD=0
++ export DALI_THREADS=6
++ DALI_THREADS=6
++ export DALI_PREFETCH_QUEUE=5
++ DALI_PREFETCH_QUEUE=5
++ export DALI_NVJPEG_MEMPADDING=256
++ DALI_NVJPEG_MEMPADDING=256
++ export DALI_HW_DECODER_LOAD=0
++ DALI_HW_DECODER_LOAD=0
STARTING TIMING RUN AT 2023-03-22 11:15:34 PM
++ export DALI_CACHE_SIZE=0
++ DALI_CACHE_SIZE=0
+ readonly global_rank=2
+ global_rank=2
++ export DALI_ROI_DECODE=1
++ DALI_ROI_DECODE=1
++ export DALI_PREALLOCATE_WIDTH=5980
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
++ DALI_PREALLOCATE_WIDTH=5980
++ export DALI_PREALLOCATE_HEIGHT=6430
++ DALI_PREALLOCATE_HEIGHT=6430
++ export DALI_DECODER_BUFFER_HINT=1315942
++ DALI_DECODER_BUFFER_HINT=1315942
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
++ export DALI_CROP_BUFFER_HINT=165581
++ DALI_CROP_BUFFER_HINT=165581
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
++ export DALI_TMP_BUFFER_HINT=355568328
++ DALI_TMP_BUFFER_HINT=355568328
++ export DALI_NORMALIZE_BUFFER_HINT=441549
++ DALI_NORMALIZE_BUFFER_HINT=441549
++ export HOROVOD_CYCLE_TIME=0.1
++ HOROVOD_CYCLE_TIME=0.1
++ export HOROVOD_FUSION_THRESHOLD=67108864
++ HOROVOD_FUSION_THRESHOLD=67108864
++ export HOROVOD_NUM_NCCL_STREAMS=2
++ HOROVOD_NUM_NCCL_STREAMS=2
++ export MXNET_HOROVOD_NUM_GROUPS=1
++ MXNET_HOROVOD_NUM_GROUPS=1
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD=999
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
++ export MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD=999
++ export DGXNNODES=4
++ DGXNNODES=4
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=29099
+ EVAL_OFFSET=2
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ LABELSMOOTHING=0.1
+ SEED=29099
+ EVAL_OFFSET=2
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ [[ 0 -ge 1 ]]
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+++ sed 's/^config_//'
+++ sed 's/\.sh$//'
++ seq 0 3
++++ readlink -f ./config_4xR750xax4A100.sh
++ seq 0 3
++ tr '\n' ,
++ tr '\n' ,
++ sed 's/,$//'
++ sed 's/,$//'
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ export DGXSYSTEM=4xR750xax4A100
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
+ GPUS=0,1,2,3
+++ basename /workspace/image_classification/config_4xR750xax4A100.sh
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ start=1679544934
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
++ date '+%Y-%m-%d %r'
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ start=1679544934
++ date '+%Y-%m-%d %r'
+ start_fmt='2023-03-22 11:15:34 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:15:34 PM'
STARTING TIMING RUN AT 2023-03-22 11:15:34 PM
+ readonly global_rank=2
+ global_rank=2
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=29099
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
++ export DGXSYSTEM=4xR750xax4A100
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
++ DGXSYSTEM=4xR750xax4A100
++ export WALLTIME=00:40:00
++ WALLTIME=00:40:00
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ export NCCL_MAX_RINGS=4
++ NCCL_MAX_RINGS=4
++ export OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ OMPI_MCA_btl_openib_if_include=mlx5_0:1
++ export UCX_NET_DEVICES=mlx5_0:1
++ UCX_NET_DEVICES=mlx5_0:1
++ date +%s
++ seq 0 3
+ start_fmt='2023-03-22 11:15:34 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:15:34 PM'
++ tr '\n' ,
STARTING TIMING RUN AT 2023-03-22 11:15:34 PM
+ readonly global_rank=1
+ global_rank=1
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ BATCHSIZE=204
++ sed 's/,$//'
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=29099
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ start=1679544934
++ date '+%Y-%m-%d %r'
+ GPUS=0,1,2,3
+ start_fmt='2023-03-22 11:15:34 PM'
+ echo 'STARTING TIMING RUN AT 2023-03-22 11:15:34 PM'
STARTING TIMING RUN AT 2023-03-22 11:15:34 PM
+ readonly global_rank=0
+ global_rank=0
+ readonly local_rank=0
+ local_rank=0
+ SLURM_NTASKS_PER_NODE=1
+ OPTIMIZER=sgdwfastlars
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ BATCHSIZE=204
+ INPUT_BATCH_MULTIPLIER=1
+ KVSTORE=horovod
+ LR=10.5
+ MOM=0.9
+ LRSCHED=pow2
+ WARMUP_EPOCHS=2
+ LARSETA=0.001
+ DALI_HW_DECODER_LOAD=0
+ WD=5.0e-05
+ LABELSMOOTHING=0.1
+ SEED=29099
+ EVAL_OFFSET=2
+ EVAL_PERIOD=4
+ DALI_PREFETCH_QUEUE=5
+ DALI_NVJPEG_MEMPADDING=256
+ DALI_THREADS=6
+ DALI_CACHE_SIZE=0
+ DALI_ROI_DECODE=1
+ DALI_PREALLOCATE_WIDTH=5980
+ DALI_PREALLOCATE_HEIGHT=6430
+ DALI_TMP_BUFFER_HINT=355568328
+ DALI_DECODER_BUFFER_HINT=1315942
+ DALI_CROP_BUFFER_HINT=165581
+ DALI_NORMALIZE_BUFFER_HINT=441549
+ DALI_DONT_USE_MMAP=0
+ NUMEPOCHS=37
+ NETWORK=resnet-v1b-stats-fl
+ BN_GROUP=1
+ PROFILE=0
+ PROFILE_EXCEL=0
+ NODALI=0
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ NUMEXAMPLES=
+ PROFILE_ALL_LOCAL_RANKS=0
+ THR=0.759
+ [[ 0 == 1 ]]
+ DATAROOT=/data
+ echo 'running benchmark'
running benchmark
+ export NGPUS=1
+ NGPUS=1
+ export NCCL_DEBUG=WARN
+ NCCL_DEBUG=WARN
+ [[ 0 -ge 1 ]]
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
++ seq 0 3
++ tr '\n' ,
++ sed 's/,$//'
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ GPUS=0,1,2,3
+ PARAMS=(--gpus "${GPUS}" --batch-size "${BATCHSIZE}" --kv-store "${KVSTORE}" --lr "${LR}" --mom "${MOM}" --lr-step-epochs "${LRSCHED}" --lars-eta "${LARSETA}" --label-smoothing "${LABELSMOOTHING}" --wd "${WD}" --warmup-epochs "${WARMUP_EPOCHS}" --eval-period "${EVAL_PERIOD}" --eval-offset "${EVAL_OFFSET}" --optimizer "${OPTIMIZER}" --network "${NETWORK}" --num-layers "50" --num-epochs "${NUMEPOCHS}" --accuracy-threshold "${THR}" --seed "${SEED}" --dtype "float16" --disp-batches "20" --image-shape "4,224,224" --fuse-bn-relu "1" --fuse-bn-add-relu "1" --bn-group "${BN_GROUP}" --min-random-area "0.05" --max-random-area "1.0" --conv-algo "1" --force-tensor-core "1" --input-layout "NHWC" --conv-layout "NHWC" --batchnorm-layout "NHWC" --pooling-layout "NHWC" --batchnorm-mom "0.9" --batchnorm-eps "1e-5" --data-train "${DATAROOT}/train.rec" --data-train-idx "${DATAROOT}/train.idx" --data-val "${DATAROOT}/val.rec" --data-val-idx "${DATAROOT}/val.idx" --dali-dont-use-mmap "${DALI_DONT_USE_MMAP}" --dali-hw-decoder-load "${DALI_HW_DECODER_LOAD}" --dali-prefetch-queue "${DALI_PREFETCH_QUEUE}" --dali-nvjpeg-memory-padding "${DALI_NVJPEG_MEMPADDING}" --input-batch-multiplier "${INPUT_BATCH_MULTIPLIER}" --dali-threads "${DALI_THREADS}" --dali-cache-size "${DALI_CACHE_SIZE}" --dali-roi-decode "${DALI_ROI_DECODE}" --dali-preallocate-width "${DALI_PREALLOCATE_WIDTH}" --dali-preallocate-height "${DALI_PREALLOCATE_HEIGHT}" --dali-tmp-buffer-hint "${DALI_TMP_BUFFER_HINT}" --dali-decoder-buffer-hint "${DALI_DECODER_BUFFER_HINT}" --dali-crop-buffer-hint "${DALI_CROP_BUFFER_HINT}" --dali-normalize-buffer-hint "${DALI_NORMALIZE_BUFFER_HINT}" --profile "${PROFILE}")
+ [[ 0 -lt 1 ]]
+ PARAMS+=(--use-dali)
+ [[ '' -ge 1 ]]
+ echo PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
PARAMS=--gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
+ python train_imagenet.py --gpus 0,1,2,3 --batch-size 204 --kv-store horovod --lr 10.5 --mom 0.9 --lr-step-epochs pow2 --lars-eta 0.001 --label-smoothing 0.1 --wd 5.0e-05 --warmup-epochs 2 --eval-period 4 --eval-offset 2 --optimizer sgdwfastlars --network resnet-v1b-stats-fl --num-layers 50 --num-epochs 37 --accuracy-threshold 0.759 --seed 29099 --dtype float16 --disp-batches 20 --image-shape 4,224,224 --fuse-bn-relu 1 --fuse-bn-add-relu 1 --bn-group 1 --min-random-area 0.05 --max-random-area 1.0 --conv-algo 1 --force-tensor-core 1 --input-layout NHWC --conv-layout NHWC --batchnorm-layout NHWC --pooling-layout NHWC --batchnorm-mom 0.9 --batchnorm-eps 1e-5 --data-train /data/train.rec --data-train-idx /data/train.idx --data-val /data/val.rec --data-val-idx /data/val.idx --dali-dont-use-mmap 0 --dali-hw-decoder-load 0 --dali-prefetch-queue 5 --dali-nvjpeg-memory-padding 256 --input-batch-multiplier 1 --dali-threads 6 --dali-cache-size 0 --dali-roi-decode 1 --dali-preallocate-width 5980 --dali-preallocate-height 6430 --dali-tmp-buffer-hint 355568328 --dali-decoder-buffer-hint 1315942 --dali-crop-buffer-hint 165581 --dali-normalize-buffer-hint 441549 --profile 0 --use-dali
[node044:42768] MCW rank 0 is not bound (or bound to all available processors)
[node044:42782] MCW rank 3 is not bound (or bound to all available processors)
[node044:42797] MCW rank 2 is not bound (or bound to all available processors)
[node044:42781] MCW rank 1 is not bound (or bound to all available processors)
[node046:30183] MCW rank 8 is not bound (or bound to all available processors)
[node046:30191] MCW rank 9 is not bound (or bound to all available processors)
[node045:35906] MCW rank 5 is not bound (or bound to all available processors)
[node045:35921] MCW rank 7 is not bound (or bound to all available processors)
[node046:30190] MCW rank 11 is not bound (or bound to all available processors)
[node046:30206] MCW rank 10 is not bound (or bound to all available processors)
[node045:35914] MCW rank 6 is not bound (or bound to all available processors)
[node045:35934] MCW rank 4 is not bound (or bound to all available processors)
[node047:39290] MCW rank 14 is not bound (or bound to all available processors)
[node047:39284] MCW rank 12 is not bound (or bound to all available processors)
[node047:39285] MCW rank 15 is not bound (or bound to all available processors)
[node047:39283] MCW rank 13 is not bound (or bound to all available processors)
:::MLLOG {"namespace": "", "time_ms": 1679544939431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 122}}
[23:15:46] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:15:46] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:15:46] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:15:46] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:15:46] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:15:46] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:15:46] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:15:46] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:15:46] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:15:46] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:15:46] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:15:46] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:15:47] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:15:47] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:15:47] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
[23:15:47] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1679544947118, "event_type": "POINT_IN_TIME", "key": "seed", "value": 29099, "metadata": {"file": "train_imagenet.py", "lineno": 180}}
NCCL version 2.15.5+cuda11.8
:::MLLOG {"namespace": "", "time_ms": 1679544949741, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 204, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 356}}
[23:15:53] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:15:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:15:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:15:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:15:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:15:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:15:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:15:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:15:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:15:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:15:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:15:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:15:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:15:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:15:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
[23:15:54] ../src/storage/storage.cc:196: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1679544954552, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954553, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954553, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954553, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 79, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954554, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954554, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954554, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954554, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954555, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954555, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954555, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954555, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954556, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954556, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954556, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954556, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954557, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954557, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954557, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954557, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954558, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954558, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954558, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954558, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954559, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954559, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954559, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954559, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954559, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954560, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954560, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954560, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954560, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954561, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954561, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954561, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954561, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954562, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954562, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954562, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954562, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954563, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954563, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954563, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954563, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954564, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954564, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954564, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954564, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954564, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954565, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954565, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954565, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954565, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954566, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954566, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954566, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954566, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954567, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954567, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954567, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954567, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954568, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954568, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954568, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954568, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954569, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954569, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954569, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954569, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954570, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954570, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954570, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954570, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954570, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954571, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954571, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954571, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954571, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954572, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954572, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954572, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954572, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954573, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954573, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954573, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954573, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954574, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954574, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954574, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954574, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954574, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954575, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954575, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954575, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954575, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954576, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954576, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954576, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954576, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954577, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954577, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954577, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954577, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954578, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954578, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954578, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954578, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954578, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954579, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954579, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954579, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954579, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954580, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954580, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954580, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954580, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954581, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954581, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954581, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954581, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954582, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954582, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954582, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954583, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954583, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954583, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954583, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954584, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954584, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954584, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954584, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954585, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954585, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954585, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954585, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954586, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954586, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954586, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954586, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954587, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954587, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954587, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954587, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954587, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954588, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954588, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954588, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954588, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954589, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954589, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954589, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954589, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954590, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954590, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954590, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954590, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 93, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954591, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 86, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954591, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954591, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1679544954591, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 74, "tensor": "stage4_unit3_conv3_weight"}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:15:56,143 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=15563, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:15:56,143 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=23840, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:15:56,143 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=45344, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:15:56,143 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61784, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:15:56,143 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61302, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:15:56,143 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=35206, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:15:56,143 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=1321, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:15:56,143 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=6661, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:15:56,143 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=2831, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:15:56,143 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=6950, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:15:56,143 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=46891, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:15:56,143 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=17224, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:15:56,143 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=24617, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:15:56,144 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=4813, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:15:56,144 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=60064, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:649: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2023-03-22 23:15:56,144 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=204, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_hw_decoder_load=0.0, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=5, dali_roi_decode=True, dali_threads=6, dali_tmp_buffer_hint=355568328, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=None, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=21298, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1679544956143, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 707}}
:::MLLOG {"namespace": "", "time_ms": 1679544956145, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 708}}
:::MLLOG {"namespace": "", "time_ms": 1679544956145, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 709}}
:::MLLOG {"namespace": "", "time_ms": 1679544956145, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1679544956145, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 204, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1146}}
:::MLLOG {"namespace": "", "time_ms": 1679544956145, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1147}}
:::MLLOG {"namespace": "", "time_ms": 1679544956145, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1679544956145, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1149}}
:::MLLOG {"namespace": "", "time_ms": 1679544956145, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1150}}
:::MLLOG {"namespace": "", "time_ms": 1679544956146, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1151}}
:::MLLOG {"namespace": "", "time_ms": 1679544956146, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1152}}
:::MLLOG {"namespace": "", "time_ms": 1679544956146, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1153}}
:::MLLOG {"namespace": "", "time_ms": 1679544956146, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1154}}
:::MLLOG {"namespace": "", "time_ms": 1679544956146, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1160}}
:::MLLOG {"namespace": "", "time_ms": 1679544956146, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1679544956146, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1164}}
:::MLLOG {"namespace": "", "time_ms": 1679544956146, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1166}}
:::MLLOG {"namespace": "", "time_ms": 1679544956146, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1167}}
:::MLLOG {"namespace": "", "time_ms": 1679544956146, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1168}}
:::MLLOG {"namespace": "", "time_ms": 1679544956146, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1169}}
:::MLLOG {"namespace": "", "time_ms": 1679545043841, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679545043842, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1314}}
:::MLLOG {"namespace": "", "time_ms": 1679545043842, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 534}}
:::MLLOG {"namespace": "", "time_ms": 1679545044396, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 558}}
:::MLLOG {"namespace": "", "time_ms": 1679545044476, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 896, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679545044483, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 1}}
2023-03-22 23:17:26,133 Node[0] Epoch[0] Batch [0-20]	Speed: 39732.00 samples/sec	accuracy=nan
2023-03-22 23:17:27,747 Node[0] Epoch[0] Batch [20-40]	Speed: 40454.45 samples/sec	accuracy=nan
2023-03-22 23:17:29,365 Node[0] Epoch[0] Batch [40-60]	Speed: 40350.79 samples/sec	accuracy=nan
2023-03-22 23:17:30,983 Node[0] Epoch[0] Batch [60-80]	Speed: 40346.08 samples/sec	accuracy=nan
2023-03-22 23:17:32,600 Node[0] Epoch[0] Batch [80-100]	Speed: 40353.73 samples/sec	accuracy=nan
2023-03-22 23:17:34,217 Node[0] Epoch[0] Batch [100-120]	Speed: 40370.16 samples/sec	accuracy=nan
2023-03-22 23:17:35,836 Node[0] Epoch[0] Batch [120-140]	Speed: 40318.29 samples/sec	accuracy=nan
2023-03-22 23:17:37,460 Node[0] Epoch[0] Batch [140-160]	Speed: 40218.53 samples/sec	accuracy=nan
2023-03-22 23:17:39,076 Node[0] Epoch[0] Batch [160-180]	Speed: 40391.07 samples/sec	accuracy=nan
2023-03-22 23:17:40,695 Node[0] Epoch[0] Batch [180-200]	Speed: 40317.11 samples/sec	accuracy=nan
2023-03-22 23:17:42,313 Node[0] Epoch[0] Batch [200-220]	Speed: 40343.99 samples/sec	accuracy=nan
2023-03-22 23:17:43,933 Node[0] Epoch[0] Batch [220-240]	Speed: 40295.76 samples/sec	accuracy=nan
2023-03-22 23:17:45,554 Node[0] Epoch[0] Batch [240-260]	Speed: 40267.87 samples/sec	accuracy=nan
2023-03-22 23:17:47,176 Node[0] Epoch[0] Batch [260-280]	Speed: 40243.07 samples/sec	accuracy=nan
2023-03-22 23:17:48,800 Node[0] Epoch[0] Batch [280-300]	Speed: 40202.67 samples/sec	accuracy=nan
2023-03-22 23:17:50,430 Node[0] Epoch[0] Batch [300-320]	Speed: 40058.25 samples/sec	accuracy=nan
2023-03-22 23:17:52,055 Node[0] Epoch[0] Batch [320-340]	Speed: 40179.69 samples/sec	accuracy=nan
2023-03-22 23:17:53,678 Node[0] Epoch[0] Batch [340-360]	Speed: 40203.82 samples/sec	accuracy=nan
2023-03-22 23:17:55,306 Node[0] Epoch[0] Batch [360-380]	Speed: 40108.24 samples/sec	accuracy=nan
2023-03-22 23:17:56,285 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:17:56,285 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:17:56,285 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:17:56,285 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:17:56,285 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545076285, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 1}}
2023-03-22 23:17:56,285 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:17:56,286 Node[0] Epoch[0] Time cost=31.803
2023-03-22 23:17:56,285 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:17:56,285 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:17:56,285 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:17:56,285 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545076286, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40284.97047572448}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 1}}
2023-03-22 23:17:56,286 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:17:56,286 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:17:56,286 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:17:56,285 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:17:56,286 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545076287, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 2}}
2023-03-22 23:17:56,287 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:17:57,994 Node[0] Epoch[1] Batch [0-20]	Speed: 40128.09 samples/sec	accuracy=nan
2023-03-22 23:17:59,622 Node[0] Epoch[1] Batch [20-40]	Speed: 40097.90 samples/sec	accuracy=nan
2023-03-22 23:18:01,254 Node[0] Epoch[1] Batch [40-60]	Speed: 39989.53 samples/sec	accuracy=nan
2023-03-22 23:18:02,883 Node[0] Epoch[1] Batch [60-80]	Speed: 40086.76 samples/sec	accuracy=nan
2023-03-22 23:18:04,512 Node[0] Epoch[1] Batch [80-100]	Speed: 40069.21 samples/sec	accuracy=nan
2023-03-22 23:18:06,141 Node[0] Epoch[1] Batch [100-120]	Speed: 40072.11 samples/sec	accuracy=nan
2023-03-22 23:18:07,771 Node[0] Epoch[1] Batch [120-140]	Speed: 40066.10 samples/sec	accuracy=nan
2023-03-22 23:18:09,399 Node[0] Epoch[1] Batch [140-160]	Speed: 40076.33 samples/sec	accuracy=nan
2023-03-22 23:18:13,459 Node[0] Epoch[1] Batch [160-180]	Speed: 16080.61 samples/sec	accuracy=nan
2023-03-22 23:18:17,482 Node[0] Epoch[1] Batch [180-200]	Speed: 16225.37 samples/sec	accuracy=nan
2023-03-22 23:18:21,472 Node[0] Epoch[1] Batch [200-220]	Speed: 16360.30 samples/sec	accuracy=nan
2023-03-22 23:18:25,461 Node[0] Epoch[1] Batch [220-240]	Speed: 16367.94 samples/sec	accuracy=nan
2023-03-22 23:18:27,078 Node[0] Epoch[1] Batch [240-260]	Speed: 40352.33 samples/sec	accuracy=nan
2023-03-22 23:18:28,696 Node[0] Epoch[1] Batch [260-280]	Speed: 40348.72 samples/sec	accuracy=nan
2023-03-22 23:18:32,674 Node[0] Epoch[1] Batch [280-300]	Speed: 16410.28 samples/sec	accuracy=nan
2023-03-22 23:18:34,295 Node[0] Epoch[1] Batch [300-320]	Speed: 40279.94 samples/sec	accuracy=nan
2023-03-22 23:18:38,299 Node[0] Epoch[1] Batch [320-340]	Speed: 16304.90 samples/sec	accuracy=nan
2023-03-22 23:18:39,920 Node[0] Epoch[1] Batch [340-360]	Speed: 40257.26 samples/sec	accuracy=nan
2023-03-22 23:18:41,541 Node[0] Epoch[1] Batch [360-380]	Speed: 40268.94 samples/sec	accuracy=nan
2023-03-22 23:18:42,513 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:18:42,513 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:18:42,513 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:18:42,513 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:18:42,513 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:18:42,513 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:18:42,513 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:18:42,513 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:18:42,513 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:18:42,513 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:18:42,513 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:18:42,513 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:18:42,514 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:18:42,513 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:18:42,513 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545122513, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 2}}
2023-03-22 23:18:42,514 Node[0] Epoch[1] Time cost=46.228
:::MLLOG {"namespace": "", "time_ms": 1679545122514, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 27714.306760804746}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1679545122515, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 3}}
2023-03-22 23:18:42,515 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:18:44,230 Node[0] Epoch[2] Batch [0-20]	Speed: 39980.87 samples/sec	accuracy=nan
2023-03-22 23:18:45,852 Node[0] Epoch[2] Batch [20-40]	Speed: 40250.49 samples/sec	accuracy=nan
2023-03-22 23:18:47,472 Node[0] Epoch[2] Batch [40-60]	Speed: 40287.44 samples/sec	accuracy=nan
2023-03-22 23:18:49,094 Node[0] Epoch[2] Batch [60-80]	Speed: 40248.86 samples/sec	accuracy=nan
2023-03-22 23:18:53,116 Node[0] Epoch[2] Batch [80-100]	Speed: 16232.67 samples/sec	accuracy=nan
2023-03-22 23:18:54,737 Node[0] Epoch[2] Batch [100-120]	Speed: 40266.86 samples/sec	accuracy=nan
2023-03-22 23:18:58,747 Node[0] Epoch[2] Batch [120-140]	Speed: 16279.98 samples/sec	accuracy=nan
2023-03-22 23:19:00,371 Node[0] Epoch[2] Batch [140-160]	Speed: 40189.57 samples/sec	accuracy=nan
2023-03-22 23:19:09,229 Node[0] Epoch[2] Batch [160-180]	Speed: 7369.77 samples/sec	accuracy=nan
2023-03-22 23:19:13,239 Node[0] Epoch[2] Batch [180-200]	Speed: 16280.90 samples/sec	accuracy=nan
2023-03-22 23:19:19,687 Node[0] Epoch[2] Batch [200-220]	Speed: 10123.57 samples/sec	accuracy=nan
2023-03-22 23:19:23,919 Node[0] Epoch[2] Batch [220-240]	Speed: 15425.33 samples/sec	accuracy=nan
2023-03-22 23:19:25,533 Node[0] Epoch[2] Batch [240-260]	Speed: 40450.42 samples/sec	accuracy=nan
2023-03-22 23:19:27,149 Node[0] Epoch[2] Batch [260-280]	Speed: 40401.41 samples/sec	accuracy=nan
2023-03-22 23:19:28,767 Node[0] Epoch[2] Batch [280-300]	Speed: 40327.53 samples/sec	accuracy=nan
2023-03-22 23:19:30,387 Node[0] Epoch[2] Batch [300-320]	Speed: 40302.09 samples/sec	accuracy=nan
2023-03-22 23:19:32,011 Node[0] Epoch[2] Batch [320-340]	Speed: 40207.28 samples/sec	accuracy=nan
2023-03-22 23:19:33,631 Node[0] Epoch[2] Batch [340-360]	Speed: 40278.62 samples/sec	accuracy=nan
2023-03-22 23:19:37,641 Node[0] Epoch[2] Batch [360-380]	Speed: 16283.06 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679545178528, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 3}}
2023-03-22 23:19:38,529 Node[0] Epoch[2] Time cost=56.014
:::MLLOG {"namespace": "", "time_ms": 1679545178529, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 22872.407991501903}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1679545178605, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 3}}
2023-03-22 23:19:38,605 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:38,604 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:38,605 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:38,605 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:38,604 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:38,605 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:38,605 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:38,605 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:38,605 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:38,605 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:38,605 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:38,605 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:38,605 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:38,605 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:38,605 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:38,605 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:39,287 Node[0] Epoch[2] Validation-accuracy=0.304960
2023-03-22 23:19:39,287 Node[0] Epoch[2] Validation-correct-count=953.000000
2023-03-22 23:19:39,287 Node[0] Epoch[2] Validation-total-count=3125.000000
2023-03-22 23:19:39,398 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:39,398 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:39,398 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545179398, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
2023-03-22 23:19:39,398 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:39,398 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545179398, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.31128, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 3}}
2023-03-22 23:19:39,398 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:39,398 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:39,398 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:39,398 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:39,398 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:39,398 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545179398, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 1}}
2023-03-22 23:19:39,398 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:39,398 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:39,398 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:39,398 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545179399, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 4, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679545179399, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 4}}
2023-03-22 23:19:39,399 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:19:41,034 Node[0] Epoch[3] Batch [0-20]	Speed: 40129.86 samples/sec	accuracy=nan
2023-03-22 23:19:42,656 Node[0] Epoch[3] Batch [20-40]	Speed: 40241.90 samples/sec	accuracy=nan
2023-03-22 23:19:44,279 Node[0] Epoch[3] Batch [40-60]	Speed: 40212.74 samples/sec	accuracy=nan
2023-03-22 23:19:45,898 Node[0] Epoch[3] Batch [60-80]	Speed: 40315.80 samples/sec	accuracy=nan
2023-03-22 23:19:47,525 Node[0] Epoch[3] Batch [80-100]	Speed: 40147.25 samples/sec	accuracy=nan
2023-03-22 23:19:49,152 Node[0] Epoch[3] Batch [100-120]	Speed: 40114.37 samples/sec	accuracy=nan
2023-03-22 23:19:50,778 Node[0] Epoch[3] Batch [120-140]	Speed: 40139.63 samples/sec	accuracy=nan
2023-03-22 23:19:52,408 Node[0] Epoch[3] Batch [140-160]	Speed: 40053.61 samples/sec	accuracy=nan
2023-03-22 23:19:54,038 Node[0] Epoch[3] Batch [160-180]	Speed: 40054.71 samples/sec	accuracy=nan
2023-03-22 23:19:55,664 Node[0] Epoch[3] Batch [180-200]	Speed: 40151.88 samples/sec	accuracy=nan
2023-03-22 23:19:57,293 Node[0] Epoch[3] Batch [200-220]	Speed: 40065.56 samples/sec	accuracy=nan
2023-03-22 23:19:58,919 Node[0] Epoch[3] Batch [220-240]	Speed: 40133.34 samples/sec	accuracy=nan
2023-03-22 23:20:00,543 Node[0] Epoch[3] Batch [240-260]	Speed: 40205.18 samples/sec	accuracy=nan
2023-03-22 23:20:02,175 Node[0] Epoch[3] Batch [260-280]	Speed: 40003.71 samples/sec	accuracy=nan
2023-03-22 23:20:03,799 Node[0] Epoch[3] Batch [280-300]	Speed: 40185.06 samples/sec	accuracy=nan
2023-03-22 23:20:05,432 Node[0] Epoch[3] Batch [300-320]	Speed: 39989.53 samples/sec	accuracy=nan
2023-03-22 23:20:07,060 Node[0] Epoch[3] Batch [320-340]	Speed: 40094.69 samples/sec	accuracy=nan
2023-03-22 23:20:08,687 Node[0] Epoch[3] Batch [340-360]	Speed: 40112.00 samples/sec	accuracy=nan
2023-03-22 23:20:10,319 Node[0] Epoch[3] Batch [360-380]	Speed: 40005.98 samples/sec	accuracy=nan
2023-03-22 23:20:11,292 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:11,292 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:11,291 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:11,291 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:11,291 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:11,292 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:11,292 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:11,292 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:11,292 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:11,292 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:11,292 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:11,292 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:11,292 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:11,292 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545211292, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 4}}
2023-03-22 23:20:11,293 Node[0] Epoch[3] Time cost=31.894
2023-03-22 23:20:11,292 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545211293, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40169.96686524333}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679545211293, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 5}}
2023-03-22 23:20:11,293 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:13,005 Node[0] Epoch[4] Batch [0-20]	Speed: 40036.39 samples/sec	accuracy=nan
2023-03-22 23:20:14,638 Node[0] Epoch[4] Batch [20-40]	Speed: 39970.37 samples/sec	accuracy=nan
2023-03-22 23:20:16,267 Node[0] Epoch[4] Batch [40-60]	Speed: 40086.04 samples/sec	accuracy=nan
2023-03-22 23:20:17,897 Node[0] Epoch[4] Batch [60-80]	Speed: 40044.17 samples/sec	accuracy=nan
2023-03-22 23:20:19,526 Node[0] Epoch[4] Batch [80-100]	Speed: 40055.83 samples/sec	accuracy=nan
2023-03-22 23:20:21,155 Node[0] Epoch[4] Batch [100-120]	Speed: 40088.07 samples/sec	accuracy=nan
2023-03-22 23:20:22,786 Node[0] Epoch[4] Batch [120-140]	Speed: 40015.59 samples/sec	accuracy=nan
2023-03-22 23:20:24,415 Node[0] Epoch[4] Batch [140-160]	Speed: 40076.72 samples/sec	accuracy=nan
2023-03-22 23:20:26,044 Node[0] Epoch[4] Batch [160-180]	Speed: 40069.66 samples/sec	accuracy=nan
2023-03-22 23:20:27,677 Node[0] Epoch[4] Batch [180-200]	Speed: 39982.20 samples/sec	accuracy=nan
2023-03-22 23:20:29,303 Node[0] Epoch[4] Batch [200-220]	Speed: 40135.24 samples/sec	accuracy=nan
2023-03-22 23:20:30,935 Node[0] Epoch[4] Batch [220-240]	Speed: 40002.66 samples/sec	accuracy=nan
2023-03-22 23:20:32,561 Node[0] Epoch[4] Batch [240-260]	Speed: 40164.48 samples/sec	accuracy=nan
2023-03-22 23:20:34,194 Node[0] Epoch[4] Batch [260-280]	Speed: 39962.33 samples/sec	accuracy=nan
2023-03-22 23:20:35,827 Node[0] Epoch[4] Batch [280-300]	Speed: 39974.43 samples/sec	accuracy=nan
2023-03-22 23:20:37,454 Node[0] Epoch[4] Batch [300-320]	Speed: 40126.12 samples/sec	accuracy=nan
2023-03-22 23:20:39,083 Node[0] Epoch[4] Batch [320-340]	Speed: 40079.25 samples/sec	accuracy=nan
2023-03-22 23:20:40,712 Node[0] Epoch[4] Batch [340-360]	Speed: 40063.18 samples/sec	accuracy=nan
2023-03-22 23:20:42,347 Node[0] Epoch[4] Batch [360-380]	Speed: 39931.54 samples/sec	accuracy=nan
2023-03-22 23:20:43,241 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:43,241 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:43,241 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:43,241 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:43,241 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:43,241 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:43,241 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:43,241 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:43,241 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:43,241 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:43,241 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:43,242 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:43,242 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:43,242 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545243241, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 5}}
2023-03-22 23:20:43,242 Node[0] Epoch[4] Time cost=31.949
:::MLLOG {"namespace": "", "time_ms": 1679545243242, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40100.45847716037}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 5}}
2023-03-22 23:20:43,242 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545243242, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 6}}
2023-03-22 23:20:43,243 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:20:44,958 Node[0] Epoch[5] Batch [0-20]	Speed: 40010.90 samples/sec	accuracy=nan
2023-03-22 23:20:46,590 Node[0] Epoch[5] Batch [20-40]	Speed: 39978.75 samples/sec	accuracy=nan
2023-03-22 23:20:48,224 Node[0] Epoch[5] Batch [40-60]	Speed: 39953.53 samples/sec	accuracy=nan
2023-03-22 23:20:49,856 Node[0] Epoch[5] Batch [60-80]	Speed: 40006.60 samples/sec	accuracy=nan
2023-03-22 23:20:51,483 Node[0] Epoch[5] Batch [80-100]	Speed: 40130.65 samples/sec	accuracy=nan
2023-03-22 23:20:53,117 Node[0] Epoch[5] Batch [100-120]	Speed: 39944.00 samples/sec	accuracy=nan
2023-03-22 23:20:54,748 Node[0] Epoch[5] Batch [120-140]	Speed: 40017.30 samples/sec	accuracy=nan
2023-03-22 23:20:56,378 Node[0] Epoch[5] Batch [140-160]	Speed: 40056.83 samples/sec	accuracy=nan
2023-03-22 23:20:58,010 Node[0] Epoch[5] Batch [160-180]	Speed: 39991.36 samples/sec	accuracy=nan
2023-03-22 23:20:59,639 Node[0] Epoch[5] Batch [180-200]	Speed: 40086.43 samples/sec	accuracy=nan
2023-03-22 23:21:01,270 Node[0] Epoch[5] Batch [200-220]	Speed: 40016.50 samples/sec	accuracy=nan
2023-03-22 23:21:02,900 Node[0] Epoch[5] Batch [220-240]	Speed: 40060.38 samples/sec	accuracy=nan
2023-03-22 23:21:04,530 Node[0] Epoch[5] Batch [240-260]	Speed: 40033.38 samples/sec	accuracy=nan
2023-03-22 23:21:06,163 Node[0] Epoch[5] Batch [260-280]	Speed: 39990.87 samples/sec	accuracy=nan
2023-03-22 23:21:07,791 Node[0] Epoch[5] Batch [280-300]	Speed: 40099.62 samples/sec	accuracy=nan
2023-03-22 23:21:09,423 Node[0] Epoch[5] Batch [300-320]	Speed: 39994.99 samples/sec	accuracy=nan
2023-03-22 23:21:11,053 Node[0] Epoch[5] Batch [320-340]	Speed: 40043.68 samples/sec	accuracy=nan
2023-03-22 23:21:12,686 Node[0] Epoch[5] Batch [340-360]	Speed: 39965.40 samples/sec	accuracy=nan
2023-03-22 23:21:14,316 Node[0] Epoch[5] Batch [360-380]	Speed: 40071.11 samples/sec	accuracy=nan
2023-03-22 23:21:15,286 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:15,286 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:15,286 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:15,287 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:15,286 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:15,286 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:15,286 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:15,287 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:15,287 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:15,287 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:15,287 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:15,287 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:15,287 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:15,287 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:15,287 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545275287, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 6}}
2023-03-22 23:21:15,288 Node[0] Epoch[5] Time cost=32.045
:::MLLOG {"namespace": "", "time_ms": 1679545275288, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39980.15660109512}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1679545275288, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 7}}
2023-03-22 23:21:15,288 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:17,007 Node[0] Epoch[6] Batch [0-20]	Speed: 39859.65 samples/sec	accuracy=nan
2023-03-22 23:21:18,635 Node[0] Epoch[6] Batch [20-40]	Speed: 40085.10 samples/sec	accuracy=nan
2023-03-22 23:21:20,273 Node[0] Epoch[6] Batch [40-60]	Speed: 39869.71 samples/sec	accuracy=nan
2023-03-22 23:21:21,903 Node[0] Epoch[6] Batch [60-80]	Speed: 40051.75 samples/sec	accuracy=nan
2023-03-22 23:21:23,535 Node[0] Epoch[6] Batch [80-100]	Speed: 39989.55 samples/sec	accuracy=nan
2023-03-22 23:21:25,167 Node[0] Epoch[6] Batch [100-120]	Speed: 40008.25 samples/sec	accuracy=nan
2023-03-22 23:21:26,798 Node[0] Epoch[6] Batch [120-140]	Speed: 40023.87 samples/sec	accuracy=nan
2023-03-22 23:21:28,432 Node[0] Epoch[6] Batch [140-160]	Speed: 39937.99 samples/sec	accuracy=nan
2023-03-22 23:21:30,065 Node[0] Epoch[6] Batch [160-180]	Speed: 39995.50 samples/sec	accuracy=nan
2023-03-22 23:21:31,699 Node[0] Epoch[6] Batch [180-200]	Speed: 39932.12 samples/sec	accuracy=nan
2023-03-22 23:21:33,332 Node[0] Epoch[6] Batch [200-220]	Speed: 39991.68 samples/sec	accuracy=nan
2023-03-22 23:21:34,963 Node[0] Epoch[6] Batch [220-240]	Speed: 40023.97 samples/sec	accuracy=nan
2023-03-22 23:21:36,597 Node[0] Epoch[6] Batch [240-260]	Speed: 39945.45 samples/sec	accuracy=nan
2023-03-22 23:21:38,233 Node[0] Epoch[6] Batch [260-280]	Speed: 39911.84 samples/sec	accuracy=nan
2023-03-22 23:21:39,867 Node[0] Epoch[6] Batch [280-300]	Speed: 39934.69 samples/sec	accuracy=nan
2023-03-22 23:21:41,501 Node[0] Epoch[6] Batch [300-320]	Speed: 39944.34 samples/sec	accuracy=nan
2023-03-22 23:21:43,132 Node[0] Epoch[6] Batch [320-340]	Speed: 40040.87 samples/sec	accuracy=nan
2023-03-22 23:21:44,772 Node[0] Epoch[6] Batch [340-360]	Speed: 39813.92 samples/sec	accuracy=nan
2023-03-22 23:21:46,407 Node[0] Epoch[6] Batch [360-380]	Speed: 39901.55 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679545307305, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 7}}
2023-03-22 23:21:47,306 Node[0] Epoch[6] Time cost=32.018
:::MLLOG {"namespace": "", "time_ms": 1679545307306, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40014.52120959843}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1679545307383, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 7}}
2023-03-22 23:21:48,119 Node[0] Epoch[6] Validation-accuracy=0.464320
2023-03-22 23:21:48,119 Node[0] Epoch[6] Validation-correct-count=1451.000000
2023-03-22 23:21:48,119 Node[0] Epoch[6] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679545308214, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
2023-03-22 23:21:48,214 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:48,214 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545308214, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.46516, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 7}}
2023-03-22 23:21:48,214 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545308215, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679545308215, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 8, "epoch_count": 4}}
2023-03-22 23:21:48,214 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:48,214 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:48,214 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:48,214 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:48,214 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:48,214 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:48,214 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:48,214 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:48,214 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:48,214 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:48,214 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:48,214 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545308215, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 8}}
2023-03-22 23:21:48,215 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:21:49,855 Node[0] Epoch[7] Batch [0-20]	Speed: 40045.16 samples/sec	accuracy=nan
2023-03-22 23:21:51,487 Node[0] Epoch[7] Batch [20-40]	Speed: 40014.77 samples/sec	accuracy=nan
2023-03-22 23:21:53,116 Node[0] Epoch[7] Batch [40-60]	Speed: 40056.27 samples/sec	accuracy=nan
2023-03-22 23:21:54,751 Node[0] Epoch[7] Batch [60-80]	Speed: 39929.77 samples/sec	accuracy=nan
2023-03-22 23:21:56,386 Node[0] Epoch[7] Batch [80-100]	Speed: 39925.74 samples/sec	accuracy=nan
2023-03-22 23:21:58,022 Node[0] Epoch[7] Batch [100-120]	Speed: 39907.51 samples/sec	accuracy=nan
2023-03-22 23:21:59,656 Node[0] Epoch[7] Batch [120-140]	Speed: 39954.68 samples/sec	accuracy=nan
2023-03-22 23:22:01,286 Node[0] Epoch[7] Batch [140-160]	Speed: 40036.66 samples/sec	accuracy=nan
2023-03-22 23:22:02,922 Node[0] Epoch[7] Batch [160-180]	Speed: 39914.40 samples/sec	accuracy=nan
2023-03-22 23:22:04,557 Node[0] Epoch[7] Batch [180-200]	Speed: 39923.41 samples/sec	accuracy=nan
2023-03-22 23:22:06,187 Node[0] Epoch[7] Batch [200-220]	Speed: 40048.79 samples/sec	accuracy=nan
2023-03-22 23:22:07,822 Node[0] Epoch[7] Batch [220-240]	Speed: 39937.40 samples/sec	accuracy=nan
2023-03-22 23:22:09,453 Node[0] Epoch[7] Batch [240-260]	Speed: 40022.57 samples/sec	accuracy=nan
2023-03-22 23:22:11,085 Node[0] Epoch[7] Batch [260-280]	Speed: 39980.01 samples/sec	accuracy=nan
2023-03-22 23:22:12,720 Node[0] Epoch[7] Batch [280-300]	Speed: 39946.18 samples/sec	accuracy=nan
2023-03-22 23:22:14,356 Node[0] Epoch[7] Batch [300-320]	Speed: 39900.63 samples/sec	accuracy=nan
2023-03-22 23:22:15,990 Node[0] Epoch[7] Batch [320-340]	Speed: 39951.59 samples/sec	accuracy=nan
2023-03-22 23:22:17,624 Node[0] Epoch[7] Batch [340-360]	Speed: 39944.86 samples/sec	accuracy=nan
2023-03-22 23:22:19,258 Node[0] Epoch[7] Batch [360-380]	Speed: 39952.49 samples/sec	accuracy=nan
2023-03-22 23:22:20,235 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:20,235 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:20,235 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:20,235 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:20,235 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:20,235 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:20,235 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:20,235 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:20,235 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:20,235 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:20,235 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:20,236 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:20,236 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545340235, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 8}}
2023-03-22 23:22:20,236 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:20,236 Node[0] Epoch[7] Time cost=32.021
2023-03-22 23:22:20,236 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545340236, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40010.0244842172}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679545340237, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 9}}
2023-03-22 23:22:20,237 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:21,951 Node[0] Epoch[8] Batch [0-20]	Speed: 39972.33 samples/sec	accuracy=nan
2023-03-22 23:22:23,585 Node[0] Epoch[8] Batch [20-40]	Speed: 39951.14 samples/sec	accuracy=nan
2023-03-22 23:22:25,220 Node[0] Epoch[8] Batch [40-60]	Speed: 39913.78 samples/sec	accuracy=nan
2023-03-22 23:22:26,850 Node[0] Epoch[8] Batch [60-80]	Speed: 40058.56 samples/sec	accuracy=nan
2023-03-22 23:22:28,484 Node[0] Epoch[8] Batch [80-100]	Speed: 39953.90 samples/sec	accuracy=nan
2023-03-22 23:22:30,122 Node[0] Epoch[8] Batch [100-120]	Speed: 39835.60 samples/sec	accuracy=nan
2023-03-22 23:22:31,756 Node[0] Epoch[8] Batch [120-140]	Speed: 39957.55 samples/sec	accuracy=nan
2023-03-22 23:22:33,388 Node[0] Epoch[8] Batch [140-160]	Speed: 40008.70 samples/sec	accuracy=nan
2023-03-22 23:22:35,024 Node[0] Epoch[8] Batch [160-180]	Speed: 39895.56 samples/sec	accuracy=nan
2023-03-22 23:22:36,655 Node[0] Epoch[8] Batch [180-200]	Speed: 40037.93 samples/sec	accuracy=nan
2023-03-22 23:22:38,286 Node[0] Epoch[8] Batch [200-220]	Speed: 40005.19 samples/sec	accuracy=nan
2023-03-22 23:22:39,923 Node[0] Epoch[8] Batch [220-240]	Speed: 39882.64 samples/sec	accuracy=nan
2023-03-22 23:22:41,559 Node[0] Epoch[8] Batch [240-260]	Speed: 39912.78 samples/sec	accuracy=nan
2023-03-22 23:22:43,189 Node[0] Epoch[8] Batch [260-280]	Speed: 40045.11 samples/sec	accuracy=nan
2023-03-22 23:22:44,822 Node[0] Epoch[8] Batch [280-300]	Speed: 39968.21 samples/sec	accuracy=nan
2023-03-22 23:22:46,452 Node[0] Epoch[8] Batch [300-320]	Speed: 40047.45 samples/sec	accuracy=nan
2023-03-22 23:22:48,087 Node[0] Epoch[8] Batch [320-340]	Speed: 39924.54 samples/sec	accuracy=nan
2023-03-22 23:22:49,721 Node[0] Epoch[8] Batch [340-360]	Speed: 39970.10 samples/sec	accuracy=nan
2023-03-22 23:22:51,354 Node[0] Epoch[8] Batch [360-380]	Speed: 39961.37 samples/sec	accuracy=nan
2023-03-22 23:22:52,252 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:52,252 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:52,252 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:52,252 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:52,252 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:52,252 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:52,252 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:52,252 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:52,252 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:52,252 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:52,252 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:52,252 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:52,252 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:52,252 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:52,253 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545372252, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 9}}
2023-03-22 23:22:52,253 Node[0] Epoch[8] Time cost=32.016
:::MLLOG {"namespace": "", "time_ms": 1679545372253, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40016.059677443205}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1679545372253, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 10}}
2023-03-22 23:22:52,254 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:22:53,974 Node[0] Epoch[9] Batch [0-20]	Speed: 39890.47 samples/sec	accuracy=nan
2023-03-22 23:22:55,609 Node[0] Epoch[9] Batch [20-40]	Speed: 39928.23 samples/sec	accuracy=nan
2023-03-22 23:22:57,245 Node[0] Epoch[9] Batch [40-60]	Speed: 39892.84 samples/sec	accuracy=nan
2023-03-22 23:22:58,871 Node[0] Epoch[9] Batch [60-80]	Speed: 40160.18 samples/sec	accuracy=nan
2023-03-22 23:23:00,507 Node[0] Epoch[9] Batch [80-100]	Speed: 39900.71 samples/sec	accuracy=nan
2023-03-22 23:23:02,139 Node[0] Epoch[9] Batch [100-120]	Speed: 39981.55 samples/sec	accuracy=nan
2023-03-22 23:23:03,772 Node[0] Epoch[9] Batch [120-140]	Speed: 39997.38 samples/sec	accuracy=nan
2023-03-22 23:23:05,407 Node[0] Epoch[9] Batch [140-160]	Speed: 39925.79 samples/sec	accuracy=nan
2023-03-22 23:23:07,043 Node[0] Epoch[9] Batch [160-180]	Speed: 39893.58 samples/sec	accuracy=nan
2023-03-22 23:23:08,677 Node[0] Epoch[9] Batch [180-200]	Speed: 39959.20 samples/sec	accuracy=nan
2023-03-22 23:23:10,307 Node[0] Epoch[9] Batch [200-220]	Speed: 40045.22 samples/sec	accuracy=nan
2023-03-22 23:23:11,940 Node[0] Epoch[9] Batch [220-240]	Speed: 39971.95 samples/sec	accuracy=nan
2023-03-22 23:23:13,575 Node[0] Epoch[9] Batch [240-260]	Speed: 39935.27 samples/sec	accuracy=nan
2023-03-22 23:23:15,210 Node[0] Epoch[9] Batch [260-280]	Speed: 39912.05 samples/sec	accuracy=nan
2023-03-22 23:23:16,843 Node[0] Epoch[9] Batch [280-300]	Speed: 39972.51 samples/sec	accuracy=nan
2023-03-22 23:23:18,478 Node[0] Epoch[9] Batch [300-320]	Speed: 39937.85 samples/sec	accuracy=nan
2023-03-22 23:23:20,116 Node[0] Epoch[9] Batch [320-340]	Speed: 39850.21 samples/sec	accuracy=nan
2023-03-22 23:23:21,748 Node[0] Epoch[9] Batch [340-360]	Speed: 39995.07 samples/sec	accuracy=nan
2023-03-22 23:23:23,382 Node[0] Epoch[9] Batch [360-380]	Speed: 39948.79 samples/sec	accuracy=nan
2023-03-22 23:23:24,360 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:24,361 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:24,361 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:24,361 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:24,361 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:24,361 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:24,361 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:24,361 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:24,361 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:24,361 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:24,361 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:24,361 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:24,361 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:24,362 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:24,362 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545404361, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 10}}
2023-03-22 23:23:24,362 Node[0] Epoch[9] Time cost=32.109
:::MLLOG {"namespace": "", "time_ms": 1679545404362, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39900.961044487245}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1679545404363, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 11}}
2023-03-22 23:23:24,363 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:26,077 Node[0] Epoch[10] Batch [0-20]	Speed: 39969.86 samples/sec	accuracy=nan
2023-03-22 23:23:27,712 Node[0] Epoch[10] Batch [20-40]	Speed: 39926.06 samples/sec	accuracy=nan
2023-03-22 23:23:29,342 Node[0] Epoch[10] Batch [40-60]	Speed: 40055.09 samples/sec	accuracy=nan
2023-03-22 23:23:30,975 Node[0] Epoch[10] Batch [60-80]	Speed: 39955.42 samples/sec	accuracy=nan
2023-03-22 23:23:32,613 Node[0] Epoch[10] Batch [80-100]	Speed: 39868.68 samples/sec	accuracy=nan
2023-03-22 23:23:34,241 Node[0] Epoch[10] Batch [100-120]	Speed: 40105.07 samples/sec	accuracy=nan
2023-03-22 23:23:35,879 Node[0] Epoch[10] Batch [120-140]	Speed: 39849.56 samples/sec	accuracy=nan
2023-03-22 23:23:37,506 Node[0] Epoch[10] Batch [140-160]	Speed: 40111.84 samples/sec	accuracy=nan
2023-03-22 23:23:39,143 Node[0] Epoch[10] Batch [160-180]	Speed: 39876.02 samples/sec	accuracy=nan
2023-03-22 23:23:40,776 Node[0] Epoch[10] Batch [180-200]	Speed: 39974.18 samples/sec	accuracy=nan
2023-03-22 23:23:42,410 Node[0] Epoch[10] Batch [200-220]	Speed: 39969.41 samples/sec	accuracy=nan
2023-03-22 23:23:44,051 Node[0] Epoch[10] Batch [220-240]	Speed: 39767.94 samples/sec	accuracy=nan
2023-03-22 23:23:45,682 Node[0] Epoch[10] Batch [240-260]	Speed: 40016.73 samples/sec	accuracy=nan
2023-03-22 23:23:47,313 Node[0] Epoch[10] Batch [260-280]	Speed: 40027.15 samples/sec	accuracy=nan
2023-03-22 23:23:48,950 Node[0] Epoch[10] Batch [280-300]	Speed: 39889.56 samples/sec	accuracy=nan
2023-03-22 23:23:50,587 Node[0] Epoch[10] Batch [300-320]	Speed: 39882.95 samples/sec	accuracy=nan
2023-03-22 23:23:52,221 Node[0] Epoch[10] Batch [320-340]	Speed: 39934.01 samples/sec	accuracy=nan
2023-03-22 23:23:53,855 Node[0] Epoch[10] Batch [340-360]	Speed: 39963.06 samples/sec	accuracy=nan
2023-03-22 23:23:55,486 Node[0] Epoch[10] Batch [360-380]	Speed: 40012.30 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679545436384, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 11}}
2023-03-22 23:23:56,385 Node[0] Epoch[10] Time cost=32.022
:::MLLOG {"namespace": "", "time_ms": 1679545436385, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40008.66312289161}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679545436462, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 11}}
2023-03-22 23:23:57,250 Node[0] Epoch[10] Validation-accuracy=0.502080
2023-03-22 23:23:57,250 Node[0] Epoch[10] Validation-correct-count=1569.000000
2023-03-22 23:23:57,250 Node[0] Epoch[10] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679545437297, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1679545437297, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.498, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 11}}
2023-03-22 23:23:57,297 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:57,297 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545437298, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1679545437298, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 12, "epoch_count": 4}}
2023-03-22 23:23:57,297 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:57,297 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:57,297 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:57,297 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:57,298 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:57,297 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:57,297 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:57,297 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:57,298 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:57,297 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:57,298 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:57,297 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:57,297 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545437298, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 12}}
2023-03-22 23:23:57,298 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:23:58,941 Node[0] Epoch[11] Batch [0-20]	Speed: 40031.58 samples/sec	accuracy=nan
2023-03-22 23:24:00,577 Node[0] Epoch[11] Batch [20-40]	Speed: 39913.95 samples/sec	accuracy=nan
2023-03-22 23:24:02,206 Node[0] Epoch[11] Batch [40-60]	Speed: 40065.01 samples/sec	accuracy=nan
2023-03-22 23:24:03,840 Node[0] Epoch[11] Batch [60-80]	Speed: 39948.23 samples/sec	accuracy=nan
2023-03-22 23:24:05,476 Node[0] Epoch[11] Batch [80-100]	Speed: 39904.57 samples/sec	accuracy=nan
2023-03-22 23:24:07,111 Node[0] Epoch[11] Batch [100-120]	Speed: 39924.06 samples/sec	accuracy=nan
2023-03-22 23:24:08,739 Node[0] Epoch[11] Batch [120-140]	Speed: 40088.84 samples/sec	accuracy=nan
2023-03-22 23:24:10,374 Node[0] Epoch[11] Batch [140-160]	Speed: 39928.95 samples/sec	accuracy=nan
2023-03-22 23:24:12,006 Node[0] Epoch[11] Batch [160-180]	Speed: 40006.25 samples/sec	accuracy=nan
2023-03-22 23:24:13,641 Node[0] Epoch[11] Batch [180-200]	Speed: 39933.72 samples/sec	accuracy=nan
2023-03-22 23:24:15,275 Node[0] Epoch[11] Batch [200-220]	Speed: 39951.00 samples/sec	accuracy=nan
2023-03-22 23:24:16,907 Node[0] Epoch[11] Batch [220-240]	Speed: 39993.40 samples/sec	accuracy=nan
2023-03-22 23:24:18,537 Node[0] Epoch[11] Batch [240-260]	Speed: 40062.97 samples/sec	accuracy=nan
2023-03-22 23:24:20,170 Node[0] Epoch[11] Batch [260-280]	Speed: 39965.95 samples/sec	accuracy=nan
2023-03-22 23:24:21,799 Node[0] Epoch[11] Batch [280-300]	Speed: 40060.73 samples/sec	accuracy=nan
2023-03-22 23:24:23,432 Node[0] Epoch[11] Batch [300-320]	Speed: 39983.95 samples/sec	accuracy=nan
2023-03-22 23:24:25,067 Node[0] Epoch[11] Batch [320-340]	Speed: 39928.83 samples/sec	accuracy=nan
2023-03-22 23:24:26,696 Node[0] Epoch[11] Batch [340-360]	Speed: 40080.54 samples/sec	accuracy=nan
2023-03-22 23:24:28,330 Node[0] Epoch[11] Batch [360-380]	Speed: 39937.55 samples/sec	accuracy=nan
2023-03-22 23:24:29,306 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:24:29,306 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:24:29,306 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:24:29,306 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:24:29,306 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:24:29,307 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:24:29,306 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:24:29,306 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:24:29,307 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:24:29,307 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:24:29,307 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:24:29,307 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:24:29,307 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:24:29,307 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545469307, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 12}}
2023-03-22 23:24:29,308 Node[0] Epoch[11] Time cost=32.010
:::MLLOG {"namespace": "", "time_ms": 1679545469308, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40024.44034026887}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 12}}
2023-03-22 23:24:29,308 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545469308, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 13}}
2023-03-22 23:24:29,308 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:24:31,026 Node[0] Epoch[12] Batch [0-20]	Speed: 39873.25 samples/sec	accuracy=nan
2023-03-22 23:24:32,655 Node[0] Epoch[12] Batch [20-40]	Speed: 40072.16 samples/sec	accuracy=nan
2023-03-22 23:24:34,286 Node[0] Epoch[12] Batch [40-60]	Speed: 40028.20 samples/sec	accuracy=nan
2023-03-22 23:24:35,922 Node[0] Epoch[12] Batch [60-80]	Speed: 39894.39 samples/sec	accuracy=nan
2023-03-22 23:24:37,552 Node[0] Epoch[12] Batch [80-100]	Speed: 40063.93 samples/sec	accuracy=nan
2023-03-22 23:24:39,187 Node[0] Epoch[12] Batch [100-120]	Speed: 39930.27 samples/sec	accuracy=nan
2023-03-22 23:24:40,815 Node[0] Epoch[12] Batch [120-140]	Speed: 40082.87 samples/sec	accuracy=nan
2023-03-22 23:24:42,452 Node[0] Epoch[12] Batch [140-160]	Speed: 39894.13 samples/sec	accuracy=nan
2023-03-22 23:24:44,088 Node[0] Epoch[12] Batch [160-180]	Speed: 39884.37 samples/sec	accuracy=nan
2023-03-22 23:24:45,718 Node[0] Epoch[12] Batch [180-200]	Speed: 40055.09 samples/sec	accuracy=nan
2023-03-22 23:24:47,355 Node[0] Epoch[12] Batch [200-220]	Speed: 39874.61 samples/sec	accuracy=nan
2023-03-22 23:24:48,987 Node[0] Epoch[12] Batch [220-240]	Speed: 40005.91 samples/sec	accuracy=nan
2023-03-22 23:24:50,620 Node[0] Epoch[12] Batch [240-260]	Speed: 39981.24 samples/sec	accuracy=nan
2023-03-22 23:24:52,255 Node[0] Epoch[12] Batch [260-280]	Speed: 39925.84 samples/sec	accuracy=nan
2023-03-22 23:24:53,890 Node[0] Epoch[12] Batch [280-300]	Speed: 39916.98 samples/sec	accuracy=nan
2023-03-22 23:24:55,524 Node[0] Epoch[12] Batch [300-320]	Speed: 39961.79 samples/sec	accuracy=nan
2023-03-22 23:24:57,157 Node[0] Epoch[12] Batch [320-340]	Speed: 39979.97 samples/sec	accuracy=nan
2023-03-22 23:24:58,790 Node[0] Epoch[12] Batch [340-360]	Speed: 39973.41 samples/sec	accuracy=nan
2023-03-22 23:25:00,431 Node[0] Epoch[12] Batch [360-380]	Speed: 39781.11 samples/sec	accuracy=nan
2023-03-22 23:25:01,324 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:01,324 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:01,324 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:01,324 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:01,325 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:01,325 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:01,325 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:01,325 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:01,325 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:01,325 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:01,325 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:01,325 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:01,325 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:01,325 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545501325, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 13}}
2023-03-22 23:25:01,326 Node[0] Epoch[12] Time cost=32.018
:::MLLOG {"namespace": "", "time_ms": 1679545501326, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40014.316208676355}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 13}}
2023-03-22 23:25:01,326 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545501326, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 14}}
2023-03-22 23:25:01,326 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:03,043 Node[0] Epoch[13] Batch [0-20]	Speed: 39965.91 samples/sec	accuracy=nan
2023-03-22 23:25:04,677 Node[0] Epoch[13] Batch [20-40]	Speed: 39960.59 samples/sec	accuracy=nan
2023-03-22 23:25:06,309 Node[0] Epoch[13] Batch [40-60]	Speed: 39994.50 samples/sec	accuracy=nan
2023-03-22 23:25:07,941 Node[0] Epoch[13] Batch [60-80]	Speed: 40002.53 samples/sec	accuracy=nan
2023-03-22 23:25:09,573 Node[0] Epoch[13] Batch [80-100]	Speed: 40001.78 samples/sec	accuracy=nan
2023-03-22 23:25:11,211 Node[0] Epoch[13] Batch [100-120]	Speed: 39851.78 samples/sec	accuracy=nan
2023-03-22 23:25:12,845 Node[0] Epoch[13] Batch [120-140]	Speed: 39941.51 samples/sec	accuracy=nan
2023-03-22 23:25:14,482 Node[0] Epoch[13] Batch [140-160]	Speed: 39876.68 samples/sec	accuracy=nan
2023-03-22 23:25:16,117 Node[0] Epoch[13] Batch [160-180]	Speed: 39931.23 samples/sec	accuracy=nan
2023-03-22 23:25:17,750 Node[0] Epoch[13] Batch [180-200]	Speed: 39968.88 samples/sec	accuracy=nan
2023-03-22 23:25:19,386 Node[0] Epoch[13] Batch [200-220]	Speed: 39921.69 samples/sec	accuracy=nan
2023-03-22 23:25:21,019 Node[0] Epoch[13] Batch [220-240]	Speed: 39967.38 samples/sec	accuracy=nan
2023-03-22 23:25:22,653 Node[0] Epoch[13] Batch [240-260]	Speed: 39946.86 samples/sec	accuracy=nan
2023-03-22 23:25:24,281 Node[0] Epoch[13] Batch [260-280]	Speed: 40108.50 samples/sec	accuracy=nan
2023-03-22 23:25:25,917 Node[0] Epoch[13] Batch [280-300]	Speed: 39885.72 samples/sec	accuracy=nan
2023-03-22 23:25:27,552 Node[0] Epoch[13] Batch [300-320]	Speed: 39936.06 samples/sec	accuracy=nan
2023-03-22 23:25:29,184 Node[0] Epoch[13] Batch [320-340]	Speed: 40001.61 samples/sec	accuracy=nan
2023-03-22 23:25:30,819 Node[0] Epoch[13] Batch [340-360]	Speed: 39931.93 samples/sec	accuracy=nan
2023-03-22 23:25:32,453 Node[0] Epoch[13] Batch [360-380]	Speed: 39937.25 samples/sec	accuracy=nan
2023-03-22 23:25:33,431 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:33,431 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:33,431 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:33,431 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:33,431 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:33,431 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:33,431 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:33,431 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:33,431 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:33,431 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:33,431 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545533431, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 14}}
2023-03-22 23:25:33,432 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:33,432 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:33,432 Node[0] Epoch[13] Time cost=32.106
2023-03-22 23:25:33,432 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:33,432 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545533432, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39904.77126165836}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1679545533432, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 15}}
2023-03-22 23:25:33,433 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:25:35,148 Node[0] Epoch[14] Batch [0-20]	Speed: 39954.11 samples/sec	accuracy=nan
2023-03-22 23:25:36,782 Node[0] Epoch[14] Batch [20-40]	Speed: 39951.45 samples/sec	accuracy=nan
2023-03-22 23:25:38,418 Node[0] Epoch[14] Batch [40-60]	Speed: 39908.48 samples/sec	accuracy=nan
2023-03-22 23:25:40,051 Node[0] Epoch[14] Batch [60-80]	Speed: 39983.95 samples/sec	accuracy=nan
2023-03-22 23:25:41,688 Node[0] Epoch[14] Batch [80-100]	Speed: 39869.70 samples/sec	accuracy=nan
2023-03-22 23:25:43,328 Node[0] Epoch[14] Batch [100-120]	Speed: 39813.43 samples/sec	accuracy=nan
2023-03-22 23:25:44,961 Node[0] Epoch[14] Batch [120-140]	Speed: 39963.35 samples/sec	accuracy=nan
2023-03-22 23:25:46,592 Node[0] Epoch[14] Batch [140-160]	Speed: 40031.93 samples/sec	accuracy=nan
2023-03-22 23:25:48,230 Node[0] Epoch[14] Batch [160-180]	Speed: 39850.02 samples/sec	accuracy=nan
2023-03-22 23:25:49,862 Node[0] Epoch[14] Batch [180-200]	Speed: 39998.31 samples/sec	accuracy=nan
2023-03-22 23:25:51,497 Node[0] Epoch[14] Batch [200-220]	Speed: 39930.54 samples/sec	accuracy=nan
2023-03-22 23:25:53,131 Node[0] Epoch[14] Batch [220-240]	Speed: 39947.11 samples/sec	accuracy=nan
2023-03-22 23:25:54,764 Node[0] Epoch[14] Batch [240-260]	Speed: 39981.32 samples/sec	accuracy=nan
2023-03-22 23:25:56,399 Node[0] Epoch[14] Batch [260-280]	Speed: 39912.93 samples/sec	accuracy=nan
2023-03-22 23:25:58,033 Node[0] Epoch[14] Batch [280-300]	Speed: 39951.81 samples/sec	accuracy=nan
2023-03-22 23:25:59,664 Node[0] Epoch[14] Batch [300-320]	Speed: 40025.60 samples/sec	accuracy=nan
2023-03-22 23:26:01,300 Node[0] Epoch[14] Batch [320-340]	Speed: 39908.25 samples/sec	accuracy=nan
2023-03-22 23:26:02,936 Node[0] Epoch[14] Batch [340-360]	Speed: 39906.19 samples/sec	accuracy=nan
2023-03-22 23:26:04,573 Node[0] Epoch[14] Batch [360-380]	Speed: 39871.66 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679545565469, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 15}}
2023-03-22 23:26:05,470 Node[0] Epoch[14] Time cost=32.037
:::MLLOG {"namespace": "", "time_ms": 1679545565470, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39990.181015331626}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1679545565547, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 15}}
2023-03-22 23:26:06,261 Node[0] Epoch[14] Validation-accuracy=0.602880
2023-03-22 23:26:06,261 Node[0] Epoch[14] Validation-correct-count=1884.000000
2023-03-22 23:26:06,261 Node[0] Epoch[14] Validation-total-count=3125.000000
2023-03-22 23:26:06,382 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:06,382 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:06,382 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545566382, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
2023-03-22 23:26:06,382 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:06,382 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:06,382 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545566383, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.605, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 15}}
2023-03-22 23:26:06,382 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:06,382 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:06,382 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:06,382 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:06,382 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:06,382 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:06,382 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545566383, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 12}}
2023-03-22 23:26:06,382 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:06,382 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545566383, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 16, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1679545566383, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 16}}
2023-03-22 23:26:06,383 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:08,030 Node[0] Epoch[15] Batch [0-20]	Speed: 39846.71 samples/sec	accuracy=nan
2023-03-22 23:26:09,660 Node[0] Epoch[15] Batch [20-40]	Speed: 40038.17 samples/sec	accuracy=nan
2023-03-22 23:26:11,294 Node[0] Epoch[15] Batch [40-60]	Speed: 39955.48 samples/sec	accuracy=nan
2023-03-22 23:26:12,924 Node[0] Epoch[15] Batch [60-80]	Speed: 40057.37 samples/sec	accuracy=nan
2023-03-22 23:26:14,558 Node[0] Epoch[15] Batch [80-100]	Speed: 39944.95 samples/sec	accuracy=nan
2023-03-22 23:26:16,193 Node[0] Epoch[15] Batch [100-120]	Speed: 39937.65 samples/sec	accuracy=nan
2023-03-22 23:26:17,824 Node[0] Epoch[15] Batch [120-140]	Speed: 40012.65 samples/sec	accuracy=nan
2023-03-22 23:26:19,456 Node[0] Epoch[15] Batch [140-160]	Speed: 40004.99 samples/sec	accuracy=nan
2023-03-22 23:26:21,091 Node[0] Epoch[15] Batch [160-180]	Speed: 39933.97 samples/sec	accuracy=nan
2023-03-22 23:26:22,726 Node[0] Epoch[15] Batch [180-200]	Speed: 39906.81 samples/sec	accuracy=nan
2023-03-22 23:26:24,358 Node[0] Epoch[15] Batch [200-220]	Speed: 40005.45 samples/sec	accuracy=nan
2023-03-22 23:26:25,989 Node[0] Epoch[15] Batch [220-240]	Speed: 40022.69 samples/sec	accuracy=nan
2023-03-22 23:26:27,625 Node[0] Epoch[15] Batch [240-260]	Speed: 39911.79 samples/sec	accuracy=nan
2023-03-22 23:26:29,261 Node[0] Epoch[15] Batch [260-280]	Speed: 39889.24 samples/sec	accuracy=nan
2023-03-22 23:26:30,892 Node[0] Epoch[15] Batch [280-300]	Speed: 40032.39 samples/sec	accuracy=nan
2023-03-22 23:26:32,528 Node[0] Epoch[15] Batch [300-320]	Speed: 39889.95 samples/sec	accuracy=nan
2023-03-22 23:26:34,162 Node[0] Epoch[15] Batch [320-340]	Speed: 39960.77 samples/sec	accuracy=nan
2023-03-22 23:26:35,797 Node[0] Epoch[15] Batch [340-360]	Speed: 39934.12 samples/sec	accuracy=nan
2023-03-22 23:26:37,432 Node[0] Epoch[15] Batch [360-380]	Speed: 39915.77 samples/sec	accuracy=nan
2023-03-22 23:26:38,412 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:38,412 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:38,412 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:38,412 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:38,412 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:38,413 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:38,412 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:38,412 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:38,413 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:38,413 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:38,413 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:38,413 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:38,413 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:38,413 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:38,413 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545598413, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 16}}
2023-03-22 23:26:38,414 Node[0] Epoch[15] Time cost=32.031
:::MLLOG {"namespace": "", "time_ms": 1679545598414, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39997.64486843486}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679545598415, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 17}}
2023-03-22 23:26:38,415 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:26:40,126 Node[0] Epoch[16] Batch [0-20]	Speed: 40008.17 samples/sec	accuracy=nan
2023-03-22 23:26:41,760 Node[0] Epoch[16] Batch [20-40]	Speed: 39935.12 samples/sec	accuracy=nan
2023-03-22 23:26:43,397 Node[0] Epoch[16] Batch [40-60]	Speed: 39883.21 samples/sec	accuracy=nan
2023-03-22 23:26:45,028 Node[0] Epoch[16] Batch [60-80]	Speed: 40023.15 samples/sec	accuracy=nan
2023-03-22 23:26:46,662 Node[0] Epoch[16] Batch [80-100]	Speed: 39954.65 samples/sec	accuracy=nan
2023-03-22 23:26:48,298 Node[0] Epoch[16] Batch [100-120]	Speed: 39901.71 samples/sec	accuracy=nan
2023-03-22 23:26:49,935 Node[0] Epoch[16] Batch [120-140]	Speed: 39887.09 samples/sec	accuracy=nan
2023-03-22 23:26:51,561 Node[0] Epoch[16] Batch [140-160]	Speed: 40136.55 samples/sec	accuracy=nan
2023-03-22 23:26:53,197 Node[0] Epoch[16] Batch [160-180]	Speed: 39904.61 samples/sec	accuracy=nan
2023-03-22 23:26:54,828 Node[0] Epoch[16] Batch [180-200]	Speed: 40032.69 samples/sec	accuracy=nan
2023-03-22 23:26:56,463 Node[0] Epoch[16] Batch [200-220]	Speed: 39927.58 samples/sec	accuracy=nan
2023-03-22 23:26:58,099 Node[0] Epoch[16] Batch [220-240]	Speed: 39896.55 samples/sec	accuracy=nan
2023-03-22 23:26:59,733 Node[0] Epoch[16] Batch [240-260]	Speed: 39947.47 samples/sec	accuracy=nan
2023-03-22 23:27:01,363 Node[0] Epoch[16] Batch [260-280]	Speed: 40055.14 samples/sec	accuracy=nan
2023-03-22 23:27:03,002 Node[0] Epoch[16] Batch [280-300]	Speed: 39824.19 samples/sec	accuracy=nan
2023-03-22 23:27:04,635 Node[0] Epoch[16] Batch [300-320]	Speed: 39974.15 samples/sec	accuracy=nan
2023-03-22 23:27:06,274 Node[0] Epoch[16] Batch [320-340]	Speed: 39834.53 samples/sec	accuracy=nan
2023-03-22 23:27:07,905 Node[0] Epoch[16] Batch [340-360]	Speed: 40010.28 samples/sec	accuracy=nan
2023-03-22 23:27:09,542 Node[0] Epoch[16] Batch [360-380]	Speed: 39892.44 samples/sec	accuracy=nan
2023-03-22 23:27:10,436 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:10,437 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:10,437 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:10,437 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:10,437 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:10,437 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:10,437 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:10,437 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:10,437 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:10,437 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:10,437 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:10,437 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:10,437 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545630437, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 17}}
2023-03-22 23:27:10,438 Node[0] Epoch[16] Time cost=32.023
:::MLLOG {"namespace": "", "time_ms": 1679545630438, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40007.4001484031}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 17}}
2023-03-22 23:27:10,438 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:10,438 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545630438, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 18}}
2023-03-22 23:27:10,439 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:12,156 Node[0] Epoch[17] Batch [0-20]	Speed: 39949.67 samples/sec	accuracy=nan
2023-03-22 23:27:13,794 Node[0] Epoch[17] Batch [20-40]	Speed: 39854.81 samples/sec	accuracy=nan
2023-03-22 23:27:15,430 Node[0] Epoch[17] Batch [40-60]	Speed: 39900.24 samples/sec	accuracy=nan
2023-03-22 23:27:17,063 Node[0] Epoch[17] Batch [60-80]	Speed: 39987.27 samples/sec	accuracy=nan
2023-03-22 23:27:18,696 Node[0] Epoch[17] Batch [80-100]	Speed: 39960.85 samples/sec	accuracy=nan
2023-03-22 23:27:20,332 Node[0] Epoch[17] Batch [100-120]	Speed: 39913.50 samples/sec	accuracy=nan
2023-03-22 23:27:21,964 Node[0] Epoch[17] Batch [120-140]	Speed: 39997.03 samples/sec	accuracy=nan
2023-03-22 23:27:23,598 Node[0] Epoch[17] Batch [140-160]	Speed: 39958.99 samples/sec	accuracy=nan
2023-03-22 23:27:25,229 Node[0] Epoch[17] Batch [160-180]	Speed: 40006.18 samples/sec	accuracy=nan
2023-03-22 23:27:26,870 Node[0] Epoch[17] Batch [180-200]	Speed: 39796.26 samples/sec	accuracy=nan
2023-03-22 23:27:28,506 Node[0] Epoch[17] Batch [200-220]	Speed: 39902.63 samples/sec	accuracy=nan
2023-03-22 23:27:30,140 Node[0] Epoch[17] Batch [220-240]	Speed: 39948.46 samples/sec	accuracy=nan
2023-03-22 23:27:31,771 Node[0] Epoch[17] Batch [240-260]	Speed: 40019.00 samples/sec	accuracy=nan
2023-03-22 23:27:33,406 Node[0] Epoch[17] Batch [260-280]	Speed: 39918.85 samples/sec	accuracy=nan
2023-03-22 23:27:35,042 Node[0] Epoch[17] Batch [280-300]	Speed: 39905.06 samples/sec	accuracy=nan
2023-03-22 23:27:36,675 Node[0] Epoch[17] Batch [300-320]	Speed: 39971.54 samples/sec	accuracy=nan
2023-03-22 23:27:38,310 Node[0] Epoch[17] Batch [320-340]	Speed: 39940.65 samples/sec	accuracy=nan
2023-03-22 23:27:39,943 Node[0] Epoch[17] Batch [340-360]	Speed: 39971.18 samples/sec	accuracy=nan
2023-03-22 23:27:41,579 Node[0] Epoch[17] Batch [360-380]	Speed: 39902.54 samples/sec	accuracy=nan
2023-03-22 23:27:42,553 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:42,553 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:42,553 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:42,554 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:42,553 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:42,554 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:42,554 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:42,554 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:42,554 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:42,554 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:42,554 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:42,554 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:42,554 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:42,554 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545662554, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 18}}
2023-03-22 23:27:42,555 Node[0] Epoch[17] Time cost=32.116
:::MLLOG {"namespace": "", "time_ms": 1679545662555, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39891.24723201036}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 18}}
2023-03-22 23:27:42,555 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545662555, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 19}}
2023-03-22 23:27:42,556 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:27:44,275 Node[0] Epoch[18] Batch [0-20]	Speed: 39856.64 samples/sec	accuracy=nan
2023-03-22 23:27:45,912 Node[0] Epoch[18] Batch [20-40]	Speed: 39856.03 samples/sec	accuracy=nan
2023-03-22 23:27:47,544 Node[0] Epoch[18] Batch [40-60]	Speed: 40003.28 samples/sec	accuracy=nan
2023-03-22 23:27:49,177 Node[0] Epoch[18] Batch [60-80]	Speed: 39992.83 samples/sec	accuracy=nan
2023-03-22 23:27:50,810 Node[0] Epoch[18] Batch [80-100]	Speed: 39977.14 samples/sec	accuracy=nan
2023-03-22 23:27:52,446 Node[0] Epoch[18] Batch [100-120]	Speed: 39888.14 samples/sec	accuracy=nan
2023-03-22 23:27:54,077 Node[0] Epoch[18] Batch [120-140]	Speed: 40023.63 samples/sec	accuracy=nan
2023-03-22 23:27:55,712 Node[0] Epoch[18] Batch [140-160]	Speed: 39934.69 samples/sec	accuracy=nan
2023-03-22 23:27:57,349 Node[0] Epoch[18] Batch [160-180]	Speed: 39883.13 samples/sec	accuracy=nan
2023-03-22 23:27:58,977 Node[0] Epoch[18] Batch [180-200]	Speed: 40099.96 samples/sec	accuracy=nan
2023-03-22 23:28:00,613 Node[0] Epoch[18] Batch [200-220]	Speed: 39896.10 samples/sec	accuracy=nan
2023-03-22 23:28:02,245 Node[0] Epoch[18] Batch [220-240]	Speed: 39999.23 samples/sec	accuracy=nan
2023-03-22 23:28:03,879 Node[0] Epoch[18] Batch [240-260]	Speed: 39937.32 samples/sec	accuracy=nan
2023-03-22 23:28:05,515 Node[0] Epoch[18] Batch [260-280]	Speed: 39913.04 samples/sec	accuracy=nan
2023-03-22 23:28:07,150 Node[0] Epoch[18] Batch [280-300]	Speed: 39935.45 samples/sec	accuracy=nan
2023-03-22 23:28:08,783 Node[0] Epoch[18] Batch [300-320]	Speed: 39969.36 samples/sec	accuracy=nan
2023-03-22 23:28:10,418 Node[0] Epoch[18] Batch [320-340]	Speed: 39927.37 samples/sec	accuracy=nan
2023-03-22 23:28:12,050 Node[0] Epoch[18] Batch [340-360]	Speed: 40006.82 samples/sec	accuracy=nan
2023-03-22 23:28:13,686 Node[0] Epoch[18] Batch [360-380]	Speed: 39901.81 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679545694579, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 19}}
2023-03-22 23:28:14,580 Node[0] Epoch[18] Time cost=32.025
:::MLLOG {"namespace": "", "time_ms": 1679545694580, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40005.8137986218}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679545694657, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 19}}
2023-03-22 23:28:15,375 Node[0] Epoch[18] Validation-accuracy=0.647360
2023-03-22 23:28:15,375 Node[0] Epoch[18] Validation-correct-count=2023.000000
2023-03-22 23:28:15,375 Node[0] Epoch[18] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679545695491, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1679545695492, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.6475, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 19}}
2023-03-22 23:28:15,492 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:15,492 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545695492, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1679545695492, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 20, "epoch_count": 4}}
2023-03-22 23:28:15,492 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:15,492 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:15,492 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:15,492 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:15,492 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:15,492 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:15,492 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:15,492 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:15,492 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:15,492 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:15,492 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:15,492 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:15,492 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545695492, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 20}}
2023-03-22 23:28:15,492 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:17,132 Node[0] Epoch[19] Batch [0-20]	Speed: 39982.21 samples/sec	accuracy=nan
2023-03-22 23:28:18,769 Node[0] Epoch[19] Batch [20-40]	Speed: 39891.33 samples/sec	accuracy=nan
2023-03-22 23:28:20,400 Node[0] Epoch[19] Batch [40-60]	Speed: 40016.25 samples/sec	accuracy=nan
2023-03-22 23:28:22,031 Node[0] Epoch[19] Batch [60-80]	Speed: 40017.12 samples/sec	accuracy=nan
2023-03-22 23:28:23,667 Node[0] Epoch[19] Batch [80-100]	Speed: 39902.31 samples/sec	accuracy=nan
2023-03-22 23:28:25,303 Node[0] Epoch[19] Batch [100-120]	Speed: 39914.19 samples/sec	accuracy=nan
2023-03-22 23:28:26,937 Node[0] Epoch[19] Batch [120-140]	Speed: 39956.01 samples/sec	accuracy=nan
2023-03-22 23:28:28,568 Node[0] Epoch[19] Batch [140-160]	Speed: 40003.28 samples/sec	accuracy=nan
2023-03-22 23:28:30,200 Node[0] Epoch[19] Batch [160-180]	Speed: 40019.39 samples/sec	accuracy=nan
2023-03-22 23:28:31,835 Node[0] Epoch[19] Batch [180-200]	Speed: 39911.57 samples/sec	accuracy=nan
2023-03-22 23:28:33,470 Node[0] Epoch[19] Batch [200-220]	Speed: 39938.40 samples/sec	accuracy=nan
2023-03-22 23:28:35,102 Node[0] Epoch[19] Batch [220-240]	Speed: 39985.02 samples/sec	accuracy=nan
2023-03-22 23:28:36,734 Node[0] Epoch[19] Batch [240-260]	Speed: 40010.01 samples/sec	accuracy=nan
2023-03-22 23:28:38,371 Node[0] Epoch[19] Batch [260-280]	Speed: 39866.55 samples/sec	accuracy=nan
2023-03-22 23:28:40,004 Node[0] Epoch[19] Batch [280-300]	Speed: 39978.61 samples/sec	accuracy=nan
2023-03-22 23:28:41,642 Node[0] Epoch[19] Batch [300-320]	Speed: 39867.14 samples/sec	accuracy=nan
2023-03-22 23:28:43,272 Node[0] Epoch[19] Batch [320-340]	Speed: 40053.92 samples/sec	accuracy=nan
2023-03-22 23:28:44,906 Node[0] Epoch[19] Batch [340-360]	Speed: 39929.14 samples/sec	accuracy=nan
2023-03-22 23:28:46,539 Node[0] Epoch[19] Batch [360-380]	Speed: 39975.69 samples/sec	accuracy=nan
2023-03-22 23:28:47,519 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:47,520 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:47,520 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:47,520 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:47,520 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:47,520 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:47,520 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:47,520 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:47,520 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:47,520 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:47,520 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:47,520 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:47,520 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:47,521 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545727520, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 20}}
2023-03-22 23:28:47,521 Node[0] Epoch[19] Time cost=32.029
2023-03-22 23:28:47,521 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545727521, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 40000.71783853713}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1679545727521, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 21}}
2023-03-22 23:28:47,521 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:28:49,241 Node[0] Epoch[20] Batch [0-20]	Speed: 39833.15 samples/sec	accuracy=nan
2023-03-22 23:28:50,871 Node[0] Epoch[20] Batch [20-40]	Speed: 40059.49 samples/sec	accuracy=nan
2023-03-22 23:28:52,506 Node[0] Epoch[20] Batch [40-60]	Speed: 39927.21 samples/sec	accuracy=nan
2023-03-22 23:28:54,143 Node[0] Epoch[20] Batch [60-80]	Speed: 39875.15 samples/sec	accuracy=nan
2023-03-22 23:28:55,778 Node[0] Epoch[20] Batch [80-100]	Speed: 39919.57 samples/sec	accuracy=nan
2023-03-22 23:28:57,412 Node[0] Epoch[20] Batch [100-120]	Speed: 39969.91 samples/sec	accuracy=nan
2023-03-22 23:28:59,043 Node[0] Epoch[20] Batch [120-140]	Speed: 40020.13 samples/sec	accuracy=nan
2023-03-22 23:29:00,679 Node[0] Epoch[20] Batch [140-160]	Speed: 39891.33 samples/sec	accuracy=nan
2023-03-22 23:29:02,313 Node[0] Epoch[20] Batch [160-180]	Speed: 39944.67 samples/sec	accuracy=nan
2023-03-22 23:29:03,947 Node[0] Epoch[20] Batch [180-200]	Speed: 39967.55 samples/sec	accuracy=nan
2023-03-22 23:29:05,582 Node[0] Epoch[20] Batch [200-220]	Speed: 39912.35 samples/sec	accuracy=nan
2023-03-22 23:29:07,218 Node[0] Epoch[20] Batch [220-240]	Speed: 39912.13 samples/sec	accuracy=nan
2023-03-22 23:29:08,846 Node[0] Epoch[20] Batch [240-260]	Speed: 40089.70 samples/sec	accuracy=nan
2023-03-22 23:29:10,483 Node[0] Epoch[20] Batch [260-280]	Speed: 39877.05 samples/sec	accuracy=nan
2023-03-22 23:29:12,114 Node[0] Epoch[20] Batch [280-300]	Speed: 40024.23 samples/sec	accuracy=nan
2023-03-22 23:29:13,750 Node[0] Epoch[20] Batch [300-320]	Speed: 39913.27 samples/sec	accuracy=nan
2023-03-22 23:29:15,388 Node[0] Epoch[20] Batch [320-340]	Speed: 39842.11 samples/sec	accuracy=nan
2023-03-22 23:29:17,019 Node[0] Epoch[20] Batch [340-360]	Speed: 40036.54 samples/sec	accuracy=nan
2023-03-22 23:29:18,654 Node[0] Epoch[20] Batch [360-380]	Speed: 39931.72 samples/sec	accuracy=nan
2023-03-22 23:29:19,551 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:19,551 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:19,552 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:19,552 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:19,552 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:19,552 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:19,552 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:19,552 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:19,552 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:19,552 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:19,552 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:19,552 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:19,552 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545759552, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 21}}
2023-03-22 23:29:19,553 Node[0] Epoch[20] Time cost=32.031
:::MLLOG {"namespace": "", "time_ms": 1679545759553, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39997.212588463044}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 21}}
2023-03-22 23:29:19,553 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545759553, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 22}}
2023-03-22 23:29:19,553 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:19,553 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:21,272 Node[0] Epoch[21] Batch [0-20]	Speed: 39926.87 samples/sec	accuracy=nan
2023-03-22 23:29:22,905 Node[0] Epoch[21] Batch [20-40]	Speed: 39973.45 samples/sec	accuracy=nan
2023-03-22 23:29:24,543 Node[0] Epoch[21] Batch [40-60]	Speed: 39865.32 samples/sec	accuracy=nan
2023-03-22 23:29:26,179 Node[0] Epoch[21] Batch [60-80]	Speed: 39901.42 samples/sec	accuracy=nan
2023-03-22 23:29:27,810 Node[0] Epoch[21] Batch [80-100]	Speed: 40024.54 samples/sec	accuracy=nan
2023-03-22 23:29:29,444 Node[0] Epoch[21] Batch [100-120]	Speed: 39948.07 samples/sec	accuracy=nan
2023-03-22 23:29:31,079 Node[0] Epoch[21] Batch [120-140]	Speed: 39923.52 samples/sec	accuracy=nan
2023-03-22 23:29:32,714 Node[0] Epoch[21] Batch [140-160]	Speed: 39920.83 samples/sec	accuracy=nan
2023-03-22 23:29:34,345 Node[0] Epoch[21] Batch [160-180]	Speed: 40029.72 samples/sec	accuracy=nan
2023-03-22 23:29:35,979 Node[0] Epoch[21] Batch [180-200]	Speed: 39953.77 samples/sec	accuracy=nan
2023-03-22 23:29:37,613 Node[0] Epoch[21] Batch [200-220]	Speed: 39952.68 samples/sec	accuracy=nan
2023-03-22 23:29:39,247 Node[0] Epoch[21] Batch [220-240]	Speed: 39954.39 samples/sec	accuracy=nan
2023-03-22 23:29:40,879 Node[0] Epoch[21] Batch [240-260]	Speed: 39988.01 samples/sec	accuracy=nan
2023-03-22 23:29:42,514 Node[0] Epoch[21] Batch [260-280]	Speed: 39942.15 samples/sec	accuracy=nan
2023-03-22 23:29:44,147 Node[0] Epoch[21] Batch [280-300]	Speed: 39963.79 samples/sec	accuracy=nan
2023-03-22 23:29:45,778 Node[0] Epoch[21] Batch [300-320]	Speed: 40039.34 samples/sec	accuracy=nan
2023-03-22 23:29:47,420 Node[0] Epoch[21] Batch [320-340]	Speed: 39755.07 samples/sec	accuracy=nan
2023-03-22 23:29:49,054 Node[0] Epoch[21] Batch [340-360]	Speed: 39950.85 samples/sec	accuracy=nan
2023-03-22 23:29:50,688 Node[0] Epoch[21] Batch [360-380]	Speed: 39951.52 samples/sec	accuracy=nan
2023-03-22 23:29:51,665 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:51,665 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:51,665 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:51,665 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:51,665 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:51,665 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:51,665 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:51,665 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:51,665 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:51,665 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:51,666 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:51,666 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:51,666 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:51,666 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545791666, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 22}}
2023-03-22 23:29:51,667 Node[0] Epoch[21] Time cost=32.113
:::MLLOG {"namespace": "", "time_ms": 1679545791667, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39895.16429669273}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 22}}
2023-03-22 23:29:51,667 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545791667, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 23}}
2023-03-22 23:29:51,667 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:29:53,389 Node[0] Epoch[22] Batch [0-20]	Speed: 39779.00 samples/sec	accuracy=nan
2023-03-22 23:29:55,023 Node[0] Epoch[22] Batch [20-40]	Speed: 39964.60 samples/sec	accuracy=nan
2023-03-22 23:29:56,658 Node[0] Epoch[22] Batch [40-60]	Speed: 39916.02 samples/sec	accuracy=nan
2023-03-22 23:29:58,293 Node[0] Epoch[22] Batch [60-80]	Speed: 39922.04 samples/sec	accuracy=nan
2023-03-22 23:29:59,930 Node[0] Epoch[22] Batch [80-100]	Speed: 39878.26 samples/sec	accuracy=nan
2023-03-22 23:30:01,564 Node[0] Epoch[22] Batch [100-120]	Speed: 39950.65 samples/sec	accuracy=nan
2023-03-22 23:30:03,199 Node[0] Epoch[22] Batch [120-140]	Speed: 39936.89 samples/sec	accuracy=nan
2023-03-22 23:30:04,832 Node[0] Epoch[22] Batch [140-160]	Speed: 39979.07 samples/sec	accuracy=nan
2023-03-22 23:30:06,468 Node[0] Epoch[22] Batch [160-180]	Speed: 39899.24 samples/sec	accuracy=nan
2023-03-22 23:30:08,098 Node[0] Epoch[22] Batch [180-200]	Speed: 40044.91 samples/sec	accuracy=nan
2023-03-22 23:30:09,732 Node[0] Epoch[22] Batch [200-220]	Speed: 39942.22 samples/sec	accuracy=nan
2023-03-22 23:30:11,367 Node[0] Epoch[22] Batch [220-240]	Speed: 39943.57 samples/sec	accuracy=nan
2023-03-22 23:30:12,995 Node[0] Epoch[22] Batch [240-260]	Speed: 40094.71 samples/sec	accuracy=nan
2023-03-22 23:30:14,631 Node[0] Epoch[22] Batch [260-280]	Speed: 39892.71 samples/sec	accuracy=nan
2023-03-22 23:30:16,263 Node[0] Epoch[22] Batch [280-300]	Speed: 40013.88 samples/sec	accuracy=nan
2023-03-22 23:30:17,899 Node[0] Epoch[22] Batch [300-320]	Speed: 39883.92 samples/sec	accuracy=nan
2023-03-22 23:30:19,530 Node[0] Epoch[22] Batch [320-340]	Speed: 40026.07 samples/sec	accuracy=nan
2023-03-22 23:30:21,168 Node[0] Epoch[22] Batch [340-360]	Speed: 39848.23 samples/sec	accuracy=nan
2023-03-22 23:30:22,805 Node[0] Epoch[22] Batch [360-380]	Speed: 39879.14 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679545823700, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 23}}
2023-03-22 23:30:23,701 Node[0] Epoch[22] Time cost=32.034
:::MLLOG {"namespace": "", "time_ms": 1679545823701, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39994.308635714406}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679545823778, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 23}}
2023-03-22 23:30:24,537 Node[0] Epoch[22] Validation-accuracy=0.692160
2023-03-22 23:30:24,537 Node[0] Epoch[22] Validation-correct-count=2163.000000
2023-03-22 23:30:24,537 Node[0] Epoch[22] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679545824610, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679545824610, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.6991, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1679545824610, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 20}}
2023-03-22 23:30:24,610 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545824610, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 24, "epoch_count": 4}}
2023-03-22 23:30:24,610 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:24,610 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:24,610 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:24,610 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:24,610 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:24,610 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:24,610 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:24,610 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:24,610 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:24,610 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:24,610 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:24,610 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545824610, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 24}}
2023-03-22 23:30:24,610 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:24,611 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:24,610 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:26,253 Node[0] Epoch[23] Batch [0-20]	Speed: 39911.22 samples/sec	accuracy=nan
2023-03-22 23:30:27,888 Node[0] Epoch[23] Batch [20-40]	Speed: 39926.15 samples/sec	accuracy=nan
2023-03-22 23:30:29,517 Node[0] Epoch[23] Batch [40-60]	Speed: 40084.09 samples/sec	accuracy=nan
2023-03-22 23:30:31,152 Node[0] Epoch[23] Batch [60-80]	Speed: 39918.11 samples/sec	accuracy=nan
2023-03-22 23:30:32,789 Node[0] Epoch[23] Batch [80-100]	Speed: 39881.04 samples/sec	accuracy=nan
2023-03-22 23:30:34,420 Node[0] Epoch[23] Batch [100-120]	Speed: 40019.28 samples/sec	accuracy=nan
2023-03-22 23:30:36,055 Node[0] Epoch[23] Batch [120-140]	Speed: 39943.66 samples/sec	accuracy=nan
2023-03-22 23:30:37,691 Node[0] Epoch[23] Batch [140-160]	Speed: 39893.30 samples/sec	accuracy=nan
2023-03-22 23:30:39,326 Node[0] Epoch[23] Batch [160-180]	Speed: 39932.64 samples/sec	accuracy=nan
2023-03-22 23:30:40,958 Node[0] Epoch[23] Batch [180-200]	Speed: 39995.19 samples/sec	accuracy=nan
2023-03-22 23:30:42,587 Node[0] Epoch[23] Batch [200-220]	Speed: 40070.59 samples/sec	accuracy=nan
2023-03-22 23:30:44,222 Node[0] Epoch[23] Batch [220-240]	Speed: 39939.55 samples/sec	accuracy=nan
2023-03-22 23:30:45,854 Node[0] Epoch[23] Batch [240-260]	Speed: 39979.02 samples/sec	accuracy=nan
2023-03-22 23:30:47,487 Node[0] Epoch[23] Batch [260-280]	Speed: 39989.20 samples/sec	accuracy=nan
2023-03-22 23:30:49,123 Node[0] Epoch[23] Batch [280-300]	Speed: 39892.81 samples/sec	accuracy=nan
2023-03-22 23:30:50,760 Node[0] Epoch[23] Batch [300-320]	Speed: 39888.41 samples/sec	accuracy=nan
2023-03-22 23:30:52,392 Node[0] Epoch[23] Batch [320-340]	Speed: 39985.45 samples/sec	accuracy=nan
2023-03-22 23:30:54,028 Node[0] Epoch[23] Batch [340-360]	Speed: 39921.74 samples/sec	accuracy=nan
2023-03-22 23:30:55,661 Node[0] Epoch[23] Batch [360-380]	Speed: 39972.12 samples/sec	accuracy=nan
2023-03-22 23:30:56,640 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:56,640 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:56,640 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:56,640 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:56,640 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:56,640 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:56,640 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:56,640 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:56,640 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:56,641 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:56,640 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:56,641 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:56,641 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:56,641 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545856640, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 24}}
2023-03-22 23:30:56,641 Node[0] Epoch[23] Time cost=32.031
:::MLLOG {"namespace": "", "time_ms": 1679545856642, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39997.761573720534}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 24}}
2023-03-22 23:30:56,641 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545856642, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 25}}
2023-03-22 23:30:56,642 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:30:58,359 Node[0] Epoch[24] Batch [0-20]	Speed: 39939.88 samples/sec	accuracy=nan
2023-03-22 23:30:59,991 Node[0] Epoch[24] Batch [20-40]	Speed: 40010.07 samples/sec	accuracy=nan
2023-03-22 23:31:01,626 Node[0] Epoch[24] Batch [40-60]	Speed: 39918.47 samples/sec	accuracy=nan
2023-03-22 23:31:03,256 Node[0] Epoch[24] Batch [60-80]	Speed: 40035.95 samples/sec	accuracy=nan
2023-03-22 23:31:04,892 Node[0] Epoch[24] Batch [80-100]	Speed: 39918.82 samples/sec	accuracy=nan
2023-03-22 23:31:06,527 Node[0] Epoch[24] Batch [100-120]	Speed: 39909.25 samples/sec	accuracy=nan
2023-03-22 23:31:08,161 Node[0] Epoch[24] Batch [120-140]	Speed: 39961.03 samples/sec	accuracy=nan
2023-03-22 23:31:09,796 Node[0] Epoch[24] Batch [140-160]	Speed: 39923.29 samples/sec	accuracy=nan
2023-03-22 23:31:11,431 Node[0] Epoch[24] Batch [160-180]	Speed: 39937.68 samples/sec	accuracy=nan
2023-03-22 23:31:13,066 Node[0] Epoch[24] Batch [180-200]	Speed: 39916.61 samples/sec	accuracy=nan
2023-03-22 23:31:14,702 Node[0] Epoch[24] Batch [200-220]	Speed: 39908.56 samples/sec	accuracy=nan
2023-03-22 23:31:16,337 Node[0] Epoch[24] Batch [220-240]	Speed: 39930.20 samples/sec	accuracy=nan
2023-03-22 23:31:17,973 Node[0] Epoch[24] Batch [240-260]	Speed: 39904.08 samples/sec	accuracy=nan
2023-03-22 23:31:19,609 Node[0] Epoch[24] Batch [260-280]	Speed: 39901.89 samples/sec	accuracy=nan
2023-03-22 23:31:21,239 Node[0] Epoch[24] Batch [280-300]	Speed: 40048.77 samples/sec	accuracy=nan
2023-03-22 23:31:22,875 Node[0] Epoch[24] Batch [300-320]	Speed: 39883.64 samples/sec	accuracy=nan
2023-03-22 23:31:24,506 Node[0] Epoch[24] Batch [320-340]	Speed: 40031.87 samples/sec	accuracy=nan
2023-03-22 23:31:26,143 Node[0] Epoch[24] Batch [340-360]	Speed: 39881.41 samples/sec	accuracy=nan
2023-03-22 23:31:27,778 Node[0] Epoch[24] Batch [360-380]	Speed: 39922.30 samples/sec	accuracy=nan
2023-03-22 23:31:28,673 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:31:28,673 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:31:28,673 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:31:28,673 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:31:28,674 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:31:28,674 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:31:28,674 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:31:28,674 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:31:28,674 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:31:28,674 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:31:28,674 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:31:28,674 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:31:28,674 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:31:28,674 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:31:28,674 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545888674, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 25}}
2023-03-22 23:31:28,675 Node[0] Epoch[24] Time cost=32.033
:::MLLOG {"namespace": "", "time_ms": 1679545888675, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39995.73391626116}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1679545888675, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 26}}
2023-03-22 23:31:28,675 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:31:30,394 Node[0] Epoch[25] Batch [0-20]	Speed: 39908.11 samples/sec	accuracy=nan
2023-03-22 23:31:32,024 Node[0] Epoch[25] Batch [20-40]	Speed: 40060.27 samples/sec	accuracy=nan
2023-03-22 23:31:33,661 Node[0] Epoch[25] Batch [40-60]	Speed: 39865.46 samples/sec	accuracy=nan
2023-03-22 23:31:35,298 Node[0] Epoch[25] Batch [60-80]	Speed: 39879.05 samples/sec	accuracy=nan
2023-03-22 23:31:36,928 Node[0] Epoch[25] Batch [80-100]	Speed: 40063.21 samples/sec	accuracy=nan
2023-03-22 23:31:38,562 Node[0] Epoch[25] Batch [100-120]	Speed: 39954.14 samples/sec	accuracy=nan
2023-03-22 23:31:40,196 Node[0] Epoch[25] Batch [120-140]	Speed: 39934.79 samples/sec	accuracy=nan
2023-03-22 23:31:41,833 Node[0] Epoch[25] Batch [140-160]	Speed: 39888.81 samples/sec	accuracy=nan
2023-03-22 23:31:43,467 Node[0] Epoch[25] Batch [160-180]	Speed: 39952.86 samples/sec	accuracy=nan
2023-03-22 23:31:45,104 Node[0] Epoch[25] Batch [180-200]	Speed: 39880.92 samples/sec	accuracy=nan
2023-03-22 23:31:46,740 Node[0] Epoch[25] Batch [200-220]	Speed: 39883.83 samples/sec	accuracy=nan
2023-03-22 23:31:48,375 Node[0] Epoch[25] Batch [220-240]	Speed: 39941.73 samples/sec	accuracy=nan
2023-03-22 23:31:50,004 Node[0] Epoch[25] Batch [240-260]	Speed: 40063.33 samples/sec	accuracy=nan
2023-03-22 23:31:51,639 Node[0] Epoch[25] Batch [260-280]	Speed: 39941.71 samples/sec	accuracy=nan
2023-03-22 23:31:53,277 Node[0] Epoch[25] Batch [280-300]	Speed: 39839.61 samples/sec	accuracy=nan
2023-03-22 23:31:54,914 Node[0] Epoch[25] Batch [300-320]	Speed: 39883.37 samples/sec	accuracy=nan
2023-03-22 23:31:56,549 Node[0] Epoch[25] Batch [320-340]	Speed: 39935.50 samples/sec	accuracy=nan
2023-03-22 23:31:58,186 Node[0] Epoch[25] Batch [340-360]	Speed: 39858.71 samples/sec	accuracy=nan
2023-03-22 23:31:59,824 Node[0] Epoch[25] Batch [360-380]	Speed: 39875.04 samples/sec	accuracy=nan
2023-03-22 23:32:00,803 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:00,804 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:00,804 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:00,804 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:00,804 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:00,804 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:00,804 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:00,804 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:00,804 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:00,804 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:00,804 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:00,804 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:00,804 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:00,804 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:00,804 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545920804, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 26}}
2023-03-22 23:32:00,805 Node[0] Epoch[25] Time cost=32.130
:::MLLOG {"namespace": "", "time_ms": 1679545920805, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39874.55872359712}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1679545920805, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 27}}
2023-03-22 23:32:00,806 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:02,520 Node[0] Epoch[26] Batch [0-20]	Speed: 39960.85 samples/sec	accuracy=nan
2023-03-22 23:32:04,152 Node[0] Epoch[26] Batch [20-40]	Speed: 40000.18 samples/sec	accuracy=nan
2023-03-22 23:32:05,792 Node[0] Epoch[26] Batch [40-60]	Speed: 39826.52 samples/sec	accuracy=nan
2023-03-22 23:32:07,426 Node[0] Epoch[26] Batch [60-80]	Speed: 39950.40 samples/sec	accuracy=nan
2023-03-22 23:32:09,063 Node[0] Epoch[26] Batch [80-100]	Speed: 39862.97 samples/sec	accuracy=nan
2023-03-22 23:32:10,696 Node[0] Epoch[26] Batch [100-120]	Speed: 39968.91 samples/sec	accuracy=nan
2023-03-22 23:32:12,329 Node[0] Epoch[26] Batch [120-140]	Speed: 39996.31 samples/sec	accuracy=nan
2023-03-22 23:32:13,967 Node[0] Epoch[26] Batch [140-160]	Speed: 39842.66 samples/sec	accuracy=nan
2023-03-22 23:32:15,602 Node[0] Epoch[26] Batch [160-180]	Speed: 39917.71 samples/sec	accuracy=nan
2023-03-22 23:32:17,234 Node[0] Epoch[26] Batch [180-200]	Speed: 40005.35 samples/sec	accuracy=nan
2023-03-22 23:32:18,868 Node[0] Epoch[26] Batch [200-220]	Speed: 39946.08 samples/sec	accuracy=nan
2023-03-22 23:32:20,509 Node[0] Epoch[26] Batch [220-240]	Speed: 39799.84 samples/sec	accuracy=nan
2023-03-22 23:32:22,143 Node[0] Epoch[26] Batch [240-260]	Speed: 39942.72 samples/sec	accuracy=nan
2023-03-22 23:32:23,771 Node[0] Epoch[26] Batch [260-280]	Speed: 40096.02 samples/sec	accuracy=nan
2023-03-22 23:32:25,406 Node[0] Epoch[26] Batch [280-300]	Speed: 39919.47 samples/sec	accuracy=nan
2023-03-22 23:32:27,040 Node[0] Epoch[26] Batch [300-320]	Speed: 39956.65 samples/sec	accuracy=nan
2023-03-22 23:32:28,672 Node[0] Epoch[26] Batch [320-340]	Speed: 39998.54 samples/sec	accuracy=nan
2023-03-22 23:32:30,306 Node[0] Epoch[26] Batch [340-360]	Speed: 39955.18 samples/sec	accuracy=nan
2023-03-22 23:32:31,941 Node[0] Epoch[26] Batch [360-380]	Speed: 39932.82 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679545952841, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 27}}
2023-03-22 23:32:32,842 Node[0] Epoch[26] Time cost=32.036
:::MLLOG {"namespace": "", "time_ms": 1679545952842, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39991.31700815659}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1679545952919, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 27}}
2023-03-22 23:32:33,633 Node[0] Epoch[26] Validation-accuracy=0.721280
2023-03-22 23:32:33,633 Node[0] Epoch[26] Validation-correct-count=2254.000000
2023-03-22 23:32:33,633 Node[0] Epoch[26] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679545953754, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
2023-03-22 23:32:33,754 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:33,754 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545953754, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72696, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 27}}
2023-03-22 23:32:33,754 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:33,754 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:33,754 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545953754, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 24}}
2023-03-22 23:32:33,754 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:33,754 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:33,754 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:33,754 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:33,754 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:33,754 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545953755, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 28, "epoch_count": 4}}
2023-03-22 23:32:33,754 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:33,754 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:33,754 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:33,754 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545953755, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 28}}
2023-03-22 23:32:33,755 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:32:35,396 Node[0] Epoch[27] Batch [0-20]	Speed: 39949.81 samples/sec	accuracy=nan
2023-03-22 23:32:37,036 Node[0] Epoch[27] Batch [20-40]	Speed: 39812.82 samples/sec	accuracy=nan
2023-03-22 23:32:38,668 Node[0] Epoch[27] Batch [40-60]	Speed: 39992.31 samples/sec	accuracy=nan
2023-03-22 23:32:40,302 Node[0] Epoch[27] Batch [60-80]	Speed: 39960.62 samples/sec	accuracy=nan
2023-03-22 23:32:41,938 Node[0] Epoch[27] Batch [80-100]	Speed: 39911.94 samples/sec	accuracy=nan
2023-03-22 23:32:43,573 Node[0] Epoch[27] Batch [100-120]	Speed: 39919.86 samples/sec	accuracy=nan
2023-03-22 23:32:45,205 Node[0] Epoch[27] Batch [120-140]	Speed: 39988.26 samples/sec	accuracy=nan
2023-03-22 23:32:46,841 Node[0] Epoch[27] Batch [140-160]	Speed: 39906.74 samples/sec	accuracy=nan
2023-03-22 23:32:48,476 Node[0] Epoch[27] Batch [160-180]	Speed: 39941.13 samples/sec	accuracy=nan
2023-03-22 23:32:50,111 Node[0] Epoch[27] Batch [180-200]	Speed: 39911.30 samples/sec	accuracy=nan
2023-03-22 23:32:51,742 Node[0] Epoch[27] Batch [200-220]	Speed: 40017.84 samples/sec	accuracy=nan
2023-03-22 23:32:53,378 Node[0] Epoch[27] Batch [220-240]	Speed: 39918.20 samples/sec	accuracy=nan
2023-03-22 23:32:55,016 Node[0] Epoch[27] Batch [240-260]	Speed: 39859.04 samples/sec	accuracy=nan
2023-03-22 23:32:56,650 Node[0] Epoch[27] Batch [260-280]	Speed: 39951.58 samples/sec	accuracy=nan
2023-03-22 23:32:58,285 Node[0] Epoch[27] Batch [280-300]	Speed: 39914.47 samples/sec	accuracy=nan
2023-03-22 23:32:59,916 Node[0] Epoch[27] Batch [300-320]	Speed: 40031.64 samples/sec	accuracy=nan
2023-03-22 23:33:01,548 Node[0] Epoch[27] Batch [320-340]	Speed: 39988.24 samples/sec	accuracy=nan
2023-03-22 23:33:03,188 Node[0] Epoch[27] Batch [340-360]	Speed: 39816.79 samples/sec	accuracy=nan
2023-03-22 23:33:04,823 Node[0] Epoch[27] Batch [360-380]	Speed: 39917.07 samples/sec	accuracy=nan
2023-03-22 23:33:05,799 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:05,799 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:05,799 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:05,800 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:05,800 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:05,800 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:05,800 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:05,800 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:05,800 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:05,800 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:05,800 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:05,800 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:05,800 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:05,800 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679545985800, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 28}}
2023-03-22 23:33:05,801 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:05,801 Node[0] Epoch[27] Time cost=32.046
:::MLLOG {"namespace": "", "time_ms": 1679545985801, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39978.889179508216}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679545985802, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 29}}
2023-03-22 23:33:05,802 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:07,520 Node[0] Epoch[28] Batch [0-20]	Speed: 39864.77 samples/sec	accuracy=nan
2023-03-22 23:33:09,154 Node[0] Epoch[28] Batch [20-40]	Speed: 39957.19 samples/sec	accuracy=nan
2023-03-22 23:33:10,787 Node[0] Epoch[28] Batch [40-60]	Speed: 39962.69 samples/sec	accuracy=nan
2023-03-22 23:33:12,419 Node[0] Epoch[28] Batch [60-80]	Speed: 40014.88 samples/sec	accuracy=nan
2023-03-22 23:33:14,055 Node[0] Epoch[28] Batch [80-100]	Speed: 39903.71 samples/sec	accuracy=nan
2023-03-22 23:33:15,692 Node[0] Epoch[28] Batch [100-120]	Speed: 39874.67 samples/sec	accuracy=nan
2023-03-22 23:33:17,326 Node[0] Epoch[28] Batch [120-140]	Speed: 39937.39 samples/sec	accuracy=nan
2023-03-22 23:33:18,957 Node[0] Epoch[28] Batch [140-160]	Speed: 40044.19 samples/sec	accuracy=nan
2023-03-22 23:33:20,593 Node[0] Epoch[28] Batch [160-180]	Speed: 39892.66 samples/sec	accuracy=nan
2023-03-22 23:33:22,232 Node[0] Epoch[28] Batch [180-200]	Speed: 39833.30 samples/sec	accuracy=nan
2023-03-22 23:33:23,868 Node[0] Epoch[28] Batch [200-220]	Speed: 39902.53 samples/sec	accuracy=nan
2023-03-22 23:33:25,501 Node[0] Epoch[28] Batch [220-240]	Speed: 39979.35 samples/sec	accuracy=nan
2023-03-22 23:33:27,135 Node[0] Epoch[28] Batch [240-260]	Speed: 39941.49 samples/sec	accuracy=nan
2023-03-22 23:33:28,766 Node[0] Epoch[28] Batch [260-280]	Speed: 40018.87 samples/sec	accuracy=nan
2023-03-22 23:33:30,403 Node[0] Epoch[28] Batch [280-300]	Speed: 39881.11 samples/sec	accuracy=nan
2023-03-22 23:33:32,034 Node[0] Epoch[28] Batch [300-320]	Speed: 40029.64 samples/sec	accuracy=nan
2023-03-22 23:33:33,669 Node[0] Epoch[28] Batch [320-340]	Speed: 39930.69 samples/sec	accuracy=nan
2023-03-22 23:33:35,307 Node[0] Epoch[28] Batch [340-360]	Speed: 39859.60 samples/sec	accuracy=nan
2023-03-22 23:33:36,937 Node[0] Epoch[28] Batch [360-380]	Speed: 40025.21 samples/sec	accuracy=nan
2023-03-22 23:33:37,837 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:37,837 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:37,837 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:37,837 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:37,838 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:37,838 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:37,838 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:37,838 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:37,838 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:37,838 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:37,838 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:37,838 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:37,838 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546017838, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 29}}
2023-03-22 23:33:37,839 Node[0] Epoch[28] Time cost=32.037
2023-03-22 23:33:37,839 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546017839, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39989.871805509334}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 29}}
2023-03-22 23:33:37,839 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546017839, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 30}}
2023-03-22 23:33:37,840 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:33:39,555 Node[0] Epoch[29] Batch [0-20]	Speed: 40001.20 samples/sec	accuracy=nan
2023-03-22 23:33:41,193 Node[0] Epoch[29] Batch [20-40]	Speed: 39863.22 samples/sec	accuracy=nan
2023-03-22 23:33:42,826 Node[0] Epoch[29] Batch [40-60]	Speed: 39963.52 samples/sec	accuracy=nan
2023-03-22 23:33:44,467 Node[0] Epoch[29] Batch [60-80]	Speed: 39793.16 samples/sec	accuracy=nan
2023-03-22 23:33:46,096 Node[0] Epoch[29] Batch [80-100]	Speed: 40062.82 samples/sec	accuracy=nan
2023-03-22 23:33:47,730 Node[0] Epoch[29] Batch [100-120]	Speed: 39957.85 samples/sec	accuracy=nan
2023-03-22 23:33:49,367 Node[0] Epoch[29] Batch [120-140]	Speed: 39876.83 samples/sec	accuracy=nan
2023-03-22 23:33:50,997 Node[0] Epoch[29] Batch [140-160]	Speed: 40059.60 samples/sec	accuracy=nan
2023-03-22 23:33:52,631 Node[0] Epoch[29] Batch [160-180]	Speed: 39948.42 samples/sec	accuracy=nan
2023-03-22 23:33:54,269 Node[0] Epoch[29] Batch [180-200]	Speed: 39837.83 samples/sec	accuracy=nan
2023-03-22 23:33:55,908 Node[0] Epoch[29] Batch [200-220]	Speed: 39838.02 samples/sec	accuracy=nan
2023-03-22 23:33:57,548 Node[0] Epoch[29] Batch [220-240]	Speed: 39811.40 samples/sec	accuracy=nan
2023-03-22 23:33:59,184 Node[0] Epoch[29] Batch [240-260]	Speed: 39906.30 samples/sec	accuracy=nan
2023-03-22 23:34:00,815 Node[0] Epoch[29] Batch [260-280]	Speed: 40014.31 samples/sec	accuracy=nan
2023-03-22 23:34:02,447 Node[0] Epoch[29] Batch [280-300]	Speed: 40001.32 samples/sec	accuracy=nan
2023-03-22 23:34:04,084 Node[0] Epoch[29] Batch [300-320]	Speed: 39868.80 samples/sec	accuracy=nan
2023-03-22 23:34:05,721 Node[0] Epoch[29] Batch [320-340]	Speed: 39891.77 samples/sec	accuracy=nan
2023-03-22 23:34:07,355 Node[0] Epoch[29] Batch [340-360]	Speed: 39943.87 samples/sec	accuracy=nan
2023-03-22 23:34:08,997 Node[0] Epoch[29] Batch [360-380]	Speed: 39750.88 samples/sec	accuracy=nan
2023-03-22 23:34:09,973 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:09,973 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:09,973 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:09,973 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:09,973 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:09,973 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:09,974 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:09,973 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:09,973 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:09,974 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:09,974 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:09,974 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:09,974 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:09,974 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546049974, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 30}}
2023-03-22 23:34:09,975 Node[0] Epoch[29] Time cost=32.135
2023-03-22 23:34:09,974 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546049975, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39867.80505951284}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1679546049975, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 31}}
2023-03-22 23:34:09,975 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:11,692 Node[0] Epoch[30] Batch [0-20]	Speed: 39899.07 samples/sec	accuracy=nan
2023-03-22 23:34:13,329 Node[0] Epoch[30] Batch [20-40]	Speed: 39886.10 samples/sec	accuracy=nan
2023-03-22 23:34:14,962 Node[0] Epoch[30] Batch [40-60]	Speed: 39960.99 samples/sec	accuracy=nan
2023-03-22 23:34:16,593 Node[0] Epoch[30] Batch [60-80]	Speed: 40030.69 samples/sec	accuracy=nan
2023-03-22 23:34:18,230 Node[0] Epoch[30] Batch [80-100]	Speed: 39882.79 samples/sec	accuracy=nan
2023-03-22 23:34:19,874 Node[0] Epoch[30] Batch [100-120]	Speed: 39709.53 samples/sec	accuracy=nan
2023-03-22 23:34:21,511 Node[0] Epoch[30] Batch [120-140]	Speed: 39868.07 samples/sec	accuracy=nan
2023-03-22 23:34:23,147 Node[0] Epoch[30] Batch [140-160]	Speed: 39903.32 samples/sec	accuracy=nan
2023-03-22 23:34:24,784 Node[0] Epoch[30] Batch [160-180]	Speed: 39878.00 samples/sec	accuracy=nan
2023-03-22 23:34:26,421 Node[0] Epoch[30] Batch [180-200]	Speed: 39889.55 samples/sec	accuracy=nan
2023-03-22 23:34:28,054 Node[0] Epoch[30] Batch [200-220]	Speed: 39956.74 samples/sec	accuracy=nan
2023-03-22 23:34:29,685 Node[0] Epoch[30] Batch [220-240]	Speed: 40023.07 samples/sec	accuracy=nan
2023-03-22 23:34:31,321 Node[0] Epoch[30] Batch [240-260]	Speed: 39904.40 samples/sec	accuracy=nan
2023-03-22 23:34:32,958 Node[0] Epoch[30] Batch [260-280]	Speed: 39893.02 samples/sec	accuracy=nan
2023-03-22 23:34:34,594 Node[0] Epoch[30] Batch [280-300]	Speed: 39890.08 samples/sec	accuracy=nan
2023-03-22 23:34:36,225 Node[0] Epoch[30] Batch [300-320]	Speed: 40022.97 samples/sec	accuracy=nan
2023-03-22 23:34:37,861 Node[0] Epoch[30] Batch [320-340]	Speed: 39898.26 samples/sec	accuracy=nan
2023-03-22 23:34:39,497 Node[0] Epoch[30] Batch [340-360]	Speed: 39898.13 samples/sec	accuracy=nan
2023-03-22 23:34:41,135 Node[0] Epoch[30] Batch [360-380]	Speed: 39871.94 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679546082029, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 31}}
2023-03-22 23:34:42,030 Node[0] Epoch[30] Time cost=32.054
:::MLLOG {"namespace": "", "time_ms": 1679546082030, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39968.78450866487}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679546082107, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 31}}
2023-03-22 23:34:42,841 Node[0] Epoch[30] Validation-accuracy=0.744000
2023-03-22 23:34:42,841 Node[0] Epoch[30] Validation-correct-count=2325.000000
2023-03-22 23:34:42,841 Node[0] Epoch[30] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679546082941, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679546082941, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75124, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1679546082941, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1679546082941, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1046, "first_epoch_num": 32, "epoch_count": 4}}
2023-03-22 23:34:42,941 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:42,941 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:42,941 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:42,941 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:42,941 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:42,941 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:42,941 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:42,941 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:42,941 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:42,941 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546082941, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 32}}
2023-03-22 23:34:42,941 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:42,941 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:42,941 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:42,941 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:42,941 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:42,941 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:34:44,586 Node[0] Epoch[31] Batch [0-20]	Speed: 39872.32 samples/sec	accuracy=nan
2023-03-22 23:34:46,222 Node[0] Epoch[31] Batch [20-40]	Speed: 39907.95 samples/sec	accuracy=nan
2023-03-22 23:34:47,849 Node[0] Epoch[31] Batch [40-60]	Speed: 40108.89 samples/sec	accuracy=nan
2023-03-22 23:34:49,486 Node[0] Epoch[31] Batch [60-80]	Speed: 39886.69 samples/sec	accuracy=nan
2023-03-22 23:34:51,115 Node[0] Epoch[31] Batch [80-100]	Speed: 40064.39 samples/sec	accuracy=nan
2023-03-22 23:34:52,748 Node[0] Epoch[31] Batch [100-120]	Speed: 39974.72 samples/sec	accuracy=nan
2023-03-22 23:34:54,379 Node[0] Epoch[31] Batch [120-140]	Speed: 40039.49 samples/sec	accuracy=nan
2023-03-22 23:34:56,013 Node[0] Epoch[31] Batch [140-160]	Speed: 39938.96 samples/sec	accuracy=nan
2023-03-22 23:34:57,651 Node[0] Epoch[31] Batch [160-180]	Speed: 39845.43 samples/sec	accuracy=nan
2023-03-22 23:34:59,286 Node[0] Epoch[31] Batch [180-200]	Speed: 39927.34 samples/sec	accuracy=nan
2023-03-22 23:35:00,921 Node[0] Epoch[31] Batch [200-220]	Speed: 39941.71 samples/sec	accuracy=nan
2023-03-22 23:35:02,555 Node[0] Epoch[31] Batch [220-240]	Speed: 39936.45 samples/sec	accuracy=nan
2023-03-22 23:35:04,193 Node[0] Epoch[31] Batch [240-260]	Speed: 39851.77 samples/sec	accuracy=nan
2023-03-22 23:35:05,830 Node[0] Epoch[31] Batch [260-280]	Speed: 39892.56 samples/sec	accuracy=nan
2023-03-22 23:35:07,464 Node[0] Epoch[31] Batch [280-300]	Speed: 39951.96 samples/sec	accuracy=nan
2023-03-22 23:35:09,098 Node[0] Epoch[31] Batch [300-320]	Speed: 39955.00 samples/sec	accuracy=nan
2023-03-22 23:35:10,728 Node[0] Epoch[31] Batch [320-340]	Speed: 40034.21 samples/sec	accuracy=nan
2023-03-22 23:35:12,364 Node[0] Epoch[31] Batch [340-360]	Speed: 39900.06 samples/sec	accuracy=nan
2023-03-22 23:35:14,004 Node[0] Epoch[31] Batch [360-380]	Speed: 39815.14 samples/sec	accuracy=nan
2023-03-22 23:35:14,976 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:14,976 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:14,976 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:14,976 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:14,976 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:14,976 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:14,976 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:14,976 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:14,977 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:14,977 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:14,977 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:14,977 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:14,977 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:14,977 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:14,977 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546114977, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 32}}
2023-03-22 23:35:14,978 Node[0] Epoch[31] Time cost=32.036
:::MLLOG {"namespace": "", "time_ms": 1679546114978, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39991.0678996731}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679546114978, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 33}}
2023-03-22 23:35:14,978 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:16,695 Node[0] Epoch[32] Batch [0-20]	Speed: 39910.96 samples/sec	accuracy=nan
2023-03-22 23:35:18,328 Node[0] Epoch[32] Batch [20-40]	Speed: 39968.83 samples/sec	accuracy=nan
2023-03-22 23:35:19,961 Node[0] Epoch[32] Batch [40-60]	Speed: 39981.22 samples/sec	accuracy=nan
2023-03-22 23:35:21,597 Node[0] Epoch[32] Batch [60-80]	Speed: 39896.23 samples/sec	accuracy=nan
2023-03-22 23:35:23,232 Node[0] Epoch[32] Batch [80-100]	Speed: 39919.84 samples/sec	accuracy=nan
2023-03-22 23:35:24,867 Node[0] Epoch[32] Batch [100-120]	Speed: 39934.90 samples/sec	accuracy=nan
2023-03-22 23:35:26,502 Node[0] Epoch[32] Batch [120-140]	Speed: 39917.35 samples/sec	accuracy=nan
2023-03-22 23:35:28,135 Node[0] Epoch[32] Batch [140-160]	Speed: 39982.32 samples/sec	accuracy=nan
2023-03-22 23:35:29,768 Node[0] Epoch[32] Batch [160-180]	Speed: 39971.11 samples/sec	accuracy=nan
2023-03-22 23:35:31,405 Node[0] Epoch[32] Batch [180-200]	Speed: 39885.65 samples/sec	accuracy=nan
2023-03-22 23:35:33,040 Node[0] Epoch[32] Batch [200-220]	Speed: 39933.72 samples/sec	accuracy=nan
2023-03-22 23:35:34,673 Node[0] Epoch[32] Batch [220-240]	Speed: 39973.87 samples/sec	accuracy=nan
2023-03-22 23:35:36,308 Node[0] Epoch[32] Batch [240-260]	Speed: 39932.70 samples/sec	accuracy=nan
2023-03-22 23:35:37,942 Node[0] Epoch[32] Batch [260-280]	Speed: 39941.29 samples/sec	accuracy=nan
2023-03-22 23:35:39,573 Node[0] Epoch[32] Batch [280-300]	Speed: 40023.79 samples/sec	accuracy=nan
2023-03-22 23:35:41,208 Node[0] Epoch[32] Batch [300-320]	Speed: 39925.73 samples/sec	accuracy=nan
2023-03-22 23:35:42,843 Node[0] Epoch[32] Batch [320-340]	Speed: 39914.89 samples/sec	accuracy=nan
2023-03-22 23:35:44,479 Node[0] Epoch[32] Batch [340-360]	Speed: 39911.13 samples/sec	accuracy=nan
2023-03-22 23:35:46,115 Node[0] Epoch[32] Batch [360-380]	Speed: 39917.66 samples/sec	accuracy=nan
2023-03-22 23:35:47,012 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:47,012 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:47,013 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:47,012 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:47,013 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:47,013 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:47,013 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:47,013 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:47,013 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:47,013 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:47,013 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:47,013 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:47,013 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:47,013 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:47,013 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546147013, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 33}}
2023-03-22 23:35:47,014 Node[0] Epoch[32] Time cost=32.036
:::MLLOG {"namespace": "", "time_ms": 1679546147014, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39992.0351841539}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1679546147014, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 34}}
2023-03-22 23:35:47,014 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:35:48,727 Node[0] Epoch[33] Batch [0-20]	Speed: 40066.08 samples/sec	accuracy=nan
2023-03-22 23:35:50,360 Node[0] Epoch[33] Batch [20-40]	Speed: 39962.67 samples/sec	accuracy=nan
2023-03-22 23:35:51,999 Node[0] Epoch[33] Batch [40-60]	Speed: 39848.36 samples/sec	accuracy=nan
2023-03-22 23:35:53,637 Node[0] Epoch[33] Batch [60-80]	Speed: 39840.87 samples/sec	accuracy=nan
2023-03-22 23:35:55,266 Node[0] Epoch[33] Batch [80-100]	Speed: 40068.80 samples/sec	accuracy=nan
2023-03-22 23:35:56,903 Node[0] Epoch[33] Batch [100-120]	Speed: 39877.74 samples/sec	accuracy=nan
2023-03-22 23:35:58,532 Node[0] Epoch[33] Batch [120-140]	Speed: 40086.21 samples/sec	accuracy=nan
2023-03-22 23:36:00,168 Node[0] Epoch[33] Batch [140-160]	Speed: 39898.64 samples/sec	accuracy=nan
2023-03-22 23:36:01,806 Node[0] Epoch[33] Batch [160-180]	Speed: 39852.66 samples/sec	accuracy=nan
2023-03-22 23:36:03,436 Node[0] Epoch[33] Batch [180-200]	Speed: 40054.38 samples/sec	accuracy=nan
2023-03-22 23:36:05,070 Node[0] Epoch[33] Batch [200-220]	Speed: 39948.00 samples/sec	accuracy=nan
2023-03-22 23:36:06,708 Node[0] Epoch[33] Batch [220-240]	Speed: 39842.97 samples/sec	accuracy=nan
2023-03-22 23:36:08,342 Node[0] Epoch[33] Batch [240-260]	Speed: 39971.53 samples/sec	accuracy=nan
2023-03-22 23:36:09,975 Node[0] Epoch[33] Batch [260-280]	Speed: 39961.17 samples/sec	accuracy=nan
2023-03-22 23:36:11,609 Node[0] Epoch[33] Batch [280-300]	Speed: 39957.65 samples/sec	accuracy=nan
2023-03-22 23:36:13,244 Node[0] Epoch[33] Batch [300-320]	Speed: 39917.60 samples/sec	accuracy=nan
2023-03-22 23:36:14,883 Node[0] Epoch[33] Batch [320-340]	Speed: 39829.51 samples/sec	accuracy=nan
2023-03-22 23:36:16,514 Node[0] Epoch[33] Batch [340-360]	Speed: 40041.19 samples/sec	accuracy=nan
2023-03-22 23:36:18,150 Node[0] Epoch[33] Batch [360-380]	Speed: 39894.66 samples/sec	accuracy=nan
2023-03-22 23:36:19,131 Node[11] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:36:19,131 Node[10] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:36:19,132 Node[9] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:36:19,132 Node[7] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:36:19,132 Node[12] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:36:19,132 Node[8] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:36:19,132 Node[6] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:36:19,132 Node[13] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:36:19,132 Node[3] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:36:19,132 Node[5] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:36:19,132 Node[14] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:36:19,132 Node[2] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:36:19,132 Node[15] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:36:19,133 Node[4] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:36:19,133 Node[1] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1679546179133, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 34}}
2023-03-22 23:36:19,134 Node[0] Epoch[33] Time cost=32.120
:::MLLOG {"namespace": "", "time_ms": 1679546179134, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39887.06328485243}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1679546179135, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 907, "epoch_num": 35}}
2023-03-22 23:36:19,135 Node[0] DALI iterator does not support resetting while epoch is not finished.                              Ignoring...
2023-03-22 23:36:20,848 Node[0] Epoch[34] Batch [0-20]	Speed: 39948.07 samples/sec	accuracy=nan
2023-03-22 23:36:22,483 Node[0] Epoch[34] Batch [20-40]	Speed: 39932.13 samples/sec	accuracy=nan
2023-03-22 23:36:24,116 Node[0] Epoch[34] Batch [40-60]	Speed: 39976.96 samples/sec	accuracy=nan
2023-03-22 23:36:25,752 Node[0] Epoch[34] Batch [60-80]	Speed: 39912.33 samples/sec	accuracy=nan
2023-03-22 23:36:27,385 Node[0] Epoch[34] Batch [80-100]	Speed: 39981.39 samples/sec	accuracy=nan
2023-03-22 23:36:29,018 Node[0] Epoch[34] Batch [100-120]	Speed: 39964.72 samples/sec	accuracy=nan
2023-03-22 23:36:30,653 Node[0] Epoch[34] Batch [120-140]	Speed: 39928.67 samples/sec	accuracy=nan
2023-03-22 23:36:32,288 Node[0] Epoch[34] Batch [140-160]	Speed: 39924.20 samples/sec	accuracy=nan
2023-03-22 23:36:33,924 Node[0] Epoch[34] Batch [160-180]	Speed: 39902.14 samples/sec	accuracy=nan
2023-03-22 23:36:35,558 Node[0] Epoch[34] Batch [180-200]	Speed: 39952.90 samples/sec	accuracy=nan
2023-03-22 23:36:37,190 Node[0] Epoch[34] Batch [200-220]	Speed: 39993.33 samples/sec	accuracy=nan
2023-03-22 23:36:38,828 Node[0] Epoch[34] Batch [220-240]	Speed: 39868.16 samples/sec	accuracy=nan
2023-03-22 23:36:40,463 Node[0] Epoch[34] Batch [240-260]	Speed: 39910.43 samples/sec	accuracy=nan
2023-03-22 23:36:42,097 Node[0] Epoch[34] Batch [260-280]	Speed: 39966.54 samples/sec	accuracy=nan
2023-03-22 23:36:43,732 Node[0] Epoch[34] Batch [280-300]	Speed: 39914.70 samples/sec	accuracy=nan
2023-03-22 23:36:45,365 Node[0] Epoch[34] Batch [300-320]	Speed: 39979.49 samples/sec	accuracy=nan
2023-03-22 23:36:47,001 Node[0] Epoch[34] Batch [320-340]	Speed: 39893.81 samples/sec	accuracy=nan
2023-03-22 23:36:48,641 Node[0] Epoch[34] Batch [340-360]	Speed: 39804.31 samples/sec	accuracy=nan
2023-03-22 23:36:50,277 Node[0] Epoch[34] Batch [360-380]	Speed: 39911.72 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1679546211251, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 972, "epoch_num": 35}}
2023-03-22 23:36:51,252 Node[0] Epoch[34] Time cost=32.117
:::MLLOG {"namespace": "", "time_ms": 1679546211252, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 39890.08108689436}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679546211329, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1006, "epoch_num": 35}}
2023-03-22 23:36:52,084 Node[0] Epoch[34] Validation-accuracy=0.769280
2023-03-22 23:36:52,084 Node[0] Epoch[34] Validation-correct-count=2404.000000
2023-03-22 23:36:52,084 Node[0] Epoch[34] Validation-total-count=3125.000000
:::MLLOG {"namespace": "", "time_ms": 1679546212163, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679546212163, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76102, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1030, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1679546212164, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1033, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1679546212164, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1037, "status": "success"}}
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ ret_code=0
+ sleep 3
+ sleep 3
+ ret_code=0
+ sleep 3
+ ret_code=0
+ sleep 3
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679546236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:37:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:37:16 PM'
ENDING TIMING RUN AT 2023-03-22 11:37:16 PM
+ result=1302
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1302,root,2023-03-22 11:15:34 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1302,root,2023-03-22 11:15:34 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679546236
++ date '+%Y-%m-%d %r'
+ end=1679546236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:37:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:37:16 PM'
ENDING TIMING RUN AT 2023-03-22 11:37:16 PM
+ result=1302
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1302,root,2023-03-22 11:15:34 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1302,root,2023-03-22 11:15:34 PM'
+ export PROFILE=0
+ PROFILE=0
+ end_fmt='2023-03-22 11:37:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:37:16 PM'
ENDING TIMING RUN AT 2023-03-22 11:37:16 PM
+ result=1302
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1302,root,2023-03-22 11:15:34 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1302,root,2023-03-22 11:15:34 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679546236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:37:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:37:16 PM'
ENDING TIMING RUN AT 2023-03-22 11:37:16 PM
+ result=1302
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1302,root,2023-03-22 11:15:34 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1302,root,2023-03-22 11:15:34 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679546236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:37:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:37:16 PM'
ENDING TIMING RUN AT 2023-03-22 11:37:16 PM
+ result=1302
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1302,root,2023-03-22 11:15:34 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1302,root,2023-03-22 11:15:34 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679546236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:37:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:37:16 PM'
ENDING TIMING RUN AT 2023-03-22 11:37:16 PM
+ result=1302
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1302,root,2023-03-22 11:15:34 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1302,root,2023-03-22 11:15:34 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679546236
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:37:16 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:37:16 PM'
ENDING TIMING RUN AT 2023-03-22 11:37:16 PM
+ result=1302
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1302,root,2023-03-22 11:15:34 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1302,root,2023-03-22 11:15:34 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679546237
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:37:17 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:37:17 PM'
ENDING TIMING RUN AT 2023-03-22 11:37:17 PM
+ result=1303
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 11:15:34 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 11:15:34 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679546237
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:37:17 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:37:17 PM'
ENDING TIMING RUN AT 2023-03-22 11:37:17 PM
+ result=1303
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 11:15:34 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 11:15:34 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679546237
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:37:17 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:37:17 PM'
ENDING TIMING RUN AT 2023-03-22 11:37:17 PM
+ result=1303
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 11:15:34 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 11:15:34 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679546237
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:37:17 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:37:17 PM'
ENDING TIMING RUN AT 2023-03-22 11:37:17 PM
+ result=1303
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 11:15:34 PM'
RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 11:15:34 PM
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679546237
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:37:17 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:37:17 PM'
ENDING TIMING RUN AT 2023-03-22 11:37:17 PM
+ result=1303
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 11:15:34 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 11:15:34 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
+ [[ 0 != 0 ]]
++ date +%s
++ date +%s
+ end=1679546237
+ end=1679546237
++ date '+%Y-%m-%d %r'
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:37:17 PM'
+ end_fmt='2023-03-22 11:37:17 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:37:17 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:37:17 PM'
ENDING TIMING RUN AT 2023-03-22 11:37:17 PM
ENDING TIMING RUN AT 2023-03-22 11:37:17 PM
+ result=1303
+ result_name=IMAGE_CLASSIFICATION
+ result=1303
+ result_name=IMAGE_CLASSIFICATION
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 11:15:34 PM'
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 11:15:34 PM'
RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 11:15:34 PM
RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 11:15:34 PM
+ export PROFILE=0
+ PROFILE=0
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679546237
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:37:17 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:37:17 PM'
ENDING TIMING RUN AT 2023-03-22 11:37:17 PM
+ result=1303
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 11:15:34 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 11:15:34 PM'
+ export PROFILE=0
+ PROFILE=0
+ [[ 0 != 0 ]]
++ date +%s
+ end=1679546237
++ date '+%Y-%m-%d %r'
+ end_fmt='2023-03-22 11:37:17 PM'
+ echo 'ENDING TIMING RUN AT 2023-03-22 11:37:17 PM'
ENDING TIMING RUN AT 2023-03-22 11:37:17 PM
+ result=1303
+ result_name=IMAGE_CLASSIFICATION
RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 11:15:34 PM
+ echo 'RESULT,IMAGE_CLASSIFICATION,,1303,root,2023-03-22 11:15:34 PM'
+ export PROFILE=0
+ PROFILE=0
